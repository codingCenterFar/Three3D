{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","main/17_星空的案例.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize$1","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","normalize","round","MathUtils","freeze","denormalize","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","document","SRGBToLinear","LinearToSRGB","FN","_FN","_defineProperty","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb","_hslA","_hslB","hue2rgb","p","toComponents","source","Color","_Symbol$iterator2","isColor","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","size","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","toString","getHSL","hue","saturation","lightness","delta","getRGB","getStyle","concat","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","getZ","normalized","toJSON","_context3","NAMES","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","_this2","isTexture","_assertThisInitialized","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","Vector4","_Symbol$iterator3","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","_context4","WebGLRenderTarget","_EventDispatcher2","_super2","options","_this3","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator4","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context5","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator5","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","u","_context6","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","attributes","position","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix$1","_quaternion$3","Euler","_Symbol$iterator6","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context7","toVector3","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_vector$9","_vector2$1","BufferAttribute","itemSize","isBufferAttribute","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","_BufferGeometry","_super23","widthSegments","heightSegments","depthSegments","_this15","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","BoxBufferGeometry","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","fov","aspect","_this18","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","isWebGLCubeRenderTarget","_possibleConstructorReturn","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","_this$children","_slicedToArray","currentRenderTarget","getRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","PlaneBufferGeometry","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator","_createForOfIteratorHelper","_step","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","cameras","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","_iterator2","_step2","inputjoint","jointPose","getJointPose","jointName","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","__data","cachedObject","chunkSize","chunkOffset","getUniformSize","storage","remainingSizeInChunk","boundary","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","gammaFactor","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","_Mesh2","_super47","_this38","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CanvasTexture","_Texture9","_super57","_this48","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super58","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this49","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super59","aRadius","_this50","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super60","curveType","_this51","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super61","v3","_this52","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super62","_this53","isCubicBezierCurve3","LineCurve","_Curve5","_super63","_this54","isLineCurve","LineCurve3","_Curve6","_super64","_this55","isLineCurve3","QuadraticBezierCurve","_Curve7","_super65","_this56","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super66","_this57","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super67","_this58","isSplineCurve","Curves","CurvePath","_Curve10","_super68","_this59","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super69","_this60","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super70","phiStart","phiLength","_this61","initNormals","inverseSegments","curNormal","prevNormal","base","LatheBufferGeometry","CapsuleGeometry","_LatheGeometry","_super71","capSegments","radialSegments","_this62","CapsuleBufferGeometry","CircleGeometry","_BufferGeometry4","_super72","thetaStart","thetaLength","_this63","segment","CircleBufferGeometry","CylinderGeometry","_BufferGeometry5","_super73","radiusTop","radiusBottom","openEnded","_this64","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","CylinderBufferGeometry","ConeGeometry","_CylinderGeometry","_super74","_this65","ConeBufferGeometry","PolyhedronGeometry","_BufferGeometry6","_super75","_this66","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","PolyhedronBufferGeometry","DodecahedronGeometry","_PolyhedronGeometry","_super76","_this67","DodecahedronBufferGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super77","thresholdAngle","_this68","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super78","_this69","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super79","_this70","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","ExtrudeBufferGeometry","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super80","_this71","IcosahedronBufferGeometry","OctahedronGeometry","_PolyhedronGeometry3","_super81","_this72","OctahedronBufferGeometry","RingGeometry","_BufferGeometry9","_super82","innerRadius","outerRadius","thetaSegments","phiSegments","_this73","radiusStep","thetaSegmentLevel","RingBufferGeometry","ShapeGeometry","_BufferGeometry10","_super83","_this74","indexOffset","shapeVertices","shapeHoles","shapeHole","ShapeBufferGeometry","SphereGeometry","_BufferGeometry11","_super84","_this75","thetaEnd","grid","verticesRow","uOffset","SphereBufferGeometry","TetrahedronGeometry","_PolyhedronGeometry4","_super85","_this76","TetrahedronBufferGeometry","TorusGeometry","_BufferGeometry12","_super86","tube","tubularSegments","_this77","TorusBufferGeometry","TorusKnotGeometry","_BufferGeometry13","_super87","_this78","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotBufferGeometry","TubeGeometry","_BufferGeometry14","_super88","_this79","frames","P","generateBufferData","generateSegment","generateIndices","TubeBufferGeometry","WireframeGeometry","_BufferGeometry15","_super89","_this80","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super90","_this81","RawShaderMaterial","_ShaderMaterial","_super91","_this82","_Material9","_super92","_this83","_MeshStandardMaterial","_super93","_this84","_sheen","_clearcoat","_iridescence","_transmission","_toConsumableArray","_Material10","_super94","_this85","_Material11","_super95","_this86","_Material12","_super96","_this87","_Material13","_super97","_this88","_Material14","_super98","_this89","_LineBasicMaterial","_super99","_this90","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super100","_this91","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super101","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super102","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","getInterpolation","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super103","ColorKeyframeTrack","_KeyframeTrack2","_super104","NumberKeyframeTrack","_KeyframeTrack3","_super105","QuaternionLinearInterpolant","_Interpolant4","_super106","QuaternionKeyframeTrack","_KeyframeTrack4","_super107","StringKeyframeTrack","_KeyframeTrack5","_super108","VectorKeyframeTrack","_KeyframeTrack6","_super109","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","HttpError","_Error","_super110","response","_this92","_wrapNativeSuper","FileLoader","_Loader","_super111","_this93","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super112","CompressedTextureLoader","_Loader3","_super113","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super114","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super115","urls","DataTextureLoader","_Loader6","_super116","texData","TextureLoader","_Loader7","_super117","Light","_Object3D11","_super118","_this94","HemisphereLight","_Light","_super119","_this95","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super120","_this96","isSpotLightShadow","SpotLight","_Light2","_super121","_this97","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super122","_this98","_cubeDirections","_cubeUps","PointLight","_Light3","_super123","_this99","DirectionalLightShadow","_LightShadow3","_super124","_this100","isDirectionalLightShadow","DirectionalLight","_Light4","_super125","_this101","AmbientLight","_Light5","_super126","_this102","RectAreaLight","_Light6","_super127","_this103","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super128","_this104","MaterialLoader","_Loader8","_super129","_this105","getTexture","createMaterialFromType","shading","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super130","_this106","BufferGeometryLoader","_Loader9","_super131","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super132","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super133","_this107","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super134","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","_LightProbe","_super135","_this108","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super136","_this109","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super137","_this110","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super138","_this111","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super139","_this112","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super140","_this113","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super141","_this114","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super142","_this115","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super143","_this116","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super144","_this117","getBoneList","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super145","sphereSize","_this118","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super146","_this119","GridHelper","_LineSegments2","_super147","_this120","PolarGridHelper","_LineSegments3","_super148","radials","circles","_this121","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super149","_this122","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super150","_this123","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super151","_this124","Box3Helper","_LineSegments6","_super152","_this125","PlaneHelper","_Line3","_super153","_this126","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super154","headLength","headWidth","_this127","setDirection","setColor","AxesHelper","_LineSegments7","_super155","_this128","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","ParametricGeometry","_BufferGeometry17","_super156","TextGeometry","_BufferGeometry18","_super157","FontLoader","Font","ImmediateRenderObject","WebGLMultisampleRenderTarget","_WebGLRenderTarget5","_super158","_this129","DataTexture2DArray","_DataArrayTexture","_super159","DataTexture3D","_Data3DTexture","_super160","revision","__THREE__","_three","require","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","pointer","passive","MapControls","THREE","_interopRequireWildcard","_OrbitControls","_","_interopRequireDefault","__esModule","default","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","innerWidth","innerHeight","partical","img1","pointMaterial","axe","appendChild","controls","animate","devicePixelRatio","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA,EAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,IAAAF,GAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,KAAA,KAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA,kBAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA,uBAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA,8BAAAC,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAR,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA,IAAAE,KAAA,EAAAA,KAAA,EAAAU,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAf,GAAA,CAAAC,GAAA,WAAAW,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAH,GAAA,CAAAC,GAAA,IAAAE,KAAA,gBAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAvB,SAAA,YAAA2B,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA7B,MAAA,CAAA8B,MAAA,CAAAH,cAAA,CAAA1B,SAAA,GAAA8B,OAAA,OAAAC,OAAA,CAAAN,WAAA,gBAAAtB,cAAA,CAAAyB,SAAA,eAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,MAAAF,SAAA,aAAAK,SAAAC,EAAA,EAAA9B,GAAA,EAAA+B,GAAA,mBAAAC,IAAA,YAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAAjC,GAAA,EAAA+B,GAAA,cAAAf,GAAA,aAAAgB,IAAA,WAAAD,GAAA,EAAAf,GAAA,QAAAvB,OAAA,CAAAwB,IAAA,GAAAA,IAAA,MAAAiB,gBAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA,qCAAAgC,QAAA,GAAA3C,MAAA,CAAA4C,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA,QAAAD,uBAAA,IAAAA,uBAAA,KAAA9C,EAAA,IAAAG,MAAA,CAAAoC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA,OAAAE,EAAA,GAAAN,0BAAA,CAAAxC,SAAA,GAAA2B,SAAA,CAAA3B,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAY,iBAAA,YAAAM,sBAAA/C,SAAA,gCAAAgD,OAAA,WAAAC,MAAA,IAAAjC,MAAA,CAAAhB,SAAA,EAAAiD,MAAA,YAAAd,GAAA,gBAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA,sBAAAgB,cAAAvB,SAAA,EAAAwB,WAAA,aAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,QAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA,EAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA,SAAAA,KAAA,gBAAAmD,OAAA,CAAAnD,KAAA,KAAAN,MAAA,CAAAoC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAoD,OAAA,EAAAC,IAAA,WAAArD,KAAA,IAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA,gBAAAnC,GAAA,IAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,WAAAC,SAAA,IAAAJ,MAAA,CAAAlD,KAAA,GAAAsD,SAAA,EAAAP,OAAA,CAAAG,MAAA,gBAAAK,KAAA,WAAAT,MAAA,UAAAS,KAAA,EAAAR,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA,SAAA4B,eAAA,EAAA5D,cAAA,oBAAAI,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA,aAAA6B,2BAAA,eAAAZ,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,gBAAAQ,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAhC,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,QAAAmC,KAAA,sCAAAhB,MAAA,EAAAd,GAAA,wBAAA8B,KAAA,YAAAC,KAAA,sDAAAD,KAAA,oBAAAhB,MAAA,QAAAd,GAAA,SAAAgC,UAAA,WAAArC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAiC,QAAA,GAAAtC,OAAA,CAAAsC,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,OAAAuC,cAAA,QAAAA,cAAA,KAAA/B,gBAAA,mBAAA+B,cAAA,qBAAAvC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAyC,IAAA,GAAAzC,OAAA,CAAA0C,KAAA,GAAA1C,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA,6BAAAgB,KAAA,QAAAA,KAAA,gBAAAnC,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAA2C,iBAAA,CAAA3C,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA4C,MAAA,WAAA5C,OAAA,CAAAK,GAAA,GAAA8B,KAAA,oBAAAT,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA,oBAAA0B,MAAA,CAAApB,IAAA,QAAA6B,KAAA,GAAAnC,OAAA,CAAA6C,IAAA,mCAAAnB,MAAA,CAAArB,GAAA,KAAAG,gBAAA,qBAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA,EAAAwC,IAAA,EAAA7C,OAAA,CAAA6C,IAAA,kBAAAnB,MAAA,CAAApB,IAAA,KAAA6B,KAAA,gBAAAnC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,mBAAAmC,oBAAAF,QAAA,EAAAtC,OAAA,QAAA8C,UAAA,GAAA9C,OAAA,CAAAmB,MAAA,EAAAA,MAAA,GAAAmB,QAAA,CAAAzD,QAAA,CAAAiE,UAAA,OAAAC,SAAA,KAAA5B,MAAA,SAAAnB,OAAA,CAAAsC,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAAzD,QAAA,CAAAmE,MAAA,KAAAhD,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,EAAAP,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA2B,UAAA,KAAA9C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA4C,SAAA,uCAAAH,UAAA,iBAAAtC,gBAAA,MAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAmB,QAAA,CAAAzD,QAAA,EAAAmB,OAAA,CAAAK,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,MAAA0C,IAAA,GAAAxB,MAAA,CAAArB,GAAA,SAAA6C,IAAA,GAAAA,IAAA,CAAAL,IAAA,IAAA7C,OAAA,CAAAsC,QAAA,CAAAa,UAAA,IAAAD,IAAA,CAAAzE,KAAA,EAAAuB,OAAA,CAAAoD,IAAA,GAAAd,QAAA,CAAAe,OAAA,eAAArD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,GAAA/C,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,IAAA0C,IAAA,IAAAlD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA4C,SAAA,sCAAAjD,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,cAAA8C,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA,cAAAO,cAAAP,KAAA,QAAA9B,MAAA,GAAA8B,KAAA,CAAAQ,UAAA,QAAAtC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAmD,KAAA,CAAAQ,UAAA,GAAAtC,MAAA,aAAAzB,QAAAN,WAAA,SAAAkE,UAAA,MAAAJ,MAAA,aAAA9D,WAAA,CAAAuB,OAAA,CAAAoC,YAAA,cAAAW,KAAA,iBAAAlD,OAAAmD,QAAA,QAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAAtF,cAAA,OAAAuF,cAAA,SAAAA,cAAA,CAAA5D,IAAA,CAAA2D,QAAA,4BAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA,OAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA,SAAAC,CAAA,OAAAlB,IAAA,YAAAA,KAAA,aAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAlG,MAAA,CAAAoC,IAAA,CAAA2D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA3E,KAAA,GAAAyF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAP,IAAA,OAAAO,IAAA,SAAAA,IAAA,CAAA3E,KAAA,GAAAsE,SAAA,EAAAK,IAAA,CAAAP,IAAA,OAAAO,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,eAAAA,IAAA,EAAAf,UAAA,eAAAA,WAAA,aAAA5D,KAAA,EAAAsE,SAAA,EAAAF,IAAA,iBAAApC,iBAAA,CAAAvC,SAAA,GAAAwC,0BAAA,EAAArC,cAAA,CAAA2C,EAAA,mBAAAvC,KAAA,EAAAiC,0BAAA,EAAAtB,YAAA,SAAAf,cAAA,CAAAqC,0BAAA,mBAAAjC,KAAA,EAAAgC,iBAAA,EAAArB,YAAA,SAAAqB,iBAAA,CAAA8D,WAAA,GAAArF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAjB,OAAA,CAAAyG,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA,WAAAD,IAAA,KAAAA,IAAA,KAAAjE,iBAAA,6BAAAiE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA,OAAA7G,OAAA,CAAA8G,IAAA,aAAAJ,MAAA,WAAAxG,MAAA,CAAA6G,cAAA,GAAA7G,MAAA,CAAA6G,cAAA,CAAAL,MAAA,EAAA/D,0BAAA,KAAA+D,MAAA,CAAAM,SAAA,GAAArE,0BAAA,EAAAxB,MAAA,CAAAuF,MAAA,EAAAzF,iBAAA,yBAAAyF,MAAA,CAAAvG,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAiB,EAAA,GAAAyD,MAAA,KAAA1G,OAAA,CAAAiH,KAAA,aAAA3E,GAAA,aAAAwB,OAAA,EAAAxB,GAAA,OAAAY,qBAAA,CAAAI,aAAA,CAAAnD,SAAA,GAAAgB,MAAA,CAAAmC,aAAA,CAAAnD,SAAA,EAAAY,mBAAA,iCAAAf,OAAA,CAAAsD,aAAA,GAAAA,aAAA,EAAAtD,OAAA,CAAAkH,KAAA,aAAAzF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA4D,OAAA,OAAAC,IAAA,OAAA9D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA,UAAAvD,OAAA,CAAAyG,mBAAA,CAAA/E,OAAA,IAAA0F,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAAtB,IAAA,WAAAH,MAAA,WAAAA,MAAA,CAAAkB,IAAA,GAAAlB,MAAA,CAAAlD,KAAA,GAAA0G,IAAA,CAAA/B,IAAA,WAAAnC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA,iCAAAM,MAAA,CAAA8B,EAAA,6DAAAjD,OAAA,CAAAqH,IAAA,aAAAC,GAAA,QAAAC,MAAA,GAAArH,MAAA,CAAAoH,GAAA,GAAAD,IAAA,gBAAA7G,GAAA,IAAA+G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAvF,GAAA,UAAA6G,IAAA,CAAAG,OAAA,aAAAnC,KAAA,WAAAgC,IAAA,CAAAf,MAAA,SAAA9F,GAAA,GAAA6G,IAAA,CAAAI,GAAA,QAAAjH,GAAA,IAAA+G,MAAA,SAAAlC,IAAA,CAAA3E,KAAA,GAAAF,GAAA,EAAA6E,IAAA,CAAAP,IAAA,OAAAO,IAAA,WAAAA,IAAA,CAAAP,IAAA,OAAAO,IAAA,QAAArF,OAAA,CAAAgD,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA/B,SAAA,KAAAyG,WAAA,EAAA1E,OAAA,EAAAgE,KAAA,WAAAA,MAAAwB,aAAA,aAAAC,IAAA,WAAAtC,IAAA,WAAAX,IAAA,QAAAC,KAAA,GAAAK,SAAA,OAAAF,IAAA,YAAAP,QAAA,cAAAnB,MAAA,gBAAAd,GAAA,GAAA0C,SAAA,OAAAc,UAAA,CAAA3C,OAAA,CAAA6C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAxH,MAAA,CAAAoC,IAAA,OAAAqE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA7B,SAAA,MAAA8C,IAAA,WAAAA,KAAA,SAAAhD,IAAA,WAAAiD,UAAA,QAAAjC,UAAA,IAAAG,UAAA,kBAAA8B,UAAA,CAAAxF,IAAA,QAAAwF,UAAA,CAAAzF,GAAA,cAAA0F,IAAA,KAAApD,iBAAA,WAAAA,kBAAAqD,SAAA,aAAAnD,IAAA,QAAAmD,SAAA,MAAAhG,OAAA,kBAAAiG,OAAAC,GAAA,EAAAC,MAAA,WAAAzE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA2F,SAAA,EAAAhG,OAAA,CAAAoD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAnG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,KAAAoD,MAAA,aAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,GAAA5C,MAAA,GAAA8B,KAAA,CAAAQ,UAAA,iBAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA,aAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA,QAAAU,QAAA,GAAAjI,MAAA,CAAAoC,IAAA,CAAAiD,KAAA,eAAA6C,UAAA,GAAAlI,MAAA,CAAAoC,IAAA,CAAAiD,KAAA,qBAAA4C,QAAA,IAAAC,UAAA,aAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,gBAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,cAAAyC,QAAA,aAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,qBAAA2C,UAAA,YAAAjE,KAAA,qDAAAsD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,YAAAf,MAAA,WAAAA,OAAAtC,IAAA,EAAAD,GAAA,aAAAiE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAAvH,MAAA,CAAAoC,IAAA,CAAAiD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,QAAA2C,YAAA,GAAA9C,KAAA,aAAA8C,YAAA,iBAAAhG,IAAA,mBAAAA,IAAA,KAAAgG,YAAA,CAAA7C,MAAA,IAAApD,GAAA,IAAAA,GAAA,IAAAiG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA,cAAA5E,MAAA,GAAA4E,YAAA,GAAAA,YAAA,CAAAtC,UAAA,cAAAtC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAiG,YAAA,SAAAnF,MAAA,gBAAAiC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAnD,gBAAA,SAAA+F,QAAA,CAAA7E,MAAA,MAAA6E,QAAA,WAAAA,SAAA7E,MAAA,EAAAkC,QAAA,oBAAAlC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA,qBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA8C,IAAA,GAAA1B,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAyF,IAAA,QAAA1F,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAiC,IAAA,yBAAA1B,MAAA,CAAApB,IAAA,IAAAsD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAApD,gBAAA,KAAAgG,MAAA,WAAAA,OAAA7C,UAAA,aAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAAhD,gBAAA,OAAAiG,KAAA,WAAAC,OAAAjD,MAAA,aAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAA/B,MAAA,GAAA8B,KAAA,CAAAQ,UAAA,kBAAAtC,MAAA,CAAApB,IAAA,QAAAqG,MAAA,GAAAjF,MAAA,CAAArB,GAAA,EAAA0D,aAAA,CAAAP,KAAA,YAAAmD,MAAA,gBAAAvE,KAAA,8BAAAwE,aAAA,WAAAA,cAAA1C,QAAA,EAAAf,UAAA,EAAAE,OAAA,gBAAAf,QAAA,KAAAzD,QAAA,EAAAkC,MAAA,CAAAmD,QAAA,GAAAf,UAAA,EAAAA,UAAA,EAAAE,OAAA,EAAAA,OAAA,oBAAAlC,MAAA,UAAAd,GAAA,GAAA0C,SAAA,GAAAvC,gBAAA,OAAAzC,OAAA;AAAA,SAAA6D,QAAAtD,GAAA,sCAAAsD,OAAA,wBAAAjD,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAP,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAK,MAAA,IAAAL,GAAA,CAAAqG,WAAA,KAAAhG,MAAA,IAAAL,GAAA,KAAAK,MAAA,CAAAT,SAAA,qBAAAI,GAAA,KAAAsD,OAAA,CAAAtD,GAAA;AAAA,SAAAuI,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAA9D,SAAA;AAAA,SAAA+D,kBAAAC,MAAA,EAAAC,KAAA,aAAA5C,CAAA,MAAAA,CAAA,GAAA4C,KAAA,CAAA7C,MAAA,EAAAC,CAAA,UAAA6C,UAAA,GAAAD,KAAA,CAAA5C,CAAA,GAAA6C,UAAA,CAAAhI,UAAA,GAAAgI,UAAA,CAAAhI,UAAA,WAAAgI,UAAA,CAAA/H,YAAA,wBAAA+H,UAAA,EAAAA,UAAA,CAAA9H,QAAA,SAAApB,MAAA,CAAAI,cAAA,CAAA4I,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAA5I,GAAA,GAAA4I,UAAA;AAAA,SAAAE,aAAAN,WAAA,EAAAO,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAN,iBAAA,CAAAD,WAAA,CAAA7I,SAAA,EAAAoJ,UAAA,OAAAC,WAAA,EAAAP,iBAAA,CAAAD,WAAA,EAAAQ,WAAA,GAAAtJ,MAAA,CAAAI,cAAA,CAAA0I,WAAA,iBAAA1H,QAAA,mBAAA0H,WAAA;AAAA,SAAAK,eAAA/G,GAAA,QAAA9B,GAAA,GAAAiJ,YAAA,CAAAnH,GAAA,oBAAAuB,OAAA,CAAArD,GAAA,iBAAAA,GAAA,GAAAkJ,MAAA,CAAAlJ,GAAA;AAAA,SAAAiJ,aAAAE,KAAA,EAAAC,IAAA,QAAA/F,OAAA,CAAA8F,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA/I,MAAA,CAAAkJ,WAAA,OAAAD,IAAA,KAAA7E,SAAA,QAAA+E,GAAA,GAAAF,IAAA,CAAArH,IAAA,CAAAmH,KAAA,EAAAC,IAAA,oBAAA/F,OAAA,CAAAkG,GAAA,uBAAAA,GAAA,YAAA7E,SAAA,4DAAA0E,IAAA,gBAAAF,MAAA,GAAAM,MAAA,EAAAL,KAAA;AADA;AACA;AACA;AACA;AACA;AACA,IAAMM,QAAQ,GAAG,KAAK;AAACjK,OAAA,CAAAiK,QAAA,GAAAA,QAAA;AACvB,IAAMC,KAAK,GAAG;EAAEC,IAAI,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAE,CAAC;AAACxK,OAAA,CAAAkK,KAAA,GAAAA,KAAA;AAC5E,IAAMO,KAAK,GAAG;EAAEH,MAAM,EAAE,CAAC;EAAEE,GAAG,EAAE,CAAC;EAAEE,SAAS,EAAE,CAAC;EAAEC,YAAY,EAAE;AAAE,CAAC;AAAC3K,OAAA,CAAAyK,KAAA,GAAAA,KAAA;AACnE,IAAMG,YAAY,GAAG,CAAC;AAAC5K,OAAA,CAAA4K,YAAA,GAAAA,YAAA;AACvB,IAAMC,YAAY,GAAG,CAAC;AAAC7K,OAAA,CAAA6K,YAAA,GAAAA,YAAA;AACvB,IAAMC,aAAa,GAAG,CAAC;AAAC9K,OAAA,CAAA8K,aAAA,GAAAA,aAAA;AACxB,IAAMC,iBAAiB,GAAG,CAAC;AAAC/K,OAAA,CAAA+K,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,cAAc,GAAG,CAAC;AAAChL,OAAA,CAAAgL,cAAA,GAAAA,cAAA;AACzB,IAAMC,YAAY,GAAG,CAAC;AAACjL,OAAA,CAAAiL,YAAA,GAAAA,YAAA;AACvB,IAAMC,gBAAgB,GAAG,CAAC;AAAClL,OAAA,CAAAkL,gBAAA,GAAAA,gBAAA;AAC3B,IAAMC,YAAY,GAAG,CAAC;AAACnL,OAAA,CAAAmL,YAAA,GAAAA,YAAA;AACvB,IAAMC,SAAS,GAAG,CAAC;AAACpL,OAAA,CAAAoL,SAAA,GAAAA,SAAA;AACpB,IAAMC,QAAQ,GAAG,CAAC;AAACrL,OAAA,CAAAqL,QAAA,GAAAA,QAAA;AACnB,IAAMC,UAAU,GAAG,CAAC;AAACtL,OAAA,CAAAsL,UAAA,GAAAA,UAAA;AACrB,IAAMC,WAAW,GAAG,CAAC;AAACvL,OAAA,CAAAuL,WAAA,GAAAA,WAAA;AACtB,IAAMC,aAAa,GAAG,CAAC;AAACxL,OAAA,CAAAwL,aAAA,GAAAA,aAAA;AACxB,IAAMC,UAAU,GAAG,CAAC;AAACzL,OAAA,CAAAyL,UAAA,GAAAA,UAAA;AACrB,IAAMC,cAAc,GAAG,CAAC;AAAC1L,OAAA,CAAA0L,cAAA,GAAAA,cAAA;AACzB,IAAMC,gBAAgB,GAAG,CAAC;AAAC3L,OAAA,CAAA2L,gBAAA,GAAAA,gBAAA;AAC3B,IAAMC,mBAAmB,GAAG,CAAC;AAAC5L,OAAA,CAAA4L,mBAAA,GAAAA,mBAAA;AAC9B,IAAMC,gBAAgB,GAAG,CAAC;AAAC7L,OAAA,CAAA6L,gBAAA,GAAAA,gBAAA;AAC3B,IAAMC,cAAc,GAAG,CAAC;AAAC9L,OAAA,CAAA8L,cAAA,GAAAA,cAAA;AACzB,IAAMC,WAAW,GAAG,GAAG;AAAC/L,OAAA,CAAA+L,WAAA,GAAAA,WAAA;AACxB,IAAMC,gBAAgB,GAAG,GAAG;AAAChM,OAAA,CAAAgM,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,uBAAuB,GAAG,GAAG;AAACjM,OAAA,CAAAiM,uBAAA,GAAAA,uBAAA;AACpC,IAAMC,WAAW,GAAG,GAAG;AAAClM,OAAA,CAAAkM,WAAA,GAAAA,WAAA;AACxB,IAAMC,WAAW,GAAG,GAAG;AAACnM,OAAA,CAAAmM,WAAA,GAAAA,WAAA;AACxB,IAAMC,UAAU,GAAG,GAAG;AAACpM,OAAA,CAAAoM,UAAA,GAAAA,UAAA;AACvB,IAAMC,SAAS,GAAG,GAAG;AAACrM,OAAA,CAAAqM,SAAA,GAAAA,SAAA;AACtB,IAAMC,cAAc,GAAG,GAAG;AAACtM,OAAA,CAAAsM,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAACvM,OAAA,CAAAuM,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,cAAc,GAAG,GAAG;AAACxM,OAAA,CAAAwM,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAACzM,OAAA,CAAAyM,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,cAAc,GAAG,GAAG;AAAC1M,OAAA,CAAA0M,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAAC3M,OAAA,CAAA2M,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,cAAc,GAAG,GAAG;AAAC5M,OAAA,CAAA4M,cAAA,GAAAA,cAAA;AAC3B,IAAMC,sBAAsB,GAAG,GAAG;AAAC7M,OAAA,CAAA6M,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,sBAAsB,GAAG,GAAG;AAAC9M,OAAA,CAAA8M,sBAAA,GAAAA,sBAAA;AACnC,IAAMC,UAAU,GAAG,CAAC;AAAC/M,OAAA,CAAA+M,UAAA,GAAAA,UAAA;AACrB,IAAMC,WAAW,GAAG,CAAC;AAAChN,OAAA,CAAAgN,WAAA,GAAAA,WAAA;AACtB,IAAMC,SAAS,GAAG,CAAC;AAACjN,OAAA,CAAAiN,SAAA,GAAAA,SAAA;AACpB,IAAMC,cAAc,GAAG,CAAC;AAAClN,OAAA,CAAAkN,cAAA,GAAAA,cAAA;AACzB,IAAMC,UAAU,GAAG,CAAC;AAACnN,OAAA,CAAAmN,UAAA,GAAAA,UAAA;AACrB,IAAMC,iBAAiB,GAAG,CAAC;AAACpN,OAAA,CAAAoN,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,YAAY,GAAG,CAAC;AAACrN,OAAA,CAAAqN,YAAA,GAAAA,YAAA;AACvB,IAAMC,aAAa,GAAG,CAAC;AAACtN,OAAA,CAAAsN,aAAA,GAAAA,aAAA;AACxB,IAAMC,iBAAiB,GAAG,CAAC;AAACvN,OAAA,CAAAuN,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,YAAY,GAAG,CAAC;AAACxN,OAAA,CAAAwN,YAAA,GAAAA,YAAA;AACvB,IAAMC,YAAY,GAAG,CAAC;AAACzN,OAAA,CAAAyN,YAAA,GAAAA,YAAA;AACvB,IAAMC,aAAa,GAAG,CAAC;AAAC1N,OAAA,CAAA0N,aAAA,GAAAA,aAAA;AACxB,IAAMC,iBAAiB,GAAG,CAAC;AAAC3N,OAAA,CAAA2N,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,mBAAmB,GAAG,CAAC;AAAC5N,OAAA,CAAA4N,mBAAA,GAAAA,mBAAA;AAC9B,IAAMC,iBAAiB,GAAG,CAAC;AAAC7N,OAAA,CAAA6N,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,qBAAqB,GAAG,CAAC;AAAC9N,OAAA,CAAA8N,qBAAA,GAAAA,qBAAA;AAChC,IAAMC,iBAAiB,GAAG,CAAC;AAAC/N,OAAA,CAAA+N,iBAAA,GAAAA,iBAAA;AAE5B,IAAMC,SAAS,GAAG,GAAG;AAAChO,OAAA,CAAAgO,SAAA,GAAAA,SAAA;AACtB,IAAMC,qBAAqB,GAAG,GAAG;AAACjO,OAAA,CAAAiO,qBAAA,GAAAA,qBAAA;AAClC,IAAMC,qBAAqB,GAAG,GAAG;AAAClO,OAAA,CAAAkO,qBAAA,GAAAA,qBAAA;AAClC,IAAMC,gCAAgC,GAAG,GAAG;AAACnO,OAAA,CAAAmO,gCAAA,GAAAA,gCAAA;AAC7C,IAAMC,gCAAgC,GAAG,GAAG;AAACpO,OAAA,CAAAoO,gCAAA,GAAAA,gCAAA;AAC7C,IAAMC,uBAAuB,GAAG,GAAG;AAACrO,OAAA,CAAAqO,uBAAA,GAAAA,uBAAA;AACpC,IAAMC,cAAc,GAAG,IAAI;AAACtO,OAAA,CAAAsO,cAAA,GAAAA,cAAA;AAC5B,IAAMC,mBAAmB,GAAG,IAAI;AAACvO,OAAA,CAAAuO,mBAAA,GAAAA,mBAAA;AACjC,IAAMC,sBAAsB,GAAG,IAAI;AAACxO,OAAA,CAAAwO,sBAAA,GAAAA,sBAAA;AACpC,IAAMC,aAAa,GAAG,IAAI;AAACzO,OAAA,CAAAyO,aAAA,GAAAA,aAAA;AAC3B,IAAMC,0BAA0B,GAAG,IAAI;AAAC1O,OAAA,CAAA0O,0BAAA,GAAAA,0BAAA;AACxC,IAAMC,0BAA0B,GAAG,IAAI;AAAC3O,OAAA,CAAA2O,0BAAA,GAAAA,0BAAA;AACxC,IAAMC,yBAAyB,GAAG,IAAI;AAAC5O,OAAA,CAAA4O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,yBAAyB,GAAG,IAAI;AAAC7O,OAAA,CAAA6O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,YAAY,GAAG,IAAI;AAAC9O,OAAA,CAAA8O,YAAA,GAAAA,YAAA;AAC1B,IAAMC,yBAAyB,GAAG,IAAI;AAAC/O,OAAA,CAAA+O,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,yBAAyB,GAAG,IAAI;AAAChP,OAAA,CAAAgP,yBAAA,GAAAA,yBAAA;AACvC,IAAMC,wBAAwB,GAAG,IAAI;AAACjP,OAAA,CAAAiP,wBAAA,GAAAA,wBAAA;AACtC,IAAMC,wBAAwB,GAAG,IAAI;AAAClP,OAAA,CAAAkP,wBAAA,GAAAA,wBAAA;AACtC,IAAMC,gBAAgB,GAAG,IAAI;AAACnP,OAAA,CAAAmP,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,QAAQ,GAAG,IAAI;AAACpP,OAAA,CAAAoP,QAAA,GAAAA,QAAA;AACtB,IAAMC,SAAS,GAAG,IAAI;AAACrP,OAAA,CAAAqP,SAAA,GAAAA,SAAA;AACvB,IAAMC,iBAAiB,GAAG,IAAI;AAACtP,OAAA,CAAAsP,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,OAAO,GAAG,IAAI;AAACvP,OAAA,CAAAuP,OAAA,GAAAA,OAAA;AACrB,IAAMC,eAAe,GAAG,IAAI;AAACxP,OAAA,CAAAwP,eAAA,GAAAA,eAAA;AAC7B,IAAMC,SAAS,GAAG,IAAI;AAACzP,OAAA,CAAAyP,SAAA,GAAAA,SAAA;AACvB,IAAMC,aAAa,GAAG,IAAI;AAAC1P,OAAA,CAAA0P,aAAA,GAAAA,aAAA;AAC3B,IAAMC,qBAAqB,GAAG,IAAI;AAAC3P,OAAA,CAAA2P,qBAAA,GAAAA,qBAAA;AACnC,IAAMC,qBAAqB,GAAG,IAAI;AAAC5P,OAAA,CAAA4P,qBAAA,GAAAA,qBAAA;AACnC,IAAMC,kBAAkB,GAAG,IAAI;AAAC7P,OAAA,CAAA6P,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,WAAW,GAAG,IAAI;AAAC9P,OAAA,CAAA8P,WAAA,GAAAA,WAAA;AACzB,IAAMC,SAAS,GAAG,IAAI;AAAC/P,OAAA,CAAA+P,SAAA,GAAAA,SAAA;AACvB,IAAMC,UAAU,GAAG,IAAI;AAAChQ,OAAA,CAAAgQ,UAAA,GAAAA,UAAA;AACxB,IAAMC,eAAe,GAAG,IAAI;AAACjQ,OAAA,CAAAiQ,eAAA,GAAAA,eAAA;AAC7B,IAAMC,oBAAoB,GAAG,IAAI;AAAClQ,OAAA,CAAAkQ,oBAAA,GAAAA,oBAAA;AAClC,IAAMC,WAAW,GAAG,IAAI;AAACnQ,OAAA,CAAAmQ,WAAA,GAAAA,WAAA;AACzB,IAAMC,kBAAkB,GAAG,IAAI;AAACpQ,OAAA,CAAAoQ,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,SAAS,GAAG,IAAI;AAACrQ,OAAA,CAAAqQ,SAAA,GAAAA,SAAA;AACvB,IAAMC,gBAAgB,GAAG,IAAI;AAACtQ,OAAA,CAAAsQ,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,QAAQ,GAAG,IAAI;AAACvQ,OAAA,CAAAuQ,QAAA,GAAAA,QAAA;AACtB,IAAMC,eAAe,GAAG,IAAI;AAACxQ,OAAA,CAAAwQ,eAAA,GAAAA,eAAA;AAC7B,IAAMC,iBAAiB,GAAG,IAAI;AAACzQ,OAAA,CAAAyQ,iBAAA,GAAAA,iBAAA;AAE/B,IAAMC,oBAAoB,GAAG,KAAK;AAAC1Q,OAAA,CAAA0Q,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,qBAAqB,GAAG,KAAK;AAAC3Q,OAAA,CAAA2Q,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC5Q,OAAA,CAAA4Q,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC7Q,OAAA,CAAA6Q,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,uBAAuB,GAAG,KAAK;AAAC9Q,OAAA,CAAA8Q,uBAAA,GAAAA,uBAAA;AACtC,IAAMC,uBAAuB,GAAG,KAAK;AAAC/Q,OAAA,CAAA+Q,uBAAA,GAAAA,uBAAA;AACtC,IAAMC,wBAAwB,GAAG,KAAK;AAAChR,OAAA,CAAAgR,wBAAA,GAAAA,wBAAA;AACvC,IAAMC,wBAAwB,GAAG,KAAK;AAACjR,OAAA,CAAAiR,wBAAA,GAAAA,wBAAA;AACvC,IAAMC,eAAe,GAAG,KAAK;AAAClR,OAAA,CAAAkR,eAAA,GAAAA,eAAA;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAACnR,OAAA,CAAAmR,eAAA,GAAAA,eAAA;AAC9B,IAAMC,oBAAoB,GAAG,KAAK;AAACpR,OAAA,CAAAoR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACrR,OAAA,CAAAqR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACtR,OAAA,CAAAsR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACvR,OAAA,CAAAuR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACxR,OAAA,CAAAwR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAACzR,OAAA,CAAAyR,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAAC1R,OAAA,CAAA0R,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAAC3R,OAAA,CAAA2R,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,oBAAoB,GAAG,KAAK;AAAC5R,OAAA,CAAA4R,oBAAA,GAAAA,oBAAA;AACnC,IAAMC,qBAAqB,GAAG,KAAK;AAAC7R,OAAA,CAAA6R,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC9R,OAAA,CAAA8R,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,qBAAqB,GAAG,KAAK;AAAC/R,OAAA,CAAA+R,qBAAA,GAAAA,qBAAA;AACpC,IAAMC,sBAAsB,GAAG,KAAK;AAAChS,OAAA,CAAAgS,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,sBAAsB,GAAG,KAAK;AAACjS,OAAA,CAAAiS,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,sBAAsB,GAAG,KAAK;AAAClS,OAAA,CAAAkS,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,gBAAgB,GAAG,KAAK;AAACnS,OAAA,CAAAmS,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,QAAQ,GAAG,IAAI;AAACpS,OAAA,CAAAoS,QAAA,GAAAA,QAAA;AACtB,IAAMC,UAAU,GAAG,IAAI;AAACrS,OAAA,CAAAqS,UAAA,GAAAA,UAAA;AACxB,IAAMC,YAAY,GAAG,IAAI;AAACtS,OAAA,CAAAsS,YAAA,GAAAA,YAAA;AAC1B,IAAMC,mBAAmB,GAAG,IAAI;AAACvS,OAAA,CAAAuS,mBAAA,GAAAA,mBAAA;AACjC,IAAMC,iBAAiB,GAAG,IAAI;AAACxS,OAAA,CAAAwS,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,iBAAiB,GAAG,IAAI;AAACzS,OAAA,CAAAyS,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,mBAAmB,GAAG,IAAI;AAAC1S,OAAA,CAAA0S,mBAAA,GAAAA,mBAAA;AACjC,IAAMC,eAAe,GAAG,IAAI;AAAC3S,OAAA,CAAA2S,eAAA,GAAAA,eAAA;AAC7B,IAAMC,gBAAgB,GAAG,IAAI;AAAC5S,OAAA,CAAA4S,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,wBAAwB,GAAG,IAAI;AAAC7S,OAAA,CAAA6S,wBAAA,GAAAA,wBAAA;AACtC,IAAMC,0BAA0B,GAAG,IAAI;AAAC9S,OAAA,CAAA8S,0BAAA,GAAAA,0BAAA;AACxC,IAAMC,iBAAiB,GAAG,CAAC;AAAC/S,OAAA,CAAA+S,iBAAA,GAAAA,iBAAA;AAC5B,IAAMC,qBAAqB,GAAG,CAAC;AAAChT,OAAA,CAAAgT,qBAAA,GAAAA,qBAAA;AAChC,IAAMC,mBAAmB,GAAG,CAAC;AAACjT,OAAA,CAAAiT,mBAAA,GAAAA,mBAAA;AAC9B,IAAMC,cAAc,GAAG,IAAI;AAAClT,OAAA,CAAAkT,cAAA,GAAAA,cAAA;AAC5B,IAAMC,YAAY,GAAG,IAAI;AAACnT,OAAA,CAAAmT,YAAA,GAAAA,YAAA;AAC1B,IAAMC,iBAAiB,GAAG,IAAI;AAACpT,OAAA,CAAAoT,iBAAA,GAAAA,iBAAA;AAC/B,IAAMC,gBAAgB,GAAG,IAAI;AAACrT,OAAA,CAAAqT,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,qBAAqB,GAAG,CAAC;AAACtT,OAAA,CAAAsT,qBAAA,GAAAA,qBAAA;AAChC,IAAMC,oBAAoB,GAAG,CAAC;;AAE9B;AAAAvT,OAAA,CAAAuT,oBAAA,GAAAA,oBAAA;AACA,IAAMC,YAAY,GAAG,EAAE;AAACxT,OAAA,CAAAwT,YAAA,GAAAA,YAAA;AACxB,IAAMC,cAAc,GAAG,MAAM;AAACzT,OAAA,CAAAyT,cAAA,GAAAA,cAAA;AAC9B,IAAMC,oBAAoB,GAAG,aAAa;AAAC1T,OAAA,CAAA0T,oBAAA,GAAAA,oBAAA;AAE3C,IAAMC,aAAa,GAAG,CAAC;AAAC3T,OAAA,CAAA2T,aAAA,GAAAA,aAAA;AACxB,IAAMC,aAAa,GAAG,IAAI;AAAC5T,OAAA,CAAA4T,aAAA,GAAAA,aAAA;AAC3B,IAAMC,gBAAgB,GAAG,IAAI;AAAC7T,OAAA,CAAA6T,gBAAA,GAAAA,gBAAA;AAC9B,IAAMC,kBAAkB,GAAG,IAAI;AAAC9T,OAAA,CAAA8T,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,kBAAkB,GAAG,IAAI;AAAC/T,OAAA,CAAA+T,kBAAA,GAAAA,kBAAA;AAChC,IAAMC,sBAAsB,GAAG,KAAK;AAAChU,OAAA,CAAAgU,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,sBAAsB,GAAG,KAAK;AAACjU,OAAA,CAAAiU,sBAAA,GAAAA,sBAAA;AACrC,IAAMC,eAAe,GAAG,IAAI;AAAClU,OAAA,CAAAkU,eAAA,GAAAA,eAAA;AAE7B,IAAMC,gBAAgB,GAAG,GAAG;AAACnU,OAAA,CAAAmU,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,eAAe,GAAG,GAAG;AAACpU,OAAA,CAAAoU,eAAA,GAAAA,eAAA;AAC5B,IAAMC,gBAAgB,GAAG,GAAG;AAACrU,OAAA,CAAAqU,gBAAA,GAAAA,gBAAA;AAC7B,IAAMC,oBAAoB,GAAG,GAAG;AAACtU,OAAA,CAAAsU,oBAAA,GAAAA,oBAAA;AACjC,IAAMC,kBAAkB,GAAG,GAAG;AAACvU,OAAA,CAAAuU,kBAAA,GAAAA,kBAAA;AAC/B,IAAMC,mBAAmB,GAAG,GAAG;AAACxU,OAAA,CAAAwU,mBAAA,GAAAA,mBAAA;AAChC,IAAMC,uBAAuB,GAAG,GAAG;AAACzU,OAAA,CAAAyU,uBAAA,GAAAA,uBAAA;AACpC,IAAMC,iBAAiB,GAAG,GAAG;AAAC1U,OAAA,CAAA0U,iBAAA,GAAAA,iBAAA;AAE9B,IAAMC,eAAe,GAAG,KAAK;AAAC3U,OAAA,CAAA2U,eAAA,GAAAA,eAAA;AAC9B,IAAMC,gBAAgB,GAAG,KAAK;AAAC5U,OAAA,CAAA4U,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,eAAe,GAAG,KAAK;AAAC7U,OAAA,CAAA6U,eAAA,GAAAA,eAAA;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAAC9U,OAAA,CAAA8U,eAAA,GAAAA,eAAA;AAC9B,IAAMC,gBAAgB,GAAG,KAAK;AAAC/U,OAAA,CAAA+U,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,eAAe,GAAG,KAAK;AAAChV,OAAA,CAAAgV,eAAA,GAAAA,eAAA;AAC9B,IAAMC,eAAe,GAAG,KAAK;AAACjV,OAAA,CAAAiV,eAAA,GAAAA,eAAA;AAC9B,IAAMC,gBAAgB,GAAG,KAAK;AAAClV,OAAA,CAAAkV,gBAAA,GAAAA,gBAAA;AAC/B,IAAMC,eAAe,GAAG,KAAK;AAACnV,OAAA,CAAAmV,eAAA,GAAAA,eAAA;AAE9B,IAAMC,KAAK,GAAG,KAAK;AAACpV,OAAA,CAAAoV,KAAA,GAAAA,KAAA;AACpB,IAAMC,KAAK,GAAG,QAAQ;AAACrV,OAAA,CAAAqV,KAAA,GAAAA,KAAA;AAEvB,IAAMC,YAAY,GAAG,IAAI,CAAC,CAAC;;AAE3B;AACA;AACA;AAFAtV,OAAA,CAAAsV,YAAA,GAAAA,YAAA;AAAA,IAIMC,eAAe;EAAA,SAAAA,gBAAA;IAAAzM,eAAA,OAAAyM,eAAA;EAAA;EAAAjM,YAAA,CAAAiM,eAAA;IAAA/U,GAAA;IAAAE,KAAA,EAEpB,SAAA8U,iBAAkBjT,IAAI,EAAEkT,QAAQ,EAAG;MAElC,IAAK,IAAI,CAACC,UAAU,KAAK1Q,SAAS,EAAG,IAAI,CAAC0Q,UAAU,GAAG,CAAC,CAAC;MAEzD,IAAMC,SAAS,GAAG,IAAI,CAACD,UAAU;MAEjC,IAAKC,SAAS,CAAEpT,IAAI,CAAE,KAAKyC,SAAS,EAAG;QAEtC2Q,SAAS,CAAEpT,IAAI,CAAE,GAAG,EAAE;MAEvB;MAEA,IAAKoT,SAAS,CAAEpT,IAAI,CAAE,CAACqT,OAAO,CAAEH,QAAQ,CAAE,KAAK,CAAE,CAAC,EAAG;QAEpDE,SAAS,CAAEpT,IAAI,CAAE,CAACwD,IAAI,CAAE0P,QAAQ,CAAE;MAEnC;IAED;EAAC;IAAAjV,GAAA;IAAAE,KAAA,EAED,SAAAmV,iBAAkBtT,IAAI,EAAEkT,QAAQ,EAAG;MAElC,IAAK,IAAI,CAACC,UAAU,KAAK1Q,SAAS,EAAG,OAAO,KAAK;MAEjD,IAAM2Q,SAAS,GAAG,IAAI,CAACD,UAAU;MAEjC,OAAOC,SAAS,CAAEpT,IAAI,CAAE,KAAKyC,SAAS,IAAI2Q,SAAS,CAAEpT,IAAI,CAAE,CAACqT,OAAO,CAAEH,QAAQ,CAAE,KAAK,CAAE,CAAC;IAExF;EAAC;IAAAjV,GAAA;IAAAE,KAAA,EAED,SAAAoV,oBAAqBvT,IAAI,EAAEkT,QAAQ,EAAG;MAErC,IAAK,IAAI,CAACC,UAAU,KAAK1Q,SAAS,EAAG;MAErC,IAAM2Q,SAAS,GAAG,IAAI,CAACD,UAAU;MACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEpT,IAAI,CAAE;MAEvC,IAAKwT,aAAa,KAAK/Q,SAAS,EAAG;QAElC,IAAMgR,KAAK,GAAGD,aAAa,CAACH,OAAO,CAAEH,QAAQ,CAAE;QAE/C,IAAKO,KAAK,KAAK,CAAE,CAAC,EAAG;UAEpBD,aAAa,CAACE,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;QAEjC;MAED;IAED;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAwV,cAAeC,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACT,UAAU,KAAK1Q,SAAS,EAAG;MAErC,IAAM2Q,SAAS,GAAG,IAAI,CAACD,UAAU;MACjC,IAAMK,aAAa,GAAGJ,SAAS,CAAEQ,KAAK,CAAC5T,IAAI,CAAE;MAE7C,IAAKwT,aAAa,KAAK/Q,SAAS,EAAG;QAElCmR,KAAK,CAACjN,MAAM,GAAG,IAAI;;QAEnB;QACA,IAAMkN,KAAK,GAAGL,aAAa,CAAClO,KAAK,CAAE,CAAC,CAAE;QAEtC,KAAM,IAAItB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGD,KAAK,CAAC9P,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAEhD6P,KAAK,CAAE7P,CAAC,CAAE,CAAC/D,IAAI,CAAE,IAAI,EAAE2T,KAAK,CAAE;QAE/B;QAEAA,KAAK,CAACjN,MAAM,GAAG,IAAI;MAEpB;IAED;EAAC;EAAA,OAAAqM,eAAA;AAAA;AAAAvV,OAAA,CAAAuV,eAAA,GAAAA,eAAA;AAIF,IAAMegD,IAAIC,KAAK,GAAG,OAAO;AAGnB,IAAMC,OAAO,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC7B,IAAMC,OAAO,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE;;AAE7B;AACA,SAASE,YAAYA,CAAA,EAAG;EAEvB,IAAMC,EAAE,GAAGJ,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMC,EAAE,GAAGN,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;EACzC,IAAME,EAAE,GAAGP,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMG,EAAE,GAAGR,IAAI,CAACK,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC;EACzC,IAAMI,IAAI,GAAGZ,IAAI,CAAEO,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGP,IAAI,CAAEO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GAC/GP,IAAI,CAAES,EAAE,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGT,IAAI,CAAES,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,GAAG,GACjHT,IAAI,CAAEU,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAG,GAAG,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGV,IAAI,CAAEU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAC3GV,IAAI,CAAEW,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,CAAC,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE,GAAGX,IAAI,CAAEW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAE;;EAEhG;EACA,OAAOC,IAAI,CAACC,WAAW,EAAE;AAE1B;AAEA,SAASC,KAAKA,CAAE1W,KAAK,EAAE2W,GAAG,EAAEC,GAAG,EAAG;EAEjC,OAAOb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE5W,KAAK,CAAE,CAAE;AAE/C;;AAEA;AACA;AACA,SAAS6W,eAAeA,CAAEC,CAAC,EAAEC,CAAC,EAAG;EAEhC,OAAO,CAAID,CAAC,GAAGC,CAAC,GAAKA,CAAC,IAAKA,CAAC;AAE7B;;AAEA;AACA,SAASC,SAASA,CAAEC,CAAC,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;EAEvC,OAAOD,EAAE,GAAG,CAAEH,CAAC,GAAGC,EAAE,KAAOG,EAAE,GAAGD,EAAE,CAAE,IAAKD,EAAE,GAAGD,EAAE,CAAE;AAEnD;;AAEA;AACA,SAASI,WAAWA,CAAEL,CAAC,EAAEM,CAAC,EAAEvX,KAAK,EAAG;EAEnC,IAAKiX,CAAC,KAAKM,CAAC,EAAG;IAEd,OAAO,CAAEvX,KAAK,GAAGiX,CAAC,KAAOM,CAAC,GAAGN,CAAC,CAAE;EAEjC,CAAC,MAAM;IAEN,OAAO,CAAC;EAET;AAED;;AAEA;AACA,SAASO,IAAIA,CAAEP,CAAC,EAAEM,CAAC,EAAEE,CAAC,EAAG;EAExB,OAAO,CAAE,CAAC,GAAGA,CAAC,IAAKR,CAAC,GAAGQ,CAAC,GAAGF,CAAC;AAE7B;;AAEA;AACA,SAASG,IAAIA,CAAET,CAAC,EAAEM,CAAC,EAAEI,MAAM,EAAEC,EAAE,EAAG;EAEjC,OAAOJ,IAAI,CAAEP,CAAC,EAAEM,CAAC,EAAE,CAAC,GAAGxB,IAAI,CAAC8B,GAAG,CAAE,CAAEF,MAAM,GAAGC,EAAE,CAAE,CAAE;AAEnD;;AAEA;AACA,SAASE,QAAQA,CAAEb,CAAC,EAAErR,MAAM,GAAG,CAAC,EAAG;EAElC,OAAOA,MAAM,GAAGmQ,IAAI,CAACgC,GAAG,CAAElB,eAAe,CAAEI,CAAC,EAAErR,MAAM,GAAG,CAAC,CAAE,GAAGA,MAAM,CAAE;AAEtE;;AAEA;AACA,SAASoS,UAAUA,CAAEf,CAAC,EAAEN,GAAG,EAAEC,GAAG,EAAG;EAElC,IAAKK,CAAC,IAAIN,GAAG,EAAG,OAAO,CAAC;EACxB,IAAKM,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;EAExBK,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;EAE/B,OAAOM,CAAC,GAAGA,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAE;AAE7B;AAEA,SAASgB,YAAYA,CAAEhB,CAAC,EAAEN,GAAG,EAAEC,GAAG,EAAG;EAEpC,IAAKK,CAAC,IAAIN,GAAG,EAAG,OAAO,CAAC;EACxB,IAAKM,CAAC,IAAIL,GAAG,EAAG,OAAO,CAAC;EAExBK,CAAC,GAAG,CAAEA,CAAC,GAAGN,GAAG,KAAOC,GAAG,GAAGD,GAAG,CAAE;EAE/B,OAAOM,CAAC,GAAGA,CAAC,GAAGA,CAAC,IAAKA,CAAC,IAAKA,CAAC,GAAG,CAAC,GAAG,EAAE,CAAE,GAAG,EAAE,CAAE;AAE/C;;AAEA;AACA,SAASiB,OAAOA,CAAEC,GAAG,EAAEC,IAAI,EAAG;EAE7B,OAAOD,GAAG,GAAGpC,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACK,MAAM,EAAE,IAAKgC,IAAI,GAAGD,GAAG,GAAG,CAAC,CAAE,CAAE;AAE9D;;AAEA;AACA,SAASG,SAASA,CAAEH,GAAG,EAAEC,IAAI,EAAG;EAE/B,OAAOD,GAAG,GAAGpC,IAAI,CAACK,MAAM,EAAE,IAAKgC,IAAI,GAAGD,GAAG,CAAE;AAE5C;;AAEA;AACA,SAASI,eAAeA,CAAEC,KAAK,EAAG;EAEjC,OAAOA,KAAK,IAAK,GAAG,GAAGzC,IAAI,CAACK,MAAM,EAAE,CAAE;AAEvC;;AAEA;AACA,SAASqC,YAAYA,CAAEC,CAAC,EAAG;EAE1B,IAAKA,CAAC,KAAKpU,SAAS,EAAGuR,KAAK,GAAG6C,CAAC;;EAEhC;;EAEA,IAAIjB,CAAC,GAAG5B,KAAK,IAAI,UAAU;EAE3B4B,CAAC,GAAG1B,IAAI,CAAC4C,IAAI,CAAElB,CAAC,GAAGA,CAAC,KAAK,EAAE,EAAEA,CAAC,GAAG,CAAC,CAAE;EAEpCA,CAAC,IAAIA,CAAC,GAAG1B,IAAI,CAAC4C,IAAI,CAAElB,CAAC,GAAGA,CAAC,KAAK,CAAC,EAAEA,CAAC,GAAG,EAAE,CAAE;EAEzC,OAAO,CAAE,CAAEA,CAAC,GAAGA,CAAC,KAAK,EAAE,MAAO,CAAC,IAAK,UAAU;AAE/C;AAEA,SAASmB,QAAQA,CAAEC,OAAO,EAAG;EAE5B,OAAOA,OAAO,GAAG/C,OAAO;AAEzB;AAEA,SAASgD,QAAQA,CAAEC,OAAO,EAAG;EAE5B,OAAOA,OAAO,GAAG9C,OAAO;AAEzB;AAEA,SAAS+C,YAAYA,CAAEhZ,KAAK,EAAG;EAE9B,OAAO,CAAEA,KAAK,GAAKA,KAAK,GAAG,CAAG,MAAO,CAAC,IAAIA,KAAK,KAAK,CAAC;AAEtD;AAEA,SAASiZ,cAAcA,CAAEjZ,KAAK,EAAG;EAEhC,OAAO+V,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEnD,IAAI,CAACoD,IAAI,CAAEpD,IAAI,CAACqD,GAAG,CAAEpZ,KAAK,CAAE,GAAG+V,IAAI,CAACsD,GAAG,CAAE,CAAE;AAEhE;AAEA,SAASC,eAAeA,CAAEtZ,KAAK,EAAG;EAEjC,OAAO+V,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEnD,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACqD,GAAG,CAAEpZ,KAAK,CAAE,GAAG+V,IAAI,CAACsD,GAAG,CAAE,CAAE;AAEjE;AAEA,SAASE,4BAA4BA,CAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAG;EAE1D;;EAEA;EACA;EACA;;EAEA,IAAMC,GAAG,GAAG9D,IAAI,CAAC8D,GAAG;EACpB,IAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAG;EAEpB,IAAMC,EAAE,GAAGF,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE;EACvB,IAAMM,EAAE,GAAGF,GAAG,CAAEJ,CAAC,GAAG,CAAC,CAAE;EAEvB,IAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;EAChC,IAAMO,GAAG,GAAGJ,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;EAEhC,IAAMQ,IAAI,GAAGN,GAAG,CAAE,CAAEJ,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;EACjC,IAAMS,IAAI,GAAGN,GAAG,CAAE,CAAEL,CAAC,GAAGE,CAAC,IAAK,CAAC,CAAE;EAEjC,IAAMU,IAAI,GAAGR,GAAG,CAAE,CAAEF,CAAC,GAAGF,CAAC,IAAK,CAAC,CAAE;EACjC,IAAMa,IAAI,GAAGR,GAAG,CAAE,CAAEH,CAAC,GAAGF,CAAC,IAAK,CAAC,CAAE;EAEjC,QAASG,KAAK;IAEb,KAAK,KAAK;MACTJ,CAAC,CAACe,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGE,GAAG,CAAE;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGG,IAAI,EAAEJ,EAAE,GAAGE,GAAG,CAAE;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGG,IAAI,EAAEH,EAAE,GAAGI,IAAI,EAAEL,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAG,CAAE;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAER,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGE,GAAG,CAAE;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEF,EAAE,GAAGM,IAAI,EAAEP,EAAE,GAAGE,GAAG,CAAE;MACjD;IAED,KAAK,KAAK;MACTT,CAAC,CAACe,GAAG,CAAEP,EAAE,GAAGM,IAAI,EAAEN,EAAE,GAAGK,IAAI,EAAEN,EAAE,GAAGG,GAAG,EAAEH,EAAE,GAAGE,GAAG,CAAE;MACjD;IAED;MACCO,OAAO,CAACC,IAAI,CAAE,iFAAiF,GAAGb,KAAK,CAAE;EAAC;AAI7G;AAEA,SAASc,aAAaA,CAAE1a,KAAK,EAAE0V,KAAK,EAAG;EAEtC,QAASA,KAAK,CAACxP,WAAW;IAEzB,KAAKyU,YAAY;MAEhB,OAAO3a,KAAK;IAEb,KAAK4a,WAAW;MAEf,OAAO5a,KAAK,GAAG,OAAO;IAEvB,KAAK6a,UAAU;MAEd,OAAO7a,KAAK,GAAG,KAAK;IAErB,KAAK8a,UAAU;MAEd,OAAO/E,IAAI,CAACa,GAAG,CAAE5W,KAAK,GAAG,OAAO,EAAE,CAAE,GAAG,CAAE;IAE1C,KAAK+a,SAAS;MAEb,OAAOhF,IAAI,CAACa,GAAG,CAAE5W,KAAK,GAAG,KAAK,EAAE,CAAE,GAAG,CAAE;IAExC;MAEC,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,CAAE;EAAC;AAIhD;AAEA,SAASqX,SAASA,CAAEhb,KAAK,EAAE0V,KAAK,EAAG;EAElC,QAASA,KAAK,CAACxP,WAAW;IAEzB,KAAKyU,YAAY;MAEhB,OAAO3a,KAAK;IAEb,KAAK4a,WAAW;MAEf,OAAO7E,IAAI,CAACkF,KAAK,CAAEjb,KAAK,GAAG,OAAO,CAAE;IAErC,KAAK6a,UAAU;MAEd,OAAO9E,IAAI,CAACkF,KAAK,CAAEjb,KAAK,GAAG,KAAK,CAAE;IAEnC,KAAK8a,UAAU;MAEd,OAAO/E,IAAI,CAACkF,KAAK,CAAEjb,KAAK,GAAG,OAAO,CAAE;IAErC,KAAK+a,SAAS;MAEb,OAAOhF,IAAI,CAACkF,KAAK,CAAEjb,KAAK,GAAG,KAAK,CAAE;IAEnC;MAEC,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,CAAE;EAAC;AAIhD;AAEA,IAAIuX,SAAS,GAAG,aAAa1b,MAAM,CAAC2b,MAAM,CAAC;EAC1C7U,SAAS,EAAE,IAAI;EACfwP,OAAO,EAAEA,OAAO;EAChBG,OAAO,EAAEA,OAAO;EAChBC,YAAY,EAAEA,YAAY;EAC1BQ,KAAK,EAAEA,KAAK;EACZG,eAAe,EAAEA,eAAe;EAChCG,SAAS,EAAEA,SAAS;EACpBM,WAAW,EAAEA,WAAW;EACxBE,IAAI,EAAEA,IAAI;EACVE,IAAI,EAAEA,IAAI;EACVI,QAAQ,EAAEA,QAAQ;EAClBE,UAAU,EAAEA,UAAU;EACtBC,YAAY,EAAEA,YAAY;EAC1BC,OAAO,EAAEA,OAAO;EAChBI,SAAS,EAAEA,SAAS;EACpBC,eAAe,EAAEA,eAAe;EAChCE,YAAY,EAAEA,YAAY;EAC1BG,QAAQ,EAAEA,QAAQ;EAClBE,QAAQ,EAAEA,QAAQ;EAClBE,YAAY,EAAEA,YAAY;EAC1BC,cAAc,EAAEA,cAAc;EAC9BK,eAAe,EAAEA,eAAe;EAChCC,4BAA4B,EAAEA,4BAA4B;EAC1DyB,SAAS,EAAEA,SAAS;EACpBI,WAAW,EAAEV;AACd,CAAC,CAAC;AAACpb,OAAA,CAAA4b,SAAA,GAAAA,SAAA;AAAA,IAEGG,OAAO,0BAAAC,gBAAA;EAEZ,SAAAD,QAAapE,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAG;IAAAnP,eAAA,OAAAiT,OAAA;IAE3BA,OAAO,CAAC5b,SAAS,CAAC8b,SAAS,GAAG,IAAI;IAElC,IAAI,CAACtE,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;EAEX;EAAC3O,YAAA,CAAAyS,OAAA;IAAAvb,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACvE,CAAC;IAEd,CAAC;IAAAsD,GAAA,EAED,SAAAA,IAAWva,KAAK,EAAG;MAElB,IAAI,CAACiX,CAAC,GAAGjX,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACjE,CAAC;IAEd,CAAC;IAAAgD,GAAA,EAED,SAAAA,IAAYva,KAAK,EAAG;MAEnB,IAAI,CAACuX,CAAC,GAAGvX,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKtD,CAAC,EAAEM,CAAC,EAAG;MAEX,IAAI,CAACN,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAyb,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACzE,CAAC,GAAGyE,MAAM;MACf,IAAI,CAACnE,CAAC,GAAGmE,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA2b,KAAM1E,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAnX,GAAA;IAAAE,KAAA,EAED,SAAA4b,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA6b,aAAcvG,KAAK,EAAEtV,KAAK,EAAG;MAE5B,QAASsV,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAAC2B,CAAC,GAAGjX,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACuX,CAAC,GAAGvX,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAG2R,KAAK,CAAE;MAAC;MAI/D,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA8b,aAAcxG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC2B,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACM,CAAC;QACrB;UAAS,MAAM,IAAI5T,KAAK,CAAE,yBAAyB,GAAG2R,KAAK,CAAE;MAAC;IAIhE;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC+Q,CAAC,EAAE,IAAI,CAACM,CAAC,CAAE;IAE9C;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMC,CAAC,EAAG;MAET,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAKD,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAmc,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAoc,WAAY3C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAqc,gBAAiBJ,CAAC,EAAEvD,CAAC,EAAG;MAEvB,IAAI,CAACzB,CAAC,IAAIgF,CAAC,CAAChF,CAAC,GAAGyB,CAAC;MACjB,IAAI,CAACnB,CAAC,IAAI0E,CAAC,CAAC1E,CAAC,GAAGmB,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAsc,IAAKL,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAuc,UAAW7D,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAwc,WAAY/C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAUR,CAAC,EAAG;MAEb,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA0c,eAAgBhB,MAAM,EAAG;MAExB,IAAI,CAACzE,CAAC,IAAIyE,MAAM;MAChB,IAAI,CAACnE,CAAC,IAAImE,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA2c,OAAQV,CAAC,EAAG;MAEX,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAclB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAM,CAAE;IAEzC;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAc9F,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;MAC5B,IAAMuF,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE;MACzC,IAAI,CAACvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAA2W,IAAKsF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAEgF,CAAC,CAAChF,CAAC,CAAE;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAE0E,CAAC,CAAC1E,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA4W,IAAKqF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAC,CAAE;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAE0E,CAAC,CAAC1E,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA0W,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgd,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAC,CAAE,CAAE;MACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC3F,CAAC,CAAE,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAmd,YAAaxG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMhR,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;MAE5B,OAAO,IAAI,CAACgX,YAAY,CAAEhX,MAAM,IAAI,CAAC,CAAE,CAAC8W,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEhR,MAAM,CAAE,CAAE,CAAE;IAEnG;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAqY,MAAA,EAAQ;MAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAmZ,KAAA,EAAO;MAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE;MAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAib,MAAA,EAAQ;MAEP,IAAI,CAAChE,CAAC,GAAGlB,IAAI,CAACkF,KAAK,CAAE,IAAI,CAAChE,CAAC,CAAE;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACkF,KAAK,CAAE,IAAI,CAAC1D,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAod,YAAA,EAAc;MAEb,IAAI,CAACnG,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;MACpE,IAAI,CAACM,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;MAEpE,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAqd,OAAA,EAAS;MAER,IAAI,CAACpG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAsd,IAAKrB,CAAC,EAAG;MAER,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;IAEnC;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAud,MAAOtB,CAAC,EAAG;MAEV,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG0E,CAAC,CAAChF,CAAC;IAEnC;EAAC;IAAAnX,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAA,EAAW;MAEV,OAAO,IAAI,CAACvG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC;IAEzC;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;MAER,OAAOmQ,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACxG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;IAEtD;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA0d,gBAAA,EAAkB;MAEjB,OAAO3H,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,CAAE;IAE/C;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgb,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC4B,YAAY,CAAE,IAAI,CAAChX,MAAM,EAAE,IAAI,CAAC,CAAE;IAE/C;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA2d,MAAA,EAAQ;MAEP;;MAEA,IAAMA,KAAK,GAAG5H,IAAI,CAAC6H,KAAK,CAAE,CAAE,IAAI,CAACrG,CAAC,EAAE,CAAE,IAAI,CAACN,CAAC,CAAE,GAAGlB,IAAI,CAACC,EAAE;MAExD,OAAO2H,KAAK;IAEb;EAAC;IAAA7d,GAAA;IAAAE,KAAA,EAED,SAAA6d,WAAY5B,CAAC,EAAG;MAEf,OAAOlG,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACK,iBAAiB,CAAE7B,CAAC,CAAE,CAAE;IAEhD;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAA8d,kBAAmB7B,CAAC,EAAG;MAEtB,IAAM8B,EAAE,GAAG,IAAI,CAAC9G,CAAC,GAAGgF,CAAC,CAAChF,CAAC;QAAE+G,EAAE,GAAG,IAAI,CAACzG,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MAC1C,OAAOwG,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;IAEzB;EAAC;IAAAle,GAAA;IAAAE,KAAA,EAED,SAAAie,oBAAqBhC,CAAC,EAAG;MAExB,OAAOlG,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,GAAGgF,CAAC,CAAChF,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,CAAE;IAE3D;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAke,UAAWtY,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACoV,SAAS,EAAE,CAAC0B,cAAc,CAAE9W,MAAM,CAAE;IAEjD;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAwX,KAAMyE,CAAC,EAAEkC,KAAK,EAAG;MAEhB,IAAI,CAAClH,CAAC,IAAI,CAAEgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKkH,KAAK;MAClC,IAAI,CAAC5G,CAAC,IAAI,CAAE0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK4G,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAoe,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAAClH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,GAAG,CAAEqH,EAAE,CAACrH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,IAAKkH,KAAK;MACvC,IAAI,CAAC5G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,GAAG,CAAE+G,EAAE,CAAC/G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,IAAK4G,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQtC,CAAC,EAAG;MAEX,OAAWA,CAAC,CAAChF,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,KAAK,IAAI,CAACA,CAAG;IAElD;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACxH,CAAC,GAAGvB,KAAK,CAAE+I,MAAM,CAAE;MACxB,IAAI,CAAClH,CAAC,GAAG7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACxH,CAAC;MACxBvB,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAClH,CAAC;MAE5B,OAAO7B,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA2e,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;MAEvC,IAAI,CAAC2B,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;MAChC,IAAI,CAACiC,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA+e,aAAcC,MAAM,EAAErB,KAAK,EAAG;MAE7B,IAAMhE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;QAAEjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;MAElD,IAAM1G,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG+H,MAAM,CAAC/H,CAAC;MAC3B,IAAMM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAGyH,MAAM,CAACzH,CAAC;MAE3B,IAAI,CAACN,CAAC,GAAGA,CAAC,GAAG0C,CAAC,GAAGpC,CAAC,GAAGmB,CAAC,GAAGsG,MAAM,CAAC/H,CAAC;MACjC,IAAI,CAACM,CAAC,GAAGN,CAAC,GAAGyB,CAAC,GAAGnB,CAAC,GAAGoC,CAAC,GAAGqF,MAAM,CAACzH,CAAC;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAoW,OAAA,EAAS;MAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,EAAE;MACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,EAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAtW,GAAA,EAAAwb,gBAAA;IAAAtb,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAme,OAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAjY,IAAA,GAAAiY,SAAA,CAAAva,IAAA;UAAA;YAAAua,SAAA,CAAAva,IAAA;YAEC,OAAM,IAAI,CAACsS,CAAC;UAAA;YAAAiI,SAAA,CAAAva,IAAA;YACZ,OAAM,IAAI,CAAC4S,CAAC;UAAA;UAAA;YAAA,OAAA2H,SAAA,CAAA9X,IAAA;QAAA;MAAA,GAAApH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAqb,OAAA;AAAA,EALEnb,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAA+b,OAAA,GAAAA,OAAA;AAAA,IASb8D,OAAO;EAEZ,SAAAA,QAAA,EAAc;IAAA/W,eAAA,OAAA+W,OAAA;IAEbA,OAAO,CAAC1f,SAAS,CAAC2f,SAAS,GAAG,IAAI;IAElC,IAAI,CAACrC,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;EAEF;EAACnU,YAAA,CAAAuW,OAAA;IAAArf,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK8E,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAElD,IAAMC,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB+C,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;MAAES,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;MAAEM,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;MAC3CG,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;MAAEQ,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;MAAEK,EAAE,CAAE,CAAC,CAAE,GAAGF,GAAG;MAC3CE,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;MAAEO,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAAEI,EAAE,CAAE,CAAC,CAAE,GAAGD,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA/f,GAAA;IAAAE,KAAA,EAED,SAAA+f,SAAA,EAAW;MAEV,IAAI,CAACxF,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CAEP;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMjF,CAAC,EAAG;MAET,IAAM+I,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAMiD,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MAErB+C,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MACvDF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAlgB,GAAA;IAAAE,KAAA,EAED,SAAAigB,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,KAAK,CAACG,oBAAoB,CAAE,IAAI,EAAE,CAAC,CAAE;MACrCF,KAAK,CAACE,oBAAoB,CAAE,IAAI,EAAE,CAAC,CAAE;MACrCD,KAAK,CAACC,oBAAoB,CAAE,IAAI,EAAE,CAAC,CAAE;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAAvgB,GAAA;IAAAE,KAAA,EAED,SAAAsgB,eAAgBvJ,CAAC,EAAG;MAEnB,IAAMiJ,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MAErB,IAAI,CAACxC,GAAG,CAEPyF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EACzBA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAAE,CAE1B;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAlgB,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAU1F,CAAC,EAAG;MAEb,OAAO,IAAI,CAACwJ,gBAAgB,CAAE,IAAI,EAAExJ,CAAC,CAAE;IAExC;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAwgB,YAAazJ,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACwJ,gBAAgB,CAAExJ,CAAC,EAAE,IAAI,CAAE;IAExC;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAugB,iBAAkB9G,CAAC,EAAEC,CAAC,EAAG;MAExB,IAAM+G,EAAE,GAAGhH,CAAC,CAACsD,QAAQ;MACrB,IAAM2D,EAAE,GAAGhH,CAAC,CAACqD,QAAQ;MACrB,IAAM+C,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAM4D,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;QAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;QAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;QAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;QAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;QAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;QAAEU,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;MAEjD,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;QAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,CAAC,CAAE;MAEjDZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG;MAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG;MAE3C9B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG;MAC3C5B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG;MAC3C7B,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA9hB,GAAA;IAAAE,KAAA,EAED,SAAA0c,eAAgBhE,CAAC,EAAG;MAEnB,IAAMoH,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB+C,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MACxCoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MACxCoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAA6hB,YAAA,EAAc;MAEb,IAAM/B,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAMtD,CAAC,GAAGqG,EAAE,CAAE,CAAC,CAAE;QAAEpG,CAAC,GAAGoG,EAAE,CAAE,CAAC,CAAE;QAAEnG,CAAC,GAAGmG,EAAE,CAAE,CAAC,CAAE;QAC1CgC,CAAC,GAAGhC,EAAE,CAAE,CAAC,CAAE;QAAEhD,CAAC,GAAGgD,EAAE,CAAE,CAAC,CAAE;QAAEiC,CAAC,GAAGjC,EAAE,CAAE,CAAC,CAAE;QACrCkC,CAAC,GAAGlC,EAAE,CAAE,CAAC,CAAE;QAAEmC,CAAC,GAAGnC,EAAE,CAAE,CAAC,CAAE;QAAEja,CAAC,GAAGia,EAAE,CAAE,CAAC,CAAE;MAEtC,OAAOrG,CAAC,GAAGqD,CAAC,GAAGjX,CAAC,GAAG4T,CAAC,GAAGsI,CAAC,GAAGE,CAAC,GAAGvI,CAAC,GAAGoI,CAAC,GAAGjc,CAAC,GAAG6T,CAAC,GAAGqI,CAAC,GAAGC,CAAC,GAAGrI,CAAC,GAAGmI,CAAC,GAAGG,CAAC,GAAGtI,CAAC,GAAGmD,CAAC,GAAGkF,CAAC;IAE7E;EAAC;IAAAliB,GAAA;IAAAE,KAAA,EAED,SAAAkiB,OAAA,EAAS;MAER,IAAMpC,EAAE,GAAG,IAAI,CAAC/C,QAAQ;QAEvBsC,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAC3CR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;QAC3CP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAED,GAAG,GAAGC,EAAE,CAAE,CAAC,CAAE;QAE3CqC,GAAG,GAAGtC,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;QAC3B0C,GAAG,GAAGxC,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG;QAC3B+C,GAAG,GAAG3C,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG;QAE3B+C,GAAG,GAAGjD,GAAG,GAAG8C,GAAG,GAAG3C,GAAG,GAAG4C,GAAG,GAAGzC,GAAG,GAAG0C,GAAG;MAExC,IAAKC,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC/H,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE7D,IAAMgI,MAAM,GAAG,CAAC,GAAGD,GAAG;MAEtBxC,EAAE,CAAE,CAAC,CAAE,GAAGqC,GAAG,GAAGI,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEH,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAK+C,MAAM;MAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEF,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAK8C,MAAM;MAE5CzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,GAAG,GAAGG,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAED,GAAG,GAAGR,GAAG,GAAGM,GAAG,GAAGJ,GAAG,IAAKgD,MAAM;MAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEH,GAAG,GAAGL,GAAG,GAAGM,GAAG,GAAGP,GAAG,IAAKkD,MAAM;MAE5CzC,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG,GAAGE,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEN,GAAG,GAAGD,GAAG,GAAGG,GAAG,GAAGL,GAAG,IAAKkD,MAAM;MAC5CzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGF,GAAG,IAAKiD,MAAM;MAE5C,OAAO,IAAI;IAEZ;EAAC;IAAAziB,GAAA;IAAAE,KAAA,EAED,SAAAwiB,UAAA,EAAY;MAEX,IAAIC,GAAG;MACP,IAAM1L,CAAC,GAAG,IAAI,CAACgG,QAAQ;MAEvB0F,GAAG,GAAG1L,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAG0L,GAAG;MAC3CA,GAAG,GAAG1L,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAG0L,GAAG;MAC3CA,GAAG,GAAG1L,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAGA,CAAC,CAAE,CAAC,CAAE;MAAEA,CAAC,CAAE,CAAC,CAAE,GAAG0L,GAAG;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA3iB,GAAA;IAAAE,KAAA,EAED,SAAA0iB,gBAAiBC,OAAO,EAAG;MAE1B,OAAO,IAAI,CAACrC,cAAc,CAAEqC,OAAO,CAAE,CAACT,MAAM,EAAE,CAACM,SAAS,EAAE;IAE3D;EAAC;IAAA1iB,GAAA;IAAAE,KAAA,EAED,SAAA4iB,mBAAoBC,CAAC,EAAG;MAEvB,IAAM9L,CAAC,GAAG,IAAI,CAACgG,QAAQ;MAEvB8F,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MACf8L,CAAC,CAAE,CAAC,CAAE,GAAG9L,CAAC,CAAE,CAAC,CAAE;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAA8iB,eAAgBC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAElD,IAAM1J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEsJ,QAAQ,CAAE;MAC9B,IAAMzK,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEqJ,QAAQ,CAAE;MAE9B,IAAI,CAAC5I,GAAG,CACP0I,EAAE,GAAGtJ,CAAC,EAAEsJ,EAAE,GAAGvK,CAAC,EAAE,CAAEuK,EAAE,IAAKtJ,CAAC,GAAGyJ,EAAE,GAAG1K,CAAC,GAAG2K,EAAE,CAAE,GAAGD,EAAE,GAAGL,EAAE,EACpD,CAAEG,EAAE,GAAGxK,CAAC,EAAEwK,EAAE,GAAGvJ,CAAC,EAAE,CAAEuJ,EAAE,IAAK,CAAExK,CAAC,GAAG0K,EAAE,GAAGzJ,CAAC,GAAG0J,EAAE,CAAE,GAAGA,EAAE,GAAGL,EAAE,EACxD,CAAC,EAAE,CAAC,EAAE,CAAC,CACP;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAljB,GAAA;IAAAE,KAAA,EAED,SAAAsjB,MAAOL,EAAE,EAAEC,EAAE,EAAG;MAEf,IAAMpD,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB+C,EAAE,CAAE,CAAC,CAAE,IAAImD,EAAE;MAAEnD,EAAE,CAAE,CAAC,CAAE,IAAImD,EAAE;MAAEnD,EAAE,CAAE,CAAC,CAAE,IAAImD,EAAE;MAC3CnD,EAAE,CAAE,CAAC,CAAE,IAAIoD,EAAE;MAAEpD,EAAE,CAAE,CAAC,CAAE,IAAIoD,EAAE;MAAEpD,EAAE,CAAE,CAAC,CAAE,IAAIoD,EAAE;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAApjB,GAAA;IAAAE,KAAA,EAED,SAAAujB,OAAQC,KAAK,EAAG;MAEf,IAAM7J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;MAC3B,IAAM9K,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;MAE3B,IAAM1D,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAM4D,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,CAAC,CAAE;MAEjDA,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGgH,GAAG,GAAGjI,CAAC,GAAGoI,GAAG;MAC3BhB,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGiH,GAAG,GAAGlI,CAAC,GAAGqI,GAAG;MAC3BjB,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGkH,GAAG,GAAGnI,CAAC,GAAGsI,GAAG;MAE3BlB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpH,CAAC,GAAGiI,GAAG,GAAGhH,CAAC,GAAGmH,GAAG;MAC7BhB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpH,CAAC,GAAGkI,GAAG,GAAGjH,CAAC,GAAGoH,GAAG;MAC7BjB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpH,CAAC,GAAGmI,GAAG,GAAGlH,CAAC,GAAGqH,GAAG;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAlhB,GAAA;IAAAE,KAAA,EAED,SAAAyjB,UAAWV,EAAE,EAAEC,EAAE,EAAG;MAEnB,IAAMlD,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB+C,EAAE,CAAE,CAAC,CAAE,IAAIiD,EAAE,GAAGjD,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,IAAIiD,EAAE,GAAGjD,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,IAAIiD,EAAE,GAAGjD,EAAE,CAAE,CAAC,CAAE;MACzEA,EAAE,CAAE,CAAC,CAAE,IAAIkD,EAAE,GAAGlD,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,IAAIkD,EAAE,GAAGlD,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,IAAIkD,EAAE,GAAGlD,EAAE,CAAE,CAAC,CAAE;MAEzE,OAAO,IAAI;IAEZ;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQmF,MAAM,EAAG;MAEhB,IAAM5D,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAMiD,EAAE,GAAG0D,MAAM,CAAC3G,QAAQ;MAE1B,KAAM,IAAIlX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAKia,EAAE,CAAEja,CAAC,CAAE,KAAKma,EAAE,CAAEna,CAAC,CAAE,EAAG,OAAO,KAAK;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,KAAM,IAAI5Y,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACkX,QAAQ,CAAElX,CAAC,CAAE,GAAG6P,KAAK,CAAE7P,CAAC,GAAG4Y,MAAM,CAAE;MAEzC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqB,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExBrH,KAAK,CAAE+I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MACzBpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7B,OAAOpK,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAACsY,SAAS,CAAE,IAAI,CAACzB,QAAQ,CAAE;IAEzD;EAAC;EAAA,OAAAoC,OAAA;AAAA;AAAA7f,OAAA,CAAA6f,OAAA,GAAAA,OAAA;AAIF,SAASwE,gBAAgBA,CAAEjO,KAAK,EAAG;EAElC;;EAEA,KAAM,IAAI7P,CAAC,GAAG6P,KAAK,CAAC9P,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;IAE9C,IAAK6P,KAAK,CAAE7P,CAAC,CAAE,GAAG,KAAK,EAAG,OAAO,IAAI;EAEtC;EAEA,OAAO,KAAK;AAEb;AAEA,IAAM+d,YAAY,GAAG;EACpB7I,SAAS,EAAEA,SAAS;EACpBF,UAAU,EAAEA,UAAU;EACtBgJ,iBAAiB,EAAEA,iBAAiB;EACpC/I,UAAU,EAAEA,UAAU;EACtBF,WAAW,EAAEA,WAAW;EACxBkJ,UAAU,EAAEA,UAAU;EACtBC,WAAW,EAAEA,WAAW;EACxBpJ,YAAY,EAAEA,YAAY;EAC1BqJ,YAAY,EAAEA;AACf,CAAC;AAED,SAASC,aAAaA,CAAEpiB,IAAI,EAAEqiB,MAAM,EAAG;EAEtC,OAAO,IAAIN,YAAY,CAAE/hB,IAAI,CAAE,CAAEqiB,MAAM,CAAE;AAE1C;AAEA,SAASC,eAAeA,CAAEhe,IAAI,EAAG;EAEhC,OAAOie,QAAQ,CAACD,eAAe,CAAE,8BAA8B,EAAEhe,IAAI,CAAE;AAExE;AAEA,SAASke,YAAYA,CAAE1K,CAAC,EAAG;EAE1B,OAASA,CAAC,GAAG,OAAO,GAAKA,CAAC,GAAG,YAAY,GAAG5D,IAAI,CAACmD,GAAG,CAAES,CAAC,GAAG,YAAY,GAAG,YAAY,EAAE,GAAG,CAAE;AAE7F;AAEA,SAAS2K,YAAYA,CAAE3K,CAAC,EAAG;EAE1B,OAASA,CAAC,GAAG,SAAS,GAAKA,CAAC,GAAG,KAAK,GAAG,KAAK,GAAK5D,IAAI,CAACmD,GAAG,CAAES,CAAC,EAAE,OAAO,CAAI,GAAG,KAAK;AAElF;;AAEA;AACA;AACA,IAAM4K,EAAE,IAAAC,GAAA,OAAAC,eAAA,CAAAD,GAAA,EACLzR,cAAc,EAAA0R,eAAA,KAAQzR,oBAAoB,EAAIqR,YAAY,IAAAI,eAAA,CAAAD,GAAA,EAC1DxR,oBAAoB,EAAAyR,eAAA,KAAQ1R,cAAc,EAAIuR,YAAY,IAAAE,GAAA,CAC5D;AAED,IAAME,eAAe,GAAG;EAEvBC,UAAU,EAAE,IAAI;EAEhB,IAAIC,iBAAiBA,CAAA,EAAG;IAEvB,OAAO5R,oBAAoB;EAE5B,CAAC;EAED,IAAI4R,iBAAiBA,CAAEC,UAAU,EAAG;IAEnCrK,OAAO,CAACC,IAAI,CAAE,wDAAwD,CAAE;EAEzE,CAAC;EAEDqK,OAAO,EAAE,SAAAA,QAAWC,KAAK,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAG;IAE/D,IAAK,IAAI,CAACN,UAAU,IAAIK,gBAAgB,KAAKC,gBAAgB,IAAI,CAAED,gBAAgB,IAAI,CAAEC,gBAAgB,EAAG;MAE3G,OAAOF,KAAK;IAEb;IAEA,IAAKR,EAAE,CAAES,gBAAgB,CAAE,IAAIT,EAAE,CAAES,gBAAgB,CAAE,CAAEC,gBAAgB,CAAE,KAAK3gB,SAAS,EAAG;MAEzF,IAAM3C,EAAE,GAAG4iB,EAAE,CAAES,gBAAgB,CAAE,CAAEC,gBAAgB,CAAE;MAErDF,KAAK,CAAClC,CAAC,GAAGlhB,EAAE,CAAEojB,KAAK,CAAClC,CAAC,CAAE;MACvBkC,KAAK,CAAC/C,CAAC,GAAGrgB,EAAE,CAAEojB,KAAK,CAAC/C,CAAC,CAAE;MACvB+C,KAAK,CAACrL,CAAC,GAAG/X,EAAE,CAAEojB,KAAK,CAACrL,CAAC,CAAE;MAEvB,OAAOqL,KAAK;IAEb;IAEA,MAAM,IAAIphB,KAAK,CAAE,qCAAqC,CAAE;EAEzD,CAAC;EAEDuhB,qBAAqB,EAAE,SAAAA,sBAAWH,KAAK,EAAEE,gBAAgB,EAAG;IAE3D,OAAO,IAAI,CAACH,OAAO,CAAEC,KAAK,EAAE,IAAI,CAACH,iBAAiB,EAAEK,gBAAgB,CAAE;EAEvE,CAAC;EAEDE,mBAAmB,EAAE,SAAAA,oBAAWJ,KAAK,EAAEC,gBAAgB,EAAG;IAEzD,OAAO,IAAI,CAACF,OAAO,CAAEC,KAAK,EAAEC,gBAAgB,EAAE,IAAI,CAACJ,iBAAiB,CAAE;EAEvE;AAED,CAAC;AAACtlB,OAAA,CAAAolB,eAAA,GAAAA,eAAA;AAEF,IAAMU,cAAc,GAAG;EAAE,WAAW,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EACpI,OAAO,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAC9H,OAAO,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EACjI,gBAAgB,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EACnI,eAAe,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAC5I,gBAAgB,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EACjJ,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAClI,UAAU,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACtI,aAAa,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EACtI,WAAW,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAChJ,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACvJ,cAAc,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,sBAAsB,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACvJ,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAClJ,gBAAgB,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACpJ,OAAO,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,kBAAkB,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAC1I,cAAc,EAAE,QAAQ;EAAE,gBAAgB,EAAE,QAAQ;EAAE,iBAAiB,EAAE,QAAQ;EAAE,mBAAmB,EAAE,QAAQ;EAAE,iBAAiB,EAAE,QAAQ;EAC7I,iBAAiB,EAAE,QAAQ;EAAE,cAAc,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAClJ,MAAM,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAC9I,eAAe,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACrJ,MAAM,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,KAAK,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACnK,WAAW,EAAE,QAAQ;EAAE,aAAa,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EAAE,UAAU,EAAE,QAAQ;EACtI,QAAQ,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAClJ,aAAa,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,KAAK,EAAE,QAAQ;EAAE,MAAM,EAAE,QAAQ;EAAE,SAAS,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EACjJ,QAAQ,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,OAAO,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,QAAQ,EAAE,QAAQ;EAAE,aAAa,EAAE;AAAS,CAAC;AAEhI,IAAMC,IAAI,GAAG;EAAExC,CAAC,EAAE,CAAC;EAAEb,CAAC,EAAE,CAAC;EAAEtI,CAAC,EAAE;AAAE,CAAC;AACjC,IAAM4L,KAAK,GAAG;EAAErD,CAAC,EAAE,CAAC;EAAEvJ,CAAC,EAAE,CAAC;EAAE/C,CAAC,EAAE;AAAE,CAAC;AAClC,IAAM4P,KAAK,GAAG;EAAEtD,CAAC,EAAE,CAAC;EAAEvJ,CAAC,EAAE,CAAC;EAAE/C,CAAC,EAAE;AAAE,CAAC;AAElC,SAAS6P,OAAOA,CAAEC,CAAC,EAAEjM,CAAC,EAAE/B,CAAC,EAAG;EAE3B,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;EACnB,IAAKA,CAAC,GAAG,CAAC,EAAGA,CAAC,IAAI,CAAC;EACnB,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOgO,CAAC,GAAG,CAAEjM,CAAC,GAAGiM,CAAC,IAAK,CAAC,GAAGhO,CAAC;EAC7C,IAAKA,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAO+B,CAAC;EACzB,IAAK/B,CAAC,GAAG,CAAC,GAAG,CAAC,EAAG,OAAOgO,CAAC,GAAG,CAAEjM,CAAC,GAAGiM,CAAC,IAAK,CAAC,IAAK,CAAC,GAAG,CAAC,GAAGhO,CAAC,CAAE;EACzD,OAAOgO,CAAC;AAET;AAEA,SAASC,YAAYA,CAAEC,MAAM,EAAEnd,MAAM,EAAG;EAEvCA,MAAM,CAACqa,CAAC,GAAG8C,MAAM,CAAC9C,CAAC;EACnBra,MAAM,CAACwZ,CAAC,GAAG2D,MAAM,CAAC3D,CAAC;EACnBxZ,MAAM,CAACkR,CAAC,GAAGiM,MAAM,CAACjM,CAAC;EAEnB,OAAOlR,MAAM;AAEd;AAAC,IAEKod,KAAK,0BAAAC,iBAAA;EAEV,SAAAD,MAAa/C,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAG;IAAAtR,eAAA,OAAAwd,KAAA;IAEtB,IAAI,CAACE,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACjD,CAAC,GAAG,CAAC;IACV,IAAI,CAACb,CAAC,GAAG,CAAC;IACV,IAAI,CAACtI,CAAC,GAAG,CAAC;IAEV,IAAKsI,CAAC,KAAK1d,SAAS,IAAIoV,CAAC,KAAKpV,SAAS,EAAG;MAEzC;MACA,OAAO,IAAI,CAACiW,GAAG,CAAEsI,CAAC,CAAE;IAErB;IAEA,OAAO,IAAI,CAACkD,MAAM,CAAElD,CAAC,EAAEb,CAAC,EAAEtI,CAAC,CAAE;EAE9B;EAAC9Q,YAAA,CAAAgd,KAAA;IAAA9lB,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKva,KAAK,EAAG;MAEZ,IAAKA,KAAK,IAAIA,KAAK,CAAC8lB,OAAO,EAAG;QAE7B,IAAI,CAAC9J,IAAI,CAAEhc,KAAK,CAAE;MAEnB,CAAC,MAAM,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;QAEvC,IAAI,CAACgmB,MAAM,CAAEhmB,KAAK,CAAE;MAErB,CAAC,MAAM,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;QAEvC,IAAI,CAACimB,QAAQ,CAAEjmB,KAAK,CAAE;MAEvB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAyb,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACmH,CAAC,GAAGnH,MAAM;MACf,IAAI,CAACsG,CAAC,GAAGtG,MAAM;MACf,IAAI,CAAChC,CAAC,GAAGgC,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAAgmB,OAAQE,GAAG,EAAErB,UAAU,GAAG9R,cAAc,EAAG;MAE1CmT,GAAG,GAAGnQ,IAAI,CAACsC,KAAK,CAAE6N,GAAG,CAAE;MAEvB,IAAI,CAACrD,CAAC,GAAG,CAAEqD,GAAG,IAAI,EAAE,GAAG,GAAG,IAAK,GAAG;MAClC,IAAI,CAAClE,CAAC,GAAG,CAAEkE,GAAG,IAAI,CAAC,GAAG,GAAG,IAAK,GAAG;MACjC,IAAI,CAACxM,CAAC,GAAG,CAAEwM,GAAG,GAAG,GAAG,IAAK,GAAG;MAE5BxB,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAA/kB,GAAA;IAAAE,KAAA,EAED,SAAA+lB,OAAQlD,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAEmL,UAAU,GAAG7R,oBAAoB,EAAG;MAEpD,IAAI,CAAC6P,CAAC,GAAGA,CAAC;MACV,IAAI,CAACb,CAAC,GAAGA,CAAC;MACV,IAAI,CAACtI,CAAC,GAAGA,CAAC;MAEVgL,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAA/kB,GAAA;IAAAE,KAAA,EAED,SAAAmmB,OAAQlE,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,EAAEkP,UAAU,GAAG7R,oBAAoB,EAAG;MAEpD;MACAiP,CAAC,GAAGpL,eAAe,CAAEoL,CAAC,EAAE,CAAC,CAAE;MAC3BvJ,CAAC,GAAGhC,KAAK,CAAEgC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpB/C,CAAC,GAAGe,KAAK,CAAEf,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEpB,IAAK+C,CAAC,KAAK,CAAC,EAAG;QAEd,IAAI,CAACmK,CAAC,GAAG,IAAI,CAACb,CAAC,GAAG,IAAI,CAACtI,CAAC,GAAG/D,CAAC;MAE7B,CAAC,MAAM;QAEN,IAAM8P,CAAC,GAAG9P,CAAC,IAAI,GAAG,GAAGA,CAAC,IAAK,CAAC,GAAG+C,CAAC,CAAE,GAAG/C,CAAC,GAAG+C,CAAC,GAAK/C,CAAC,GAAG+C,CAAG;QACtD,IAAMc,CAAC,GAAK,CAAC,GAAG7D,CAAC,GAAK8P,CAAC;QAEvB,IAAI,CAAC5C,CAAC,GAAG2C,OAAO,CAAEhM,CAAC,EAAEiM,CAAC,EAAExD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;QACnC,IAAI,CAACD,CAAC,GAAGwD,OAAO,CAAEhM,CAAC,EAAEiM,CAAC,EAAExD,CAAC,CAAE;QAC3B,IAAI,CAACvI,CAAC,GAAG8L,OAAO,CAAEhM,CAAC,EAAEiM,CAAC,EAAExD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;MAEpC;MAEAyC,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAA/kB,GAAA;IAAAE,KAAA,EAED,SAAAimB,SAAUG,KAAK,EAAEvB,UAAU,GAAG9R,cAAc,EAAG;MAE9C,SAASsT,WAAWA,CAAEC,MAAM,EAAG;QAE9B,IAAKA,MAAM,KAAKhiB,SAAS,EAAG;QAE5B,IAAKiiB,UAAU,CAAED,MAAM,CAAE,GAAG,CAAC,EAAG;UAE/B9L,OAAO,CAACC,IAAI,CAAE,kCAAkC,GAAG2L,KAAK,GAAG,mBAAmB,CAAE;QAEjF;MAED;MAGA,IAAIrP,CAAC;MAEL,IAAKA,CAAC,GAAG,8BAA8B,CAACyP,IAAI,CAAEJ,KAAK,CAAE,EAAG;QAEvD;;QAEA,IAAIrB,KAAK;QACT,IAAM5e,IAAI,GAAG4Q,CAAC,CAAE,CAAC,CAAE;QACnB,IAAM0P,UAAU,GAAG1P,CAAC,CAAE,CAAC,CAAE;QAEzB,QAAS5Q,IAAI;UAEZ,KAAK,KAAK;UACV,KAAK,MAAM;YAEV,IAAK4e,KAAK,GAAG,8DAA8D,CAACyB,IAAI,CAAEC,UAAU,CAAE,EAAG;cAEhG;cACA,IAAI,CAAC5D,CAAC,GAAG9M,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE+P,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;cAC1D,IAAI,CAAC/C,CAAC,GAAGjM,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE+P,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;cAC1D,IAAI,CAACrL,CAAC,GAAG3D,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE+P,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;cAE1DL,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;cAEvDwB,WAAW,CAAEtB,KAAK,CAAE,CAAC,CAAE,CAAE;cAEzB,OAAO,IAAI;YAEZ;YAEA,IAAKA,KAAK,GAAG,oEAAoE,CAACyB,IAAI,CAAEC,UAAU,CAAE,EAAG;cAEtG;cACA,IAAI,CAAC5D,CAAC,GAAG9M,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE+P,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;cAC1D,IAAI,CAAC/C,CAAC,GAAGjM,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE+P,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;cAC1D,IAAI,CAACrL,CAAC,GAAG3D,IAAI,CAACY,GAAG,CAAE,GAAG,EAAE+P,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,CAAE,GAAG,GAAG;cAE1DL,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;cAEvDwB,WAAW,CAAEtB,KAAK,CAAE,CAAC,CAAE,CAAE;cAEzB,OAAO,IAAI;YAEZ;YAEA;UAED,KAAK,KAAK;UACV,KAAK,MAAM;YAEV,IAAKA,KAAK,GAAG,wEAAwE,CAACyB,IAAI,CAAEC,UAAU,CAAE,EAAG;cAE1G;cACA,IAAMxE,CAAC,GAAGsE,UAAU,CAAExB,KAAK,CAAE,CAAC,CAAE,CAAE,GAAG,GAAG;cACxC,IAAMrM,CAAC,GAAGgO,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;cAC1C,IAAMpP,CAAC,GAAG+Q,QAAQ,CAAE3B,KAAK,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;cAE1CsB,WAAW,CAAEtB,KAAK,CAAE,CAAC,CAAE,CAAE;cAEzB,OAAO,IAAI,CAACoB,MAAM,CAAElE,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,EAAEkP,UAAU,CAAE;YAE1C;YAEA;QAAM;MAIT,CAAC,MAAM,IAAK9N,CAAC,GAAG,mBAAmB,CAACyP,IAAI,CAAEJ,KAAK,CAAE,EAAG;QAEnD;;QAEA,IAAMF,GAAG,GAAGnP,CAAC,CAAE,CAAC,CAAE;QAClB,IAAM4P,IAAI,GAAGT,GAAG,CAACtgB,MAAM;QAEvB,IAAK+gB,IAAI,KAAK,CAAC,EAAG;UAEjB;UACA,IAAI,CAAC9D,CAAC,GAAG6D,QAAQ,CAAER,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,GAAGgf,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;UAChE,IAAI,CAAC8a,CAAC,GAAG0E,QAAQ,CAAER,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,GAAGgf,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;UAChE,IAAI,CAACwS,CAAC,GAAGgN,QAAQ,CAAER,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,GAAGgf,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;UAEhEwd,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;UAEvD,OAAO,IAAI;QAEZ,CAAC,MAAM,IAAK8B,IAAI,KAAK,CAAC,EAAG;UAExB;UACA,IAAI,CAAC9D,CAAC,GAAG6D,QAAQ,CAAER,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,GAAGgf,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;UAChE,IAAI,CAAC8a,CAAC,GAAG0E,QAAQ,CAAER,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,GAAGgf,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;UAChE,IAAI,CAACwS,CAAC,GAAGgN,QAAQ,CAAER,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,GAAGgf,GAAG,CAAChf,MAAM,CAAE,CAAC,CAAE,EAAE,EAAE,CAAE,GAAG,GAAG;UAEhEwd,eAAe,CAACS,mBAAmB,CAAE,IAAI,EAAEN,UAAU,CAAE;UAEvD,OAAO,IAAI;QAEZ;MAED;MAEA,IAAKuB,KAAK,IAAIA,KAAK,CAACxgB,MAAM,GAAG,CAAC,EAAG;QAEhC,OAAO,IAAI,CAACghB,YAAY,CAAER,KAAK,EAAEvB,UAAU,CAAE;MAE9C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/kB,GAAA;IAAAE,KAAA,EAED,SAAA4mB,aAAcR,KAAK,EAAEvB,UAAU,GAAG9R,cAAc,EAAG;MAElD;MACA,IAAMmT,GAAG,GAAGd,cAAc,CAAEgB,KAAK,CAAC3P,WAAW,EAAE,CAAE;MAEjD,IAAKyP,GAAG,KAAK5hB,SAAS,EAAG;QAExB;QACA,IAAI,CAAC0hB,MAAM,CAAEE,GAAG,EAAErB,UAAU,CAAE;MAE/B,CAAC,MAAM;QAEN;QACArK,OAAO,CAACC,IAAI,CAAE,6BAA6B,GAAG2L,KAAK,CAAE;MAEtD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtmB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC2c,CAAC,EAAE,IAAI,CAACb,CAAC,EAAE,IAAI,CAACtI,CAAC,CAAE;IAEtD;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM+I,KAAK,EAAG;MAEb,IAAI,CAAClC,CAAC,GAAGkC,KAAK,CAAClC,CAAC;MAChB,IAAI,CAACb,CAAC,GAAG+C,KAAK,CAAC/C,CAAC;MAChB,IAAI,CAACtI,CAAC,GAAGqL,KAAK,CAACrL,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAA6mB,iBAAkB9B,KAAK,EAAG;MAEzB,IAAI,CAAClC,CAAC,GAAGwB,YAAY,CAAEU,KAAK,CAAClC,CAAC,CAAE;MAChC,IAAI,CAACb,CAAC,GAAGqC,YAAY,CAAEU,KAAK,CAAC/C,CAAC,CAAE;MAChC,IAAI,CAACtI,CAAC,GAAG2K,YAAY,CAAEU,KAAK,CAACrL,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAA8mB,iBAAkB/B,KAAK,EAAG;MAEzB,IAAI,CAAClC,CAAC,GAAGyB,YAAY,CAAES,KAAK,CAAClC,CAAC,CAAE;MAChC,IAAI,CAACb,CAAC,GAAGsC,YAAY,CAAES,KAAK,CAAC/C,CAAC,CAAE;MAChC,IAAI,CAACtI,CAAC,GAAG4K,YAAY,CAAES,KAAK,CAACrL,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAA+mB,oBAAA,EAAsB;MAErB,IAAI,CAACF,gBAAgB,CAAE,IAAI,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA/mB,GAAA;IAAAE,KAAA,EAED,SAAAgnB,oBAAA,EAAsB;MAErB,IAAI,CAACF,gBAAgB,CAAE,IAAI,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAhnB,GAAA;IAAAE,KAAA,EAED,SAAAinB,OAAQpC,UAAU,GAAG9R,cAAc,EAAG;MAErC2R,eAAe,CAACQ,qBAAqB,CAAEQ,YAAY,CAAE,IAAI,EAAEL,IAAI,CAAE,EAAER,UAAU,CAAE;MAE/E,OAAOnO,KAAK,CAAE2O,IAAI,CAACxC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,IAAI,EAAE,GAAGnM,KAAK,CAAE2O,IAAI,CAACrD,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,IAAI,CAAC,GAAGtL,KAAK,CAAE2O,IAAI,CAAC3L,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE,IAAI,CAAC;IAErH;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAknB,aAAcrC,UAAU,GAAG9R,cAAc,EAAG;MAE3C,OAAO,CAAE,QAAQ,GAAG,IAAI,CAACkU,MAAM,CAAEpC,UAAU,CAAE,CAACsC,QAAQ,CAAE,EAAE,CAAE,EAAGhgB,KAAK,CAAE,CAAE,CAAC,CAAE;IAE5E;EAAC;IAAArH,GAAA;IAAAE,KAAA,EAED,SAAAonB,OAAQ5e,MAAM,EAAEqc,UAAU,GAAG7R,oBAAoB,EAAG;MAEnD;;MAEA0R,eAAe,CAACQ,qBAAqB,CAAEQ,YAAY,CAAE,IAAI,EAAEL,IAAI,CAAE,EAAER,UAAU,CAAE;MAE/E,IAAMhC,CAAC,GAAGwC,IAAI,CAACxC,CAAC;QAAEb,CAAC,GAAGqD,IAAI,CAACrD,CAAC;QAAEtI,CAAC,GAAG2L,IAAI,CAAC3L,CAAC;MAExC,IAAM9C,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAEiM,CAAC,EAAEb,CAAC,EAAEtI,CAAC,CAAE;MAC/B,IAAM/C,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAEkM,CAAC,EAAEb,CAAC,EAAEtI,CAAC,CAAE;MAE/B,IAAI2N,GAAG,EAAEC,UAAU;MACnB,IAAMC,SAAS,GAAG,CAAE5Q,GAAG,GAAGC,GAAG,IAAK,GAAG;MAErC,IAAKD,GAAG,KAAKC,GAAG,EAAG;QAElByQ,GAAG,GAAG,CAAC;QACPC,UAAU,GAAG,CAAC;MAEf,CAAC,MAAM;QAEN,IAAME,KAAK,GAAG5Q,GAAG,GAAGD,GAAG;QAEvB2Q,UAAU,GAAGC,SAAS,IAAI,GAAG,GAAGC,KAAK,IAAK5Q,GAAG,GAAGD,GAAG,CAAE,GAAG6Q,KAAK,IAAK,CAAC,GAAG5Q,GAAG,GAAGD,GAAG,CAAE;QAEjF,QAASC,GAAG;UAEX,KAAKiM,CAAC;YAAEwE,GAAG,GAAG,CAAErF,CAAC,GAAGtI,CAAC,IAAK8N,KAAK,IAAKxF,CAAC,GAAGtI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE;YAAE;UACrD,KAAKsI,CAAC;YAAEqF,GAAG,GAAG,CAAE3N,CAAC,GAAGmJ,CAAC,IAAK2E,KAAK,GAAG,CAAC;YAAE;UACrC,KAAK9N,CAAC;YAAE2N,GAAG,GAAG,CAAExE,CAAC,GAAGb,CAAC,IAAKwF,KAAK,GAAG,CAAC;YAAE;QAAM;QAI5CH,GAAG,IAAI,CAAC;MAET;MAEA7e,MAAM,CAACyZ,CAAC,GAAGoF,GAAG;MACd7e,MAAM,CAACkQ,CAAC,GAAG4O,UAAU;MACrB9e,MAAM,CAACmN,CAAC,GAAG4R,SAAS;MAEpB,OAAO/e,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAynB,OAAQjf,MAAM,EAAEqc,UAAU,GAAG7R,oBAAoB,EAAG;MAEnD0R,eAAe,CAACQ,qBAAqB,CAAEQ,YAAY,CAAE,IAAI,EAAEL,IAAI,CAAE,EAAER,UAAU,CAAE;MAE/Erc,MAAM,CAACqa,CAAC,GAAGwC,IAAI,CAACxC,CAAC;MACjBra,MAAM,CAACwZ,CAAC,GAAGqD,IAAI,CAACrD,CAAC;MACjBxZ,MAAM,CAACkR,CAAC,GAAG2L,IAAI,CAAC3L,CAAC;MAEjB,OAAOlR,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAA0nB,SAAU7C,UAAU,GAAG9R,cAAc,EAAG;MAEvC2R,eAAe,CAACQ,qBAAqB,CAAEQ,YAAY,CAAE,IAAI,EAAEL,IAAI,CAAE,EAAER,UAAU,CAAE;MAE/E,IAAKA,UAAU,KAAK9R,cAAc,EAAG;QAEpC;QACA,gBAAA4U,MAAA,CAAiB9C,UAAU,OAAA8C,MAAA,CAAMtC,IAAI,CAACxC,CAAC,OAAA8E,MAAA,CAAMtC,IAAI,CAACrD,CAAC,OAAA2F,MAAA,CAAMtC,IAAI,CAAC3L,CAAC;MAEhE;MAEA,cAAAiO,MAAA,CAAgBtC,IAAI,CAACxC,CAAC,GAAG,GAAG,GAAK,CAAC,OAAA8E,MAAA,CAAMtC,IAAI,CAACrD,CAAC,GAAG,GAAG,GAAK,CAAC,OAAA2F,MAAA,CAAMtC,IAAI,CAAC3L,CAAC,GAAG,GAAG,GAAK,CAAC;IAEnF;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAA4nB,UAAW3F,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,EAAG;MAEpB,IAAI,CAACyR,MAAM,CAAE9B,KAAK,CAAE;MAEpBA,KAAK,CAACrD,CAAC,IAAIA,CAAC;MAAEqD,KAAK,CAAC5M,CAAC,IAAIA,CAAC;MAAE4M,KAAK,CAAC3P,CAAC,IAAIA,CAAC;MAExC,IAAI,CAACwQ,MAAM,CAAEb,KAAK,CAACrD,CAAC,EAAEqD,KAAK,CAAC5M,CAAC,EAAE4M,KAAK,CAAC3P,CAAC,CAAE;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA7V,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAK6I,KAAK,EAAG;MAEZ,IAAI,CAAClC,CAAC,IAAIkC,KAAK,CAAClC,CAAC;MACjB,IAAI,CAACb,CAAC,IAAI+C,KAAK,CAAC/C,CAAC;MACjB,IAAI,CAACtI,CAAC,IAAIqL,KAAK,CAACrL,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAA6nB,UAAWC,MAAM,EAAEC,MAAM,EAAG;MAE3B,IAAI,CAAClF,CAAC,GAAGiF,MAAM,CAACjF,CAAC,GAAGkF,MAAM,CAAClF,CAAC;MAC5B,IAAI,CAACb,CAAC,GAAG8F,MAAM,CAAC9F,CAAC,GAAG+F,MAAM,CAAC/F,CAAC;MAC5B,IAAI,CAACtI,CAAC,GAAGoO,MAAM,CAACpO,CAAC,GAAGqO,MAAM,CAACrO,CAAC;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAmc,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACmK,CAAC,IAAInK,CAAC;MACX,IAAI,CAACsJ,CAAC,IAAItJ,CAAC;MACX,IAAI,CAACgB,CAAC,IAAIhB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAsc,IAAKyI,KAAK,EAAG;MAEZ,IAAI,CAAClC,CAAC,GAAG9M,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACiM,CAAC,GAAGkC,KAAK,CAAClC,CAAC,CAAE;MACxC,IAAI,CAACb,CAAC,GAAGjM,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAACoL,CAAC,GAAG+C,KAAK,CAAC/C,CAAC,CAAE;MACxC,IAAI,CAACtI,CAAC,GAAG3D,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC8C,CAAC,GAAGqL,KAAK,CAACrL,CAAC,CAAE;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAUsI,KAAK,EAAG;MAEjB,IAAI,CAAClC,CAAC,IAAIkC,KAAK,CAAClC,CAAC;MACjB,IAAI,CAACb,CAAC,IAAI+C,KAAK,CAAC/C,CAAC;MACjB,IAAI,CAACtI,CAAC,IAAIqL,KAAK,CAACrL,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAA0c,eAAgBhE,CAAC,EAAG;MAEnB,IAAI,CAACmK,CAAC,IAAInK,CAAC;MACX,IAAI,CAACsJ,CAAC,IAAItJ,CAAC;MACX,IAAI,CAACgB,CAAC,IAAIhB,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAwX,KAAMuN,KAAK,EAAE5G,KAAK,EAAG;MAEpB,IAAI,CAAC0E,CAAC,IAAI,CAAEkC,KAAK,CAAClC,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK1E,KAAK;MACtC,IAAI,CAAC6D,CAAC,IAAI,CAAE+C,KAAK,CAAC/C,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK7D,KAAK;MACtC,IAAI,CAACzE,CAAC,IAAI,CAAEqL,KAAK,CAACrL,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKyE,KAAK;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAgoB,WAAYF,MAAM,EAAEC,MAAM,EAAE5J,KAAK,EAAG;MAEnC,IAAI,CAAC0E,CAAC,GAAGiF,MAAM,CAACjF,CAAC,GAAG,CAAEkF,MAAM,CAAClF,CAAC,GAAGiF,MAAM,CAACjF,CAAC,IAAK1E,KAAK;MACnD,IAAI,CAAC6D,CAAC,GAAG8F,MAAM,CAAC9F,CAAC,GAAG,CAAE+F,MAAM,CAAC/F,CAAC,GAAG8F,MAAM,CAAC9F,CAAC,IAAK7D,KAAK;MACnD,IAAI,CAACzE,CAAC,GAAGoO,MAAM,CAACpO,CAAC,GAAG,CAAEqO,MAAM,CAACrO,CAAC,GAAGoO,MAAM,CAACpO,CAAC,IAAKyE,KAAK;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAioB,QAASlD,KAAK,EAAE5G,KAAK,EAAG;MAEvB,IAAI,CAACiJ,MAAM,CAAE9B,KAAK,CAAE;MACpBP,KAAK,CAACqC,MAAM,CAAE7B,KAAK,CAAE;MAErB,IAAMtD,CAAC,GAAGzK,IAAI,CAAE8N,KAAK,CAACrD,CAAC,EAAEsD,KAAK,CAACtD,CAAC,EAAE9D,KAAK,CAAE;MACzC,IAAMzF,CAAC,GAAGlB,IAAI,CAAE8N,KAAK,CAAC5M,CAAC,EAAE6M,KAAK,CAAC7M,CAAC,EAAEyF,KAAK,CAAE;MACzC,IAAMxI,CAAC,GAAG6B,IAAI,CAAE8N,KAAK,CAAC3P,CAAC,EAAE4P,KAAK,CAAC5P,CAAC,EAAEwI,KAAK,CAAE;MAEzC,IAAI,CAACgI,MAAM,CAAElE,CAAC,EAAEvJ,CAAC,EAAE/C,CAAC,CAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA7V,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQ5E,CAAC,EAAG;MAEX,OAASA,CAAC,CAACkJ,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQlJ,CAAC,CAACqI,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMrI,CAAC,CAACD,CAAC,KAAK,IAAI,CAACA,CAAG;IAEtE;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACoE,CAAC,GAAGnN,KAAK,CAAE+I,MAAM,CAAE;MACxB,IAAI,CAACuD,CAAC,GAAGtM,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAAC/E,CAAC,GAAGhE,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACoE,CAAC;MACxBnN,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACuD,CAAC;MAC5BtM,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC/E,CAAC;MAE5B,OAAOhE,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA2e,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;MAEvC,IAAI,CAACuN,CAAC,GAAGjE,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;MAChC,IAAI,CAAC0M,CAAC,GAAGpD,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;MAChC,IAAI,CAACoE,CAAC,GAAGkF,SAAS,CAACsJ,IAAI,CAAE5S,KAAK,CAAE;MAEhC,IAAKsJ,SAAS,CAACuJ,UAAU,KAAK,IAAI,EAAG;QAEpC;;QAEA,IAAI,CAACtF,CAAC,IAAI,GAAG;QACb,IAAI,CAACb,CAAC,IAAI,GAAG;QACb,IAAI,CAACtI,CAAC,IAAI,GAAG;MAEd;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,OAAO,IAAI,CAACnB,MAAM,EAAE;IAErB;EAAC;IAAAnnB,GAAA,EAAA+lB,iBAAA;IAAA7lB,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAme,OAAAoJ,SAAA;QAAA,kBAAAA,SAAA,CAAAphB,IAAA,GAAAohB,SAAA,CAAA1jB,IAAA;UAAA;YAAA0jB,SAAA,CAAA1jB,IAAA;YAEC,OAAM,IAAI,CAACke,CAAC;UAAA;YAAAwF,SAAA,CAAA1jB,IAAA;YACZ,OAAM,IAAI,CAACqd,CAAC;UAAA;YAAAqG,SAAA,CAAA1jB,IAAA;YACZ,OAAM,IAAI,CAAC+U,CAAC;UAAA;UAAA;YAAA,OAAA2O,SAAA,CAAAjhB,IAAA;QAAA;MAAA,GAAApH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAA4lB,KAAA;AAAA,EANE1lB,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAAsmB,KAAA,GAAAA,KAAA;AAUnBA,KAAK,CAAC0C,KAAK,GAAGlD,cAAc;AAE5B,IAAImD,OAAO;AAAC,IAENC,UAAU;EAAA,SAAAA,WAAA;IAAApgB,eAAA,OAAAogB,UAAA;EAAA;EAAA5f,YAAA,CAAA4f,UAAA;IAAA1oB,GAAA;IAAAE,KAAA,EAEf,SAAAyoB,WAAmBC,KAAK,EAAG;MAE1B,IAAK,SAAS,CAACC,IAAI,CAAED,KAAK,CAACE,GAAG,CAAE,EAAG;QAElC,OAAOF,KAAK,CAACE,GAAG;MAEjB;MAEA,IAAK,OAAOC,iBAAiB,IAAI,WAAW,EAAG;QAE9C,OAAOH,KAAK,CAACE,GAAG;MAEjB;MAEA,IAAIE,MAAM;MAEV,IAAKJ,KAAK,YAAYG,iBAAiB,EAAG;QAEzCC,MAAM,GAAGJ,KAAK;MAEf,CAAC,MAAM;QAEN,IAAKH,OAAO,KAAKjkB,SAAS,EAAGikB,OAAO,GAAGpE,eAAe,CAAE,QAAQ,CAAE;QAElEoE,OAAO,CAACQ,KAAK,GAAGL,KAAK,CAACK,KAAK;QAC3BR,OAAO,CAACS,MAAM,GAAGN,KAAK,CAACM,MAAM;QAE7B,IAAMznB,OAAO,GAAGgnB,OAAO,CAACU,UAAU,CAAE,IAAI,CAAE;QAE1C,IAAKP,KAAK,YAAYQ,SAAS,EAAG;UAEjC3nB,OAAO,CAAC4nB,YAAY,CAAET,KAAK,EAAE,CAAC,EAAE,CAAC,CAAE;QAEpC,CAAC,MAAM;UAENnnB,OAAO,CAAC6nB,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;QAE5D;QAEAF,MAAM,GAAGP,OAAO;MAEjB;MAEA,IAAKO,MAAM,CAACC,KAAK,GAAG,IAAI,IAAID,MAAM,CAACE,MAAM,GAAG,IAAI,EAAG;QAElDxO,OAAO,CAACC,IAAI,CAAE,6EAA6E,EAAEiO,KAAK,CAAE;QAEpG,OAAOI,MAAM,CAACO,SAAS,CAAE,YAAY,EAAE,GAAG,CAAE;MAE7C,CAAC,MAAM;QAEN,OAAOP,MAAM,CAACO,SAAS,CAAE,WAAW,CAAE;MAEvC;IAED;EAAC;IAAAvpB,GAAA;IAAAE,KAAA,EAED,SAAAspB,aAAqBZ,KAAK,EAAG;MAE5B,IAAO,OAAOa,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;QAEzE,IAAMV,MAAM,GAAG3E,eAAe,CAAE,QAAQ,CAAE;QAE1C2E,MAAM,CAACC,KAAK,GAAGL,KAAK,CAACK,KAAK;QAC1BD,MAAM,CAACE,MAAM,GAAGN,KAAK,CAACM,MAAM;QAE5B,IAAMznB,OAAO,GAAGunB,MAAM,CAACG,UAAU,CAAE,IAAI,CAAE;QACzC1nB,OAAO,CAAC6nB,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEA,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;QAE3D,IAAMS,SAAS,GAAGloB,OAAO,CAACmoB,YAAY,CAAE,CAAC,EAAE,CAAC,EAAEhB,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;QACzE,IAAMW,IAAI,GAAGF,SAAS,CAACE,IAAI;QAE3B,KAAM,IAAI9jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jB,IAAI,CAAC/jB,MAAM,EAAEC,CAAC,EAAG,EAAG;UAExC8jB,IAAI,CAAE9jB,CAAC,CAAE,GAAGwe,YAAY,CAAEsF,IAAI,CAAE9jB,CAAC,CAAE,GAAG,GAAG,CAAE,GAAG,GAAG;QAElD;QAEAtE,OAAO,CAAC4nB,YAAY,CAAEM,SAAS,EAAE,CAAC,EAAE,CAAC,CAAE;QAEvC,OAAOX,MAAM;MAEd,CAAC,MAAM,IAAKJ,KAAK,CAACiB,IAAI,EAAG;QAExB,IAAMA,KAAI,GAAGjB,KAAK,CAACiB,IAAI,CAACxiB,KAAK,CAAE,CAAC,CAAE;QAElC,KAAM,IAAItB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG8jB,KAAI,CAAC/jB,MAAM,EAAEC,EAAC,EAAG,EAAG;UAExC,IAAK8jB,KAAI,YAAY9O,UAAU,IAAI8O,KAAI,YAAY9F,iBAAiB,EAAG;YAEtE8F,KAAI,CAAE9jB,EAAC,CAAE,GAAGkQ,IAAI,CAACsC,KAAK,CAAEgM,YAAY,CAAEsF,KAAI,CAAE9jB,EAAC,CAAE,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE;UAEhE,CAAC,MAAM;YAEN;;YAEA8jB,KAAI,CAAE9jB,EAAC,CAAE,GAAGwe,YAAY,CAAEsF,KAAI,CAAE9jB,EAAC,CAAE,CAAE;UAEtC;QAED;QAEA,OAAO;UACN8jB,IAAI,EAAEA,KAAI;UACVZ,KAAK,EAAEL,KAAK,CAACK,KAAK;UAClBC,MAAM,EAAEN,KAAK,CAACM;QACf,CAAC;MAEF,CAAC,MAAM;QAENxO,OAAO,CAACC,IAAI,CAAE,6FAA6F,CAAE;QAC7G,OAAOiO,KAAK;MAEb;IAED;EAAC;EAAA,OAAAF,UAAA;AAAA;AAAAlpB,OAAA,CAAAkpB,UAAA,GAAAA,UAAA;AAAA,IAIIoB,MAAM;EAEX,SAAAA,OAAaD,IAAI,GAAG,IAAI,EAAG;IAAAvhB,eAAA,OAAAwhB,MAAA;IAE1B,IAAI,CAACC,QAAQ,GAAG,IAAI;IAEpB,IAAI,CAACrT,IAAI,GAAGN,YAAY,EAAE;IAE1B,IAAI,CAACyT,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAACG,OAAO,GAAG,CAAC;EAEjB;EAAClhB,YAAA,CAAAghB,MAAA;IAAA9pB,GAAA;IAAAya,GAAA,EAED,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC8pB,OAAO,EAAG;IAEtC;EAAC;IAAAhqB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKzlB,SAAS,IAAI,OAAOylB,IAAI,KAAK,QAAU;MAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAACE,MAAM,CAAE,IAAI,CAACzT,IAAI,CAAE,KAAKlS,SAAS,EAAG;QAE/D,OAAOylB,IAAI,CAACE,MAAM,CAAE,IAAI,CAACzT,IAAI,CAAE;MAEhC;MAEA,IAAM0T,MAAM,GAAG;QACd1T,IAAI,EAAE,IAAI,CAACA,IAAI;QACf2T,GAAG,EAAE;MACN,CAAC;MAED,IAAMR,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAKA,IAAI,KAAK,IAAI,EAAG;QAEpB,IAAIQ,GAAG;QAEP,IAAKC,KAAK,CAACC,OAAO,CAAEV,IAAI,CAAE,EAAG;UAE5B;;UAEAQ,GAAG,GAAG,EAAE;UAER,KAAM,IAAItkB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGgU,IAAI,CAAC/jB,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;YAE/C,IAAK8jB,IAAI,CAAE9jB,CAAC,CAAE,CAACykB,aAAa,EAAG;cAE9BH,GAAG,CAAC9kB,IAAI,CAAEklB,cAAc,CAAEZ,IAAI,CAAE9jB,CAAC,CAAE,CAAC6iB,KAAK,CAAE,CAAE;YAE9C,CAAC,MAAM;cAENyB,GAAG,CAAC9kB,IAAI,CAAEklB,cAAc,CAAEZ,IAAI,CAAE9jB,CAAC,CAAE,CAAE,CAAE;YAExC;UAED;QAED,CAAC,MAAM;UAEN;;UAEAskB,GAAG,GAAGI,cAAc,CAAEZ,IAAI,CAAE;QAE7B;QAEAO,MAAM,CAACC,GAAG,GAAGA,GAAG;MAEjB;MAEA,IAAK,CAAEH,YAAY,EAAG;QAErBD,IAAI,CAACE,MAAM,CAAE,IAAI,CAACzT,IAAI,CAAE,GAAG0T,MAAM;MAElC;MAEA,OAAOA,MAAM;IAEd;EAAC;EAAA,OAAAN,MAAA;AAAA;AAAAtqB,OAAA,CAAAsqB,MAAA,GAAAA,MAAA;AAIF,SAASW,cAAcA,CAAE7B,KAAK,EAAG;EAEhC,IAAO,OAAOa,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;IAEzE;;IAEA,OAAOhB,UAAU,CAACC,UAAU,CAAEC,KAAK,CAAE;EAEtC,CAAC,MAAM;IAEN,IAAKA,KAAK,CAACiB,IAAI,EAAG;MAEjB;;MAEA,OAAO;QACNA,IAAI,EAAES,KAAK,CAACI,IAAI,CAAE9B,KAAK,CAACiB,IAAI,CAAE;QAC9BZ,KAAK,EAAEL,KAAK,CAACK,KAAK;QAClBC,MAAM,EAAEN,KAAK,CAACM,MAAM;QACpBnnB,IAAI,EAAE6mB,KAAK,CAACiB,IAAI,CAACzjB,WAAW,CAACC;MAC9B,CAAC;IAEF,CAAC,MAAM;MAENqU,OAAO,CAACC,IAAI,CAAE,6CAA6C,CAAE;MAC7D,OAAO,CAAC,CAAC;IAEV;EAED;AAED;AAEA,IAAIgQ,SAAS,GAAG,CAAC;AAAC,IAEZC,OAAO,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,OAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,OAAA;EAEZ,SAAAA,QAAahC,KAAK,GAAGgC,OAAO,CAACK,aAAa,EAAEC,OAAO,GAAGN,OAAO,CAACO,eAAe,EAAEC,KAAK,GAAGrd,mBAAmB,EAAEsd,KAAK,GAAGtd,mBAAmB,EAAEud,SAAS,GAAGhd,YAAY,EAAEid,SAAS,GAAG9c,wBAAwB,EAAE+c,MAAM,GAAGhc,UAAU,EAAEzN,IAAI,GAAG4M,gBAAgB,EAAE8c,UAAU,GAAG,CAAC,EAAEC,QAAQ,GAAGhZ,cAAc,EAAG;IAAA,IAAAiZ,MAAA;IAAArjB,eAAA,OAAAsiB,OAAA;IAElSe,MAAA,GAAAZ,MAAA,CAAA/oB,IAAA;IAEA2pB,MAAA,CAAKC,SAAS,GAAG,IAAI;IAErBlsB,MAAM,CAACI,cAAc,CAAA+rB,sBAAA,CAAAF,MAAA,GAAQ,IAAI,EAAE;MAAEzrB,KAAK,EAAEyqB,SAAS;IAAI,CAAC,CAAE;IAE5DgB,MAAA,CAAKjV,IAAI,GAAGN,YAAY,EAAE;IAE1BuV,MAAA,CAAKtlB,IAAI,GAAG,EAAE;IAEdslB,MAAA,CAAK9F,MAAM,GAAG,IAAIiE,MAAM,CAAElB,KAAK,CAAE;IACjC+C,MAAA,CAAKG,OAAO,GAAG,EAAE;IAEjBH,MAAA,CAAKT,OAAO,GAAGA,OAAO;IAEtBS,MAAA,CAAKP,KAAK,GAAGA,KAAK;IAClBO,MAAA,CAAKN,KAAK,GAAGA,KAAK;IAElBM,MAAA,CAAKL,SAAS,GAAGA,SAAS;IAC1BK,MAAA,CAAKJ,SAAS,GAAGA,SAAS;IAE1BI,MAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,MAAA,CAAKH,MAAM,GAAGA,MAAM;IACpBG,MAAA,CAAKI,cAAc,GAAG,IAAI;IAC1BJ,MAAA,CAAK5pB,IAAI,GAAGA,IAAI;IAEhB4pB,MAAA,CAAKhN,MAAM,GAAG,IAAIpD,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IACjCoQ,MAAA,CAAKK,MAAM,GAAG,IAAIzQ,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IACjCoQ,MAAA,CAAKzM,MAAM,GAAG,IAAI3D,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IACjCoQ,MAAA,CAAKtI,QAAQ,GAAG,CAAC;IAEjBsI,MAAA,CAAKM,gBAAgB,GAAG,IAAI;IAC5BN,MAAA,CAAK/H,MAAM,GAAG,IAAIvE,OAAO,EAAE;IAE3BsM,MAAA,CAAKO,eAAe,GAAG,IAAI;IAC3BP,MAAA,CAAKQ,gBAAgB,GAAG,KAAK;IAC7BR,MAAA,CAAKS,KAAK,GAAG,IAAI;IACjBT,MAAA,CAAKU,eAAe,GAAG,CAAC,CAAC,CAAC;;IAE1B;IACA;IACA;IACA;IACAV,MAAA,CAAKD,QAAQ,GAAGA,QAAQ;IAExBC,MAAA,CAAKW,QAAQ,GAAG,CAAC,CAAC;IAElBX,MAAA,CAAK3B,OAAO,GAAG,CAAC;IAChB2B,MAAA,CAAKY,QAAQ,GAAG,IAAI;IAEpBZ,MAAA,CAAKa,qBAAqB,GAAG,KAAK,CAAC,CAAC;IACpCb,MAAA,CAAKc,gBAAgB,GAAG,KAAK,CAAC,CAAC;IAAA,OAAAd,MAAA;EAEhC;EAAC7iB,YAAA,CAAA8hB,OAAA;IAAA5qB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACmK,MAAM,CAACgE,IAAI;IAExB,CAAC;IAAApP,GAAA,EAED,SAAAA,IAAWva,KAAK,EAAG;MAElB,IAAI,CAAC2lB,MAAM,CAACgE,IAAI,GAAG3pB,KAAK;IAEzB;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAwsB,aAAA,EAAe;MAEd,IAAI,CAAC9I,MAAM,CAACZ,cAAc,CAAE,IAAI,CAACrE,MAAM,CAACxH,CAAC,EAAE,IAAI,CAACwH,MAAM,CAAClH,CAAC,EAAE,IAAI,CAACuU,MAAM,CAAC7U,CAAC,EAAE,IAAI,CAAC6U,MAAM,CAACvU,CAAC,EAAE,IAAI,CAAC4L,QAAQ,EAAE,IAAI,CAACnE,MAAM,CAAC/H,CAAC,EAAE,IAAI,CAAC+H,MAAM,CAACzH,CAAC,CAAE;IAEtI;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACxf,IAAI,GAAGwf,MAAM,CAACxf,IAAI;MAEvB,IAAI,CAACwf,MAAM,GAAGA,MAAM,CAACA,MAAM;MAC3B,IAAI,CAACiG,OAAO,GAAGjG,MAAM,CAACiG,OAAO,CAACzkB,KAAK,CAAE,CAAC,CAAE;MAExC,IAAI,CAAC6jB,OAAO,GAAGrF,MAAM,CAACqF,OAAO;MAE7B,IAAI,CAACE,KAAK,GAAGvF,MAAM,CAACuF,KAAK;MACzB,IAAI,CAACC,KAAK,GAAGxF,MAAM,CAACwF,KAAK;MAEzB,IAAI,CAACC,SAAS,GAAGzF,MAAM,CAACyF,SAAS;MACjC,IAAI,CAACC,SAAS,GAAG1F,MAAM,CAAC0F,SAAS;MAEjC,IAAI,CAACE,UAAU,GAAG5F,MAAM,CAAC4F,UAAU;MAEnC,IAAI,CAACD,MAAM,GAAG3F,MAAM,CAAC2F,MAAM;MAC3B,IAAI,CAACO,cAAc,GAAGlG,MAAM,CAACkG,cAAc;MAC3C,IAAI,CAAChqB,IAAI,GAAG8jB,MAAM,CAAC9jB,IAAI;MAEvB,IAAI,CAAC4c,MAAM,CAACzC,IAAI,CAAE2J,MAAM,CAAClH,MAAM,CAAE;MACjC,IAAI,CAACqN,MAAM,CAAC9P,IAAI,CAAE2J,MAAM,CAACmG,MAAM,CAAE;MACjC,IAAI,CAAC9M,MAAM,CAAChD,IAAI,CAAE2J,MAAM,CAAC3G,MAAM,CAAE;MACjC,IAAI,CAACmE,QAAQ,GAAGwC,MAAM,CAACxC,QAAQ;MAE/B,IAAI,CAAC4I,gBAAgB,GAAGpG,MAAM,CAACoG,gBAAgB;MAC/C,IAAI,CAACrI,MAAM,CAAC1H,IAAI,CAAE2J,MAAM,CAACjC,MAAM,CAAE;MAEjC,IAAI,CAACsI,eAAe,GAAGrG,MAAM,CAACqG,eAAe;MAC7C,IAAI,CAACC,gBAAgB,GAAGtG,MAAM,CAACsG,gBAAgB;MAC/C,IAAI,CAACC,KAAK,GAAGvG,MAAM,CAACuG,KAAK;MACzB,IAAI,CAACC,eAAe,GAAGxG,MAAM,CAACwG,eAAe;MAC7C,IAAI,CAACX,QAAQ,GAAG7F,MAAM,CAAC6F,QAAQ;MAE/B,IAAI,CAACY,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEhH,MAAM,CAACyG,QAAQ,CAAE,CAAE;MAE/D,IAAI,CAACQ,WAAW,GAAG,IAAI;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKzlB,SAAS,IAAI,OAAOylB,IAAI,KAAK,QAAU;MAEvE,IAAK,CAAEC,YAAY,IAAID,IAAI,CAAC8C,QAAQ,CAAE,IAAI,CAACrW,IAAI,CAAE,KAAKlS,SAAS,EAAG;QAEjE,OAAOylB,IAAI,CAAC8C,QAAQ,CAAE,IAAI,CAACrW,IAAI,CAAE;MAElC;MAEA,IAAM0T,MAAM,GAAG;QAEd4C,QAAQ,EAAE;UACThD,OAAO,EAAE,GAAG;UACZjoB,IAAI,EAAE,SAAS;UACfR,SAAS,EAAE;QACZ,CAAC;QAEDmV,IAAI,EAAE,IAAI,CAACA,IAAI;QACfrQ,IAAI,EAAE,IAAI,CAACA,IAAI;QAEfuiB,KAAK,EAAE,IAAI,CAAC/C,MAAM,CAACyC,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QAEtCwU,OAAO,EAAE,IAAI,CAACA,OAAO;QAErBc,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAAC7U,CAAC,EAAE,IAAI,CAAC6U,MAAM,CAACvU,CAAC,CAAE;QACxCkH,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAACxH,CAAC,EAAE,IAAI,CAACwH,MAAM,CAAClH,CAAC,CAAE;QACxCyH,MAAM,EAAE,CAAE,IAAI,CAACA,MAAM,CAAC/H,CAAC,EAAE,IAAI,CAAC+H,MAAM,CAACzH,CAAC,CAAE;QACxC4L,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAEvBriB,IAAI,EAAE,CAAE,IAAI,CAACoqB,KAAK,EAAE,IAAI,CAACC,KAAK,CAAE;QAEhCG,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBzpB,IAAI,EAAE,IAAI,CAACA,IAAI;QACf2pB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAEvBH,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBD,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBG,UAAU,EAAE,IAAI,CAACA,UAAU;QAE3BW,KAAK,EAAE,IAAI,CAACA,KAAK;QAEjBD,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCE,eAAe,EAAE,IAAI,CAACA;MAEvB,CAAC;MAED,IAAKM,IAAI,CAACE,SAAS,CAAE,IAAI,CAACP,QAAQ,CAAE,KAAK,IAAI,EAAGlC,MAAM,CAACkC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE/E,IAAK,CAAEpC,YAAY,EAAG;QAErBD,IAAI,CAAC8C,QAAQ,CAAE,IAAI,CAACrW,IAAI,CAAE,GAAG0T,MAAM;MAEpC;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAApqB,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACvX,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAU,CAAC,CAAE;IAE1C;EAAC;IAAA/B,GAAA;IAAAE,KAAA,EAED,SAAAgtB,YAAaC,EAAE,EAAG;MAEjB,IAAK,IAAI,CAACjC,OAAO,KAAK1d,SAAS,EAAG,OAAO2f,EAAE;MAE3CA,EAAE,CAACpQ,YAAY,CAAE,IAAI,CAAC6G,MAAM,CAAE;MAE9B,IAAKuJ,EAAE,CAAChW,CAAC,GAAG,CAAC,IAAIgW,EAAE,CAAChW,CAAC,GAAG,CAAC,EAAG;QAE3B,QAAS,IAAI,CAACiU,KAAK;UAElB,KAAKtd,cAAc;YAElBqf,EAAE,CAAChW,CAAC,GAAGgW,EAAE,CAAChW,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE4U,EAAE,CAAChW,CAAC,CAAE;YAChC;UAED,KAAKpJ,mBAAmB;YAEvBof,EAAE,CAAChW,CAAC,GAAGgW,EAAE,CAAChW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YACvB;UAED,KAAKnJ,sBAAsB;YAE1B,IAAKiI,IAAI,CAACgC,GAAG,CAAEhC,IAAI,CAACsC,KAAK,CAAE4U,EAAE,CAAChW,CAAC,CAAE,GAAG,CAAC,CAAE,KAAK,CAAC,EAAG;cAE/CgW,EAAE,CAAChW,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE8T,EAAE,CAAChW,CAAC,CAAE,GAAGgW,EAAE,CAAChW,CAAC;YAEhC,CAAC,MAAM;cAENgW,EAAE,CAAChW,CAAC,GAAGgW,EAAE,CAAChW,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE4U,EAAE,CAAChW,CAAC,CAAE;YAEjC;YAEA;QAAM;MAIT;MAEA,IAAKgW,EAAE,CAAC1V,CAAC,GAAG,CAAC,IAAI0V,EAAE,CAAC1V,CAAC,GAAG,CAAC,EAAG;QAE3B,QAAS,IAAI,CAAC4T,KAAK;UAElB,KAAKvd,cAAc;YAElBqf,EAAE,CAAC1V,CAAC,GAAG0V,EAAE,CAAC1V,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE4U,EAAE,CAAC1V,CAAC,CAAE;YAChC;UAED,KAAK1J,mBAAmB;YAEvBof,EAAE,CAAC1V,CAAC,GAAG0V,EAAE,CAAC1V,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;YACvB;UAED,KAAKzJ,sBAAsB;YAE1B,IAAKiI,IAAI,CAACgC,GAAG,CAAEhC,IAAI,CAACsC,KAAK,CAAE4U,EAAE,CAAC1V,CAAC,CAAE,GAAG,CAAC,CAAE,KAAK,CAAC,EAAG;cAE/C0V,EAAE,CAAC1V,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE8T,EAAE,CAAC1V,CAAC,CAAE,GAAG0V,EAAE,CAAC1V,CAAC;YAEhC,CAAC,MAAM;cAEN0V,EAAE,CAAC1V,CAAC,GAAG0V,EAAE,CAAC1V,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE4U,EAAE,CAAC1V,CAAC,CAAE;YAEjC;YAEA;QAAM;MAIT;MAEA,IAAK,IAAI,CAAC2U,KAAK,EAAG;QAEjBe,EAAE,CAAC1V,CAAC,GAAG,CAAC,GAAG0V,EAAE,CAAC1V,CAAC;MAEhB;MAEA,OAAO0V,EAAE;IAEV;EAAC;IAAAntB,GAAA;IAAAya,GAAA,EAED,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB,IAAI,CAAC8pB,OAAO,EAAG;QACf,IAAI,CAACnE,MAAM,CAACiH,WAAW,GAAG,IAAI;MAE/B;IAED;EAAC;EAAA,OAAAlC,OAAA;AAAA,EAzRoB7V,eAAe;AAAAvV,OAAA,CAAAorB,OAAA,GAAAA,OAAA;AA6RrCA,OAAO,CAACK,aAAa,GAAG,IAAI;AAC5BL,OAAO,CAACO,eAAe,GAAG3d,SAAS;AAAC,IAE9B4f,OAAO,0BAAAC,iBAAA;EAEZ,SAAAD,QAAajW,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE6V,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;IAAAjlB,eAAA,OAAA8kB,OAAA;IAEzCA,OAAO,CAACztB,SAAS,CAAC6tB,SAAS,GAAG,IAAI;IAElC,IAAI,CAACrW,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;IACV,IAAI,CAAC6V,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EAEX;EAACzkB,YAAA,CAAAskB,OAAA;IAAAptB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAAC4R,CAAC;IAEd,CAAC;IAAA7S,GAAA,EAED,SAAAA,IAAWva,KAAK,EAAG;MAElB,IAAI,CAACotB,CAAC,GAAGptB,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAAC6R,CAAC;IAEd,CAAC;IAAA9S,GAAA,EAED,SAAAA,IAAYva,KAAK,EAAG;MAEnB,IAAI,CAACqtB,CAAC,GAAGrtB,KAAK;IAEf;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAEC,CAAC,EAAG;MAEjB,IAAI,CAACpW,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC6V,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAyb,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACzE,CAAC,GAAGyE,MAAM;MACf,IAAI,CAACnE,CAAC,GAAGmE,MAAM;MACf,IAAI,CAAC0R,CAAC,GAAG1R,MAAM;MACf,IAAI,CAAC2R,CAAC,GAAG3R,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA2b,KAAM1E,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAnX,GAAA;IAAAE,KAAA,EAED,SAAA4b,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAutB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAwtB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA6b,aAAcvG,KAAK,EAAEtV,KAAK,EAAG;MAE5B,QAASsV,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAAC2B,CAAC,GAAGjX,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACuX,CAAC,GAAGvX,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACotB,CAAC,GAAGptB,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACqtB,CAAC,GAAGrtB,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAG2R,KAAK,CAAE;MAAC;MAI/D,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA8b,aAAcxG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC2B,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACM,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC6V,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACC,CAAC;QACrB;UAAS,MAAM,IAAI1pB,KAAK,CAAE,yBAAyB,GAAG2R,KAAK,CAAE;MAAC;IAIhE;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC+Q,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAAC6V,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;IAE9D;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMC,CAAC,EAAG;MAET,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MACZ,IAAI,CAAC6V,CAAC,GAAGnR,CAAC,CAACmR,CAAC;MACZ,IAAI,CAACC,CAAC,GAAKpR,CAAC,CAACoR,CAAC,KAAK/oB,SAAS,GAAK2X,CAAC,CAACoR,CAAC,GAAG,CAAC;MAExC,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAKD,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MACb,IAAI,CAACC,CAAC,IAAIpR,CAAC,CAACoR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAmc,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAAC0U,CAAC,IAAI1U,CAAC;MACX,IAAI,CAAC2U,CAAC,IAAI3U,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAoc,WAAY3C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAAC6V,CAAC,GAAG3T,CAAC,CAAC2T,CAAC,GAAG1T,CAAC,CAAC0T,CAAC;MAClB,IAAI,CAACC,CAAC,GAAG5T,CAAC,CAAC4T,CAAC,GAAG3T,CAAC,CAAC2T,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAqc,gBAAiBJ,CAAC,EAAEvD,CAAC,EAAG;MAEvB,IAAI,CAACzB,CAAC,IAAIgF,CAAC,CAAChF,CAAC,GAAGyB,CAAC;MACjB,IAAI,CAACnB,CAAC,IAAI0E,CAAC,CAAC1E,CAAC,GAAGmB,CAAC;MACjB,IAAI,CAAC0U,CAAC,IAAInR,CAAC,CAACmR,CAAC,GAAG1U,CAAC;MACjB,IAAI,CAAC2U,CAAC,IAAIpR,CAAC,CAACoR,CAAC,GAAG3U,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAsc,IAAKL,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MACb,IAAI,CAACC,CAAC,IAAIpR,CAAC,CAACoR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAuc,UAAW7D,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAAC0U,CAAC,IAAI1U,CAAC;MACX,IAAI,CAAC2U,CAAC,IAAI3U,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAwc,WAAY/C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAAC6V,CAAC,GAAG3T,CAAC,CAAC2T,CAAC,GAAG1T,CAAC,CAAC0T,CAAC;MAClB,IAAI,CAACC,CAAC,GAAG5T,CAAC,CAAC4T,CAAC,GAAG3T,CAAC,CAAC2T,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAUR,CAAC,EAAG;MAEb,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MACb,IAAI,CAACC,CAAC,IAAIpR,CAAC,CAACoR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA0c,eAAgBhB,MAAM,EAAG;MAExB,IAAI,CAACzE,CAAC,IAAIyE,MAAM;MAChB,IAAI,CAACnE,CAAC,IAAImE,MAAM;MAChB,IAAI,CAAC0R,CAAC,IAAI1R,MAAM;MAChB,IAAI,CAAC2R,CAAC,IAAI3R,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc1W,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAE6V,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MACpD,IAAMvQ,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,GAAGuQ,CAAC;MAC3D,IAAI,CAAC9V,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,GAAGuQ,CAAC;MAC3D,IAAI,CAACD,CAAC,GAAGtQ,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,GAAGuQ,CAAC;MAC5D,IAAI,CAACA,CAAC,GAAGvQ,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,GAAGuQ,CAAC;MAE5D,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAclB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAM,CAAE;IAEzC;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA0tB,2BAA4BlU,CAAC,EAAG;MAE/B;;MAEA;;MAEA,IAAI,CAAC6T,CAAC,GAAG,CAAC,GAAGtX,IAAI,CAAC4X,IAAI,CAAEnU,CAAC,CAAC6T,CAAC,CAAE;MAE7B,IAAM3U,CAAC,GAAG3C,IAAI,CAAC0H,IAAI,CAAE,CAAC,GAAGjE,CAAC,CAAC6T,CAAC,GAAG7T,CAAC,CAAC6T,CAAC,CAAE;MAEpC,IAAK3U,CAAC,GAAG,MAAM,EAAG;QAEjB,IAAI,CAACzB,CAAC,GAAG,CAAC;QACV,IAAI,CAACM,CAAC,GAAG,CAAC;QACV,IAAI,CAAC6V,CAAC,GAAG,CAAC;MAEX,CAAC,MAAM;QAEN,IAAI,CAACnW,CAAC,GAAGuC,CAAC,CAACvC,CAAC,GAAGyB,CAAC;QAChB,IAAI,CAACnB,CAAC,GAAGiC,CAAC,CAACjC,CAAC,GAAGmB,CAAC;QAChB,IAAI,CAAC0U,CAAC,GAAG5T,CAAC,CAAC4T,CAAC,GAAG1U,CAAC;MAEjB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAA4tB,+BAAgC7W,CAAC,EAAG;MAEnC;;MAEA;;MAEA,IAAI4G,KAAK,EAAE1G,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAC,CAAC;MACpB,IAAMS,OAAO,GAAG,IAAI;QAAG;QACtBC,QAAQ,GAAG,GAAG;QAAG;;QAEjBhO,EAAE,GAAG/I,CAAC,CAACgG,QAAQ;QAEfgR,GAAG,GAAGjO,EAAE,CAAE,CAAC,CAAE;QAAEkO,GAAG,GAAGlO,EAAE,CAAE,CAAC,CAAE;QAAEmO,GAAG,GAAGnO,EAAE,CAAE,CAAC,CAAE;QAC3CoO,GAAG,GAAGpO,EAAE,CAAE,CAAC,CAAE;QAAEqO,GAAG,GAAGrO,EAAE,CAAE,CAAC,CAAE;QAAEsO,GAAG,GAAGtO,EAAE,CAAE,CAAC,CAAE;QAC3CuO,GAAG,GAAGvO,EAAE,CAAE,CAAC,CAAE;QAAEwO,GAAG,GAAGxO,EAAE,CAAE,CAAC,CAAE;QAAEyO,GAAG,GAAGzO,EAAE,CAAE,EAAE,CAAE;MAE7C,IAAO/J,IAAI,CAACgC,GAAG,CAAEiW,GAAG,GAAGE,GAAG,CAAE,GAAGL,OAAO,IAC/B9X,IAAI,CAACgC,GAAG,CAAEkW,GAAG,GAAGI,GAAG,CAAE,GAAGR,OAAS,IACjC9X,IAAI,CAACgC,GAAG,CAAEqW,GAAG,GAAGE,GAAG,CAAE,GAAGT,OAAS,EAAG;QAE1C;QACA;QACA;;QAEA,IAAO9X,IAAI,CAACgC,GAAG,CAAEiW,GAAG,GAAGE,GAAG,CAAE,GAAGJ,QAAQ,IAChC/X,IAAI,CAACgC,GAAG,CAAEkW,GAAG,GAAGI,GAAG,CAAE,GAAGP,QAAU,IAClC/X,IAAI,CAACgC,GAAG,CAAEqW,GAAG,GAAGE,GAAG,CAAE,GAAGR,QAAU,IAClC/X,IAAI,CAACgC,GAAG,CAAEgW,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,CAAE,GAAGT,QAAU,EAAG;UAErD;;UAEA,IAAI,CAACvT,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAEtB,OAAO,IAAI,CAAC,CAAC;QAEd;;QAEA;;QAEAoD,KAAK,GAAG5H,IAAI,CAACC,EAAE;QAEf,IAAMwY,EAAE,GAAG,CAAET,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMU,EAAE,GAAG,CAAEN,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMO,EAAE,GAAG,CAAEH,GAAG,GAAG,CAAC,IAAK,CAAC;QAC1B,IAAMI,EAAE,GAAG,CAAEX,GAAG,GAAGE,GAAG,IAAK,CAAC;QAC5B,IAAMU,EAAE,GAAG,CAAEX,GAAG,GAAGI,GAAG,IAAK,CAAC;QAC5B,IAAMQ,EAAE,GAAG,CAAET,GAAG,GAAGE,GAAG,IAAK,CAAC;QAE5B,IAAOE,EAAE,GAAGC,EAAE,IAAQD,EAAE,GAAGE,EAAI,EAAG;UAEjC;;UAEA,IAAKF,EAAE,GAAGX,OAAO,EAAG;YAEnB5W,CAAC,GAAG,CAAC;YACLM,CAAC,GAAG,WAAW;YACf6V,CAAC,GAAG,WAAW;UAEhB,CAAC,MAAM;YAENnW,CAAC,GAAGlB,IAAI,CAAC0H,IAAI,CAAE+Q,EAAE,CAAE;YACnBjX,CAAC,GAAGoX,EAAE,GAAG1X,CAAC;YACVmW,CAAC,GAAGwB,EAAE,GAAG3X,CAAC;UAEX;QAED,CAAC,MAAM,IAAKwX,EAAE,GAAGC,EAAE,EAAG;UAErB;;UAEA,IAAKD,EAAE,GAAGZ,OAAO,EAAG;YAEnB5W,CAAC,GAAG,WAAW;YACfM,CAAC,GAAG,CAAC;YACL6V,CAAC,GAAG,WAAW;UAEhB,CAAC,MAAM;YAEN7V,CAAC,GAAGxB,IAAI,CAAC0H,IAAI,CAAEgR,EAAE,CAAE;YACnBxX,CAAC,GAAG0X,EAAE,GAAGpX,CAAC;YACV6V,CAAC,GAAGyB,EAAE,GAAGtX,CAAC;UAEX;QAED,CAAC,MAAM;UAEN;;UAEA,IAAKmX,EAAE,GAAGb,OAAO,EAAG;YAEnB5W,CAAC,GAAG,WAAW;YACfM,CAAC,GAAG,WAAW;YACf6V,CAAC,GAAG,CAAC;UAEN,CAAC,MAAM;YAENA,CAAC,GAAGrX,IAAI,CAAC0H,IAAI,CAAEiR,EAAE,CAAE;YACnBzX,CAAC,GAAG2X,EAAE,GAAGxB,CAAC;YACV7V,CAAC,GAAGsX,EAAE,GAAGzB,CAAC;UAEX;QAED;QAEA,IAAI,CAAC7S,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAEzP,KAAK,CAAE;QAE1B,OAAO,IAAI,CAAC,CAAC;MAEd;;MAEA;;MAEA,IAAIjF,CAAC,GAAG3C,IAAI,CAAC0H,IAAI,CAAE,CAAE6Q,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,GAC/C,CAAEH,GAAG,GAAGI,GAAG,KAAOJ,GAAG,GAAGI,GAAG,CAAE,GAC7B,CAAEH,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,CAAE,CAAC,CAAC;;MAElC,IAAKjY,IAAI,CAACgC,GAAG,CAAEW,CAAC,CAAE,GAAG,KAAK,EAAGA,CAAC,GAAG,CAAC;;MAElC;MACA;;MAEA,IAAI,CAACzB,CAAC,GAAG,CAAEqX,GAAG,GAAGF,GAAG,IAAK1V,CAAC;MAC1B,IAAI,CAACnB,CAAC,GAAG,CAAE0W,GAAG,GAAGI,GAAG,IAAK3V,CAAC;MAC1B,IAAI,CAAC0U,CAAC,GAAG,CAAEc,GAAG,GAAGF,GAAG,IAAKtV,CAAC;MAC1B,IAAI,CAAC2U,CAAC,GAAGtX,IAAI,CAAC4X,IAAI,CAAE,CAAEI,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,IAAK,CAAC,CAAE;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAzuB,GAAA;IAAAE,KAAA,EAED,SAAA2W,IAAKsF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAEgF,CAAC,CAAChF,CAAC,CAAE;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAE0E,CAAC,CAAC1E,CAAC,CAAE;MAChC,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACY,GAAG,CAAE,IAAI,CAACyW,CAAC,EAAEnR,CAAC,CAACmR,CAAC,CAAE;MAChC,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACY,GAAG,CAAE,IAAI,CAAC0W,CAAC,EAAEpR,CAAC,CAACoR,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA4W,IAAKqF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAC,CAAE;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAE0E,CAAC,CAAC1E,CAAC,CAAE;MAChC,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACa,GAAG,CAAE,IAAI,CAACwW,CAAC,EAAEnR,CAAC,CAACmR,CAAC,CAAE;MAChC,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACa,GAAG,CAAE,IAAI,CAACyW,CAAC,EAAEpR,CAAC,CAACoR,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA0W,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MACrD,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACa,GAAG,CAAED,GAAG,CAACyW,CAAC,EAAErX,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACwW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MACrD,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACa,GAAG,CAAED,GAAG,CAAC0W,CAAC,EAAEtX,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACyW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAgd,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAC,CAAE,CAAE;MACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC3F,CAAC,CAAE,CAAE;MACvD,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACkQ,CAAC,CAAE,CAAE;MACvD,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACmQ,CAAC,CAAE,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAmd,YAAaxG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMhR,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;MAE5B,OAAO,IAAI,CAACgX,YAAY,CAAEhX,MAAM,IAAI,CAAC,CAAE,CAAC8W,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEhR,MAAM,CAAE,CAAE,CAAE;IAEnG;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAqY,MAAA,EAAQ;MAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;MAC7B,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC+U,CAAC,CAAE;MAC7B,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACgV,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAmZ,KAAA,EAAO;MAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE;MAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE;MAC5B,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACiU,CAAC,CAAE;MAC5B,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACkU,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAib,MAAA,EAAQ;MAEP,IAAI,CAAChE,CAAC,GAAGlB,IAAI,CAACkF,KAAK,CAAE,IAAI,CAAChE,CAAC,CAAE;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACkF,KAAK,CAAE,IAAI,CAAC1D,CAAC,CAAE;MAC7B,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACkF,KAAK,CAAE,IAAI,CAACmS,CAAC,CAAE;MAC7B,IAAI,CAACC,CAAC,GAAGtX,IAAI,CAACkF,KAAK,CAAE,IAAI,CAACoS,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAod,YAAA,EAAc;MAEb,IAAI,CAACnG,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;MACpE,IAAI,CAACM,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;MACpE,IAAI,CAAC6V,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKrX,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACiU,CAAC,CAAE,GAAGrX,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC+U,CAAC,CAAE;MACpE,IAAI,CAACC,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKtX,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACkU,CAAC,CAAE,GAAGtX,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACgV,CAAC,CAAE;MAEpE,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAqd,OAAA,EAAS;MAER,IAAI,CAACpG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAAC6V,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAsd,IAAKrB,CAAC,EAAG;MAER,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAAC6V,CAAC,GAAGnR,CAAC,CAACmR,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGpR,CAAC,CAACoR,CAAC;IAEjE;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAA,EAAW;MAEV,OAAO,IAAI,CAACvG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC6V,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;IAE7E;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;MAER,OAAOmQ,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACxG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC6V,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;IAE1F;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA0d,gBAAA,EAAkB;MAEjB,OAAO3H,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,CAAE,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACqV,CAAC,CAAE,GAAGrX,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACsV,CAAC,CAAE;IAEzF;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAgb,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC4B,YAAY,CAAE,IAAI,CAAChX,MAAM,EAAE,IAAI,CAAC,CAAE;IAE/C;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAke,UAAWtY,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACoV,SAAS,EAAE,CAAC0B,cAAc,CAAE9W,MAAM,CAAE;IAEjD;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAwX,KAAMyE,CAAC,EAAEkC,KAAK,EAAG;MAEhB,IAAI,CAAClH,CAAC,IAAI,CAAEgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKkH,KAAK;MAClC,IAAI,CAAC5G,CAAC,IAAI,CAAE0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK4G,KAAK;MAClC,IAAI,CAACiP,CAAC,IAAI,CAAEnR,CAAC,CAACmR,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKjP,KAAK;MAClC,IAAI,CAACkP,CAAC,IAAI,CAAEpR,CAAC,CAACoR,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKlP,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAoe,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAAClH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,GAAG,CAAEqH,EAAE,CAACrH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,IAAKkH,KAAK;MACvC,IAAI,CAAC5G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,GAAG,CAAE+G,EAAE,CAAC/G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,IAAK4G,KAAK;MACvC,IAAI,CAACiP,CAAC,GAAG/O,EAAE,CAAC+O,CAAC,GAAG,CAAE9O,EAAE,CAAC8O,CAAC,GAAG/O,EAAE,CAAC+O,CAAC,IAAKjP,KAAK;MACvC,IAAI,CAACkP,CAAC,GAAGhP,EAAE,CAACgP,CAAC,GAAG,CAAE/O,EAAE,CAAC+O,CAAC,GAAGhP,EAAE,CAACgP,CAAC,IAAKlP,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQtC,CAAC,EAAG;MAEX,OAAWA,CAAC,CAAChF,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM0E,CAAC,CAACmR,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMnR,CAAC,CAACoR,CAAC,KAAK,IAAI,CAACA,CAAG;IAE9F;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACxH,CAAC,GAAGvB,KAAK,CAAE+I,MAAM,CAAE;MACxB,IAAI,CAAClH,CAAC,GAAG7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAAC2O,CAAC,GAAG1X,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAAC4O,CAAC,GAAG3X,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACxH,CAAC;MACxBvB,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAClH,CAAC;MAC5B7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC2O,CAAC;MAC5B1X,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC4O,CAAC;MAE5B,OAAO3X,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA2e,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;MAEvC,IAAI,CAAC2B,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;MAChC,IAAI,CAACiC,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;MAChC,IAAI,CAAC8X,CAAC,GAAGxO,SAAS,CAACsJ,IAAI,CAAE5S,KAAK,CAAE;MAChC,IAAI,CAAC+X,CAAC,GAAGzO,SAAS,CAACkQ,IAAI,CAAExZ,KAAK,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAoW,OAAA,EAAS;MAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,EAAE;MACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,EAAE;MACtB,IAAI,CAACgX,CAAC,GAAGrX,IAAI,CAACK,MAAM,EAAE;MACtB,IAAI,CAACiX,CAAC,GAAGtX,IAAI,CAACK,MAAM,EAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAtW,GAAA,EAAAqtB,iBAAA;IAAAntB,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAme,OAAA8P,SAAA;QAAA,kBAAAA,SAAA,CAAA9nB,IAAA,GAAA8nB,SAAA,CAAApqB,IAAA;UAAA;YAAAoqB,SAAA,CAAApqB,IAAA;YAEC,OAAM,IAAI,CAACsS,CAAC;UAAA;YAAA8X,SAAA,CAAApqB,IAAA;YACZ,OAAM,IAAI,CAAC4S,CAAC;UAAA;YAAAwX,SAAA,CAAApqB,IAAA;YACZ,OAAM,IAAI,CAACyoB,CAAC;UAAA;YAAA2B,SAAA,CAAApqB,IAAA;YACZ,OAAM,IAAI,CAAC0oB,CAAC;UAAA;UAAA;YAAA,OAAA0B,SAAA,CAAA3nB,IAAA;QAAA;MAAA,GAAApH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAAktB,OAAA;AAAA,EAPEhtB,MAAM,CAACE,QAAQ;AAWnB;AACA;AACA;AACA;AACA;AAJAd,OAAA,CAAA4tB,OAAA,GAAAA,OAAA;AAAA,IAKM8B,iBAAiB,0BAAAC,iBAAA;EAAArE,SAAA,CAAAoE,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAApE,YAAA,CAAAkE,iBAAA;EAEtB,SAAAA,kBAAajG,KAAK,EAAEC,MAAM,EAAEmG,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAC,MAAA;IAAAhnB,eAAA,OAAA4mB,iBAAA;IAE1CI,MAAA,GAAAF,OAAA,CAAAptB,IAAA;IAEAstB,MAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,MAAA,CAAKrG,KAAK,GAAGA,KAAK;IAClBqG,MAAA,CAAKpG,MAAM,GAAGA,MAAM;IACpBoG,MAAA,CAAKE,KAAK,GAAG,CAAC;IAEdF,MAAA,CAAKG,OAAO,GAAG,IAAIrC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEnE,KAAK,EAAEC,MAAM,CAAE;IACjDoG,MAAA,CAAKI,WAAW,GAAG,KAAK;IAExBJ,MAAA,CAAKK,QAAQ,GAAG,IAAIvC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEnE,KAAK,EAAEC,MAAM,CAAE;IAElD,IAAMN,KAAK,GAAG;MAAEK,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA,MAAM;MAAEsG,KAAK,EAAE;IAAE,CAAC;IAExDF,MAAA,CAAKM,OAAO,GAAG,IAAIhF,OAAO,CAAEhC,KAAK,EAAEyG,OAAO,CAACnE,OAAO,EAAEmE,OAAO,CAACjE,KAAK,EAAEiE,OAAO,CAAChE,KAAK,EAAEgE,OAAO,CAAC/D,SAAS,EAAE+D,OAAO,CAAC9D,SAAS,EAAE8D,OAAO,CAAC7D,MAAM,EAAE6D,OAAO,CAACttB,IAAI,EAAEstB,OAAO,CAAC5D,UAAU,EAAE4D,OAAO,CAAC3D,QAAQ,CAAE;IAC5L4D,MAAA,CAAKM,OAAO,CAACpD,qBAAqB,GAAG,IAAI;IAEzC8C,MAAA,CAAKM,OAAO,CAACxD,KAAK,GAAG,KAAK;IAC1BkD,MAAA,CAAKM,OAAO,CAAC1D,eAAe,GAAGmD,OAAO,CAACnD,eAAe,KAAK1nB,SAAS,GAAG6qB,OAAO,CAACnD,eAAe,GAAG,KAAK;IACtGoD,MAAA,CAAKM,OAAO,CAAC7D,cAAc,GAAGsD,OAAO,CAACtD,cAAc,KAAKvnB,SAAS,GAAG6qB,OAAO,CAACtD,cAAc,GAAG,IAAI;IAClGuD,MAAA,CAAKM,OAAO,CAACrE,SAAS,GAAG8D,OAAO,CAAC9D,SAAS,KAAK/mB,SAAS,GAAG6qB,OAAO,CAAC9D,SAAS,GAAGjd,YAAY;IAE3FghB,MAAA,CAAKO,WAAW,GAAGR,OAAO,CAACQ,WAAW,KAAKrrB,SAAS,GAAG6qB,OAAO,CAACQ,WAAW,GAAG,IAAI;IACjFP,MAAA,CAAKQ,aAAa,GAAGT,OAAO,CAACS,aAAa,KAAKtrB,SAAS,GAAG6qB,OAAO,CAACS,aAAa,GAAG,KAAK;IAExFR,MAAA,CAAKS,YAAY,GAAGV,OAAO,CAACU,YAAY,KAAKvrB,SAAS,GAAG6qB,OAAO,CAACU,YAAY,GAAG,IAAI;IAEpFT,MAAA,CAAKU,OAAO,GAAGX,OAAO,CAACW,OAAO,KAAKxrB,SAAS,GAAG6qB,OAAO,CAACW,OAAO,GAAG,CAAC;IAAC,OAAAV,MAAA;EAEpE;EAACxmB,YAAA,CAAAomB,iBAAA;IAAAlvB,GAAA;IAAAE,KAAA,EAED,SAAA+vB,QAAShH,KAAK,EAAEC,MAAM,EAAEsG,KAAK,GAAG,CAAC,EAAG;MAEnC,IAAK,IAAI,CAACvG,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAACsG,KAAK,KAAKA,KAAK,EAAG;QAE7E,IAAI,CAACvG,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACsG,KAAK,GAAGA,KAAK;QAElB,IAAI,CAACI,OAAO,CAAChH,KAAK,CAACK,KAAK,GAAGA,KAAK;QAChC,IAAI,CAAC2G,OAAO,CAAChH,KAAK,CAACM,MAAM,GAAGA,MAAM;QAClC,IAAI,CAAC0G,OAAO,CAAChH,KAAK,CAAC4G,KAAK,GAAGA,KAAK;QAEhC,IAAI,CAACvC,OAAO,EAAE;MAEf;MAEA,IAAI,CAAC0C,QAAQ,CAAClV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEwO,KAAK,EAAEC,MAAM,CAAE;MACxC,IAAI,CAACuG,OAAO,CAAChV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEwO,KAAK,EAAEC,MAAM,CAAE;IAExC;EAAC;IAAAlpB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACoD,KAAK,GAAGpD,MAAM,CAACoD,KAAK;MACzB,IAAI,CAACC,MAAM,GAAGrD,MAAM,CAACqD,MAAM;MAC3B,IAAI,CAACsG,KAAK,GAAG3J,MAAM,CAAC2J,KAAK;MAEzB,IAAI,CAACG,QAAQ,CAACzT,IAAI,CAAE2J,MAAM,CAAC8J,QAAQ,CAAE;MAErC,IAAI,CAACC,OAAO,GAAG/J,MAAM,CAAC+J,OAAO,CAAC3T,KAAK,EAAE;MACrC,IAAI,CAAC2T,OAAO,CAACpD,qBAAqB,GAAG,IAAI;;MAEzC;;MAEA,IAAM5D,KAAK,GAAGlpB,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAAC+J,OAAO,CAAChH,KAAK,CAAE;MACvD,IAAI,CAACgH,OAAO,CAAC/J,MAAM,GAAG,IAAIiE,MAAM,CAAElB,KAAK,CAAE;MAEzC,IAAI,CAACiH,WAAW,GAAGhK,MAAM,CAACgK,WAAW;MACrC,IAAI,CAACC,aAAa,GAAGjK,MAAM,CAACiK,aAAa;MAEzC,IAAKjK,MAAM,CAACkK,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGlK,MAAM,CAACkK,YAAY,CAAC9T,KAAK,EAAE;MAEnF,IAAI,CAAC+T,OAAO,GAAGnK,MAAM,CAACmK,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAhwB,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACvX,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAU,CAAC,CAAE;IAE1C;EAAC;EAAA,OAAAmtB,iBAAA;AAAA,EA9F8Bna,eAAe;AAAAvV,OAAA,CAAA0vB,iBAAA,GAAAA,iBAAA;AAAA,IAkGzCiB,gBAAgB,0BAAAC,QAAA;EAAAtF,SAAA,CAAAqF,gBAAA,EAAAC,QAAA;EAAA,IAAAC,OAAA,GAAArF,YAAA,CAAAmF,gBAAA;EAErB,SAAAA,iBAAatG,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEsG,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAc,MAAA;IAAAhoB,eAAA,OAAA6nB,gBAAA;IAE5DG,MAAA,GAAAD,OAAA,CAAAruB,IAAA,OAAO,IAAI;IAEXsuB,MAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,MAAA,CAAK1H,KAAK,GAAG;MAAEiB,IAAI,EAAJA,IAAI;MAAEZ,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAEsG,KAAK,EAALA;IAAM,CAAC;IAE3Cc,MAAA,CAAKhF,SAAS,GAAGrd,aAAa;IAC9BqiB,MAAA,CAAK/E,SAAS,GAAGtd,aAAa;IAE9BqiB,MAAA,CAAKE,KAAK,GAAGziB,mBAAmB;IAEhCuiB,MAAA,CAAKpE,eAAe,GAAG,KAAK;IAC5BoE,MAAA,CAAKlE,KAAK,GAAG,KAAK;IAClBkE,MAAA,CAAKjE,eAAe,GAAG,CAAC;IAAC,OAAAiE,MAAA;EAE1B;EAAC,OAAAxnB,YAAA,CAAAqnB,gBAAA;AAAA,EAnB6BvF,OAAO;AAAAprB,OAAA,CAAA2wB,gBAAA,GAAAA,gBAAA;AAAA,IAuBhCM,sBAAsB,0BAAAC,kBAAA;EAAA5F,SAAA,CAAA2F,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,OAAA,GAAA3F,YAAA,CAAAyF,sBAAA;EAE3B,SAAAA,uBAAaxH,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAG;IAAA,IAAAoB,MAAA;IAAAtoB,eAAA,OAAAmoB,sBAAA;IAEnCG,MAAA,GAAAD,OAAA,CAAA3uB,IAAA,OAAOinB,KAAK,EAAEC,MAAM;IAEpB0H,MAAA,CAAKC,wBAAwB,GAAG,IAAI;IAEpCD,MAAA,CAAKpB,KAAK,GAAGA,KAAK;IAElBoB,MAAA,CAAKhB,OAAO,GAAG,IAAIO,gBAAgB,CAAE,IAAI,EAAElH,KAAK,EAAEC,MAAM,EAAEsG,KAAK,CAAE;IAEjEoB,MAAA,CAAKhB,OAAO,CAACpD,qBAAqB,GAAG,IAAI;IAAC,OAAAoE,MAAA;EAE3C;EAAC,OAAA9nB,YAAA,CAAA2nB,sBAAA;AAAA,EAdmCvB,iBAAiB;AAAA1vB,OAAA,CAAAixB,sBAAA,GAAAA,sBAAA;AAAA,IAkBhDK,aAAa,0BAAAC,SAAA;EAAAjG,SAAA,CAAAgG,aAAA,EAAAC,SAAA;EAAA,IAAAC,OAAA,GAAAhG,YAAA,CAAA8F,aAAA;EAElB,SAAAA,cAAajH,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEsG,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAyB,MAAA;IAAA3oB,eAAA,OAAAwoB,aAAA;IAE5D;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAG,MAAA,GAAAD,OAAA,CAAAhvB,IAAA,OAAO,IAAI;IAEXivB,MAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BD,MAAA,CAAKrI,KAAK,GAAG;MAAEiB,IAAI,EAAJA,IAAI;MAAEZ,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA,MAAM;MAAEsG,KAAK,EAALA;IAAM,CAAC;IAE3CyB,MAAA,CAAK3F,SAAS,GAAGrd,aAAa;IAC9BgjB,MAAA,CAAK1F,SAAS,GAAGtd,aAAa;IAE9BgjB,MAAA,CAAKT,KAAK,GAAGziB,mBAAmB;IAEhCkjB,MAAA,CAAK/E,eAAe,GAAG,KAAK;IAC5B+E,MAAA,CAAK7E,KAAK,GAAG,KAAK;IAClB6E,MAAA,CAAK5E,eAAe,GAAG,CAAC;IAAC,OAAA4E,MAAA;EAE1B;EAAC,OAAAnoB,YAAA,CAAAgoB,aAAA;AAAA,EA3B0BlG,OAAO;AAAAprB,OAAA,CAAAsxB,aAAA,GAAAA,aAAA;AAAA,IA+B7BK,mBAAmB,0BAAAC,mBAAA;EAAAtG,SAAA,CAAAqG,mBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAArG,YAAA,CAAAmG,mBAAA;EAExB,SAAAA,oBAAalI,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAG;IAAA,IAAA8B,MAAA;IAAAhpB,eAAA,OAAA6oB,mBAAA;IAEnCG,MAAA,GAAAD,OAAA,CAAArvB,IAAA,OAAOinB,KAAK,EAAEC,MAAM;IAEpBoI,MAAA,CAAKC,qBAAqB,GAAG,IAAI;IAEjCD,MAAA,CAAK9B,KAAK,GAAGA,KAAK;IAElB8B,MAAA,CAAK1B,OAAO,GAAG,IAAIkB,aAAa,CAAE,IAAI,EAAE7H,KAAK,EAAEC,MAAM,EAAEsG,KAAK,CAAE;IAE9D8B,MAAA,CAAK1B,OAAO,CAACpD,qBAAqB,GAAG,IAAI;IAAC,OAAA8E,MAAA;EAE3C;EAAC,OAAAxoB,YAAA,CAAAqoB,mBAAA;AAAA,EAdgCjC,iBAAiB;AAAA1vB,OAAA,CAAA2xB,mBAAA,GAAAA,mBAAA;AAAA,IAkB7CK,0BAA0B,0BAAAC,mBAAA;EAAA3G,SAAA,CAAA0G,0BAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA1G,YAAA,CAAAwG,0BAAA;EAE/B,SAAAA,2BAAavI,KAAK,EAAEC,MAAM,EAAEyI,KAAK,EAAEtC,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAAuC,MAAA;IAAAtpB,eAAA,OAAAkpB,0BAAA;IAEjDI,MAAA,GAAAF,OAAA,CAAA1vB,IAAA,OAAOinB,KAAK,EAAEC,MAAM,EAAEmG,OAAO;IAE7BuC,MAAA,CAAKC,4BAA4B,GAAG,IAAI;IAExC,IAAMjC,OAAO,GAAGgC,MAAA,CAAKhC,OAAO;IAE5BgC,MAAA,CAAKhC,OAAO,GAAG,EAAE;IAEjB,KAAM,IAAI7pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4rB,KAAK,EAAE5rB,CAAC,EAAG,EAAG;MAElC6rB,MAAA,CAAKhC,OAAO,CAAE7pB,CAAC,CAAE,GAAG6pB,OAAO,CAAC3T,KAAK,EAAE;MACnC2V,MAAA,CAAKhC,OAAO,CAAE7pB,CAAC,CAAE,CAACymB,qBAAqB,GAAG,IAAI;IAE/C;IAAC,OAAAoF,MAAA;EAEF;EAAC9oB,YAAA,CAAA0oB,0BAAA;IAAAxxB,GAAA;IAAAE,KAAA,EAED,SAAA+vB,QAAShH,KAAK,EAAEC,MAAM,EAAEsG,KAAK,GAAG,CAAC,EAAG;MAEnC,IAAK,IAAI,CAACvG,KAAK,KAAKA,KAAK,IAAI,IAAI,CAACC,MAAM,KAAKA,MAAM,IAAI,IAAI,CAACsG,KAAK,KAAKA,KAAK,EAAG;QAE7E,IAAI,CAACvG,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACsG,KAAK,GAAGA,KAAK;QAElB,KAAM,IAAIzpB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG,IAAI,CAAClC,OAAO,CAAC9pB,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAEzD,IAAI,CAAC6pB,OAAO,CAAE7pB,CAAC,CAAE,CAAC6iB,KAAK,CAACK,KAAK,GAAGA,KAAK;UACrC,IAAI,CAAC2G,OAAO,CAAE7pB,CAAC,CAAE,CAAC6iB,KAAK,CAACM,MAAM,GAAGA,MAAM;UACvC,IAAI,CAAC0G,OAAO,CAAE7pB,CAAC,CAAE,CAAC6iB,KAAK,CAAC4G,KAAK,GAAGA,KAAK;QAEtC;QAEA,IAAI,CAACvC,OAAO,EAAE;MAEf;MAEA,IAAI,CAAC0C,QAAQ,CAAClV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEwO,KAAK,EAAEC,MAAM,CAAE;MACxC,IAAI,CAACuG,OAAO,CAAChV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEwO,KAAK,EAAEC,MAAM,CAAE;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAlpB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACoH,OAAO,EAAE;MAEd,IAAI,CAAChE,KAAK,GAAGpD,MAAM,CAACoD,KAAK;MACzB,IAAI,CAACC,MAAM,GAAGrD,MAAM,CAACqD,MAAM;MAC3B,IAAI,CAACsG,KAAK,GAAG3J,MAAM,CAAC2J,KAAK;MAEzB,IAAI,CAACG,QAAQ,CAAClV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACwO,KAAK,EAAE,IAAI,CAACC,MAAM,CAAE;MAClD,IAAI,CAACuG,OAAO,CAAChV,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACwO,KAAK,EAAE,IAAI,CAACC,MAAM,CAAE;MAEjD,IAAI,CAAC2G,WAAW,GAAGhK,MAAM,CAACgK,WAAW;MACrC,IAAI,CAACC,aAAa,GAAGjK,MAAM,CAACiK,aAAa;MAEzC,IAAKjK,MAAM,CAACkK,YAAY,KAAK,IAAI,EAAG,IAAI,CAACA,YAAY,GAAGlK,MAAM,CAACkK,YAAY,CAAC9T,KAAK,EAAE;MAEnF,IAAI,CAAC2T,OAAO,CAAC9pB,MAAM,GAAG,CAAC;MAEvB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGjM,MAAM,CAAC+J,OAAO,CAAC9pB,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAE3D,IAAI,CAAC6pB,OAAO,CAAE7pB,CAAC,CAAE,GAAG8f,MAAM,CAAC+J,OAAO,CAAE7pB,CAAC,CAAE,CAACkW,KAAK,EAAE;QAC/C,IAAI,CAAC2T,OAAO,CAAE7pB,CAAC,CAAE,CAACymB,qBAAqB,GAAG,IAAI;MAE/C;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAgF,0BAAA;AAAA,EA3EuCtC,iBAAiB;AAAA1vB,OAAA,CAAAgyB,0BAAA,GAAAA,0BAAA;AAAA,IA+EpDO,UAAU,0BAAAC,iBAAA;EAEf,SAAAD,WAAa5a,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE6V,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAG;IAAAjlB,eAAA,OAAAypB,UAAA;IAEzC,IAAI,CAACE,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,EAAE,GAAG/a,CAAC;IACX,IAAI,CAACgb,EAAE,GAAG1a,CAAC;IACX,IAAI,CAAC2a,EAAE,GAAG9E,CAAC;IACX,IAAI,CAAC+E,EAAE,GAAG9E,CAAC;EAEZ;EAACzkB,YAAA,CAAAipB,UAAA;IAAA/xB,GAAA;IAAA0b,GAAA,EAuGD,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACwW,EAAE;IAEf,CAAC;IAAAzX,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACgyB,EAAE,GAAGhyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACyW,EAAE;IAEf,CAAC;IAAA1X,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACiyB,EAAE,GAAGjyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC0W,EAAE;IAEf,CAAC;IAAA3X,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACkyB,EAAE,GAAGlyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC2W,EAAE;IAEf,CAAC;IAAA5X,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACmyB,EAAE,GAAGnyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAEC,CAAC,EAAG;MAEjB,IAAI,CAAC2E,EAAE,GAAG/a,CAAC;MACX,IAAI,CAACgb,EAAE,GAAG1a,CAAC;MACX,IAAI,CAAC2a,EAAE,GAAG9E,CAAC;MACX,IAAI,CAAC+E,EAAE,GAAG9E,CAAC;MAEX,IAAI,CAAC+E,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC8rB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,CAAE;IAElE;EAAC;IAAAryB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMqW,UAAU,EAAG;MAElB,IAAI,CAACL,EAAE,GAAGK,UAAU,CAACpb,CAAC;MACtB,IAAI,CAACgb,EAAE,GAAGI,UAAU,CAAC9a,CAAC;MACtB,IAAI,CAAC2a,EAAE,GAAGG,UAAU,CAACjF,CAAC;MACtB,IAAI,CAAC+E,EAAE,GAAGE,UAAU,CAAChF,CAAC;MAEtB,IAAI,CAAC+E,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAsyB,aAAcC,KAAK,EAAEC,MAAM,EAAG;MAE7B,IAAK,EAAID,KAAK,IAAIA,KAAK,CAACE,OAAO,CAAE,EAAG;QAEnC,MAAM,IAAI9uB,KAAK,CAAE,kGAAkG,CAAE;MAEtH;MAEA,IAAMsT,CAAC,GAAGsb,KAAK,CAACP,EAAE;QAAEza,CAAC,GAAGgb,KAAK,CAACN,EAAE;QAAE7E,CAAC,GAAGmF,KAAK,CAACL,EAAE;QAAEtY,KAAK,GAAG2Y,KAAK,CAACG,MAAM;;MAEpE;MACA;MACA;;MAEA,IAAM7Y,GAAG,GAAG9D,IAAI,CAAC8D,GAAG;MACpB,IAAMC,GAAG,GAAG/D,IAAI,CAAC+D,GAAG;MAEpB,IAAM6Y,EAAE,GAAG9Y,GAAG,CAAE5C,CAAC,GAAG,CAAC,CAAE;MACvB,IAAM8C,EAAE,GAAGF,GAAG,CAAEtC,CAAC,GAAG,CAAC,CAAE;MACvB,IAAMqb,EAAE,GAAG/Y,GAAG,CAAEuT,CAAC,GAAG,CAAC,CAAE;MAEvB,IAAMyF,EAAE,GAAG/Y,GAAG,CAAE7C,CAAC,GAAG,CAAC,CAAE;MACvB,IAAM+C,EAAE,GAAGF,GAAG,CAAEvC,CAAC,GAAG,CAAC,CAAE;MACvB,IAAMub,EAAE,GAAGhZ,GAAG,CAAEsT,CAAC,GAAG,CAAC,CAAE;MAEvB,QAASxT,KAAK;QAEb,KAAK,KAAK;UACT,IAAI,CAACoY,EAAE,GAAGa,EAAE,GAAG9Y,EAAE,GAAG6Y,EAAE,GAAGD,EAAE,GAAG3Y,EAAE,GAAG8Y,EAAE;UACrC,IAAI,CAACb,EAAE,GAAGU,EAAE,GAAG3Y,EAAE,GAAG4Y,EAAE,GAAGC,EAAE,GAAG9Y,EAAE,GAAG+Y,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG5Y,EAAE,GAAG+Y,EAAE,GAAGD,EAAE,GAAG7Y,EAAE,GAAG4Y,EAAE;UACrC,IAAI,CAACT,EAAE,GAAGQ,EAAE,GAAG5Y,EAAE,GAAG6Y,EAAE,GAAGC,EAAE,GAAG7Y,EAAE,GAAG8Y,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACd,EAAE,GAAGa,EAAE,GAAG9Y,EAAE,GAAG6Y,EAAE,GAAGD,EAAE,GAAG3Y,EAAE,GAAG8Y,EAAE;UACrC,IAAI,CAACb,EAAE,GAAGU,EAAE,GAAG3Y,EAAE,GAAG4Y,EAAE,GAAGC,EAAE,GAAG9Y,EAAE,GAAG+Y,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG5Y,EAAE,GAAG+Y,EAAE,GAAGD,EAAE,GAAG7Y,EAAE,GAAG4Y,EAAE;UACrC,IAAI,CAACT,EAAE,GAAGQ,EAAE,GAAG5Y,EAAE,GAAG6Y,EAAE,GAAGC,EAAE,GAAG7Y,EAAE,GAAG8Y,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACd,EAAE,GAAGa,EAAE,GAAG9Y,EAAE,GAAG6Y,EAAE,GAAGD,EAAE,GAAG3Y,EAAE,GAAG8Y,EAAE;UACrC,IAAI,CAACb,EAAE,GAAGU,EAAE,GAAG3Y,EAAE,GAAG4Y,EAAE,GAAGC,EAAE,GAAG9Y,EAAE,GAAG+Y,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG5Y,EAAE,GAAG+Y,EAAE,GAAGD,EAAE,GAAG7Y,EAAE,GAAG4Y,EAAE;UACrC,IAAI,CAACT,EAAE,GAAGQ,EAAE,GAAG5Y,EAAE,GAAG6Y,EAAE,GAAGC,EAAE,GAAG7Y,EAAE,GAAG8Y,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACd,EAAE,GAAGa,EAAE,GAAG9Y,EAAE,GAAG6Y,EAAE,GAAGD,EAAE,GAAG3Y,EAAE,GAAG8Y,EAAE;UACrC,IAAI,CAACb,EAAE,GAAGU,EAAE,GAAG3Y,EAAE,GAAG4Y,EAAE,GAAGC,EAAE,GAAG9Y,EAAE,GAAG+Y,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG5Y,EAAE,GAAG+Y,EAAE,GAAGD,EAAE,GAAG7Y,EAAE,GAAG4Y,EAAE;UACrC,IAAI,CAACT,EAAE,GAAGQ,EAAE,GAAG5Y,EAAE,GAAG6Y,EAAE,GAAGC,EAAE,GAAG7Y,EAAE,GAAG8Y,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACd,EAAE,GAAGa,EAAE,GAAG9Y,EAAE,GAAG6Y,EAAE,GAAGD,EAAE,GAAG3Y,EAAE,GAAG8Y,EAAE;UACrC,IAAI,CAACb,EAAE,GAAGU,EAAE,GAAG3Y,EAAE,GAAG4Y,EAAE,GAAGC,EAAE,GAAG9Y,EAAE,GAAG+Y,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG5Y,EAAE,GAAG+Y,EAAE,GAAGD,EAAE,GAAG7Y,EAAE,GAAG4Y,EAAE;UACrC,IAAI,CAACT,EAAE,GAAGQ,EAAE,GAAG5Y,EAAE,GAAG6Y,EAAE,GAAGC,EAAE,GAAG7Y,EAAE,GAAG8Y,EAAE;UACrC;QAED,KAAK,KAAK;UACT,IAAI,CAACd,EAAE,GAAGa,EAAE,GAAG9Y,EAAE,GAAG6Y,EAAE,GAAGD,EAAE,GAAG3Y,EAAE,GAAG8Y,EAAE;UACrC,IAAI,CAACb,EAAE,GAAGU,EAAE,GAAG3Y,EAAE,GAAG4Y,EAAE,GAAGC,EAAE,GAAG9Y,EAAE,GAAG+Y,EAAE;UACrC,IAAI,CAACZ,EAAE,GAAGS,EAAE,GAAG5Y,EAAE,GAAG+Y,EAAE,GAAGD,EAAE,GAAG7Y,EAAE,GAAG4Y,EAAE;UACrC,IAAI,CAACT,EAAE,GAAGQ,EAAE,GAAG5Y,EAAE,GAAG6Y,EAAE,GAAGC,EAAE,GAAG7Y,EAAE,GAAG8Y,EAAE;UACrC;QAED;UACCtY,OAAO,CAACC,IAAI,CAAE,kEAAkE,GAAGb,KAAK,CAAE;MAAC;MAI7F,IAAK4Y,MAAM,KAAK,KAAK,EAAG,IAAI,CAACJ,iBAAiB,EAAE;MAEhD,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA+yB,iBAAkBC,IAAI,EAAErV,KAAK,EAAG;MAE/B;;MAEA;;MAEA,IAAMsV,SAAS,GAAGtV,KAAK,GAAG,CAAC;QAAEjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEmZ,SAAS,CAAE;MAEtD,IAAI,CAACjB,EAAE,GAAGgB,IAAI,CAAC/b,CAAC,GAAGyB,CAAC;MACpB,IAAI,CAACuZ,EAAE,GAAGe,IAAI,CAACzb,CAAC,GAAGmB,CAAC;MACpB,IAAI,CAACwZ,EAAE,GAAGc,IAAI,CAAC5F,CAAC,GAAG1U,CAAC;MACpB,IAAI,CAACyZ,EAAE,GAAGpc,IAAI,CAAC8D,GAAG,CAAEoZ,SAAS,CAAE;MAE/B,IAAI,CAACb,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAkzB,sBAAuBnc,CAAC,EAAG;MAE1B;;MAEA;;MAEA,IAAM+I,EAAE,GAAG/I,CAAC,CAACgG,QAAQ;QAEpBgR,GAAG,GAAGjO,EAAE,CAAE,CAAC,CAAE;QAAEkO,GAAG,GAAGlO,EAAE,CAAE,CAAC,CAAE;QAAEmO,GAAG,GAAGnO,EAAE,CAAE,CAAC,CAAE;QAC3CoO,GAAG,GAAGpO,EAAE,CAAE,CAAC,CAAE;QAAEqO,GAAG,GAAGrO,EAAE,CAAE,CAAC,CAAE;QAAEsO,GAAG,GAAGtO,EAAE,CAAE,CAAC,CAAE;QAC3CuO,GAAG,GAAGvO,EAAE,CAAE,CAAC,CAAE;QAAEwO,GAAG,GAAGxO,EAAE,CAAE,CAAC,CAAE;QAAEyO,GAAG,GAAGzO,EAAE,CAAE,EAAE,CAAE;QAE5CqT,KAAK,GAAGpF,GAAG,GAAGI,GAAG,GAAGI,GAAG;MAExB,IAAK4E,KAAK,GAAG,CAAC,EAAG;QAEhB,IAAMza,CAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC0H,IAAI,CAAE0V,KAAK,GAAG,GAAG,CAAE;QAExC,IAAI,CAAChB,EAAE,GAAG,IAAI,GAAGzZ,CAAC;QAClB,IAAI,CAACsZ,EAAE,GAAG,CAAE1D,GAAG,GAAGF,GAAG,IAAK1V,CAAC;QAC3B,IAAI,CAACuZ,EAAE,GAAG,CAAEhE,GAAG,GAAGI,GAAG,IAAK3V,CAAC;QAC3B,IAAI,CAACwZ,EAAE,GAAG,CAAEhE,GAAG,GAAGF,GAAG,IAAKtV,CAAC;MAE5B,CAAC,MAAM,IAAKqV,GAAG,GAAGI,GAAG,IAAIJ,GAAG,GAAGQ,GAAG,EAAG;QAEpC,IAAM7V,EAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC0H,IAAI,CAAE,GAAG,GAAGsQ,GAAG,GAAGI,GAAG,GAAGI,GAAG,CAAE;QAElD,IAAI,CAAC4D,EAAE,GAAG,CAAE7D,GAAG,GAAGF,GAAG,IAAK1V,EAAC;QAC3B,IAAI,CAACsZ,EAAE,GAAG,IAAI,GAAGtZ,EAAC;QAClB,IAAI,CAACuZ,EAAE,GAAG,CAAEjE,GAAG,GAAGE,GAAG,IAAKxV,EAAC;QAC3B,IAAI,CAACwZ,EAAE,GAAG,CAAEjE,GAAG,GAAGI,GAAG,IAAK3V,EAAC;MAE5B,CAAC,MAAM,IAAKyV,GAAG,GAAGI,GAAG,EAAG;QAEvB,IAAM7V,GAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC0H,IAAI,CAAE,GAAG,GAAG0Q,GAAG,GAAGJ,GAAG,GAAGQ,GAAG,CAAE;QAElD,IAAI,CAAC4D,EAAE,GAAG,CAAElE,GAAG,GAAGI,GAAG,IAAK3V,GAAC;QAC3B,IAAI,CAACsZ,EAAE,GAAG,CAAEhE,GAAG,GAAGE,GAAG,IAAKxV,GAAC;QAC3B,IAAI,CAACuZ,EAAE,GAAG,IAAI,GAAGvZ,GAAC;QAClB,IAAI,CAACwZ,EAAE,GAAG,CAAE9D,GAAG,GAAGE,GAAG,IAAK5V,GAAC;MAE5B,CAAC,MAAM;QAEN,IAAMA,GAAC,GAAG,GAAG,GAAG3C,IAAI,CAAC0H,IAAI,CAAE,GAAG,GAAG8Q,GAAG,GAAGR,GAAG,GAAGI,GAAG,CAAE;QAElD,IAAI,CAACgE,EAAE,GAAG,CAAEjE,GAAG,GAAGF,GAAG,IAAKtV,GAAC;QAC3B,IAAI,CAACsZ,EAAE,GAAG,CAAE/D,GAAG,GAAGI,GAAG,IAAK3V,GAAC;QAC3B,IAAI,CAACuZ,EAAE,GAAG,CAAE7D,GAAG,GAAGE,GAAG,IAAK5V,GAAC;QAC3B,IAAI,CAACwZ,EAAE,GAAG,IAAI,GAAGxZ,GAAC;MAEnB;MAEA,IAAI,CAAC0Z,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAozB,mBAAoBC,KAAK,EAAEC,GAAG,EAAG;MAEhC;;MAEA,IAAIzQ,CAAC,GAAGwQ,KAAK,CAAC/V,GAAG,CAAEgW,GAAG,CAAE,GAAG,CAAC;MAE5B,IAAKzQ,CAAC,GAAGvZ,MAAM,CAACiqB,OAAO,EAAG;QAEzB;;QAEA1Q,CAAC,GAAG,CAAC;QAEL,IAAK9M,IAAI,CAACgC,GAAG,CAAEsb,KAAK,CAACpc,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAEsb,KAAK,CAACjG,CAAC,CAAE,EAAG;UAEhD,IAAI,CAAC4E,EAAE,GAAG,CAAEqB,KAAK,CAAC9b,CAAC;UACnB,IAAI,CAAC0a,EAAE,GAAGoB,KAAK,CAACpc,CAAC;UACjB,IAAI,CAACib,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAGtP,CAAC;QAEZ,CAAC,MAAM;UAEN,IAAI,CAACmP,EAAE,GAAG,CAAC;UACX,IAAI,CAACC,EAAE,GAAG,CAAEoB,KAAK,CAACjG,CAAC;UACnB,IAAI,CAAC8E,EAAE,GAAGmB,KAAK,CAAC9b,CAAC;UACjB,IAAI,CAAC4a,EAAE,GAAGtP,CAAC;QAEZ;MAED,CAAC,MAAM;QAEN;;QAEA,IAAI,CAACmP,EAAE,GAAGqB,KAAK,CAAC9b,CAAC,GAAG+b,GAAG,CAAClG,CAAC,GAAGiG,KAAK,CAACjG,CAAC,GAAGkG,GAAG,CAAC/b,CAAC;QAC3C,IAAI,CAAC0a,EAAE,GAAGoB,KAAK,CAACjG,CAAC,GAAGkG,GAAG,CAACrc,CAAC,GAAGoc,KAAK,CAACpc,CAAC,GAAGqc,GAAG,CAAClG,CAAC;QAC3C,IAAI,CAAC8E,EAAE,GAAGmB,KAAK,CAACpc,CAAC,GAAGqc,GAAG,CAAC/b,CAAC,GAAG8b,KAAK,CAAC9b,CAAC,GAAG+b,GAAG,CAACrc,CAAC;QAC3C,IAAI,CAACkb,EAAE,GAAGtP,CAAC;MAEZ;MAEA,OAAO,IAAI,CAAC7H,SAAS,EAAE;IAExB;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAAwzB,QAASha,CAAC,EAAG;MAEZ,OAAO,CAAC,GAAGzD,IAAI,CAAC4X,IAAI,CAAE5X,IAAI,CAACgC,GAAG,CAAErB,KAAK,CAAE,IAAI,CAAC4G,GAAG,CAAE9D,CAAC,CAAE,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAE;IAEnE;EAAC;IAAA1Z,GAAA;IAAAE,KAAA,EAED,SAAAyzB,cAAeja,CAAC,EAAEka,IAAI,EAAG;MAExB,IAAM/V,KAAK,GAAG,IAAI,CAAC6V,OAAO,CAAEha,CAAC,CAAE;MAE/B,IAAKmE,KAAK,KAAK,CAAC,EAAG,OAAO,IAAI;MAE9B,IAAMlG,CAAC,GAAG1B,IAAI,CAACY,GAAG,CAAE,CAAC,EAAE+c,IAAI,GAAG/V,KAAK,CAAE;MAErC,IAAI,CAACgW,KAAK,CAAEna,CAAC,EAAE/B,CAAC,CAAE;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAA+f,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxF,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE9B;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAAkiB,OAAA,EAAS;MAER;;MAEA,OAAO,IAAI,CAAC0R,SAAS,EAAE;IAExB;EAAC;IAAA9zB,GAAA;IAAAE,KAAA,EAED,SAAA4zB,UAAA,EAAY;MAEX,IAAI,CAAC5B,EAAE,IAAI,CAAE,CAAC;MACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;MACd,IAAI,CAACC,EAAE,IAAI,CAAE,CAAC;MAEd,IAAI,CAACE,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAsd,IAAKrB,CAAC,EAAG;MAER,OAAO,IAAI,CAAC+V,EAAE,GAAG/V,CAAC,CAAC+V,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGhW,CAAC,CAACgW,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGjW,CAAC,CAACiW,EAAE,GAAG,IAAI,CAACC,EAAE,GAAGlW,CAAC,CAACkW,EAAE;IAEzE;EAAC;IAAAryB,GAAA;IAAAE,KAAA,EAED,SAAAwd,SAAA,EAAW;MAEV,OAAO,IAAI,CAACwU,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE;IAErF;EAAC;IAAAryB,GAAA;IAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;MAER,OAAOmQ,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACuU,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,GAAG,IAAI,CAACC,EAAE,GAAG,IAAI,CAACA,EAAE,CAAE;IAElG;EAAC;IAAAryB,GAAA;IAAAE,KAAA,EAED,SAAAgb,UAAA,EAAY;MAEX,IAAIrF,CAAC,GAAG,IAAI,CAAC/P,MAAM,EAAE;MAErB,IAAK+P,CAAC,KAAK,CAAC,EAAG;QAEd,IAAI,CAACqc,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;QACX,IAAI,CAACC,EAAE,GAAG,CAAC;MAEZ,CAAC,MAAM;QAENxc,CAAC,GAAG,CAAC,GAAGA,CAAC;QAET,IAAI,CAACqc,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGrc,CAAC;QACrB,IAAI,CAACsc,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGtc,CAAC;QACrB,IAAI,CAACuc,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGvc,CAAC;QACrB,IAAI,CAACwc,EAAE,GAAG,IAAI,CAACA,EAAE,GAAGxc,CAAC;MAEtB;MAEA,IAAI,CAACyc,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAUjD,CAAC,EAAG;MAEb,OAAO,IAAI,CAACqa,mBAAmB,CAAE,IAAI,EAAEra,CAAC,CAAE;IAE3C;EAAC;IAAA1Z,GAAA;IAAAE,KAAA,EAED,SAAAwgB,YAAahH,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACqa,mBAAmB,CAAEra,CAAC,EAAE,IAAI,CAAE;IAE3C;EAAC;IAAA1Z,GAAA;IAAAE,KAAA,EAED,SAAA6zB,oBAAqBpa,CAAC,EAAEC,CAAC,EAAG;MAE3B;;MAEA,IAAMoa,GAAG,GAAGra,CAAC,CAACuY,EAAE;QAAE+B,GAAG,GAAGta,CAAC,CAACwY,EAAE;QAAE+B,GAAG,GAAGva,CAAC,CAACyY,EAAE;QAAE+B,GAAG,GAAGxa,CAAC,CAAC0Y,EAAE;MACpD,IAAM+B,GAAG,GAAGxa,CAAC,CAACsY,EAAE;QAAEmC,GAAG,GAAGza,CAAC,CAACuY,EAAE;QAAEmC,GAAG,GAAG1a,CAAC,CAACwY,EAAE;QAAEmC,GAAG,GAAG3a,CAAC,CAACyY,EAAE;MAEpD,IAAI,CAACH,EAAE,GAAG8B,GAAG,GAAGO,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;MACvD,IAAI,CAAClC,EAAE,GAAG8B,GAAG,GAAGM,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGM,GAAG;MACvD,IAAI,CAAClC,EAAE,GAAG8B,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG,GAAGN,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGG,GAAG;MACvD,IAAI,CAAC/B,EAAE,GAAG8B,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG;MAEvD,IAAI,CAAChC,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA2zB,MAAOW,EAAE,EAAE7c,CAAC,EAAG;MAEd,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI;MAC1B,IAAKA,CAAC,KAAK,CAAC,EAAG,OAAO,IAAI,CAACuE,IAAI,CAAEsY,EAAE,CAAE;MAErC,IAAMrd,CAAC,GAAG,IAAI,CAAC+a,EAAE;QAAEza,CAAC,GAAG,IAAI,CAAC0a,EAAE;QAAE7E,CAAC,GAAG,IAAI,CAAC8E,EAAE;QAAE7E,CAAC,GAAG,IAAI,CAAC8E,EAAE;;MAExD;;MAEA,IAAIoC,YAAY,GAAGlH,CAAC,GAAGiH,EAAE,CAACnC,EAAE,GAAGlb,CAAC,GAAGqd,EAAE,CAACtC,EAAE,GAAGza,CAAC,GAAG+c,EAAE,CAACrC,EAAE,GAAG7E,CAAC,GAAGkH,EAAE,CAACpC,EAAE;MAEhE,IAAKqC,YAAY,GAAG,CAAC,EAAG;QAEvB,IAAI,CAACpC,EAAE,GAAG,CAAEmC,EAAE,CAACnC,EAAE;QACjB,IAAI,CAACH,EAAE,GAAG,CAAEsC,EAAE,CAACtC,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG,CAAEqC,EAAE,CAACrC,EAAE;QACjB,IAAI,CAACC,EAAE,GAAG,CAAEoC,EAAE,CAACpC,EAAE;QAEjBqC,YAAY,GAAG,CAAEA,YAAY;MAE9B,CAAC,MAAM;QAEN,IAAI,CAACvY,IAAI,CAAEsY,EAAE,CAAE;MAEhB;MAEA,IAAKC,YAAY,IAAI,GAAG,EAAG;QAE1B,IAAI,CAACpC,EAAE,GAAG9E,CAAC;QACX,IAAI,CAAC2E,EAAE,GAAG/a,CAAC;QACX,IAAI,CAACgb,EAAE,GAAG1a,CAAC;QACX,IAAI,CAAC2a,EAAE,GAAG9E,CAAC;QAEX,OAAO,IAAI;MAEZ;MAEA,IAAMoH,eAAe,GAAG,GAAG,GAAGD,YAAY,GAAGA,YAAY;MAEzD,IAAKC,eAAe,IAAIlrB,MAAM,CAACiqB,OAAO,EAAG;QAExC,IAAM7a,CAAC,GAAG,CAAC,GAAGjB,CAAC;QACf,IAAI,CAAC0a,EAAE,GAAGzZ,CAAC,GAAG2U,CAAC,GAAG5V,CAAC,GAAG,IAAI,CAAC0a,EAAE;QAC7B,IAAI,CAACH,EAAE,GAAGtZ,CAAC,GAAGzB,CAAC,GAAGQ,CAAC,GAAG,IAAI,CAACua,EAAE;QAC7B,IAAI,CAACC,EAAE,GAAGvZ,CAAC,GAAGnB,CAAC,GAAGE,CAAC,GAAG,IAAI,CAACwa,EAAE;QAC7B,IAAI,CAACC,EAAE,GAAGxZ,CAAC,GAAG0U,CAAC,GAAG3V,CAAC,GAAG,IAAI,CAACya,EAAE;QAE7B,IAAI,CAAClX,SAAS,EAAE;QAChB,IAAI,CAACoX,iBAAiB,EAAE;QAExB,OAAO,IAAI;MAEZ;MAEA,IAAMqC,YAAY,GAAG1e,IAAI,CAAC0H,IAAI,CAAE+W,eAAe,CAAE;MACjD,IAAME,SAAS,GAAG3e,IAAI,CAAC6H,KAAK,CAAE6W,YAAY,EAAEF,YAAY,CAAE;MAC1D,IAAMI,MAAM,GAAG5e,IAAI,CAAC+D,GAAG,CAAE,CAAE,CAAC,GAAGrC,CAAC,IAAKid,SAAS,CAAE,GAAGD,YAAY;QAC9DG,MAAM,GAAG7e,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAGid,SAAS,CAAE,GAAGD,YAAY;MAElD,IAAI,CAACtC,EAAE,GAAK9E,CAAC,GAAGsH,MAAM,GAAG,IAAI,CAACxC,EAAE,GAAGyC,MAAQ;MAC3C,IAAI,CAAC5C,EAAE,GAAK/a,CAAC,GAAG0d,MAAM,GAAG,IAAI,CAAC3C,EAAE,GAAG4C,MAAQ;MAC3C,IAAI,CAAC3C,EAAE,GAAK1a,CAAC,GAAGod,MAAM,GAAG,IAAI,CAAC1C,EAAE,GAAG2C,MAAQ;MAC3C,IAAI,CAAC1C,EAAE,GAAK9E,CAAC,GAAGuH,MAAM,GAAG,IAAI,CAACzC,EAAE,GAAG0C,MAAQ;MAE3C,IAAI,CAACxC,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA60B,iBAAkBC,EAAE,EAAER,EAAE,EAAE7c,CAAC,EAAG;MAE7B,OAAO,IAAI,CAACuE,IAAI,CAAE8Y,EAAE,CAAE,CAACnB,KAAK,CAAEW,EAAE,EAAE7c,CAAC,CAAE;IAEtC;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAAoW,OAAA,EAAS;MAER;MACA;MACA;;MAEA,IAAM2e,EAAE,GAAGhf,IAAI,CAACK,MAAM,EAAE;MACxB,IAAM4e,OAAO,GAAGjf,IAAI,CAAC0H,IAAI,CAAE,CAAC,GAAGsX,EAAE,CAAE;MACnC,IAAME,MAAM,GAAGlf,IAAI,CAAC0H,IAAI,CAAEsX,EAAE,CAAE;MAE9B,IAAMG,EAAE,GAAG,CAAC,GAAGnf,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,EAAE;MAEtC,IAAM+e,EAAE,GAAG,CAAC,GAAGpf,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACK,MAAM,EAAE;MAEtC,OAAO,IAAI,CAACmE,GAAG,CACdya,OAAO,GAAGjf,IAAI,CAAC8D,GAAG,CAAEqb,EAAE,CAAE,EACxBD,MAAM,GAAGlf,IAAI,CAAC+D,GAAG,CAAEqb,EAAE,CAAE,EACvBF,MAAM,GAAGlf,IAAI,CAAC8D,GAAG,CAAEsb,EAAE,CAAE,EACvBH,OAAO,GAAGjf,IAAI,CAAC+D,GAAG,CAAEob,EAAE,CAAE,CACxB;IAEF;EAAC;IAAAp1B,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQ8T,UAAU,EAAG;MAEpB,OAASA,UAAU,CAACL,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQK,UAAU,CAACJ,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMI,UAAU,CAACH,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMG,UAAU,CAACF,EAAE,KAAK,IAAI,CAACA,EAAI;IAExI;EAAC;IAAAryB,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACuT,EAAE,GAAGtc,KAAK,CAAE+I,MAAM,CAAE;MACzB,IAAI,CAACwT,EAAE,GAAGvc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAC7B,IAAI,CAACyT,EAAE,GAAGxc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAC7B,IAAI,CAAC0T,EAAE,GAAGzc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAE7B,IAAI,CAAC2T,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACuT,EAAE;MACzBtc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACwT,EAAE;MAC7Bvc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACyT,EAAE;MAC7Bxc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC0T,EAAE;MAE7B,OAAOzc,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA2e,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;MAEvC,IAAI,CAAC0c,EAAE,GAAGpT,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;MACjC,IAAI,CAAC2c,EAAE,GAAGrT,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;MACjC,IAAI,CAAC4c,EAAE,GAAGtT,SAAS,CAACsJ,IAAI,CAAE5S,KAAK,CAAE;MACjC,IAAI,CAAC6c,EAAE,GAAGvT,SAAS,CAACkQ,IAAI,CAAExZ,KAAK,CAAE;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAo1B,UAAWC,QAAQ,EAAG;MAErB,IAAI,CAACjD,iBAAiB,GAAGiD,QAAQ;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAAoyB,kBAAA,EAAoB,CAAC;EAAC;IAAAtyB,GAAA,EAAAgyB,iBAAA;IAAA9xB,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAEtB,SAAApG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAme,OAAAqW,SAAA;QAAA,kBAAAA,SAAA,CAAAruB,IAAA,GAAAquB,SAAA,CAAA3wB,IAAA;UAAA;YAAA2wB,SAAA,CAAA3wB,IAAA;YAEC,OAAM,IAAI,CAACqtB,EAAE;UAAA;YAAAsD,SAAA,CAAA3wB,IAAA;YACb,OAAM,IAAI,CAACstB,EAAE;UAAA;YAAAqD,SAAA,CAAA3wB,IAAA;YACb,OAAM,IAAI,CAACutB,EAAE;UAAA;YAAAoD,SAAA,CAAA3wB,IAAA;YACb,OAAM,IAAI,CAACwtB,EAAE;UAAA;UAAA;YAAA,OAAAmD,SAAA,CAAAluB,IAAA;QAAA;MAAA,GAAApH,KAAA;IAAA,CAEb;EAAA;IAAAF,GAAA;IAAAE,KAAA,EAxpBD,SAAAu1B,UAAkBC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAEpe,CAAC,EAAG;MAEzE;;MAEA,IAAIqe,EAAE,GAAGJ,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC9BI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAE5B,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAChCM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;QAC3BQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAE5B,IAAKpe,CAAC,KAAK,CAAC,EAAG;QAEd+d,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGK,EAAE;QACzBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;QACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;QACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;QACzB;MAED;MAEA,IAAKxe,CAAC,KAAK,CAAC,EAAG;QAEd+d,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGS,EAAE;QACzBV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGU,EAAE;QACzBX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGW,EAAE;QACzBZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGY,EAAE;QACzB;MAED;MAEA,IAAKJ,EAAE,KAAKI,EAAE,IAAIP,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,IAAIH,EAAE,KAAKI,EAAE,EAAG;QAEvD,IAAI1d,CAAC,GAAG,CAAC,GAAGjB,CAAC;QACb,IAAMoC,GAAG,GAAGic,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;UAChDC,GAAG,GAAKzc,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAG;UAC5B0c,MAAM,GAAG,CAAC,GAAG1c,GAAG,GAAGA,GAAG;;QAEvB;QACA,IAAK0c,MAAM,GAAGjtB,MAAM,CAACiqB,OAAO,EAAG;UAE9B,IAAMzZ,GAAG,GAAG/D,IAAI,CAAC0H,IAAI,CAAE8Y,MAAM,CAAE;YAC9BC,GAAG,GAAGzgB,IAAI,CAAC6H,KAAK,CAAE9D,GAAG,EAAED,GAAG,GAAGyc,GAAG,CAAE;UAEnC5d,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAEpB,CAAC,GAAG8d,GAAG,CAAE,GAAG1c,GAAG;UAC7BrC,CAAC,GAAG1B,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG+e,GAAG,CAAE,GAAG1c,GAAG;QAE9B;QAEA,IAAM2c,IAAI,GAAGhf,CAAC,GAAG6e,GAAG;QAEpBR,EAAE,GAAGA,EAAE,GAAGpd,CAAC,GAAGwd,EAAE,GAAGO,IAAI;QACvBV,EAAE,GAAGA,EAAE,GAAGrd,CAAC,GAAGyd,EAAE,GAAGM,IAAI;QACvBT,EAAE,GAAGA,EAAE,GAAGtd,CAAC,GAAG0d,EAAE,GAAGK,IAAI;QACvBR,EAAE,GAAGA,EAAE,GAAGvd,CAAC,GAAG2d,EAAE,GAAGI,IAAI;;QAEvB;QACA,IAAK/d,CAAC,KAAK,CAAC,GAAGjB,CAAC,EAAG;UAElB,IAAMsK,CAAC,GAAG,CAAC,GAAGhM,IAAI,CAAC0H,IAAI,CAAEqY,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAE;UAEhEH,EAAE,IAAI/T,CAAC;UACPgU,EAAE,IAAIhU,CAAC;UACPiU,EAAE,IAAIjU,CAAC;UACPkU,EAAE,IAAIlU,CAAC;QAER;MAED;MAEAyT,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE;MACrBN,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE;MACzBP,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE;MACzBR,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE;IAE1B;EAAC;IAAAn2B,GAAA;IAAAE,KAAA,EAED,SAAA02B,wBAAgClB,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAG;MAEpF,IAAMC,EAAE,GAAGJ,IAAI,CAAEC,UAAU,CAAE;MAC7B,IAAMI,EAAE,GAAGL,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMK,EAAE,GAAGN,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAEjC,IAAMO,EAAE,GAAGN,IAAI,CAAEC,UAAU,CAAE;MAC7B,IAAMM,EAAE,GAAGP,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMO,EAAE,GAAGR,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MACjC,IAAMQ,EAAE,GAAGT,IAAI,CAAEC,UAAU,GAAG,CAAC,CAAE;MAEjCL,GAAG,CAAEC,SAAS,CAAE,GAAGK,EAAE,GAAGO,EAAE,GAAGJ,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;MACxDX,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGM,EAAE,GAAGM,EAAE,GAAGJ,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGE,EAAE,GAAGJ,EAAE,GAAGM,EAAE;MAC5DZ,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGO,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE,GAAGN,EAAE,GAAGK,EAAE,GAAGJ,EAAE,GAAGG,EAAE;MAC5DV,GAAG,CAAEC,SAAS,GAAG,CAAC,CAAE,GAAGQ,EAAE,GAAGI,EAAE,GAAGP,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGI,EAAE;MAE5D,OAAOZ,GAAG;IAEX;EAAC;EAAA,OAAA3D,UAAA;AAAA,EA8iBE3xB,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAAuyB,UAAA,GAAAA,UAAA;AAAA,IAWb8E,OAAO,0BAAAC,iBAAA;EAEZ,SAAAD,QAAa1f,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE6V,CAAC,GAAG,CAAC,EAAG;IAAAhlB,eAAA,OAAAuuB,OAAA;IAElCA,OAAO,CAACl3B,SAAS,CAACo3B,SAAS,GAAG,IAAI;IAElC,IAAI,CAAC5f,CAAC,GAAGA,CAAC;IACV,IAAI,CAACM,CAAC,GAAGA,CAAC;IACV,IAAI,CAAC6V,CAAC,GAAGA,CAAC;EAEX;EAACxkB,YAAA,CAAA+tB,OAAA;IAAA72B,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEd,IAAKA,CAAC,KAAK9oB,SAAS,EAAG8oB,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC,CAAC;;MAEnC,IAAI,CAACnW,CAAC,GAAGA,CAAC;MACV,IAAI,CAACM,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC6V,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAyb,UAAWC,MAAM,EAAG;MAEnB,IAAI,CAACzE,CAAC,GAAGyE,MAAM;MACf,IAAI,CAACnE,CAAC,GAAGmE,MAAM;MACf,IAAI,CAAC0R,CAAC,GAAG1R,MAAM;MAEf,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA2b,KAAM1E,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAnX,GAAA;IAAAE,KAAA,EAED,SAAA4b,KAAMrE,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAutB,KAAMH,CAAC,EAAG;MAET,IAAI,CAACA,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA6b,aAAcvG,KAAK,EAAEtV,KAAK,EAAG;MAE5B,QAASsV,KAAK;QAEb,KAAK,CAAC;UAAE,IAAI,CAAC2B,CAAC,GAAGjX,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACuX,CAAC,GAAGvX,KAAK;UAAE;QACxB,KAAK,CAAC;UAAE,IAAI,CAACotB,CAAC,GAAGptB,KAAK;UAAE;QACxB;UAAS,MAAM,IAAI2D,KAAK,CAAE,yBAAyB,GAAG2R,KAAK,CAAE;MAAC;MAI/D,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA8b,aAAcxG,KAAK,EAAG;MAErB,QAASA,KAAK;QAEb,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC2B,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAACM,CAAC;QACrB,KAAK,CAAC;UAAE,OAAO,IAAI,CAAC6V,CAAC;QACrB;UAAS,MAAM,IAAIzpB,KAAK,CAAE,yBAAyB,GAAG2R,KAAK,CAAE;MAAC;IAIhE;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC+Q,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAAC6V,CAAC,CAAE;IAEtD;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMC,CAAC,EAAG;MAET,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC;MACZ,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;MACZ,IAAI,CAAC6V,CAAC,GAAGnR,CAAC,CAACmR,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAKD,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAmc,UAAWzD,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAAC0U,CAAC,IAAI1U,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAoc,WAAY3C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAAC6V,CAAC,GAAG3T,CAAC,CAAC2T,CAAC,GAAG1T,CAAC,CAAC0T,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAqc,gBAAiBJ,CAAC,EAAEvD,CAAC,EAAG;MAEvB,IAAI,CAACzB,CAAC,IAAIgF,CAAC,CAAChF,CAAC,GAAGyB,CAAC;MACjB,IAAI,CAACnB,CAAC,IAAI0E,CAAC,CAAC1E,CAAC,GAAGmB,CAAC;MACjB,IAAI,CAAC0U,CAAC,IAAInR,CAAC,CAACmR,CAAC,GAAG1U,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAsc,IAAKL,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAuc,UAAW7D,CAAC,EAAG;MAEd,IAAI,CAACzB,CAAC,IAAIyB,CAAC;MACX,IAAI,CAACnB,CAAC,IAAImB,CAAC;MACX,IAAI,CAAC0U,CAAC,IAAI1U,CAAC;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAwc,WAAY/C,CAAC,EAAEC,CAAC,EAAG;MAElB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAAC6V,CAAC,GAAG3T,CAAC,CAAC2T,CAAC,GAAG1T,CAAC,CAAC0T,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAUR,CAAC,EAAG;MAEb,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA0c,eAAgBhB,MAAM,EAAG;MAExB,IAAI,CAACzE,CAAC,IAAIyE,MAAM;MAChB,IAAI,CAACnE,CAAC,IAAImE,MAAM;MAChB,IAAI,CAAC0R,CAAC,IAAI1R,MAAM;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA82B,gBAAiBrd,CAAC,EAAEC,CAAC,EAAG;MAEvB,IAAI,CAACzC,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;MAClB,IAAI,CAACM,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC;MAClB,IAAI,CAAC6V,CAAC,GAAG3T,CAAC,CAAC2T,CAAC,GAAG1T,CAAC,CAAC0T,CAAC;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA+2B,WAAYxE,KAAK,EAAG;MAEnB,OAAO,IAAI,CAACyE,eAAe,CAAEC,aAAa,CAAC3E,YAAY,CAAEC,KAAK,CAAE,CAAE;IAEnE;EAAC;IAAAzyB,GAAA;IAAAE,KAAA,EAED,SAAAk3B,eAAgBlE,IAAI,EAAErV,KAAK,EAAG;MAE7B,OAAO,IAAI,CAACqZ,eAAe,CAAEC,aAAa,CAAClE,gBAAgB,CAAEC,IAAI,EAAErV,KAAK,CAAE,CAAE;IAE7E;EAAC;IAAA7d,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAc9F,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAE6V,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMtQ,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC;MAC7C,IAAI,CAAC7V,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGtQ,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm3B,kBAAmBpgB,CAAC,EAAG;MAEtB,OAAO,IAAI,CAAC8F,YAAY,CAAE9F,CAAC,CAAE,CAACiE,SAAS,EAAE;IAE1C;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc1W,CAAC,EAAG;MAEjB,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAE6V,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMtQ,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAMsQ,CAAC,GAAG,CAAC,IAAKvQ,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,CAAE;MAEjE,IAAI,CAAC7F,CAAC,GAAG,CAAE6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,IAAKuQ,CAAC;MAC/D,IAAI,CAAC9V,CAAC,GAAG,CAAEuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,IAAKuQ,CAAC;MAC/D,IAAI,CAACD,CAAC,GAAG,CAAEtQ,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE,IAAKuQ,CAAC;MAEhE,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAg3B,gBAAiBxd,CAAC,EAAG;MAEpB,IAAMvC,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAE6V,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMgK,EAAE,GAAG5d,CAAC,CAACvC,CAAC;QAAEogB,EAAE,GAAG7d,CAAC,CAACjC,CAAC;QAAE+f,EAAE,GAAG9d,CAAC,CAAC4T,CAAC;QAAEmK,EAAE,GAAG/d,CAAC,CAAC6T,CAAC;;MAE5C;;MAEA,IAAMmK,EAAE,GAAGD,EAAE,GAAGtgB,CAAC,GAAGogB,EAAE,GAAGjK,CAAC,GAAGkK,EAAE,GAAG/f,CAAC;MACnC,IAAMkgB,EAAE,GAAGF,EAAE,GAAGhgB,CAAC,GAAG+f,EAAE,GAAGrgB,CAAC,GAAGmgB,EAAE,GAAGhK,CAAC;MACnC,IAAMsK,EAAE,GAAGH,EAAE,GAAGnK,CAAC,GAAGgK,EAAE,GAAG7f,CAAC,GAAG8f,EAAE,GAAGpgB,CAAC;MACnC,IAAM0gB,EAAE,GAAG,CAAEP,EAAE,GAAGngB,CAAC,GAAGogB,EAAE,GAAG9f,CAAC,GAAG+f,EAAE,GAAGlK,CAAC;;MAErC;;MAEA,IAAI,CAACnW,CAAC,GAAGugB,EAAE,GAAGD,EAAE,GAAGI,EAAE,GAAG,CAAEP,EAAE,GAAGK,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;MACpD,IAAI,CAAC9f,CAAC,GAAGkgB,EAAE,GAAGF,EAAE,GAAGI,EAAE,GAAG,CAAEN,EAAE,GAAGK,EAAE,GAAG,CAAEN,EAAE,GAAGI,EAAE,GAAG,CAAEF,EAAE;MACpD,IAAI,CAAClK,CAAC,GAAGsK,EAAE,GAAGH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE,GAAGE,EAAE,GAAG,CAAEH,EAAE,GAAGI,EAAE,GAAG,CAAEL,EAAE;MAEpD,OAAO,IAAI;IAEZ;EAAC;IAAAt3B,GAAA;IAAAE,KAAA,EAED,SAAA43B,QAASC,MAAM,EAAG;MAEjB,OAAO,IAAI,CAACpK,YAAY,CAAEoK,MAAM,CAACC,kBAAkB,CAAE,CAACrK,YAAY,CAAEoK,MAAM,CAACE,gBAAgB,CAAE;IAE9F;EAAC;IAAAj4B,GAAA;IAAAE,KAAA,EAED,SAAAg4B,UAAWH,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACpK,YAAY,CAAEoK,MAAM,CAACI,uBAAuB,CAAE,CAACxK,YAAY,CAAEoK,MAAM,CAACK,WAAW,CAAE;IAE9F;EAAC;IAAAp4B,GAAA;IAAAE,KAAA,EAED,SAAAm4B,mBAAoBphB,CAAC,EAAG;MAEvB;MACA;;MAEA,IAAME,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEM,CAAC,GAAG,IAAI,CAACA,CAAC;QAAE6V,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAMtQ,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC;MAC7C,IAAI,CAAC7V,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,CAAC,CAAE,GAAGsQ,CAAC;MAC7C,IAAI,CAACA,CAAC,GAAGtQ,CAAC,CAAE,CAAC,CAAE,GAAG7F,CAAC,GAAG6F,CAAC,CAAE,CAAC,CAAE,GAAGvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE,GAAGsQ,CAAC;MAE9C,OAAO,IAAI,CAACpS,SAAS,EAAE;IAExB;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAA2c,OAAQV,CAAC,EAAG;MAEX,IAAI,CAAChF,CAAC,IAAIgF,CAAC,CAAChF,CAAC;MACb,IAAI,CAACM,CAAC,IAAI0E,CAAC,CAAC1E,CAAC;MACb,IAAI,CAAC6V,CAAC,IAAInR,CAAC,CAACmR,CAAC;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA4c,aAAclB,MAAM,EAAG;MAEtB,OAAO,IAAI,CAACgB,cAAc,CAAE,CAAC,GAAGhB,MAAM,CAAE;IAEzC;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA2W,IAAKsF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACM,CAAC,EAAEgF,CAAC,CAAChF,CAAC,CAAE;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACY,GAAG,CAAE,IAAI,CAACY,CAAC,EAAE0E,CAAC,CAAC1E,CAAC,CAAE;MAChC,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACY,GAAG,CAAE,IAAI,CAACyW,CAAC,EAAEnR,CAAC,CAACmR,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA4W,IAAKqF,CAAC,EAAG;MAER,IAAI,CAAChF,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACK,CAAC,EAAEgF,CAAC,CAAChF,CAAC,CAAE;MAChC,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAE,IAAI,CAACW,CAAC,EAAE0E,CAAC,CAAC1E,CAAC,CAAE;MAChC,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACa,GAAG,CAAE,IAAI,CAACwW,CAAC,EAAEnR,CAAC,CAACmR,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA0W,MAAOC,GAAG,EAAEC,GAAG,EAAG;MAEjB;;MAEA,IAAI,CAACK,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACM,CAAC,EAAElB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACK,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MACrD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAED,GAAG,CAACY,CAAC,EAAExB,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MACrD,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACa,GAAG,CAAED,GAAG,CAACyW,CAAC,EAAErX,IAAI,CAACY,GAAG,CAAEC,GAAG,CAACwW,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAgd,YAAaC,MAAM,EAAEC,MAAM,EAAG;MAE7B,IAAI,CAACjG,CAAC,GAAGlB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACjG,CAAC,CAAE,CAAE;MACvD,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAAC3F,CAAC,CAAE,CAAE;MACvD,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACa,GAAG,CAAEqG,MAAM,EAAElH,IAAI,CAACY,GAAG,CAAEuG,MAAM,EAAE,IAAI,CAACkQ,CAAC,CAAE,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAmd,YAAaxG,GAAG,EAAEC,GAAG,EAAG;MAEvB,IAAMhR,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;MAE5B,OAAO,IAAI,CAACgX,YAAY,CAAEhX,MAAM,IAAI,CAAC,CAAE,CAAC8W,cAAc,CAAE3G,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAEhR,MAAM,CAAE,CAAE,CAAE;IAEnG;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAqY,MAAA,EAAQ;MAEP,IAAI,CAACpB,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;MAC7B,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC+U,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAmZ,KAAA,EAAO;MAEN,IAAI,CAAClC,CAAC,GAAGlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE;MAC5B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE;MAC5B,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACiU,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAib,MAAA,EAAQ;MAEP,IAAI,CAAChE,CAAC,GAAGlB,IAAI,CAACkF,KAAK,CAAE,IAAI,CAAChE,CAAC,CAAE;MAC7B,IAAI,CAACM,CAAC,GAAGxB,IAAI,CAACkF,KAAK,CAAE,IAAI,CAAC1D,CAAC,CAAE;MAC7B,IAAI,CAAC6V,CAAC,GAAGrX,IAAI,CAACkF,KAAK,CAAE,IAAI,CAACmS,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAod,YAAA,EAAc;MAEb,IAAI,CAACnG,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKlB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAClC,CAAC,CAAE,GAAGlB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACpB,CAAC,CAAE;MACpE,IAAI,CAACM,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKxB,IAAI,CAACoD,IAAI,CAAE,IAAI,CAAC5B,CAAC,CAAE,GAAGxB,IAAI,CAACsC,KAAK,CAAE,IAAI,CAACd,CAAC,CAAE;MACpE,IAAI,CAAC6V,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKrX,IAAI,CAACoD,IAAI,CAAE,IAAI,CAACiU,CAAC,CAAE,GAAGrX,IAAI,CAACsC,KAAK,CAAE,IAAI,CAAC+U,CAAC,CAAE;MAEpE,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAqd,OAAA,EAAS;MAER,IAAI,CAACpG,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAACM,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MACjB,IAAI,CAAC6V,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAsd,IAAKrB,CAAC,EAAG;MAER,OAAO,IAAI,CAAChF,CAAC,GAAGgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAAC6V,CAAC,GAAGnR,CAAC,CAACmR,CAAC;IAElD;;IAEA;EAAA;IAAAttB,GAAA;IAAAE,KAAA,EAEA,SAAAwd,SAAA,EAAW;MAEV,OAAO,IAAI,CAACvG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC6V,CAAC,GAAG,IAAI,CAACA,CAAC;IAE3D;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA4F,OAAA,EAAS;MAER,OAAOmQ,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACxG,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACM,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC6V,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;IAExE;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA0d,gBAAA,EAAkB;MAEjB,OAAO3H,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,CAAE,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACqV,CAAC,CAAE;IAEpE;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAgb,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC4B,YAAY,CAAE,IAAI,CAAChX,MAAM,EAAE,IAAI,CAAC,CAAE;IAE/C;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAke,UAAWtY,MAAM,EAAG;MAEnB,OAAO,IAAI,CAACoV,SAAS,EAAE,CAAC0B,cAAc,CAAE9W,MAAM,CAAE;IAEjD;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAwX,KAAMyE,CAAC,EAAEkC,KAAK,EAAG;MAEhB,IAAI,CAAClH,CAAC,IAAI,CAAEgF,CAAC,CAAChF,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKkH,KAAK;MAClC,IAAI,CAAC5G,CAAC,IAAI,CAAE0E,CAAC,CAAC1E,CAAC,GAAG,IAAI,CAACA,CAAC,IAAK4G,KAAK;MAClC,IAAI,CAACiP,CAAC,IAAI,CAAEnR,CAAC,CAACmR,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKjP,KAAK;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAoe,YAAaC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;MAE5B,IAAI,CAAClH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,GAAG,CAAEqH,EAAE,CAACrH,CAAC,GAAGoH,EAAE,CAACpH,CAAC,IAAKkH,KAAK;MACvC,IAAI,CAAC5G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,GAAG,CAAE+G,EAAE,CAAC/G,CAAC,GAAG8G,EAAE,CAAC9G,CAAC,IAAK4G,KAAK;MACvC,IAAI,CAACiP,CAAC,GAAG/O,EAAE,CAAC+O,CAAC,GAAG,CAAE9O,EAAE,CAAC8O,CAAC,GAAG/O,EAAE,CAAC+O,CAAC,IAAKjP,KAAK;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAud,MAAOtB,CAAC,EAAG;MAEV,OAAO,IAAI,CAACmc,YAAY,CAAE,IAAI,EAAEnc,CAAC,CAAE;IAEpC;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAAo4B,aAAc3e,CAAC,EAAEC,CAAC,EAAG;MAEpB,IAAM2e,EAAE,GAAG5e,CAAC,CAACxC,CAAC;QAAEqhB,EAAE,GAAG7e,CAAC,CAAClC,CAAC;QAAEghB,EAAE,GAAG9e,CAAC,CAAC2T,CAAC;MAClC,IAAMoL,EAAE,GAAG9e,CAAC,CAACzC,CAAC;QAAEwhB,EAAE,GAAG/e,CAAC,CAACnC,CAAC;QAAEmhB,EAAE,GAAGhf,CAAC,CAAC0T,CAAC;MAElC,IAAI,CAACnW,CAAC,GAAGqhB,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;MAC1B,IAAI,CAAClhB,CAAC,GAAGghB,EAAE,GAAGC,EAAE,GAAGH,EAAE,GAAGK,EAAE;MAC1B,IAAI,CAACtL,CAAC,GAAGiL,EAAE,GAAGI,EAAE,GAAGH,EAAE,GAAGE,EAAE;MAE1B,OAAO,IAAI;IAEZ;EAAC;IAAA14B,GAAA;IAAAE,KAAA,EAED,SAAA24B,gBAAiB1c,CAAC,EAAG;MAEpB,IAAM2c,WAAW,GAAG3c,CAAC,CAACuB,QAAQ,EAAE;MAEhC,IAAKob,WAAW,KAAK,CAAC,EAAG,OAAO,IAAI,CAACre,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEnD,IAAMmB,MAAM,GAAGO,CAAC,CAACqB,GAAG,CAAE,IAAI,CAAE,GAAGsb,WAAW;MAE1C,OAAO,IAAI,CAAC5c,IAAI,CAAEC,CAAC,CAAE,CAACS,cAAc,CAAEhB,MAAM,CAAE;IAE/C;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAA64B,eAAgBC,WAAW,EAAG;MAE7BC,SAAS,CAAC/c,IAAI,CAAE,IAAI,CAAE,CAAC2c,eAAe,CAAEG,WAAW,CAAE;MAErD,OAAO,IAAI,CAACxc,GAAG,CAAEyc,SAAS,CAAE;IAE7B;EAAC;IAAAj5B,GAAA;IAAAE,KAAA,EAED,SAAAg5B,QAASC,MAAM,EAAG;MAEjB;MACA;;MAEA,OAAO,IAAI,CAAC3c,GAAG,CAAEyc,SAAS,CAAC/c,IAAI,CAAEid,MAAM,CAAE,CAACvc,cAAc,CAAE,CAAC,GAAG,IAAI,CAACY,GAAG,CAAE2b,MAAM,CAAE,CAAE,CAAE;IAErF;EAAC;IAAAn5B,GAAA;IAAAE,KAAA,EAED,SAAAwzB,QAASvX,CAAC,EAAG;MAEZ,IAAM2c,WAAW,GAAG7iB,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACD,QAAQ,EAAE,GAAGvB,CAAC,CAACuB,QAAQ,EAAE,CAAE;MAE/D,IAAKob,WAAW,KAAK,CAAC,EAAG,OAAO7iB,IAAI,CAACC,EAAE,GAAG,CAAC;MAE3C,IAAMwN,KAAK,GAAG,IAAI,CAAClG,GAAG,CAAErB,CAAC,CAAE,GAAG2c,WAAW;;MAEzC;;MAEA,OAAO7iB,IAAI,CAAC4X,IAAI,CAAEjX,KAAK,CAAE8M,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IAE3C;EAAC;IAAA1jB,GAAA;IAAAE,KAAA,EAED,SAAA6d,WAAY5B,CAAC,EAAG;MAEf,OAAOlG,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACK,iBAAiB,CAAE7B,CAAC,CAAE,CAAE;IAEhD;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAA8d,kBAAmB7B,CAAC,EAAG;MAEtB,IAAM8B,EAAE,GAAG,IAAI,CAAC9G,CAAC,GAAGgF,CAAC,CAAChF,CAAC;QAAE+G,EAAE,GAAG,IAAI,CAACzG,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;QAAE2hB,EAAE,GAAG,IAAI,CAAC9L,CAAC,GAAGnR,CAAC,CAACmR,CAAC;MAE7D,OAAOrP,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGkb,EAAE,GAAGA,EAAE;IAEnC;EAAC;IAAAp5B,GAAA;IAAAE,KAAA,EAED,SAAAie,oBAAqBhC,CAAC,EAAG;MAExB,OAAOlG,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACd,CAAC,GAAGgF,CAAC,CAAChF,CAAC,CAAE,GAAGlB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACR,CAAC,GAAG0E,CAAC,CAAC1E,CAAC,CAAE,GAAGxB,IAAI,CAACgC,GAAG,CAAE,IAAI,CAACqV,CAAC,GAAGnR,CAAC,CAACmR,CAAC,CAAE;IAEtF;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm5B,iBAAkBzgB,CAAC,EAAG;MAErB,OAAO,IAAI,CAAC0gB,sBAAsB,CAAE1gB,CAAC,CAAC2gB,MAAM,EAAE3gB,CAAC,CAAC4gB,GAAG,EAAE5gB,CAAC,CAAC8K,KAAK,CAAE;IAE/D;EAAC;IAAA1jB,GAAA;IAAAE,KAAA,EAED,SAAAo5B,uBAAwBC,MAAM,EAAEC,GAAG,EAAE9V,KAAK,EAAG;MAE5C,IAAM+V,YAAY,GAAGxjB,IAAI,CAAC+D,GAAG,CAAEwf,GAAG,CAAE,GAAGD,MAAM;MAE7C,IAAI,CAACpiB,CAAC,GAAGsiB,YAAY,GAAGxjB,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;MACzC,IAAI,CAACjM,CAAC,GAAGxB,IAAI,CAAC8D,GAAG,CAAEyf,GAAG,CAAE,GAAGD,MAAM;MACjC,IAAI,CAACjM,CAAC,GAAGmM,YAAY,GAAGxjB,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA1jB,GAAA;IAAAE,KAAA,EAED,SAAAw5B,mBAAoB7f,CAAC,EAAG;MAEvB,OAAO,IAAI,CAAC8f,wBAAwB,CAAE9f,CAAC,CAAC0f,MAAM,EAAE1f,CAAC,CAAC6J,KAAK,EAAE7J,CAAC,CAACpC,CAAC,CAAE;IAE/D;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAy5B,yBAA0BJ,MAAM,EAAE7V,KAAK,EAAEjM,CAAC,EAAG;MAE5C,IAAI,CAACN,CAAC,GAAGoiB,MAAM,GAAGtjB,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;MACnC,IAAI,CAACjM,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC6V,CAAC,GAAGiM,MAAM,GAAGtjB,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAA1jB,GAAA;IAAAE,KAAA,EAED,SAAA05B,sBAAuB3iB,CAAC,EAAG;MAE1B,IAAM+F,CAAC,GAAG/F,CAAC,CAACgG,QAAQ;MAEpB,IAAI,CAAC9F,CAAC,GAAG6F,CAAC,CAAE,EAAE,CAAE;MAChB,IAAI,CAACvF,CAAC,GAAGuF,CAAC,CAAE,EAAE,CAAE;MAChB,IAAI,CAACsQ,CAAC,GAAGtQ,CAAC,CAAE,EAAE,CAAE;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAAhd,GAAA;IAAAE,KAAA,EAED,SAAA25B,mBAAoB5iB,CAAC,EAAG;MAEvB,IAAMkM,EAAE,GAAG,IAAI,CAAC2W,mBAAmB,CAAE7iB,CAAC,EAAE,CAAC,CAAE,CAACnR,MAAM,EAAE;MACpD,IAAMsd,EAAE,GAAG,IAAI,CAAC0W,mBAAmB,CAAE7iB,CAAC,EAAE,CAAC,CAAE,CAACnR,MAAM,EAAE;MACpD,IAAMi0B,EAAE,GAAG,IAAI,CAACD,mBAAmB,CAAE7iB,CAAC,EAAE,CAAC,CAAE,CAACnR,MAAM,EAAE;MAEpD,IAAI,CAACqR,CAAC,GAAGgM,EAAE;MACX,IAAI,CAAC1L,CAAC,GAAG2L,EAAE;MACX,IAAI,CAACkK,CAAC,GAAGyM,EAAE;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA/5B,GAAA;IAAAE,KAAA,EAED,SAAA45B,oBAAqB7iB,CAAC,EAAEzB,KAAK,EAAG;MAE/B,OAAO,IAAI,CAACkJ,SAAS,CAAEzH,CAAC,CAACgG,QAAQ,EAAEzH,KAAK,GAAG,CAAC,CAAE;IAE/C;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAqgB,qBAAsBtJ,CAAC,EAAEzB,KAAK,EAAG;MAEhC,OAAO,IAAI,CAACkJ,SAAS,CAAEzH,CAAC,CAACgG,QAAQ,EAAEzH,KAAK,GAAG,CAAC,CAAE;IAE/C;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAsyB,aAAcxV,CAAC,EAAG;MAEjB,IAAI,CAAC7F,CAAC,GAAG6F,CAAC,CAACkV,EAAE;MACb,IAAI,CAACza,CAAC,GAAGuF,CAAC,CAACmV,EAAE;MACb,IAAI,CAAC7E,CAAC,GAAGtQ,CAAC,CAACoV,EAAE;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAApyB,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQtC,CAAC,EAAG;MAEX,OAAWA,CAAC,CAAChF,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQgF,CAAC,CAAC1E,CAAC,KAAK,IAAI,CAACA,CAAG,IAAM0E,CAAC,CAACmR,CAAC,KAAK,IAAI,CAACA,CAAG;IAExE;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAI,CAACxH,CAAC,GAAGvB,KAAK,CAAE+I,MAAM,CAAE;MACxB,IAAI,CAAClH,CAAC,GAAG7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAC5B,IAAI,CAAC2O,CAAC,GAAG1X,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACxH,CAAC;MACxBvB,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAClH,CAAC;MAC5B7B,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC2O,CAAC;MAE5B,OAAO1X,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA2e,oBAAqBC,SAAS,EAAEtJ,KAAK,EAAG;MAEvC,IAAI,CAAC2B,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEvJ,KAAK,CAAE;MAChC,IAAI,CAACiC,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAExJ,KAAK,CAAE;MAChC,IAAI,CAAC8X,CAAC,GAAGxO,SAAS,CAACsJ,IAAI,CAAE5S,KAAK,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAoW,OAAA,EAAS;MAER,IAAI,CAACa,CAAC,GAAGlB,IAAI,CAACK,MAAM,EAAE;MACtB,IAAI,CAACmB,CAAC,GAAGxB,IAAI,CAACK,MAAM,EAAE;MACtB,IAAI,CAACgX,CAAC,GAAGrX,IAAI,CAACK,MAAM,EAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAtW,GAAA;IAAAE,KAAA,EAED,SAAA85B,gBAAA,EAAkB;MAEjB;;MAEA,IAAMC,CAAC,GAAG,CAAEhkB,IAAI,CAACK,MAAM,EAAE,GAAG,GAAG,IAAK,CAAC;MACrC,IAAMqB,CAAC,GAAG1B,IAAI,CAACK,MAAM,EAAE,GAAGL,IAAI,CAACC,EAAE,GAAG,CAAC;MACrC,IAAM+L,CAAC,GAAGhM,IAAI,CAAC0H,IAAI,CAAE,CAAC,GAAA1H,IAAA,CAAAmD,GAAA,CAAG6gB,CAAC,EAAI,CAAC,EAAE;MAEjC,IAAI,CAAC9iB,CAAC,GAAG8K,CAAC,GAAGhM,IAAI,CAAC8D,GAAG,CAAEpC,CAAC,CAAE;MAC1B,IAAI,CAACF,CAAC,GAAGwK,CAAC,GAAGhM,IAAI,CAAC+D,GAAG,CAAErC,CAAC,CAAE;MAC1B,IAAI,CAAC2V,CAAC,GAAG2M,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAj6B,GAAA,EAAA82B,iBAAA;IAAA52B,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAED,SAAApG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAme,OAAA+a,SAAA;QAAA,kBAAAA,SAAA,CAAA/yB,IAAA,GAAA+yB,SAAA,CAAAr1B,IAAA;UAAA;YAAAq1B,SAAA,CAAAr1B,IAAA;YAEC,OAAM,IAAI,CAACsS,CAAC;UAAA;YAAA+iB,SAAA,CAAAr1B,IAAA;YACZ,OAAM,IAAI,CAAC4S,CAAC;UAAA;YAAAyiB,SAAA,CAAAr1B,IAAA;YACZ,OAAM,IAAI,CAACyoB,CAAC;UAAA;UAAA;YAAA,OAAA4M,SAAA,CAAA5yB,IAAA;QAAA;MAAA,GAAApH,KAAA;IAAA,CAEZ;EAAA;EAAA,OAAA22B,OAAA;AAAA,EANEz2B,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAAq3B,OAAA,GAAAA,OAAA;AAUnB,IAAMoC,SAAS,GAAG,aAAc,IAAIpC,OAAO,EAAE;AAC7C,IAAMM,aAAa,GAAG,aAAc,IAAIpF,UAAU,EAAE;AAAC,IAE/CoI,IAAI;EAET,SAAAA,KAAatjB,GAAG,GAAG,IAAIggB,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAEtjB,GAAG,GAAG,IAAI+f,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAG;IAAA9xB,eAAA,OAAA6xB,IAAA;IAE/H,IAAI,CAACE,MAAM,GAAG,IAAI;IAElB,IAAI,CAACxjB,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAAChO,YAAA,CAAAqxB,IAAA;IAAAn6B,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK5D,GAAG,EAAEC,GAAG,EAAG;MAEf,IAAI,CAACD,GAAG,CAACqF,IAAI,CAAErF,GAAG,CAAE;MACpB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAEpF,GAAG,CAAE;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAAo6B,aAAc1kB,KAAK,EAAG;MAErB,IAAI2kB,IAAI,GAAG,CAAEH,QAAQ;MACrB,IAAII,IAAI,GAAG,CAAEJ,QAAQ;MACrB,IAAIK,IAAI,GAAG,CAAEL,QAAQ;MAErB,IAAIM,IAAI,GAAG,CAAEN,QAAQ;MACrB,IAAIO,IAAI,GAAG,CAAEP,QAAQ;MACrB,IAAIQ,IAAI,GAAG,CAAER,QAAQ;MAErB,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGD,KAAK,CAAC9P,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,IAAI,CAAC,EAAG;QAElD,IAAMoR,CAAC,GAAGvB,KAAK,CAAE7P,CAAC,CAAE;QACpB,IAAM0R,CAAC,GAAG7B,KAAK,CAAE7P,CAAC,GAAG,CAAC,CAAE;QACxB,IAAMunB,CAAC,GAAG1X,KAAK,CAAE7P,CAAC,GAAG,CAAC,CAAE;QAExB,IAAKoR,CAAC,GAAGojB,IAAI,EAAGA,IAAI,GAAGpjB,CAAC;QACxB,IAAKM,CAAC,GAAG+iB,IAAI,EAAGA,IAAI,GAAG/iB,CAAC;QACxB,IAAK6V,CAAC,GAAGmN,IAAI,EAAGA,IAAI,GAAGnN,CAAC;QAExB,IAAKnW,CAAC,GAAGujB,IAAI,EAAGA,IAAI,GAAGvjB,CAAC;QACxB,IAAKM,CAAC,GAAGkjB,IAAI,EAAGA,IAAI,GAAGljB,CAAC;QACxB,IAAK6V,CAAC,GAAGsN,IAAI,EAAGA,IAAI,GAAGtN,CAAC;MAEzB;MAEA,IAAI,CAACzW,GAAG,CAAC4D,GAAG,CAAE8f,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAE;MAChC,IAAI,CAAC3jB,GAAG,CAAC2D,GAAG,CAAEigB,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA56B,GAAA;IAAAE,KAAA,EAED,SAAA26B,uBAAwB/b,SAAS,EAAG;MAEnC,IAAIyb,IAAI,GAAG,CAAEH,QAAQ;MACrB,IAAII,IAAI,GAAG,CAAEJ,QAAQ;MACrB,IAAIK,IAAI,GAAG,CAAEL,QAAQ;MAErB,IAAIM,IAAI,GAAG,CAAEN,QAAQ;MACrB,IAAIO,IAAI,GAAG,CAAEP,QAAQ;MACrB,IAAIQ,IAAI,GAAG,CAAER,QAAQ;MAErB,KAAM,IAAIr0B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGiJ,SAAS,CAAC6S,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEnD,IAAMoR,CAAC,GAAG2H,SAAS,CAACC,IAAI,CAAEhZ,CAAC,CAAE;QAC7B,IAAM0R,CAAC,GAAGqH,SAAS,CAACE,IAAI,CAAEjZ,CAAC,CAAE;QAC7B,IAAMunB,CAAC,GAAGxO,SAAS,CAACsJ,IAAI,CAAEriB,CAAC,CAAE;QAE7B,IAAKoR,CAAC,GAAGojB,IAAI,EAAGA,IAAI,GAAGpjB,CAAC;QACxB,IAAKM,CAAC,GAAG+iB,IAAI,EAAGA,IAAI,GAAG/iB,CAAC;QACxB,IAAK6V,CAAC,GAAGmN,IAAI,EAAGA,IAAI,GAAGnN,CAAC;QAExB,IAAKnW,CAAC,GAAGujB,IAAI,EAAGA,IAAI,GAAGvjB,CAAC;QACxB,IAAKM,CAAC,GAAGkjB,IAAI,EAAGA,IAAI,GAAGljB,CAAC;QACxB,IAAK6V,CAAC,GAAGsN,IAAI,EAAGA,IAAI,GAAGtN,CAAC;MAEzB;MAEA,IAAI,CAACzW,GAAG,CAAC4D,GAAG,CAAE8f,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAE;MAChC,IAAI,CAAC3jB,GAAG,CAAC2D,GAAG,CAAEigB,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA56B,GAAA;IAAAE,KAAA,EAED,SAAA46B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACC,SAAS,EAAE;MAEhB,KAAM,IAAIj1B,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGiJ,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEnD,IAAI,CAACk1B,aAAa,CAAEF,MAAM,CAAEh1B,CAAC,CAAE,CAAE;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAg7B,qBAAsBhc,MAAM,EAAE2H,IAAI,EAAG;MAEpC,IAAMsU,QAAQ,GAAGC,SAAS,CAAClf,IAAI,CAAE2K,IAAI,CAAE,CAACjK,cAAc,CAAE,GAAG,CAAE;MAE7D,IAAI,CAAC/F,GAAG,CAACqF,IAAI,CAAEgD,MAAM,CAAE,CAAC1C,GAAG,CAAE2e,QAAQ,CAAE;MACvC,IAAI,CAACrkB,GAAG,CAACoF,IAAI,CAAEgD,MAAM,CAAE,CAAC9C,GAAG,CAAE+e,QAAQ,CAAE;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAAm7B,cAAet0B,MAAM,EAAEu0B,OAAO,GAAG,KAAK,EAAG;MAExC,IAAI,CAACN,SAAS,EAAE;MAEhB,OAAO,IAAI,CAACO,cAAc,CAAEx0B,MAAM,EAAEu0B,OAAO,CAAE;IAE9C;EAAC;IAAAt7B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMsf,GAAG,EAAG;MAEX,IAAI,CAAC3kB,GAAG,CAACqF,IAAI,CAAEsf,GAAG,CAAC3kB,GAAG,CAAE;MACxB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAEsf,GAAG,CAAC1kB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAA86B,UAAA,EAAY;MAEX,IAAI,CAACnkB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACN,GAAG,CAACY,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACyW,CAAC,GAAG,CAAE8M,QAAQ;MACjD,IAAI,CAACtjB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACX,GAAG,CAACwW,CAAC,GAAG,CAAE8M,QAAQ;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAp6B,GAAA;IAAAE,KAAA,EAED,SAAAu7B,QAAA,EAAU;MAET;;MAEA,OAAS,IAAI,CAAC3kB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAQ,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAG,IAAM,IAAI,CAACX,GAAG,CAACwW,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAG;IAEjG;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAw7B,UAAWhzB,MAAM,EAAG;MAEnB,OAAO,IAAI,CAAC+yB,OAAO,EAAE,GAAG/yB,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG/R,MAAM,CAAC4T,UAAU,CAAE,IAAI,CAACzF,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE,CAAC8F,cAAc,CAAE,GAAG,CAAE;IAE9G;EAAC;IAAA5c,GAAA;IAAAE,KAAA,EAED,SAAAy7B,QAASjzB,MAAM,EAAG;MAEjB,OAAO,IAAI,CAAC+yB,OAAO,EAAE,GAAG/yB,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,GAAG/R,MAAM,CAACgU,UAAU,CAAE,IAAI,CAAC5F,GAAG,EAAE,IAAI,CAACD,GAAG,CAAE;IAExF;EAAC;IAAA7W,GAAA;IAAAE,KAAA,EAED,SAAA+6B,cAAeW,KAAK,EAAG;MAEtB,IAAI,CAAC/kB,GAAG,CAACA,GAAG,CAAE+kB,KAAK,CAAE;MACrB,IAAI,CAAC9kB,GAAG,CAACA,GAAG,CAAE8kB,KAAK,CAAE;MAErB,OAAO,IAAI;IAEZ;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAA27B,eAAgBC,MAAM,EAAG;MAExB,IAAI,CAACjlB,GAAG,CAAC2F,GAAG,CAAEsf,MAAM,CAAE;MACtB,IAAI,CAAChlB,GAAG,CAACsF,GAAG,CAAE0f,MAAM,CAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA97B,GAAA;IAAAE,KAAA,EAED,SAAA67B,eAAgBngB,MAAM,EAAG;MAExB,IAAI,CAAC/E,GAAG,CAACwF,SAAS,CAAE,CAAET,MAAM,CAAE;MAC9B,IAAI,CAAC9E,GAAG,CAACuF,SAAS,CAAET,MAAM,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAAq7B,eAAgBx0B,MAAM,EAAEu0B,OAAO,GAAG,KAAK,EAAG;MAEzC;MACA;;MAEAv0B,MAAM,CAACi1B,iBAAiB,CAAE,KAAK,EAAE,KAAK,CAAE;MAExC,IAAMC,QAAQ,GAAGl1B,MAAM,CAACk1B,QAAQ;MAEhC,IAAKA,QAAQ,KAAKz3B,SAAS,EAAG;QAE7B,IAAK82B,OAAO,IAAIW,QAAQ,CAACC,UAAU,IAAI13B,SAAS,IAAIy3B,QAAQ,CAACC,UAAU,CAACC,QAAQ,KAAK33B,SAAS,EAAG;UAEhG,IAAM23B,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;UAC7C,KAAM,IAAIp2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGsmB,QAAQ,CAACxK,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;YAElDq1B,SAAS,CAACvc,mBAAmB,CAAEsd,QAAQ,EAAEp2B,CAAC,CAAE,CAAC4nB,YAAY,CAAE5mB,MAAM,CAACqxB,WAAW,CAAE;YAC/E,IAAI,CAAC6C,aAAa,CAAEG,SAAS,CAAE;UAEhC;QAED,CAAC,MAAM;UAEN,IAAKa,QAAQ,CAACG,WAAW,KAAK,IAAI,EAAG;YAEpCH,QAAQ,CAACI,kBAAkB,EAAE;UAE9B;UAEAC,MAAM,CAACpgB,IAAI,CAAE+f,QAAQ,CAACG,WAAW,CAAE;UACnCE,MAAM,CAAC3O,YAAY,CAAE5mB,MAAM,CAACqxB,WAAW,CAAE;UAEzC,IAAI,CAACmE,KAAK,CAAED,MAAM,CAAE;QAErB;MAED;MAEA,IAAME,QAAQ,GAAGz1B,MAAM,CAACy1B,QAAQ;MAEhC,KAAM,IAAIz2B,GAAC,GAAG,CAAC,EAAE8P,EAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,GAAC,GAAG8P,EAAC,EAAE9P,GAAC,EAAG,EAAG;QAEnD,IAAI,CAACw1B,cAAc,CAAEiB,QAAQ,CAAEz2B,GAAC,CAAE,EAAEu1B,OAAO,CAAE;MAE9C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAt7B,GAAA;IAAAE,KAAA,EAED,SAAAu8B,cAAeb,KAAK,EAAG;MAEtB,OAAOA,KAAK,CAACzkB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIykB,KAAK,CAACzkB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAClDykB,KAAK,CAACnkB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAImkB,KAAK,CAACnkB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,IAC5CmkB,KAAK,CAACtO,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAC,IAAIsO,KAAK,CAACtO,CAAC,GAAG,IAAI,CAACxW,GAAG,CAACwW,CAAC,GAAG,KAAK,GAAG,IAAI;IAE7D;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAw8B,YAAalB,GAAG,EAAG;MAElB,OAAO,IAAI,CAAC3kB,GAAG,CAACM,CAAC,IAAIqkB,GAAG,CAAC3kB,GAAG,CAACM,CAAC,IAAIqkB,GAAG,CAAC1kB,GAAG,CAACK,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IACxD,IAAI,CAACN,GAAG,CAACY,CAAC,IAAI+jB,GAAG,CAAC3kB,GAAG,CAACY,CAAC,IAAI+jB,GAAG,CAAC1kB,GAAG,CAACW,CAAC,IAAI,IAAI,CAACX,GAAG,CAACW,CAAC,IAClD,IAAI,CAACZ,GAAG,CAACyW,CAAC,IAAIkO,GAAG,CAAC3kB,GAAG,CAACyW,CAAC,IAAIkO,GAAG,CAAC1kB,GAAG,CAACwW,CAAC,IAAI,IAAI,CAACxW,GAAG,CAACwW,CAAC;IAEpD;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAy8B,aAAcf,KAAK,EAAElzB,MAAM,EAAG;MAE7B;MACA;;MAEA,OAAOA,MAAM,CAAC+R,GAAG,CAChB,CAAEmhB,KAAK,CAACzkB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,KAAO,IAAI,CAACL,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAE,EACtD,CAAEykB,KAAK,CAACnkB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,KAAO,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,CAAE,EACtD,CAAEmkB,KAAK,CAACtO,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAC,KAAO,IAAI,CAACxW,GAAG,CAACwW,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAC,CAAE,CACtD;IAEF;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB;MACA,OAAOA,GAAG,CAAC1kB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIqkB,GAAG,CAAC3kB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IACtDqkB,GAAG,CAAC1kB,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAI+jB,GAAG,CAAC3kB,GAAG,CAACY,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,IAChD+jB,GAAG,CAAC1kB,GAAG,CAACwW,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAC,IAAIkO,GAAG,CAAC3kB,GAAG,CAACyW,CAAC,GAAG,IAAI,CAACxW,GAAG,CAACwW,CAAC,GAAG,KAAK,GAAG,IAAI;IAEjE;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA28B,iBAAkBC,MAAM,EAAG;MAE1B;MACA,IAAI,CAACC,UAAU,CAAED,MAAM,CAAC5d,MAAM,EAAEkc,SAAS,CAAE;;MAE3C;MACA,OAAOA,SAAS,CAACpd,iBAAiB,CAAE8e,MAAM,CAAC5d,MAAM,CAAE,IAAM4d,MAAM,CAACvD,MAAM,GAAGuD,MAAM,CAACvD,MAAQ;IAEzF;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA88B,gBAAiBC,KAAK,EAAG;MAExB;MACA;;MAEA,IAAIpmB,GAAG,EAAEC,GAAG;MAEZ,IAAKmmB,KAAK,CAAC9D,MAAM,CAAChiB,CAAC,GAAG,CAAC,EAAG;QAEzBN,GAAG,GAAGomB,KAAK,CAAC9D,MAAM,CAAChiB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC;QACjCL,GAAG,GAAGmmB,KAAK,CAAC9D,MAAM,CAAChiB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;MAElC,CAAC,MAAM;QAENN,GAAG,GAAGomB,KAAK,CAAC9D,MAAM,CAAChiB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC;QACjCL,GAAG,GAAGmmB,KAAK,CAAC9D,MAAM,CAAChiB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC;MAElC;MAEA,IAAK8lB,KAAK,CAAC9D,MAAM,CAAC1hB,CAAC,GAAG,CAAC,EAAG;QAEzBZ,GAAG,IAAIomB,KAAK,CAAC9D,MAAM,CAAC1hB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC;QAClCX,GAAG,IAAImmB,KAAK,CAAC9D,MAAM,CAAC1hB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC;MAEnC,CAAC,MAAM;QAENZ,GAAG,IAAIomB,KAAK,CAAC9D,MAAM,CAAC1hB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC;QAClCX,GAAG,IAAImmB,KAAK,CAAC9D,MAAM,CAAC1hB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC;MAEnC;MAEA,IAAKwlB,KAAK,CAAC9D,MAAM,CAAC7L,CAAC,GAAG,CAAC,EAAG;QAEzBzW,GAAG,IAAIomB,KAAK,CAAC9D,MAAM,CAAC7L,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAC;QAClCxW,GAAG,IAAImmB,KAAK,CAAC9D,MAAM,CAAC7L,CAAC,GAAG,IAAI,CAACxW,GAAG,CAACwW,CAAC;MAEnC,CAAC,MAAM;QAENzW,GAAG,IAAIomB,KAAK,CAAC9D,MAAM,CAAC7L,CAAC,GAAG,IAAI,CAACxW,GAAG,CAACwW,CAAC;QAClCxW,GAAG,IAAImmB,KAAK,CAAC9D,MAAM,CAAC7L,CAAC,GAAG,IAAI,CAACzW,GAAG,CAACyW,CAAC;MAEnC;MAEA,OAASzW,GAAG,IAAI,CAAEomB,KAAK,CAACC,QAAQ,IAAIpmB,GAAG,IAAI,CAAEmmB,KAAK,CAACC,QAAQ;IAE5D;EAAC;IAAAl9B,GAAA;IAAAE,KAAA,EAED,SAAAi9B,mBAAoBC,QAAQ,EAAG;MAE9B,IAAK,IAAI,CAAC3B,OAAO,EAAE,EAAG;QAErB,OAAO,KAAK;MAEb;;MAEA;MACA,IAAI,CAACC,SAAS,CAAE2B,OAAO,CAAE;MACzBC,QAAQ,CAAC5gB,UAAU,CAAE,IAAI,CAAC5F,GAAG,EAAEumB,OAAO,CAAE;;MAExC;MACAE,KAAK,CAAC7gB,UAAU,CAAE0gB,QAAQ,CAACzjB,CAAC,EAAE0jB,OAAO,CAAE;MACvCG,KAAK,CAAC9gB,UAAU,CAAE0gB,QAAQ,CAACxjB,CAAC,EAAEyjB,OAAO,CAAE;MACvCI,KAAK,CAAC/gB,UAAU,CAAE0gB,QAAQ,CAACvjB,CAAC,EAAEwjB,OAAO,CAAE;;MAEvC;MACAK,GAAG,CAAChhB,UAAU,CAAE8gB,KAAK,EAAED,KAAK,CAAE;MAC9BI,GAAG,CAACjhB,UAAU,CAAE+gB,KAAK,EAAED,KAAK,CAAE;MAC9BI,GAAG,CAAClhB,UAAU,CAAE6gB,KAAK,EAAEE,KAAK,CAAE;;MAE9B;MACA;MACA;MACA,IAAII,IAAI,GAAG,CACV,CAAC,EAAE,CAAEH,GAAG,CAACpQ,CAAC,EAAEoQ,GAAG,CAACjmB,CAAC,EAAE,CAAC,EAAE,CAAEkmB,GAAG,CAACrQ,CAAC,EAAEqQ,GAAG,CAAClmB,CAAC,EAAE,CAAC,EAAE,CAAEmmB,GAAG,CAACtQ,CAAC,EAAEsQ,GAAG,CAACnmB,CAAC,EACvDimB,GAAG,CAACpQ,CAAC,EAAE,CAAC,EAAE,CAAEoQ,GAAG,CAACvmB,CAAC,EAAEwmB,GAAG,CAACrQ,CAAC,EAAE,CAAC,EAAE,CAAEqQ,GAAG,CAACxmB,CAAC,EAAEymB,GAAG,CAACtQ,CAAC,EAAE,CAAC,EAAE,CAAEsQ,GAAG,CAACzmB,CAAC,EACvD,CAAEumB,GAAG,CAACjmB,CAAC,EAAEimB,GAAG,CAACvmB,CAAC,EAAE,CAAC,EAAE,CAAEwmB,GAAG,CAAClmB,CAAC,EAAEkmB,GAAG,CAACxmB,CAAC,EAAE,CAAC,EAAE,CAAEymB,GAAG,CAACnmB,CAAC,EAAEmmB,GAAG,CAACzmB,CAAC,EAAE,CAAC,CACvD;MACD,IAAK,CAAE2mB,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAQ,CAAE,EAAG;QAE1D,OAAO,KAAK;MAEb;;MAEA;MACAO,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpC,IAAK,CAAEC,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAQ,CAAE,EAAG;QAE1D,OAAO,KAAK;MAEb;;MAEA;MACA;MACAS,eAAe,CAACzF,YAAY,CAAEoF,GAAG,EAAEC,GAAG,CAAE;MACxCE,IAAI,GAAG,CAAEE,eAAe,CAAC5mB,CAAC,EAAE4mB,eAAe,CAACtmB,CAAC,EAAEsmB,eAAe,CAACzQ,CAAC,CAAE;MAElE,OAAOwQ,UAAU,CAAED,IAAI,EAAEN,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEH,QAAQ,CAAE;IAEzD;EAAC;IAAAt9B,GAAA;IAAAE,KAAA,EAED,SAAA68B,WAAYnB,KAAK,EAAElzB,MAAM,EAAG;MAE3B,OAAOA,MAAM,CAACwT,IAAI,CAAE0f,KAAK,CAAE,CAAChlB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE;IAExD;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAA89B,gBAAiBpC,KAAK,EAAG;MAExB,IAAMqC,YAAY,GAAG7C,SAAS,CAAClf,IAAI,CAAE0f,KAAK,CAAE,CAAChlB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE;MAExE,OAAOmnB,YAAY,CAACzhB,GAAG,CAAEof,KAAK,CAAE,CAAC91B,MAAM,EAAE;IAE1C;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAg+B,kBAAmBx1B,MAAM,EAAG;MAE3B,IAAI,CAACgzB,SAAS,CAAEhzB,MAAM,CAACwW,MAAM,CAAE;MAE/BxW,MAAM,CAAC6wB,MAAM,GAAG,IAAI,CAACoC,OAAO,CAAEP,SAAS,CAAE,CAACt1B,MAAM,EAAE,GAAG,GAAG;MAExD,OAAO4C,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAi+B,UAAW3C,GAAG,EAAG;MAEhB,IAAI,CAAC3kB,GAAG,CAACC,GAAG,CAAE0kB,GAAG,CAAC3kB,GAAG,CAAE;MACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAE2kB,GAAG,CAAC1kB,GAAG,CAAE;;MAEvB;MACA,IAAK,IAAI,CAAC2kB,OAAO,EAAE,EAAG,IAAI,CAACT,SAAS,EAAE;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAh7B,GAAA;IAAAE,KAAA,EAED,SAAAq8B,MAAOf,GAAG,EAAG;MAEZ,IAAI,CAAC3kB,GAAG,CAACA,GAAG,CAAE2kB,GAAG,CAAC3kB,GAAG,CAAE;MACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAE0kB,GAAG,CAAC1kB,GAAG,CAAE;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc/J,MAAM,EAAG;MAEtB;MACA,IAAK,IAAI,CAAC6X,OAAO,EAAE,EAAG,OAAO,IAAI;;MAEjC;MACA2C,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACyW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACX,GAAG,CAACwW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACyW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC5D,GAAG,CAACM,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACX,GAAG,CAACwW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACyW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACN,GAAG,CAACY,CAAC,EAAE,IAAI,CAACX,GAAG,CAACwW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACZ,GAAG,CAACyW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;MAC/Ewa,OAAO,CAAE,CAAC,CAAE,CAAC3jB,GAAG,CAAE,IAAI,CAAC3D,GAAG,CAACK,CAAC,EAAE,IAAI,CAACL,GAAG,CAACW,CAAC,EAAE,IAAI,CAACX,GAAG,CAACwW,CAAC,CAAE,CAACK,YAAY,CAAE/J,MAAM,CAAE,CAAC,CAAC;;MAE/E,IAAI,CAACkX,aAAa,CAAEsD,OAAO,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAp+B,GAAA;IAAAE,KAAA,EAED,SAAAyjB,UAAWhF,MAAM,EAAG;MAEnB,IAAI,CAAC9H,GAAG,CAACuF,GAAG,CAAEuC,MAAM,CAAE;MACtB,IAAI,CAAC7H,GAAG,CAACsF,GAAG,CAAEuC,MAAM,CAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQ+c,GAAG,EAAG;MAEb,OAAOA,GAAG,CAAC3kB,GAAG,CAAC4H,MAAM,CAAE,IAAI,CAAC5H,GAAG,CAAE,IAAI2kB,GAAG,CAAC1kB,GAAG,CAAC2H,MAAM,CAAE,IAAI,CAAC3H,GAAG,CAAE;IAEhE;EAAC;EAAA,OAAAqjB,IAAA;AAAA;AAAA36B,OAAA,CAAA26B,IAAA,GAAAA,IAAA;AAIF,IAAMiE,OAAO,GAAG,CACf,aAAc,IAAIvH,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,EAC3B,aAAc,IAAIA,OAAO,EAAE,CAC3B;AAED,IAAMuE,SAAS,GAAG,aAAc,IAAIvE,OAAO,EAAE;AAE7C,IAAMyF,MAAM,GAAG,aAAc,IAAInC,IAAI,EAAE;;AAEvC;;AAEA,IAAMoD,KAAK,GAAG,aAAc,IAAI1G,OAAO,EAAE;AACzC,IAAM2G,KAAK,GAAG,aAAc,IAAI3G,OAAO,EAAE;AACzC,IAAM4G,KAAK,GAAG,aAAc,IAAI5G,OAAO,EAAE;;AAEzC;;AAEA,IAAM6G,GAAG,GAAG,aAAc,IAAI7G,OAAO,EAAE;AACvC,IAAM8G,GAAG,GAAG,aAAc,IAAI9G,OAAO,EAAE;AACvC,IAAM+G,GAAG,GAAG,aAAc,IAAI/G,OAAO,EAAE;AAEvC,IAAMwG,OAAO,GAAG,aAAc,IAAIxG,OAAO,EAAE;AAC3C,IAAMyG,QAAQ,GAAG,aAAc,IAAIzG,OAAO,EAAE;AAC5C,IAAMkH,eAAe,GAAG,aAAc,IAAIlH,OAAO,EAAE;AACnD,IAAMwH,SAAS,GAAG,aAAc,IAAIxH,OAAO,EAAE;AAE7C,SAASiH,UAAUA,CAAED,IAAI,EAAES,EAAE,EAAE/f,EAAE,EAAEC,EAAE,EAAE+f,OAAO,EAAG;EAEhD,KAAM,IAAIx4B,CAAC,GAAG,CAAC,EAAEy4B,CAAC,GAAGX,IAAI,CAAC/3B,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAIy4B,CAAC,EAAEz4B,CAAC,IAAI,CAAC,EAAG;IAEtDs4B,SAAS,CAAC3f,SAAS,CAAEmf,IAAI,EAAE93B,CAAC,CAAE;IAC9B;IACA,IAAMgd,CAAC,GAAGwb,OAAO,CAACpnB,CAAC,GAAGlB,IAAI,CAACgC,GAAG,CAAEomB,SAAS,CAAClnB,CAAC,CAAE,GAAGonB,OAAO,CAAC9mB,CAAC,GAAGxB,IAAI,CAACgC,GAAG,CAAEomB,SAAS,CAAC5mB,CAAC,CAAE,GAAG8mB,OAAO,CAACjR,CAAC,GAAGrX,IAAI,CAACgC,GAAG,CAAEomB,SAAS,CAAC/Q,CAAC,CAAE;IACzH;IACA,IAAMmR,EAAE,GAAGH,EAAE,CAAC9gB,GAAG,CAAE6gB,SAAS,CAAE;IAC9B,IAAMK,EAAE,GAAGngB,EAAE,CAACf,GAAG,CAAE6gB,SAAS,CAAE;IAC9B,IAAMM,EAAE,GAAGngB,EAAE,CAAChB,GAAG,CAAE6gB,SAAS,CAAE;IAC9B;IACA,IAAKpoB,IAAI,CAACa,GAAG,CAAE,CAAEb,IAAI,CAACa,GAAG,CAAE2nB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAE,EAAE1oB,IAAI,CAACY,GAAG,CAAE4nB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAE,CAAE,GAAG5b,CAAC,EAAG;MAEvE;MACA;MACA,OAAO,KAAK;IAEb;EAED;EAEA,OAAO,IAAI;AAEZ;AAEA,IAAM6b,MAAM,GAAG,aAAc,IAAIzE,IAAI,EAAE;AACvC,IAAM0E,KAAK,GAAG,aAAc,IAAIhI,OAAO,EAAE;AACzC,IAAMiI,gBAAgB,GAAG,aAAc,IAAIjI,OAAO,EAAE;AACpD,IAAMkI,QAAQ,GAAG,aAAc,IAAIlI,OAAO,EAAE;AAAC,IAEvCmI,MAAM;EAEX,SAAAA,OAAa9f,MAAM,GAAG,IAAI2X,OAAO,EAAE,EAAE0C,MAAM,GAAG,CAAE,CAAC,EAAG;IAAAjxB,eAAA,OAAA02B,MAAA;IAEnD,IAAI,CAAC9f,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACqa,MAAM,GAAGA,MAAM;EAErB;EAACzwB,YAAA,CAAAk2B,MAAA;IAAAh/B,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKyE,MAAM,EAAEqa,MAAM,EAAG;MAErB,IAAI,CAACra,MAAM,CAAChD,IAAI,CAAEgD,MAAM,CAAE;MAC1B,IAAI,CAACqa,MAAM,GAAGA,MAAM;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA46B,cAAeC,MAAM,EAAEkE,cAAc,EAAG;MAEvC,IAAM/f,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAK+f,cAAc,KAAKz6B,SAAS,EAAG;QAEnC0a,MAAM,CAAChD,IAAI,CAAE+iB,cAAc,CAAE;MAE9B,CAAC,MAAM;QAENL,MAAM,CAAC9D,aAAa,CAAEC,MAAM,CAAE,CAACW,SAAS,CAAExc,MAAM,CAAE;MAEnD;MAEA,IAAIggB,WAAW,GAAG,CAAC;MAEnB,KAAM,IAAIn5B,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGiJ,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEnDm5B,WAAW,GAAGjpB,IAAI,CAACa,GAAG,CAAEooB,WAAW,EAAEhgB,MAAM,CAAClB,iBAAiB,CAAE+c,MAAM,CAAEh1B,CAAC,CAAE,CAAE,CAAE;MAE/E;MAEA,IAAI,CAACwzB,MAAM,GAAGtjB,IAAI,CAAC0H,IAAI,CAAEuhB,WAAW,CAAE;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAl/B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM4gB,MAAM,EAAG;MAEd,IAAI,CAAC5d,MAAM,CAAChD,IAAI,CAAE4gB,MAAM,CAAC5d,MAAM,CAAE;MACjC,IAAI,CAACqa,MAAM,GAAGuD,MAAM,CAACvD,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAAu7B,QAAA,EAAU;MAET,OAAS,IAAI,CAAClC,MAAM,GAAG,CAAC;IAEzB;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA86B,UAAA,EAAY;MAEX,IAAI,CAAC9b,MAAM,CAACzE,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC1B,IAAI,CAAC8e,MAAM,GAAG,CAAE,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAAu8B,cAAeb,KAAK,EAAG;MAEtB,OAASA,KAAK,CAAC5d,iBAAiB,CAAE,IAAI,CAACkB,MAAM,CAAE,IAAM,IAAI,CAACqa,MAAM,GAAG,IAAI,CAACA,MAAQ;IAEjF;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA89B,gBAAiBpC,KAAK,EAAG;MAExB,OAASA,KAAK,CAAC7d,UAAU,CAAE,IAAI,CAACmB,MAAM,CAAE,GAAG,IAAI,CAACqa,MAAM;IAEvD;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA28B,iBAAkBC,MAAM,EAAG;MAE1B,IAAMqC,SAAS,GAAG,IAAI,CAAC5F,MAAM,GAAGuD,MAAM,CAACvD,MAAM;MAE7C,OAAOuD,MAAM,CAAC5d,MAAM,CAAClB,iBAAiB,CAAE,IAAI,CAACkB,MAAM,CAAE,IAAMigB,SAAS,GAAGA,SAAW;IAEnF;EAAC;IAAAn/B,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAACqB,gBAAgB,CAAE,IAAI,CAAE;IAEpC;EAAC;IAAA78B,GAAA;IAAAE,KAAA,EAED,SAAA88B,gBAAiBC,KAAK,EAAG;MAExB,OAAOhnB,IAAI,CAACgC,GAAG,CAAEglB,KAAK,CAACe,eAAe,CAAE,IAAI,CAAC9e,MAAM,CAAE,CAAE,IAAI,IAAI,CAACqa,MAAM;IAEvE;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA68B,WAAYnB,KAAK,EAAElzB,MAAM,EAAG;MAE3B,IAAM02B,aAAa,GAAG,IAAI,CAAClgB,MAAM,CAAClB,iBAAiB,CAAE4d,KAAK,CAAE;MAE5DlzB,MAAM,CAACwT,IAAI,CAAE0f,KAAK,CAAE;MAEpB,IAAKwD,aAAa,GAAK,IAAI,CAAC7F,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;QAEpD7wB,MAAM,CAAC8T,GAAG,CAAE,IAAI,CAAC0C,MAAM,CAAE,CAAChE,SAAS,EAAE;QACrCxS,MAAM,CAACkU,cAAc,CAAE,IAAI,CAAC2c,MAAM,CAAE,CAACnd,GAAG,CAAE,IAAI,CAAC8C,MAAM,CAAE;MAExD;MAEA,OAAOxW,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAm/B,eAAgB32B,MAAM,EAAG;MAExB,IAAK,IAAI,CAAC+yB,OAAO,EAAE,EAAG;QAErB;QACA/yB,MAAM,CAACsyB,SAAS,EAAE;QAClB,OAAOtyB,MAAM;MAEd;MAEAA,MAAM,CAAC+R,GAAG,CAAE,IAAI,CAACyE,MAAM,EAAE,IAAI,CAACA,MAAM,CAAE;MACtCxW,MAAM,CAACqzB,cAAc,CAAE,IAAI,CAACxC,MAAM,CAAE;MAEpC,OAAO7wB,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc/J,MAAM,EAAG;MAEtB,IAAI,CAAC1E,MAAM,CAACyO,YAAY,CAAE/J,MAAM,CAAE;MAClC,IAAI,CAAC2V,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG3V,MAAM,CAAC0b,iBAAiB,EAAE;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAAt/B,GAAA;IAAAE,KAAA,EAED,SAAAyjB,UAAWhF,MAAM,EAAG;MAEnB,IAAI,CAACO,MAAM,CAAC9C,GAAG,CAAEuC,MAAM,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA+6B,cAAeW,KAAK,EAAG;MAEtB;;MAEAmD,QAAQ,CAACriB,UAAU,CAAEkf,KAAK,EAAE,IAAI,CAAC1c,MAAM,CAAE;MAEzC,IAAMxB,QAAQ,GAAGqhB,QAAQ,CAACrhB,QAAQ,EAAE;MAEpC,IAAKA,QAAQ,GAAK,IAAI,CAAC6b,MAAM,GAAG,IAAI,CAACA,MAAQ,EAAG;QAE/C,IAAMzzB,MAAM,GAAGmQ,IAAI,CAAC0H,IAAI,CAAED,QAAQ,CAAE;QACpC,IAAM6hB,iBAAiB,GAAG,CAAEz5B,MAAM,GAAG,IAAI,CAACyzB,MAAM,IAAK,GAAG;;QAExD;QACA;QACA;;QAEA,IAAI,CAACra,MAAM,CAAC9C,GAAG,CAAE2iB,QAAQ,CAACniB,cAAc,CAAE2iB,iBAAiB,GAAGz5B,MAAM,CAAE,CAAE;QACxE,IAAI,CAACyzB,MAAM,IAAIgG,iBAAiB;MAEjC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAv/B,GAAA;IAAAE,KAAA,EAED,SAAAq8B,MAAOO,MAAM,EAAG;MAEf;;MAEA;MACA;MACA;;MAEC,IAAK,IAAI,CAAC5d,MAAM,CAACT,MAAM,CAAEqe,MAAM,CAAC5d,MAAM,CAAE,KAAK,IAAI,EAAG;QAEnD4f,gBAAgB,CAACrkB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAACmC,cAAc,CAAEkgB,MAAM,CAACvD,MAAM,CAAE;MAGjE,CAAC,MAAM;QAENuF,gBAAgB,CAACpiB,UAAU,CAAEogB,MAAM,CAAC5d,MAAM,EAAE,IAAI,CAACA,MAAM,CAAE,CAAChE,SAAS,EAAE,CAAC0B,cAAc,CAAEkgB,MAAM,CAACvD,MAAM,CAAE;MAEtG;MAEA,IAAI,CAAC0B,aAAa,CAAE4D,KAAK,CAAC3iB,IAAI,CAAE4gB,MAAM,CAAC5d,MAAM,CAAE,CAAC9C,GAAG,CAAE0iB,gBAAgB,CAAE,CAAE;MACzE,IAAI,CAAC7D,aAAa,CAAE4D,KAAK,CAAC3iB,IAAI,CAAE4gB,MAAM,CAAC5d,MAAM,CAAE,CAAC1C,GAAG,CAAEsiB,gBAAgB,CAAE,CAAE;MAEzE,OAAO,IAAI;IAEZ;EAAC;IAAA9+B,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQqe,MAAM,EAAG;MAEhB,OAAOA,MAAM,CAAC5d,MAAM,CAACT,MAAM,CAAE,IAAI,CAACS,MAAM,CAAE,IAAM4d,MAAM,CAACvD,MAAM,KAAK,IAAI,CAACA,MAAQ;IAEhF;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAA8iB,MAAA;AAAA;AAAAx/B,OAAA,CAAAw/B,MAAA,GAAAA,MAAA;AAIF,IAAMQ,SAAS,GAAG,aAAc,IAAI3I,OAAO,EAAE;AAC7C,IAAM4I,UAAU,GAAG,aAAc,IAAI5I,OAAO,EAAE;AAC9C,IAAM6I,OAAO,GAAG,aAAc,IAAI7I,OAAO,EAAE;AAC3C,IAAM8I,KAAK,GAAG,aAAc,IAAI9I,OAAO,EAAE;AAEzC,IAAM+I,MAAM,GAAG,aAAc,IAAI/I,OAAO,EAAE;AAC1C,IAAMgJ,MAAM,GAAG,aAAc,IAAIhJ,OAAO,EAAE;AAC1C,IAAMiJ,SAAS,GAAG,aAAc,IAAIjJ,OAAO,EAAE;AAAC,IAExCkJ,GAAG;EAER,SAAAA,IAAaC,MAAM,GAAG,IAAInJ,OAAO,EAAE,EAAEoJ,SAAS,GAAG,IAAIpJ,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EAAG;IAAAvuB,eAAA,OAAAy3B,GAAA;IAE3E,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAE3B;EAACn3B,YAAA,CAAAi3B,GAAA;IAAA//B,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKulB,MAAM,EAAEC,SAAS,EAAG;MAExB,IAAI,CAACD,MAAM,CAAC9jB,IAAI,CAAE8jB,MAAM,CAAE;MAC1B,IAAI,CAACC,SAAS,CAAC/jB,IAAI,CAAE+jB,SAAS,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAjgC,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMgkB,GAAG,EAAG;MAEX,IAAI,CAACF,MAAM,CAAC9jB,IAAI,CAAEgkB,GAAG,CAACF,MAAM,CAAE;MAC9B,IAAI,CAACC,SAAS,CAAC/jB,IAAI,CAAEgkB,GAAG,CAACD,SAAS,CAAE;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAjgC,GAAA;IAAAE,KAAA,EAED,SAAAigC,GAAIxoB,CAAC,EAAEjP,MAAM,EAAG;MAEf,OAAOA,MAAM,CAACwT,IAAI,CAAE,IAAI,CAAC+jB,SAAS,CAAE,CAACrjB,cAAc,CAAEjF,CAAC,CAAE,CAACyE,GAAG,CAAE,IAAI,CAAC4jB,MAAM,CAAE;IAE5E;EAAC;IAAAhgC,GAAA;IAAAE,KAAA,EAED,SAAAkgC,OAAQjkB,CAAC,EAAG;MAEX,IAAI,CAAC8jB,SAAS,CAAC/jB,IAAI,CAAEC,CAAC,CAAE,CAACK,GAAG,CAAE,IAAI,CAACwjB,MAAM,CAAE,CAAC9kB,SAAS,EAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAAmgC,OAAQ1oB,CAAC,EAAG;MAEX,IAAI,CAACqoB,MAAM,CAAC9jB,IAAI,CAAE,IAAI,CAACikB,EAAE,CAAExoB,CAAC,EAAE6nB,SAAS,CAAE,CAAE;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAx/B,GAAA;IAAAE,KAAA,EAED,SAAAogC,oBAAqB1E,KAAK,EAAElzB,MAAM,EAAG;MAEpCA,MAAM,CAACgU,UAAU,CAAEkf,KAAK,EAAE,IAAI,CAACoE,MAAM,CAAE;MAEvC,IAAMO,iBAAiB,GAAG73B,MAAM,CAAC8U,GAAG,CAAE,IAAI,CAACyiB,SAAS,CAAE;MAEtD,IAAKM,iBAAiB,GAAG,CAAC,EAAG;QAE5B,OAAO73B,MAAM,CAACwT,IAAI,CAAE,IAAI,CAAC8jB,MAAM,CAAE;MAElC;MAEA,OAAOt3B,MAAM,CAACwT,IAAI,CAAE,IAAI,CAAC+jB,SAAS,CAAE,CAACrjB,cAAc,CAAE2jB,iBAAiB,CAAE,CAACnkB,GAAG,CAAE,IAAI,CAAC4jB,MAAM,CAAE;IAE5F;EAAC;IAAAhgC,GAAA;IAAAE,KAAA,EAED,SAAA89B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO3lB,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAAC6iB,iBAAiB,CAAE5E,KAAK,CAAE,CAAE;IAEpD;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAsgC,kBAAmB5E,KAAK,EAAG;MAE1B,IAAM2E,iBAAiB,GAAGf,SAAS,CAAC9iB,UAAU,CAAEkf,KAAK,EAAE,IAAI,CAACoE,MAAM,CAAE,CAACxiB,GAAG,CAAE,IAAI,CAACyiB,SAAS,CAAE;;MAE1F;;MAEA,IAAKM,iBAAiB,GAAG,CAAC,EAAG;QAE5B,OAAO,IAAI,CAACP,MAAM,CAAChiB,iBAAiB,CAAE4d,KAAK,CAAE;MAE9C;MAEA4D,SAAS,CAACtjB,IAAI,CAAE,IAAI,CAAC+jB,SAAS,CAAE,CAACrjB,cAAc,CAAE2jB,iBAAiB,CAAE,CAACnkB,GAAG,CAAE,IAAI,CAAC4jB,MAAM,CAAE;MAEvF,OAAOR,SAAS,CAACxhB,iBAAiB,CAAE4d,KAAK,CAAE;IAE5C;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAugC,oBAAqBnC,EAAE,EAAE/f,EAAE,EAAEmiB,kBAAkB,EAAEC,sBAAsB,EAAG;MAEzE;MACA;MACA;MACA;MACA;MACA;;MAEAlB,UAAU,CAACvjB,IAAI,CAAEoiB,EAAE,CAAE,CAACliB,GAAG,CAAEmC,EAAE,CAAE,CAAC3B,cAAc,CAAE,GAAG,CAAE;MACrD8iB,OAAO,CAACxjB,IAAI,CAAEqC,EAAE,CAAE,CAAC/B,GAAG,CAAE8hB,EAAE,CAAE,CAACpjB,SAAS,EAAE;MACxCykB,KAAK,CAACzjB,IAAI,CAAE,IAAI,CAAC8jB,MAAM,CAAE,CAACxjB,GAAG,CAAEijB,UAAU,CAAE;MAE3C,IAAMmB,SAAS,GAAGtC,EAAE,CAACvgB,UAAU,CAAEQ,EAAE,CAAE,GAAG,GAAG;MAC3C,IAAMsiB,GAAG,GAAG,CAAE,IAAI,CAACZ,SAAS,CAACziB,GAAG,CAAEkiB,OAAO,CAAE;MAC3C,IAAMoB,EAAE,GAAGnB,KAAK,CAACniB,GAAG,CAAE,IAAI,CAACyiB,SAAS,CAAE;MACtC,IAAM3oB,EAAE,GAAG,CAAEqoB,KAAK,CAACniB,GAAG,CAAEkiB,OAAO,CAAE;MACjC,IAAM7lB,CAAC,GAAG8lB,KAAK,CAACjiB,QAAQ,EAAE;MAC1B,IAAM8E,GAAG,GAAGvM,IAAI,CAACgC,GAAG,CAAE,CAAC,GAAG4oB,GAAG,GAAGA,GAAG,CAAE;MACrC,IAAIE,EAAE,EAAEhO,EAAE,EAAEiO,OAAO,EAAEC,MAAM;MAE3B,IAAKze,GAAG,GAAG,CAAC,EAAG;QAEd;;QAEAue,EAAE,GAAGF,GAAG,GAAGvpB,EAAE,GAAGwpB,EAAE;QAClB/N,EAAE,GAAG8N,GAAG,GAAGC,EAAE,GAAGxpB,EAAE;QAClB2pB,MAAM,GAAGL,SAAS,GAAGpe,GAAG;QAExB,IAAKue,EAAE,IAAI,CAAC,EAAG;UAEd,IAAKhO,EAAE,IAAI,CAAEkO,MAAM,EAAG;YAErB,IAAKlO,EAAE,IAAIkO,MAAM,EAAG;cAEnB;cACA;;cAEA,IAAMC,MAAM,GAAG,CAAC,GAAG1e,GAAG;cACtBue,EAAE,IAAIG,MAAM;cACZnO,EAAE,IAAImO,MAAM;cACZF,OAAO,GAAGD,EAAE,IAAKA,EAAE,GAAGF,GAAG,GAAG9N,EAAE,GAAG,CAAC,GAAG+N,EAAE,CAAE,GAAG/N,EAAE,IAAK8N,GAAG,GAAGE,EAAE,GAAGhO,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;YAEhF,CAAC,MAAM;cAEN;;cAEAkZ,EAAE,GAAG6N,SAAS;cACdG,EAAE,GAAG9qB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI+pB,GAAG,GAAG9N,EAAE,GAAG+N,EAAE,CAAE,CAAE;cACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGhO,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;YAE/C;UAED,CAAC,MAAM;YAEN;;YAEAkZ,EAAE,GAAG,CAAE6N,SAAS;YAChBG,EAAE,GAAG9qB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI+pB,GAAG,GAAG9N,EAAE,GAAG+N,EAAE,CAAE,CAAE;YACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGhO,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;UAE/C;QAED,CAAC,MAAM;UAEN,IAAKkZ,EAAE,IAAI,CAAEkO,MAAM,EAAG;YAErB;;YAEAF,EAAE,GAAG9qB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI,CAAE+pB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAE,CAAE;YAChD/N,EAAE,GAAKgO,EAAE,GAAG,CAAC,GAAK,CAAEH,SAAS,GAAG3qB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAE8pB,SAAS,EAAE,CAAEtpB,EAAE,CAAE,EAAEspB,SAAS,CAAE;YACpFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGhO,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;UAE/C,CAAC,MAAM,IAAKkZ,EAAE,IAAIkO,MAAM,EAAG;YAE1B;;YAEAF,EAAE,GAAG,CAAC;YACNhO,EAAE,GAAG9c,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAE8pB,SAAS,EAAE,CAAEtpB,EAAE,CAAE,EAAEspB,SAAS,CAAE;YACzDI,OAAO,GAAGjO,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;UAEnC,CAAC,MAAM;YAEN;;YAEAknB,EAAE,GAAG9qB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI+pB,GAAG,GAAGD,SAAS,GAAGE,EAAE,CAAE,CAAE;YAC9C/N,EAAE,GAAKgO,EAAE,GAAG,CAAC,GAAKH,SAAS,GAAG3qB,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACa,GAAG,CAAE,CAAE8pB,SAAS,EAAE,CAAEtpB,EAAE,CAAE,EAAEspB,SAAS,CAAE;YAClFI,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGhO,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;UAE/C;QAED;MAED,CAAC,MAAM;QAEN;;QAEAkZ,EAAE,GAAK8N,GAAG,GAAG,CAAC,GAAK,CAAED,SAAS,GAAGA,SAAS;QAC1CG,EAAE,GAAG9qB,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE,EAAI+pB,GAAG,GAAG9N,EAAE,GAAG+N,EAAE,CAAE,CAAE;QACvCE,OAAO,GAAG,CAAED,EAAE,GAAGA,EAAE,GAAGhO,EAAE,IAAKA,EAAE,GAAG,CAAC,GAAGzb,EAAE,CAAE,GAAGuC,CAAC;MAE/C;MAEA,IAAK6mB,kBAAkB,EAAG;QAEzBA,kBAAkB,CAACxkB,IAAI,CAAE,IAAI,CAAC+jB,SAAS,CAAE,CAACrjB,cAAc,CAAEmkB,EAAE,CAAE,CAAC3kB,GAAG,CAAE,IAAI,CAAC4jB,MAAM,CAAE;MAElF;MAEA,IAAKW,sBAAsB,EAAG;QAE7BA,sBAAsB,CAACzkB,IAAI,CAAEwjB,OAAO,CAAE,CAAC9iB,cAAc,CAAEmW,EAAE,CAAE,CAAC3W,GAAG,CAAEqjB,UAAU,CAAE;MAE9E;MAEA,OAAOuB,OAAO;IAEf;EAAC;IAAAhhC,GAAA;IAAAE,KAAA,EAED,SAAAihC,gBAAiBrE,MAAM,EAAEp0B,MAAM,EAAG;MAEjC82B,SAAS,CAAC9iB,UAAU,CAAEogB,MAAM,CAAC5d,MAAM,EAAE,IAAI,CAAC8gB,MAAM,CAAE;MAClD,IAAMoB,GAAG,GAAG5B,SAAS,CAAChiB,GAAG,CAAE,IAAI,CAACyiB,SAAS,CAAE;MAC3C,IAAMzpB,EAAE,GAAGgpB,SAAS,CAAChiB,GAAG,CAAEgiB,SAAS,CAAE,GAAG4B,GAAG,GAAGA,GAAG;MACjD,IAAMC,OAAO,GAAGvE,MAAM,CAACvD,MAAM,GAAGuD,MAAM,CAACvD,MAAM;MAE7C,IAAK/iB,EAAE,GAAG6qB,OAAO,EAAG,OAAO,IAAI;MAE/B,IAAMC,GAAG,GAAGrrB,IAAI,CAAC0H,IAAI,CAAE0jB,OAAO,GAAG7qB,EAAE,CAAE;;MAErC;MACA,IAAM+qB,EAAE,GAAGH,GAAG,GAAGE,GAAG;;MAEpB;MACA,IAAME,EAAE,GAAGJ,GAAG,GAAGE,GAAG;;MAEpB;MACA,IAAKC,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI;;MAEnC;MACA;MACA;MACA,IAAKD,EAAE,GAAG,CAAC,EAAG,OAAO,IAAI,CAACpB,EAAE,CAAEqB,EAAE,EAAE94B,MAAM,CAAE;;MAE1C;MACA,OAAO,IAAI,CAACy3B,EAAE,CAAEoB,EAAE,EAAE74B,MAAM,CAAE;IAE7B;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAA28B,iBAAkBC,MAAM,EAAG;MAE1B,OAAO,IAAI,CAAC0D,iBAAiB,CAAE1D,MAAM,CAAC5d,MAAM,CAAE,IAAM4d,MAAM,CAACvD,MAAM,GAAGuD,MAAM,CAACvD,MAAQ;IAEpF;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAAuhC,gBAAiBxE,KAAK,EAAG;MAExB,IAAMnE,WAAW,GAAGmE,KAAK,CAAC9D,MAAM,CAAC3b,GAAG,CAAE,IAAI,CAACyiB,SAAS,CAAE;MAEtD,IAAKnH,WAAW,KAAK,CAAC,EAAG;QAExB;QACA,IAAKmE,KAAK,CAACe,eAAe,CAAE,IAAI,CAACgC,MAAM,CAAE,KAAK,CAAC,EAAG;UAEjD,OAAO,CAAC;QAET;;QAEA;;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAMroB,CAAC,GAAG,EAAI,IAAI,CAACqoB,MAAM,CAACxiB,GAAG,CAAEyf,KAAK,CAAC9D,MAAM,CAAE,GAAG8D,KAAK,CAACC,QAAQ,CAAE,GAAGpE,WAAW;;MAE9E;;MAEA,OAAOnhB,CAAC,IAAI,CAAC,GAAGA,CAAC,GAAG,IAAI;IAEzB;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAAwhC,eAAgBzE,KAAK,EAAEv0B,MAAM,EAAG;MAE/B,IAAMiP,CAAC,GAAG,IAAI,CAAC8pB,eAAe,CAAExE,KAAK,CAAE;MAEvC,IAAKtlB,CAAC,KAAK,IAAI,EAAG;QAEjB,OAAO,IAAI;MAEZ;MAEA,OAAO,IAAI,CAACwoB,EAAE,CAAExoB,CAAC,EAAEjP,MAAM,CAAE;IAE5B;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAA88B,gBAAiBC,KAAK,EAAG;MAExB;;MAEA,IAAM0E,WAAW,GAAG1E,KAAK,CAACe,eAAe,CAAE,IAAI,CAACgC,MAAM,CAAE;MAExD,IAAK2B,WAAW,KAAK,CAAC,EAAG;QAExB,OAAO,IAAI;MAEZ;MAEA,IAAM7I,WAAW,GAAGmE,KAAK,CAAC9D,MAAM,CAAC3b,GAAG,CAAE,IAAI,CAACyiB,SAAS,CAAE;MAEtD,IAAKnH,WAAW,GAAG6I,WAAW,GAAG,CAAC,EAAG;QAEpC,OAAO,IAAI;MAEZ;;MAEA;;MAEA,OAAO,KAAK;IAEb;EAAC;IAAA3hC,GAAA;IAAAE,KAAA,EAED,SAAA0hC,aAAcpG,GAAG,EAAE9yB,MAAM,EAAG;MAE3B,IAAIm5B,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK;MAE1C,IAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAClC,SAAS,CAAC9oB,CAAC;QACnCirB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACnC,SAAS,CAACxoB,CAAC;QAC9B4qB,OAAO,GAAG,CAAC,GAAG,IAAI,CAACpC,SAAS,CAAC3S,CAAC;MAE/B,IAAM0S,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKmC,OAAO,IAAI,CAAC,EAAG;QAEnBN,IAAI,GAAG,CAAErG,GAAG,CAAC3kB,GAAG,CAACM,CAAC,GAAG6oB,MAAM,CAAC7oB,CAAC,IAAKgrB,OAAO;QACzCL,IAAI,GAAG,CAAEtG,GAAG,CAAC1kB,GAAG,CAACK,CAAC,GAAG6oB,MAAM,CAAC7oB,CAAC,IAAKgrB,OAAO;MAE1C,CAAC,MAAM;QAENN,IAAI,GAAG,CAAErG,GAAG,CAAC1kB,GAAG,CAACK,CAAC,GAAG6oB,MAAM,CAAC7oB,CAAC,IAAKgrB,OAAO;QACzCL,IAAI,GAAG,CAAEtG,GAAG,CAAC3kB,GAAG,CAACM,CAAC,GAAG6oB,MAAM,CAAC7oB,CAAC,IAAKgrB,OAAO;MAE1C;MAEA,IAAKC,OAAO,IAAI,CAAC,EAAG;QAEnBL,KAAK,GAAG,CAAEvG,GAAG,CAAC3kB,GAAG,CAACY,CAAC,GAAGuoB,MAAM,CAACvoB,CAAC,IAAK2qB,OAAO;QAC1CJ,KAAK,GAAG,CAAExG,GAAG,CAAC1kB,GAAG,CAACW,CAAC,GAAGuoB,MAAM,CAACvoB,CAAC,IAAK2qB,OAAO;MAE3C,CAAC,MAAM;QAENL,KAAK,GAAG,CAAEvG,GAAG,CAAC1kB,GAAG,CAACW,CAAC,GAAGuoB,MAAM,CAACvoB,CAAC,IAAK2qB,OAAO;QAC1CJ,KAAK,GAAG,CAAExG,GAAG,CAAC3kB,GAAG,CAACY,CAAC,GAAGuoB,MAAM,CAACvoB,CAAC,IAAK2qB,OAAO;MAE3C;MAEA,IAAOP,IAAI,GAAGG,KAAK,IAAQD,KAAK,GAAGD,IAAM,EAAG,OAAO,IAAI;;MAEvD;MACA;;MAEA,IAAKC,KAAK,GAAGF,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGE,KAAK;MAEjD,IAAKC,KAAK,GAAGF,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGE,KAAK;MAEjD,IAAKK,OAAO,IAAI,CAAC,EAAG;QAEnBJ,KAAK,GAAG,CAAEzG,GAAG,CAAC3kB,GAAG,CAACyW,CAAC,GAAG0S,MAAM,CAAC1S,CAAC,IAAK+U,OAAO;QAC1CH,KAAK,GAAG,CAAE1G,GAAG,CAAC1kB,GAAG,CAACwW,CAAC,GAAG0S,MAAM,CAAC1S,CAAC,IAAK+U,OAAO;MAE3C,CAAC,MAAM;QAENJ,KAAK,GAAG,CAAEzG,GAAG,CAAC1kB,GAAG,CAACwW,CAAC,GAAG0S,MAAM,CAAC1S,CAAC,IAAK+U,OAAO;QAC1CH,KAAK,GAAG,CAAE1G,GAAG,CAAC3kB,GAAG,CAACyW,CAAC,GAAG0S,MAAM,CAAC1S,CAAC,IAAK+U,OAAO;MAE3C;MAEA,IAAOR,IAAI,GAAGK,KAAK,IAAQD,KAAK,GAAGH,IAAM,EAAG,OAAO,IAAI;MAEvD,IAAKG,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;MAEjD,IAAKC,KAAK,GAAGJ,IAAI,IAAIA,IAAI,KAAKA,IAAI,EAAGA,IAAI,GAAGI,KAAK;;MAEjD;;MAEA,IAAKJ,IAAI,GAAG,CAAC,EAAG,OAAO,IAAI;MAE3B,OAAO,IAAI,CAAC3B,EAAE,CAAE0B,IAAI,IAAI,CAAC,GAAGA,IAAI,GAAGC,IAAI,EAAEp5B,MAAM,CAAE;IAElD;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB,OAAO,IAAI,CAACoG,YAAY,CAAEpG,GAAG,EAAEgE,SAAS,CAAE,KAAK,IAAI;IAEpD;EAAC;IAAAx/B,GAAA;IAAAE,KAAA,EAED,SAAAoiC,kBAAmB3oB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE0oB,eAAe,EAAE75B,MAAM,EAAG;MAErD;;MAEA;;MAEAk3B,MAAM,CAACljB,UAAU,CAAE9C,CAAC,EAAED,CAAC,CAAE;MACzBkmB,MAAM,CAACnjB,UAAU,CAAE7C,CAAC,EAAEF,CAAC,CAAE;MACzBmmB,SAAS,CAACxH,YAAY,CAAEsH,MAAM,EAAEC,MAAM,CAAE;;MAExC;MACA;MACA;MACA;MACA;MACA,IAAI2C,GAAG,GAAG,IAAI,CAACvC,SAAS,CAACziB,GAAG,CAAEsiB,SAAS,CAAE;MACzC,IAAI2C,IAAI;MAER,IAAKD,GAAG,GAAG,CAAC,EAAG;QAEd,IAAKD,eAAe,EAAG,OAAO,IAAI;QAClCE,IAAI,GAAG,CAAC;MAET,CAAC,MAAM,IAAKD,GAAG,GAAG,CAAC,EAAG;QAErBC,IAAI,GAAG,CAAE,CAAC;QACVD,GAAG,GAAG,CAAEA,GAAG;MAEZ,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;MAEA7C,KAAK,CAACjjB,UAAU,CAAE,IAAI,CAACsjB,MAAM,EAAErmB,CAAC,CAAE;MAClC,IAAM+oB,MAAM,GAAGD,IAAI,GAAG,IAAI,CAACxC,SAAS,CAACziB,GAAG,CAAEqiB,MAAM,CAACvH,YAAY,CAAEqH,KAAK,EAAEE,MAAM,CAAE,CAAE;;MAEhF;MACA,IAAK6C,MAAM,GAAG,CAAC,EAAG;QAEjB,OAAO,IAAI;MAEZ;MAEA,IAAMC,MAAM,GAAGF,IAAI,GAAG,IAAI,CAACxC,SAAS,CAACziB,GAAG,CAAEoiB,MAAM,CAACniB,KAAK,CAAEkiB,KAAK,CAAE,CAAE;;MAEjE;MACA,IAAKgD,MAAM,GAAG,CAAC,EAAG;QAEjB,OAAO,IAAI;MAEZ;;MAEA;MACA,IAAKD,MAAM,GAAGC,MAAM,GAAGH,GAAG,EAAG;QAE5B,OAAO,IAAI;MAEZ;;MAEA;MACA,IAAMI,GAAG,GAAG,CAAEH,IAAI,GAAG9C,KAAK,CAACniB,GAAG,CAAEsiB,SAAS,CAAE;;MAE3C;MACA,IAAK8C,GAAG,GAAG,CAAC,EAAG;QAEd,OAAO,IAAI;MAEZ;;MAEA;MACA,OAAO,IAAI,CAACzC,EAAE,CAAEyC,GAAG,GAAGJ,GAAG,EAAE95B,MAAM,CAAE;IAEpC;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc9K,OAAO,EAAG;MAEvB,IAAI,CAACmd,MAAM,CAACrS,YAAY,CAAE9K,OAAO,CAAE;MACnC,IAAI,CAACod,SAAS,CAAC5H,kBAAkB,CAAExV,OAAO,CAAE;MAE5C,OAAO,IAAI;IAEZ;EAAC;IAAA7iB,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQyhB,GAAG,EAAG;MAEb,OAAOA,GAAG,CAACF,MAAM,CAACvhB,MAAM,CAAE,IAAI,CAACuhB,MAAM,CAAE,IAAIE,GAAG,CAACD,SAAS,CAACxhB,MAAM,CAAE,IAAI,CAACwhB,SAAS,CAAE;IAElF;EAAC;IAAAjgC,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAA6jB,GAAA;AAAA;AAAAvgC,OAAA,CAAAugC,GAAA,GAAAA,GAAA;AAAA,IAII8C,OAAO;EAEZ,SAAAA,QAAA,EAAc;IAAAv6B,eAAA,OAAAu6B,OAAA;IAEbA,OAAO,CAACljC,SAAS,CAACmjC,SAAS,GAAG,IAAI;IAElC,IAAI,CAAC7lB,QAAQ,GAAG,CAEf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;EAEF;EAACnU,YAAA,CAAA+5B,OAAA;IAAA7iC,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK8E,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEsjB,GAAG,EAAErjB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEojB,GAAG,EAAEnjB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEkjB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAErF,IAAMrjB,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB+C,EAAE,CAAE,CAAC,CAAE,GAAGT,GAAG;MAAES,EAAE,CAAE,CAAC,CAAE,GAAGR,GAAG;MAAEQ,EAAE,CAAE,CAAC,CAAE,GAAGP,GAAG;MAAEO,EAAE,CAAE,EAAE,CAAE,GAAG+iB,GAAG;MAC3D/iB,EAAE,CAAE,CAAC,CAAE,GAAGN,GAAG;MAAEM,EAAE,CAAE,CAAC,CAAE,GAAGL,GAAG;MAAEK,EAAE,CAAE,CAAC,CAAE,GAAGJ,GAAG;MAAEI,EAAE,CAAE,EAAE,CAAE,GAAGgjB,GAAG;MAC3DhjB,EAAE,CAAE,CAAC,CAAE,GAAGH,GAAG;MAAEG,EAAE,CAAE,CAAC,CAAE,GAAGF,GAAG;MAAEE,EAAE,CAAE,EAAE,CAAE,GAAGD,GAAG;MAAEC,EAAE,CAAE,EAAE,CAAE,GAAGijB,GAAG;MAC5DjjB,EAAE,CAAE,CAAC,CAAE,GAAGkjB,GAAG;MAAEljB,EAAE,CAAE,CAAC,CAAE,GAAGmjB,GAAG;MAAEnjB,EAAE,CAAE,EAAE,CAAE,GAAGojB,GAAG;MAAEpjB,EAAE,CAAE,EAAE,CAAE,GAAGqjB,GAAG;MAE5D,OAAO,IAAI;IAEZ;EAAC;IAAArjC,GAAA;IAAAE,KAAA,EAED,SAAA+f,SAAA,EAAW;MAEV,IAAI,CAACxF,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAza,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI4mB,OAAO,EAAE,CAACnkB,SAAS,CAAE,IAAI,CAACzB,QAAQ,CAAE;IAEhD;EAAC;IAAAjd,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMjF,CAAC,EAAG;MAET,IAAM+I,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAMiD,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MAErB+C,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAC1EF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAC9EF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAAEF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAElF,OAAO,IAAI;IAEZ;EAAC;IAAAlgB,GAAA;IAAAE,KAAA,EAED,SAAAojC,aAAcrsB,CAAC,EAAG;MAEjB,IAAM+I,EAAE,GAAG,IAAI,CAAC/C,QAAQ;QAAEiD,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MAEzC+C,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MACnBF,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE;MAEnB,OAAO,IAAI;IAEZ;EAAC;IAAAlgB,GAAA;IAAAE,KAAA,EAED,SAAAqjC,eAAgBtsB,CAAC,EAAG;MAEnB,IAAMiJ,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MAErB,IAAI,CAACxC,GAAG,CAEPyF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5BA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAlgB,GAAA;IAAAE,KAAA,EAED,SAAAigB,aAAcC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEnCF,KAAK,CAAC0Z,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE;MACpCzZ,KAAK,CAACyZ,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE;MACpCxZ,KAAK,CAACwZ,mBAAmB,CAAE,IAAI,EAAE,CAAC,CAAE;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAA95B,GAAA;IAAAE,KAAA,EAED,SAAAsjC,UAAWpjB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAG;MAEhC,IAAI,CAAC7F,GAAG,CACP2F,KAAK,CAACjJ,CAAC,EAAEkJ,KAAK,CAAClJ,CAAC,EAAEmJ,KAAK,CAACnJ,CAAC,EAAE,CAAC,EAC5BiJ,KAAK,CAAC3I,CAAC,EAAE4I,KAAK,CAAC5I,CAAC,EAAE6I,KAAK,CAAC7I,CAAC,EAAE,CAAC,EAC5B2I,KAAK,CAACkN,CAAC,EAAEjN,KAAK,CAACiN,CAAC,EAAEhN,KAAK,CAACgN,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAujC,gBAAiBxsB,CAAC,EAAG;MAEpB;;MAEA,IAAM+I,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAMiD,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MAErB,IAAMymB,MAAM,GAAG,CAAC,GAAGC,KAAK,CAAC7J,mBAAmB,CAAE7iB,CAAC,EAAE,CAAC,CAAE,CAACnR,MAAM,EAAE;MAC7D,IAAM89B,MAAM,GAAG,CAAC,GAAGD,KAAK,CAAC7J,mBAAmB,CAAE7iB,CAAC,EAAE,CAAC,CAAE,CAACnR,MAAM,EAAE;MAC7D,IAAM+9B,MAAM,GAAG,CAAC,GAAGF,KAAK,CAAC7J,mBAAmB,CAAE7iB,CAAC,EAAE,CAAC,CAAE,CAACnR,MAAM,EAAE;MAE7Dka,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGwjB,MAAM;MAC1B1jB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGwjB,MAAM;MAC1B1jB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAGwjB,MAAM;MAC1B1jB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG0jB,MAAM;MAC1B5jB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG0jB,MAAM;MAC1B5jB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG0jB,MAAM;MAC1B5jB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG2jB,MAAM;MAC1B7jB,EAAE,CAAE,CAAC,CAAE,GAAGE,EAAE,CAAE,CAAC,CAAE,GAAG2jB,MAAM;MAC1B7jB,EAAE,CAAE,EAAE,CAAE,GAAGE,EAAE,CAAE,EAAE,CAAE,GAAG2jB,MAAM;MAC5B7jB,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAA4jC,sBAAuBrR,KAAK,EAAG;MAE9B,IAAMzS,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAM9F,CAAC,GAAGsb,KAAK,CAACtb,CAAC;QAAEM,CAAC,GAAGgb,KAAK,CAAChb,CAAC;QAAE6V,CAAC,GAAGmF,KAAK,CAACnF,CAAC;MAC3C,IAAM3T,CAAC,GAAG1D,IAAI,CAAC8D,GAAG,CAAE5C,CAAC,CAAE;QAAEyC,CAAC,GAAG3D,IAAI,CAAC+D,GAAG,CAAE7C,CAAC,CAAE;MAC1C,IAAM0C,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAEtC,CAAC,CAAE;QAAEuK,CAAC,GAAG/L,IAAI,CAAC+D,GAAG,CAAEvC,CAAC,CAAE;MAC1C,IAAMuF,CAAC,GAAG/G,IAAI,CAAC8D,GAAG,CAAEuT,CAAC,CAAE;QAAErL,CAAC,GAAGhM,IAAI,CAAC+D,GAAG,CAAEsT,CAAC,CAAE;MAE1C,IAAKmF,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;QAE5B,IAAM6G,EAAE,GAAGhH,CAAC,GAAGqD,CAAC;UAAE+mB,EAAE,GAAGpqB,CAAC,GAAGsI,CAAC;UAAErB,EAAE,GAAGhH,CAAC,GAAGoD,CAAC;UAAEgnB,EAAE,GAAGpqB,CAAC,GAAGqI,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGmD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEnG,CAAC,GAAGoI,CAAC;QACjBjC,EAAE,CAAE,CAAC,CAAE,GAAGgC,CAAC;QAEXhC,EAAE,CAAE,CAAC,CAAE,GAAG+jB,EAAE,GAAGnjB,EAAE,GAAGoB,CAAC;QACrBhC,EAAE,CAAE,CAAC,CAAE,GAAGW,EAAE,GAAGqjB,EAAE,GAAGhiB,CAAC;QACrBhC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpG,CAAC,GAAGC,CAAC;QAEjBmG,EAAE,CAAE,CAAC,CAAE,GAAGgkB,EAAE,GAAGrjB,EAAE,GAAGqB,CAAC;QACrBhC,EAAE,CAAE,CAAC,CAAE,GAAGY,EAAE,GAAGmjB,EAAE,GAAG/hB,CAAC;QACrBhC,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK4Y,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMmqB,EAAE,GAAGpqB,CAAC,GAAGmD,CAAC;UAAEknB,EAAE,GAAGrqB,CAAC,GAAGoI,CAAC;UAAEkiB,EAAE,GAAGniB,CAAC,GAAGhF,CAAC;UAAEonB,EAAE,GAAGpiB,CAAC,GAAGC,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGikB,EAAE,GAAGG,EAAE,GAAGxqB,CAAC;QACrBoG,EAAE,CAAE,CAAC,CAAE,GAAGmkB,EAAE,GAAGvqB,CAAC,GAAGsqB,EAAE;QACrBlkB,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGqI,CAAC;QAEfhC,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGsI,CAAC;QACfjC,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGqD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpG,CAAC;QAEboG,EAAE,CAAE,CAAC,CAAE,GAAGkkB,EAAE,GAAGtqB,CAAC,GAAGuqB,EAAE;QACrBnkB,EAAE,CAAE,CAAC,CAAE,GAAGokB,EAAE,GAAGH,EAAE,GAAGrqB,CAAC;QACrBoG,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK4Y,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMmqB,GAAE,GAAGpqB,CAAC,GAAGmD,CAAC;UAAEknB,GAAE,GAAGrqB,CAAC,GAAGoI,CAAC;UAAEkiB,GAAE,GAAGniB,CAAC,GAAGhF,CAAC;UAAEonB,GAAE,GAAGpiB,CAAC,GAAGC,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGikB,GAAE,GAAGG,GAAE,GAAGxqB,CAAC;QACrBoG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAErG,CAAC,GAAGsI,CAAC;QACjBjC,EAAE,CAAE,CAAC,CAAE,GAAGmkB,GAAE,GAAGD,GAAE,GAAGtqB,CAAC;QAErBoG,EAAE,CAAE,CAAC,CAAE,GAAGkkB,GAAE,GAAGC,GAAE,GAAGvqB,CAAC;QACrBoG,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGqD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAGokB,GAAE,GAAGH,GAAE,GAAGrqB,CAAC;QAErBoG,EAAE,CAAE,CAAC,CAAE,GAAG,CAAErG,CAAC,GAAGqI,CAAC;QACjBhC,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC;QACXoG,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK4Y,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAM6G,GAAE,GAAGhH,CAAC,GAAGqD,CAAC;UAAE+mB,GAAE,GAAGpqB,CAAC,GAAGsI,CAAC;UAAErB,GAAE,GAAGhH,CAAC,GAAGoD,CAAC;UAAEgnB,GAAE,GAAGpqB,CAAC,GAAGqI,CAAC;QAEpDjC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGmD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAGY,GAAE,GAAGoB,CAAC,GAAG+hB,GAAE;QACrB/jB,EAAE,CAAE,CAAC,CAAE,GAAGW,GAAE,GAAGqB,CAAC,GAAGgiB,GAAE;QAErBhkB,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGoI,CAAC;QACfjC,EAAE,CAAE,CAAC,CAAE,GAAGgkB,GAAE,GAAGhiB,CAAC,GAAGrB,GAAE;QACrBX,EAAE,CAAE,CAAC,CAAE,GAAG+jB,GAAE,GAAG/hB,CAAC,GAAGpB,GAAE;QAErBZ,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgC,CAAC;QACbhC,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC,GAAGC,CAAC;QACfmG,EAAE,CAAE,EAAE,CAAE,GAAGrG,CAAC,GAAGE,CAAC;MAEjB,CAAC,MAAM,IAAK4Y,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMuqB,EAAE,GAAG1qB,CAAC,GAAGE,CAAC;UAAEyqB,EAAE,GAAG3qB,CAAC,GAAGqI,CAAC;UAAEuiB,EAAE,GAAG3qB,CAAC,GAAGC,CAAC;UAAE2qB,EAAE,GAAG5qB,CAAC,GAAGoI,CAAC;QAEpDhC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGmD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAGwkB,EAAE,GAAGH,EAAE,GAAGpiB,CAAC;QACrBjC,EAAE,CAAE,CAAC,CAAE,GAAGukB,EAAE,GAAGtiB,CAAC,GAAGqiB,EAAE;QAErBtkB,EAAE,CAAE,CAAC,CAAE,GAAGiC,CAAC;QACXjC,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGqD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEpG,CAAC,GAAGoD,CAAC;QAEjBgD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgC,CAAC,GAAGhF,CAAC;QACjBgD,EAAE,CAAE,CAAC,CAAE,GAAGskB,EAAE,GAAGriB,CAAC,GAAGsiB,EAAE;QACrBvkB,EAAE,CAAE,EAAE,CAAE,GAAGqkB,EAAE,GAAGG,EAAE,GAAGviB,CAAC;MAEvB,CAAC,MAAM,IAAKwQ,KAAK,CAAC3Y,KAAK,KAAK,KAAK,EAAG;QAEnC,IAAMuqB,GAAE,GAAG1qB,CAAC,GAAGE,CAAC;UAAEyqB,GAAE,GAAG3qB,CAAC,GAAGqI,CAAC;UAAEuiB,GAAE,GAAG3qB,CAAC,GAAGC,CAAC;UAAE2qB,GAAE,GAAG5qB,CAAC,GAAGoI,CAAC;QAEpDhC,EAAE,CAAE,CAAC,CAAE,GAAGnG,CAAC,GAAGmD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEiC,CAAC;QACbjC,EAAE,CAAE,CAAC,CAAE,GAAGgC,CAAC,GAAGhF,CAAC;QAEfgD,EAAE,CAAE,CAAC,CAAE,GAAGqkB,GAAE,GAAGpiB,CAAC,GAAGuiB,GAAE;QACrBxkB,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC,GAAGqD,CAAC;QACfgD,EAAE,CAAE,CAAC,CAAE,GAAGskB,GAAE,GAAGriB,CAAC,GAAGsiB,GAAE;QAErBvkB,EAAE,CAAE,CAAC,CAAE,GAAGukB,GAAE,GAAGtiB,CAAC,GAAGqiB,GAAE;QACrBtkB,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC,GAAGoD,CAAC;QACfgD,EAAE,CAAE,EAAE,CAAE,GAAGwkB,GAAE,GAAGviB,CAAC,GAAGoiB,GAAE;MAEvB;;MAEA;MACArkB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MACXA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;;MAEZ;MACAA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACZA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAAukC,2BAA4B/qB,CAAC,EAAG;MAE/B,OAAO,IAAI,CAACgrB,OAAO,CAAEC,KAAK,EAAEjrB,CAAC,EAAEkrB,IAAI,CAAE;IAEtC;EAAC;IAAA5kC,GAAA;IAAAE,KAAA,EAED,SAAAkgC,OAAQyE,GAAG,EAAEn8B,MAAM,EAAEo8B,EAAE,EAAG;MAEzB,IAAM9kB,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExBmV,EAAE,CAAC1V,UAAU,CAAEmoB,GAAG,EAAEn8B,MAAM,CAAE;MAE5B,IAAK0pB,EAAE,CAAC1U,QAAQ,EAAE,KAAK,CAAC,EAAG;QAE1B;;QAEA0U,EAAE,CAAC9E,CAAC,GAAG,CAAC;MAET;MAEA8E,EAAE,CAAClX,SAAS,EAAE;MACdgX,EAAE,CAACoG,YAAY,CAAEwM,EAAE,EAAE1S,EAAE,CAAE;MAEzB,IAAKF,EAAE,CAACxU,QAAQ,EAAE,KAAK,CAAC,EAAG;QAE1B;;QAEA,IAAKzH,IAAI,CAACgC,GAAG,CAAE6sB,EAAE,CAACxX,CAAC,CAAE,KAAK,CAAC,EAAG;UAE7B8E,EAAE,CAACjb,CAAC,IAAI,MAAM;QAEf,CAAC,MAAM;UAENib,EAAE,CAAC9E,CAAC,IAAI,MAAM;QAEf;QAEA8E,EAAE,CAAClX,SAAS,EAAE;QACdgX,EAAE,CAACoG,YAAY,CAAEwM,EAAE,EAAE1S,EAAE,CAAE;MAE1B;MAEAF,EAAE,CAAChX,SAAS,EAAE;MACdiX,EAAE,CAACmG,YAAY,CAAElG,EAAE,EAAEF,EAAE,CAAE;MAEzBlS,EAAE,CAAE,CAAC,CAAE,GAAGkS,EAAE,CAAC/a,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,GAAGmS,EAAE,CAAChb,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,GAAGoS,EAAE,CAACjb,CAAC;MAC9C6I,EAAE,CAAE,CAAC,CAAE,GAAGkS,EAAE,CAACza,CAAC;MAAEuI,EAAE,CAAE,CAAC,CAAE,GAAGmS,EAAE,CAAC1a,CAAC;MAAEuI,EAAE,CAAE,CAAC,CAAE,GAAGoS,EAAE,CAAC3a,CAAC;MAC9CuI,EAAE,CAAE,CAAC,CAAE,GAAGkS,EAAE,CAAC5E,CAAC;MAAEtN,EAAE,CAAE,CAAC,CAAE,GAAGmS,EAAE,CAAC7E,CAAC;MAAEtN,EAAE,CAAE,EAAE,CAAE,GAAGoS,EAAE,CAAC9E,CAAC;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAyc,SAAU1F,CAAC,EAAG;MAEb,OAAO,IAAI,CAACwJ,gBAAgB,CAAE,IAAI,EAAExJ,CAAC,CAAE;IAExC;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAwgB,YAAazJ,CAAC,EAAG;MAEhB,OAAO,IAAI,CAACwJ,gBAAgB,CAAExJ,CAAC,EAAE,IAAI,CAAE;IAExC;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAugB,iBAAkB9G,CAAC,EAAEC,CAAC,EAAG;MAExB,IAAM+G,EAAE,GAAGhH,CAAC,CAACsD,QAAQ;MACrB,IAAM2D,EAAE,GAAGhH,CAAC,CAACqD,QAAQ;MACrB,IAAM+C,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAM4D,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;QAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;QAAEI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;QAAEokB,GAAG,GAAGpkB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;QAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;QAAEO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;QAAEqkB,GAAG,GAAGrkB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;QAAES,GAAG,GAAGT,EAAE,CAAE,CAAC,CAAE;QAAEU,GAAG,GAAGV,EAAE,CAAE,EAAE,CAAE;QAAEskB,GAAG,GAAGtkB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAMukB,GAAG,GAAGvkB,EAAE,CAAE,CAAC,CAAE;QAAEwkB,GAAG,GAAGxkB,EAAE,CAAE,CAAC,CAAE;QAAEykB,GAAG,GAAGzkB,EAAE,CAAE,EAAE,CAAE;QAAE0kB,GAAG,GAAG1kB,EAAE,CAAE,EAAE,CAAE;MAElE,IAAMW,GAAG,GAAGV,EAAE,CAAE,CAAC,CAAE;QAAEW,GAAG,GAAGX,EAAE,CAAE,CAAC,CAAE;QAAEY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;QAAE0kB,GAAG,GAAG1kB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMa,GAAG,GAAGb,EAAE,CAAE,CAAC,CAAE;QAAEc,GAAG,GAAGd,EAAE,CAAE,CAAC,CAAE;QAAEe,GAAG,GAAGf,EAAE,CAAE,CAAC,CAAE;QAAE2kB,GAAG,GAAG3kB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMgB,GAAG,GAAGhB,EAAE,CAAE,CAAC,CAAE;QAAEiB,GAAG,GAAGjB,EAAE,CAAE,CAAC,CAAE;QAAEkB,GAAG,GAAGlB,EAAE,CAAE,EAAE,CAAE;QAAE4kB,GAAG,GAAG5kB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAM6kB,GAAG,GAAG7kB,EAAE,CAAE,CAAC,CAAE;QAAE8kB,GAAG,GAAG9kB,EAAE,CAAE,CAAC,CAAE;QAAE+kB,GAAG,GAAG/kB,EAAE,CAAE,EAAE,CAAE;QAAEglB,GAAG,GAAGhlB,EAAE,CAAE,EAAE,CAAE;MAElEZ,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGmjB,GAAG,GAAGU,GAAG;MACvDzlB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGX,GAAG,GAAGc,GAAG,GAAGkjB,GAAG,GAAGW,GAAG;MACvD1lB,EAAE,CAAE,CAAC,CAAE,GAAGa,GAAG,GAAGW,GAAG,GAAGV,GAAG,GAAGa,GAAG,GAAGZ,GAAG,GAAGe,GAAG,GAAGijB,GAAG,GAAGY,GAAG;MACvD3lB,EAAE,CAAE,EAAE,CAAE,GAAGa,GAAG,GAAGykB,GAAG,GAAGxkB,GAAG,GAAGykB,GAAG,GAAGxkB,GAAG,GAAGykB,GAAG,GAAGT,GAAG,GAAGa,GAAG;MAExD5lB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGojB,GAAG,GAAGS,GAAG;MACvDzlB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGR,GAAG,GAAGW,GAAG,GAAGmjB,GAAG,GAAGU,GAAG;MACvD1lB,EAAE,CAAE,CAAC,CAAE,GAAGgB,GAAG,GAAGQ,GAAG,GAAGP,GAAG,GAAGU,GAAG,GAAGT,GAAG,GAAGY,GAAG,GAAGkjB,GAAG,GAAGW,GAAG;MACvD3lB,EAAE,CAAE,EAAE,CAAE,GAAGgB,GAAG,GAAGskB,GAAG,GAAGrkB,GAAG,GAAGskB,GAAG,GAAGrkB,GAAG,GAAGskB,GAAG,GAAGR,GAAG,GAAGY,GAAG;MAExD5lB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGG,GAAG,GAAGF,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGqjB,GAAG,GAAGQ,GAAG;MACvDzlB,EAAE,CAAE,CAAC,CAAE,GAAGmB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGM,GAAG,GAAGL,GAAG,GAAGQ,GAAG,GAAGojB,GAAG,GAAGS,GAAG;MACvD1lB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGK,GAAG,GAAGJ,GAAG,GAAGO,GAAG,GAAGN,GAAG,GAAGS,GAAG,GAAGmjB,GAAG,GAAGU,GAAG;MACxD3lB,EAAE,CAAE,EAAE,CAAE,GAAGmB,GAAG,GAAGmkB,GAAG,GAAGlkB,GAAG,GAAGmkB,GAAG,GAAGlkB,GAAG,GAAGmkB,GAAG,GAAGP,GAAG,GAAGW,GAAG;MAExD5lB,EAAE,CAAE,CAAC,CAAE,GAAGklB,GAAG,GAAG5jB,GAAG,GAAG6jB,GAAG,GAAG1jB,GAAG,GAAG2jB,GAAG,GAAGxjB,GAAG,GAAGyjB,GAAG,GAAGI,GAAG;MACvDzlB,EAAE,CAAE,CAAC,CAAE,GAAGklB,GAAG,GAAG3jB,GAAG,GAAG4jB,GAAG,GAAGzjB,GAAG,GAAG0jB,GAAG,GAAGvjB,GAAG,GAAGwjB,GAAG,GAAGK,GAAG;MACvD1lB,EAAE,CAAE,EAAE,CAAE,GAAGklB,GAAG,GAAG1jB,GAAG,GAAG2jB,GAAG,GAAGxjB,GAAG,GAAGyjB,GAAG,GAAGtjB,GAAG,GAAGujB,GAAG,GAAGM,GAAG;MACxD3lB,EAAE,CAAE,EAAE,CAAE,GAAGklB,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGI,GAAG,GAAGH,GAAG,GAAGO,GAAG;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA5lC,GAAA;IAAAE,KAAA,EAED,SAAA0c,eAAgBhE,CAAC,EAAG;MAEnB,IAAMoH,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB+C,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;MACvDoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;MACvDoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;MACxDoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,CAAC,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;MAAEoH,EAAE,CAAE,EAAE,CAAE,IAAIpH,CAAC;MAExD,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAA6hB,YAAA,EAAc;MAEb,IAAM/B,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAMsC,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAER,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAE+iB,GAAG,GAAG/iB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAEgjB,GAAG,GAAGhjB,EAAE,CAAE,EAAE,CAAE;MACjE,IAAMH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAED,GAAG,GAAGC,EAAE,CAAE,EAAE,CAAE;QAAEijB,GAAG,GAAGjjB,EAAE,CAAE,EAAE,CAAE;MAClE,IAAMkjB,GAAG,GAAGljB,EAAE,CAAE,CAAC,CAAE;QAAEmjB,GAAG,GAAGnjB,EAAE,CAAE,CAAC,CAAE;QAAEojB,GAAG,GAAGpjB,EAAE,CAAE,EAAE,CAAE;QAAEqjB,GAAG,GAAGrjB,EAAE,CAAE,EAAE,CAAE;;MAElE;MACA;;MAEA,OACCkjB,GAAG,IACF,CAAEH,GAAG,GAAGnjB,GAAG,GAAGE,GAAG,GACdL,GAAG,GAAGujB,GAAG,GAAGljB,GAAG,GACfijB,GAAG,GAAGpjB,GAAG,GAAGI,GAAG,GACfP,GAAG,GAAGwjB,GAAG,GAAGjjB,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGsjB,GAAG,GACfzjB,GAAG,GAAGI,GAAG,GAAGqjB,GAAG,CAClB,GACDE,GAAG,IACF,CAAE5jB,GAAG,GAAGK,GAAG,GAAGqjB,GAAG,GACd1jB,GAAG,GAAGyjB,GAAG,GAAGjjB,GAAG,GACfgjB,GAAG,GAAGrjB,GAAG,GAAGK,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGujB,GAAG,GACfxjB,GAAG,GAAGujB,GAAG,GAAGnjB,GAAG,GACfkjB,GAAG,GAAGnjB,GAAG,GAAGC,GAAG,CAClB,GACDujB,GAAG,IACF,CAAE7jB,GAAG,GAAGyjB,GAAG,GAAGljB,GAAG,GACdP,GAAG,GAAGI,GAAG,GAAGsjB,GAAG,GACfF,GAAG,GAAGrjB,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGujB,GAAG,GACfF,GAAG,GAAGpjB,GAAG,GAAGE,GAAG,GACfL,GAAG,GAAGwjB,GAAG,GAAGnjB,GAAG,CAClB,GACDwjB,GAAG,IACF,CAAE5jB,GAAG,GAAGE,GAAG,GAAGE,GAAG,GACdN,GAAG,GAAGK,GAAG,GAAGE,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGC,GAAG,GAAGI,GAAG,GACfN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GACfP,GAAG,GAAGI,GAAG,GAAGC,GAAG,CAClB;IAIH;EAAC;IAAA7f,GAAA;IAAAE,KAAA,EAED,SAAAwiB,UAAA,EAAY;MAEX,IAAM1C,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAI0F,GAAG;MAEPA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;MAC/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;MAC/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG2C,GAAG;MAE/CA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;MACjDA,GAAG,GAAG3C,EAAE,CAAE,CAAC,CAAE;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;MACjDA,GAAG,GAAG3C,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG2C,GAAG;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAA3iB,GAAA;IAAAE,KAAA,EAED,SAAA2lC,YAAa1uB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEtB,IAAMtN,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAK9F,CAAC,CAAC4f,SAAS,EAAG;QAElB/W,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC,CAACA,CAAC;QACd6I,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC,CAACM,CAAC;QACduI,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC,CAACmW,CAAC;MAEf,CAAC,MAAM;QAENtN,EAAE,CAAE,EAAE,CAAE,GAAG7I,CAAC;QACZ6I,EAAE,CAAE,EAAE,CAAE,GAAGvI,CAAC;QACZuI,EAAE,CAAE,EAAE,CAAE,GAAGsN,CAAC;MAEb;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAkiB,OAAA,EAAS;MAER;MACA,IAAMpC,EAAE,GAAG,IAAI,CAAC/C,QAAQ;QAEvBsC,GAAG,GAAGS,EAAE,CAAE,CAAC,CAAE;QAAEN,GAAG,GAAGM,EAAE,CAAE,CAAC,CAAE;QAAEH,GAAG,GAAGG,EAAE,CAAE,CAAC,CAAE;QAAEkjB,GAAG,GAAGljB,EAAE,CAAE,CAAC,CAAE;QAC1DR,GAAG,GAAGQ,EAAE,CAAE,CAAC,CAAE;QAAEL,GAAG,GAAGK,EAAE,CAAE,CAAC,CAAE;QAAEF,GAAG,GAAGE,EAAE,CAAE,CAAC,CAAE;QAAEmjB,GAAG,GAAGnjB,EAAE,CAAE,CAAC,CAAE;QAC1DP,GAAG,GAAGO,EAAE,CAAE,CAAC,CAAE;QAAEJ,GAAG,GAAGI,EAAE,CAAE,CAAC,CAAE;QAAED,GAAG,GAAGC,EAAE,CAAE,EAAE,CAAE;QAAEojB,GAAG,GAAGpjB,EAAE,CAAE,EAAE,CAAE;QAC5D+iB,GAAG,GAAG/iB,EAAE,CAAE,EAAE,CAAE;QAAEgjB,GAAG,GAAGhjB,EAAE,CAAE,EAAE,CAAE;QAAEijB,GAAG,GAAGjjB,EAAE,CAAE,EAAE,CAAE;QAAEqjB,GAAG,GAAGrjB,EAAE,CAAE,EAAE,CAAE;QAE9DqC,GAAG,GAAGzC,GAAG,GAAGqjB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGjjB,GAAG,GAAGojB,GAAG,GAAGH,GAAG,GAAGljB,GAAG,GAAGsjB,GAAG,GAAGzjB,GAAG,GAAGsjB,GAAG,GAAGG,GAAG,GAAGxjB,GAAG,GAAGE,GAAG,GAAGujB,GAAG,GAAG1jB,GAAG,GAAGI,GAAG,GAAGsjB,GAAG;QAC/G/gB,GAAG,GAAGygB,GAAG,GAAGhjB,GAAG,GAAGojB,GAAG,GAAG1jB,GAAG,GAAGwjB,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGjjB,GAAG,GAAGsjB,GAAG,GAAG5jB,GAAG,GAAGyjB,GAAG,GAAGG,GAAG,GAAG3jB,GAAG,GAAGK,GAAG,GAAGujB,GAAG,GAAG7jB,GAAG,GAAGO,GAAG,GAAGsjB,GAAG;QAC/G9gB,GAAG,GAAG9C,GAAG,GAAGujB,GAAG,GAAGG,GAAG,GAAGJ,GAAG,GAAGnjB,GAAG,GAAGujB,GAAG,GAAGJ,GAAG,GAAGpjB,GAAG,GAAGyjB,GAAG,GAAG5jB,GAAG,GAAGwjB,GAAG,GAAGI,GAAG,GAAG3jB,GAAG,GAAGE,GAAG,GAAG0jB,GAAG,GAAG7jB,GAAG,GAAGI,GAAG,GAAGyjB,GAAG;QAC/GyC,GAAG,GAAG/C,GAAG,GAAGnjB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAGujB,GAAG,GAAGljB,GAAG,GAAGijB,GAAG,GAAGpjB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGwjB,GAAG,GAAGjjB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGsjB,GAAG,GAAGzjB,GAAG,GAAGI,GAAG,GAAGqjB,GAAG;MAEhH,IAAMzgB,GAAG,GAAGjD,GAAG,GAAG8C,GAAG,GAAG3C,GAAG,GAAG4C,GAAG,GAAGzC,GAAG,GAAG0C,GAAG,GAAG2gB,GAAG,GAAG4C,GAAG;MAEzD,IAAKtjB,GAAG,KAAK,CAAC,EAAG,OAAO,IAAI,CAAC/H,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAElF,IAAMgI,MAAM,GAAG,CAAC,GAAGD,GAAG;MAEtBxC,EAAE,CAAE,CAAC,CAAE,GAAGqC,GAAG,GAAGI,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEgjB,GAAG,GAAGjjB,GAAG,GAAGmjB,GAAG,GAAGtjB,GAAG,GAAGqjB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGnjB,GAAG,GAAGujB,GAAG,GAAG1jB,GAAG,GAAGujB,GAAG,GAAGG,GAAG,GAAGxjB,GAAG,GAAGC,GAAG,GAAGwjB,GAAG,GAAG3jB,GAAG,GAAGK,GAAG,GAAGsjB,GAAG,IAAK5gB,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEL,GAAG,GAAGsjB,GAAG,GAAGC,GAAG,GAAGF,GAAG,GAAGljB,GAAG,GAAGojB,GAAG,GAAGF,GAAG,GAAGnjB,GAAG,GAAGsjB,GAAG,GAAGzjB,GAAG,GAAGujB,GAAG,GAAGE,GAAG,GAAGxjB,GAAG,GAAGE,GAAG,GAAGwjB,GAAG,GAAG3jB,GAAG,GAAGI,GAAG,GAAGujB,GAAG,IAAK5gB,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEJ,GAAG,GAAGE,GAAG,GAAGojB,GAAG,GAAGvjB,GAAG,GAAGI,GAAG,GAAGmjB,GAAG,GAAGtjB,GAAG,GAAGC,GAAG,GAAGsjB,GAAG,GAAGzjB,GAAG,GAAGK,GAAG,GAAGojB,GAAG,GAAGxjB,GAAG,GAAGE,GAAG,GAAGujB,GAAG,GAAG1jB,GAAG,GAAGI,GAAG,GAAGsjB,GAAG,IAAK3gB,MAAM;MAEhIzC,EAAE,CAAE,CAAC,CAAE,GAAGsC,GAAG,GAAGG,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAEP,GAAG,GAAGwjB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGhjB,GAAG,GAAGmjB,GAAG,GAAGH,GAAG,GAAGljB,GAAG,GAAGujB,GAAG,GAAG7jB,GAAG,GAAG0jB,GAAG,GAAGG,GAAG,GAAG3jB,GAAG,GAAGI,GAAG,GAAGwjB,GAAG,GAAG9jB,GAAG,GAAGQ,GAAG,GAAGsjB,GAAG,IAAK5gB,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE+iB,GAAG,GAAGjjB,GAAG,GAAGojB,GAAG,GAAG1jB,GAAG,GAAGyjB,GAAG,GAAGC,GAAG,GAAGH,GAAG,GAAGljB,GAAG,GAAGsjB,GAAG,GAAG5jB,GAAG,GAAG0jB,GAAG,GAAGE,GAAG,GAAG3jB,GAAG,GAAGK,GAAG,GAAGwjB,GAAG,GAAG9jB,GAAG,GAAGO,GAAG,GAAGujB,GAAG,IAAK5gB,MAAM;MAChIzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAER,GAAG,GAAGO,GAAG,GAAGmjB,GAAG,GAAGzjB,GAAG,GAAGK,GAAG,GAAGojB,GAAG,GAAGzjB,GAAG,GAAGI,GAAG,GAAGsjB,GAAG,GAAG5jB,GAAG,GAAGQ,GAAG,GAAGojB,GAAG,GAAG3jB,GAAG,GAAGK,GAAG,GAAGujB,GAAG,GAAG7jB,GAAG,GAAGO,GAAG,GAAGsjB,GAAG,IAAK3gB,MAAM;MAEhIzC,EAAE,CAAE,CAAC,CAAE,GAAGuC,GAAG,GAAGE,MAAM;MACtBzC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE+iB,GAAG,GAAGnjB,GAAG,GAAGsjB,GAAG,GAAGzjB,GAAG,GAAGujB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGrjB,GAAG,GAAG0jB,GAAG,GAAG7jB,GAAG,GAAGyjB,GAAG,GAAGI,GAAG,GAAG3jB,GAAG,GAAGC,GAAG,GAAG2jB,GAAG,GAAG9jB,GAAG,GAAGK,GAAG,GAAGyjB,GAAG,IAAK5gB,MAAM;MAChIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAGwjB,GAAG,GAAGE,GAAG,GAAGH,GAAG,GAAGpjB,GAAG,GAAGujB,GAAG,GAAGH,GAAG,GAAGrjB,GAAG,GAAGyjB,GAAG,GAAG5jB,GAAG,GAAGyjB,GAAG,GAAGG,GAAG,GAAG3jB,GAAG,GAAGE,GAAG,GAAG2jB,GAAG,GAAG9jB,GAAG,GAAGI,GAAG,GAAG0jB,GAAG,IAAK5gB,MAAM;MACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEP,GAAG,GAAGE,GAAG,GAAGujB,GAAG,GAAG1jB,GAAG,GAAGI,GAAG,GAAGsjB,GAAG,GAAGzjB,GAAG,GAAGC,GAAG,GAAGyjB,GAAG,GAAG5jB,GAAG,GAAGK,GAAG,GAAGujB,GAAG,GAAG3jB,GAAG,GAAGE,GAAG,GAAG0jB,GAAG,GAAG7jB,GAAG,GAAGI,GAAG,GAAGyjB,GAAG,IAAK3gB,MAAM;MAEjIzC,EAAE,CAAE,EAAE,CAAE,GAAG8lB,GAAG,GAAGrjB,MAAM;MACvBzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEP,GAAG,GAAGujB,GAAG,GAAGnjB,GAAG,GAAGkjB,GAAG,GAAGnjB,GAAG,GAAGC,GAAG,GAAGkjB,GAAG,GAAGrjB,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAGyjB,GAAG,GAAGjjB,GAAG,GAAGN,GAAG,GAAGC,GAAG,GAAGujB,GAAG,GAAG1jB,GAAG,GAAGK,GAAG,GAAGqjB,GAAG,IAAKxgB,MAAM;MACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE+iB,GAAG,GAAGpjB,GAAG,GAAGE,GAAG,GAAGL,GAAG,GAAGwjB,GAAG,GAAGnjB,GAAG,GAAGkjB,GAAG,GAAGrjB,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGyjB,GAAG,GAAGljB,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGujB,GAAG,GAAG1jB,GAAG,GAAGI,GAAG,GAAGsjB,GAAG,IAAKxgB,MAAM;MACjIzC,EAAE,CAAE,EAAE,CAAE,GAAG,CAAER,GAAG,GAAGI,GAAG,GAAGC,GAAG,GAAGJ,GAAG,GAAGE,GAAG,GAAGE,GAAG,GAAGJ,GAAG,GAAGC,GAAG,GAAGI,GAAG,GAAGP,GAAG,GAAGK,GAAG,GAAGE,GAAG,GAAGN,GAAG,GAAGE,GAAG,GAAGK,GAAG,GAAGR,GAAG,GAAGI,GAAG,GAAGI,GAAG,IAAK0C,MAAM;MAEjI,OAAO,IAAI;IAEZ;EAAC;IAAAziB,GAAA;IAAAE,KAAA,EAED,SAAAsjB,MAAOrH,CAAC,EAAG;MAEV,IAAM6D,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAM9F,CAAC,GAAGgF,CAAC,CAAChF,CAAC;QAAEM,CAAC,GAAG0E,CAAC,CAAC1E,CAAC;QAAE6V,CAAC,GAAGnR,CAAC,CAACmR,CAAC;MAE/BtN,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;MAAEuI,EAAE,CAAE,CAAC,CAAE,IAAIsN,CAAC;MACxCtN,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;MAAEuI,EAAE,CAAE,CAAC,CAAE,IAAIsN,CAAC;MACxCtN,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;MAAEuI,EAAE,CAAE,EAAE,CAAE,IAAIsN,CAAC;MACzCtN,EAAE,CAAE,CAAC,CAAE,IAAI7I,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,IAAIvI,CAAC;MAAEuI,EAAE,CAAE,EAAE,CAAE,IAAIsN,CAAC;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAo/B,kBAAA,EAAoB;MAEnB,IAAMtf,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAM8oB,QAAQ,GAAG/lB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,IAAMgmB,QAAQ,GAAGhmB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;MAC1E,IAAMimB,QAAQ,GAAGjmB,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE,GAAGA,EAAE,CAAE,EAAE,CAAE;MAE5E,OAAO/J,IAAI,CAAC0H,IAAI,CAAE1H,IAAI,CAACa,GAAG,CAAEivB,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,CAAE,CAAE;IAE7D;EAAC;IAAAjmC,GAAA;IAAAE,KAAA,EAED,SAAAgmC,gBAAiB/uB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAE1B,IAAI,CAAC7S,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEtD,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEM,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE6V,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAimC,cAAeziB,KAAK,EAAG;MAEtB,IAAM7J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;QAAE9K,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;MAElD,IAAI,CAACjJ,GAAG,CAEP,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EACZ,CAAC,EAAEA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAkmC,cAAe1iB,KAAK,EAAG;MAEtB,IAAM7J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;QAAE9K,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;MAElD,IAAI,CAACjJ,GAAG,CAENZ,CAAC,EAAE,CAAC,EAAEjB,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACX,CAAEA,CAAC,EAAE,CAAC,EAAEiB,CAAC,EAAE,CAAC,EACX,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEX;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAmmC,cAAe3iB,KAAK,EAAG;MAEtB,IAAM7J,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;QAAE9K,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;MAElD,IAAI,CAACjJ,GAAG,CAEPZ,CAAC,EAAE,CAAEjB,CAAC,EAAE,CAAC,EAAE,CAAC,EACZA,CAAC,EAAEiB,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAomC,iBAAkBpT,IAAI,EAAErV,KAAK,EAAG;MAE/B;;MAEA,IAAMhE,CAAC,GAAG5D,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;MAC3B,IAAMjF,CAAC,GAAG3C,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;MAC3B,IAAMlG,CAAC,GAAG,CAAC,GAAGkC,CAAC;MACf,IAAM1C,CAAC,GAAG+b,IAAI,CAAC/b,CAAC;QAAEM,CAAC,GAAGyb,IAAI,CAACzb,CAAC;QAAE6V,CAAC,GAAG4F,IAAI,CAAC5F,CAAC;MACxC,IAAMrK,EAAE,GAAGtL,CAAC,GAAGR,CAAC;QAAE+L,EAAE,GAAGvL,CAAC,GAAGF,CAAC;MAE5B,IAAI,CAACgD,GAAG,CAEPwI,EAAE,GAAG9L,CAAC,GAAG0C,CAAC,EAAEoJ,EAAE,GAAGxL,CAAC,GAAGmB,CAAC,GAAG0U,CAAC,EAAErK,EAAE,GAAGqK,CAAC,GAAG1U,CAAC,GAAGnB,CAAC,EAAE,CAAC,EAC7CwL,EAAE,GAAGxL,CAAC,GAAGmB,CAAC,GAAG0U,CAAC,EAAEpK,EAAE,GAAGzL,CAAC,GAAGoC,CAAC,EAAEqJ,EAAE,GAAGoK,CAAC,GAAG1U,CAAC,GAAGzB,CAAC,EAAE,CAAC,EAC7C8L,EAAE,GAAGqK,CAAC,GAAG1U,CAAC,GAAGnB,CAAC,EAAEyL,EAAE,GAAGoK,CAAC,GAAG1U,CAAC,GAAGzB,CAAC,EAAEQ,CAAC,GAAG2V,CAAC,GAAGA,CAAC,GAAGzT,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAqmC,UAAWpvB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEpB,IAAI,CAAC7S,GAAG,CAEPtD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAEM,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE6V,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAsmC,UAAW3X,EAAE,EAAEC,EAAE,EAAE2X,EAAE,EAAE1X,EAAE,EAAE2X,EAAE,EAAEC,EAAE,EAAG;MAEnC,IAAI,CAAClsB,GAAG,CAEP,CAAC,EAAEgsB,EAAE,EAAEC,EAAE,EAAE,CAAC,EACZ7X,EAAE,EAAE,CAAC,EAAE8X,EAAE,EAAE,CAAC,EACZ7X,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,EACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEV;MAED,OAAO,IAAI;IAEZ;EAAC;IAAA/uB,GAAA;IAAAE,KAAA,EAED,SAAAwkC,QAASvI,QAAQ,EAAE5J,UAAU,EAAE/O,KAAK,EAAG;MAEtC,IAAMxD,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAM9F,CAAC,GAAGob,UAAU,CAACL,EAAE;QAAEza,CAAC,GAAG8a,UAAU,CAACJ,EAAE;QAAE7E,CAAC,GAAGiF,UAAU,CAACH,EAAE;QAAE7E,CAAC,GAAGgF,UAAU,CAACF,EAAE;MAChF,IAAMuU,EAAE,GAAGzvB,CAAC,GAAGA,CAAC;QAAE0vB,EAAE,GAAGpvB,CAAC,GAAGA,CAAC;QAAEqvB,EAAE,GAAGxZ,CAAC,GAAGA,CAAC;MACxC,IAAMoB,EAAE,GAAGvX,CAAC,GAAGyvB,EAAE;QAAE/X,EAAE,GAAG1X,CAAC,GAAG0vB,EAAE;QAAE/X,EAAE,GAAG3X,CAAC,GAAG2vB,EAAE;MAC3C,IAAMnY,EAAE,GAAGlX,CAAC,GAAGovB,EAAE;QAAE9X,EAAE,GAAGtX,CAAC,GAAGqvB,EAAE;QAAElY,EAAE,GAAGtB,CAAC,GAAGwZ,EAAE;MAC3C,IAAMC,EAAE,GAAGxZ,CAAC,GAAGqZ,EAAE;QAAEI,EAAE,GAAGzZ,CAAC,GAAGsZ,EAAE;QAAEI,EAAE,GAAG1Z,CAAC,GAAGuZ,EAAE;MAE3C,IAAM3jB,EAAE,GAAGK,KAAK,CAACrM,CAAC;QAAEiM,EAAE,GAAGI,KAAK,CAAC/L,CAAC;QAAEsiB,EAAE,GAAGvW,KAAK,CAAC8J,CAAC;MAE9CtN,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAK2O,EAAE,GAAGC,EAAE,CAAE,IAAKzL,EAAE;MAClCnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE6O,EAAE,GAAGoY,EAAE,IAAK9jB,EAAE;MAC1BnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE8O,EAAE,GAAGkY,EAAE,IAAK7jB,EAAE;MAC1BnD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE6O,EAAE,GAAGoY,EAAE,IAAK7jB,EAAE;MAC1BpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,IAAK0O,EAAE,GAAGE,EAAE,CAAE,IAAKxL,EAAE;MAClCpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE+O,EAAE,GAAGgY,EAAE,IAAK3jB,EAAE;MAC1BpD,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAEXA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE8O,EAAE,GAAGkY,EAAE,IAAKjN,EAAE;MAC1B/Z,EAAE,CAAE,CAAC,CAAE,GAAG,CAAE+O,EAAE,GAAGgY,EAAE,IAAKhN,EAAE;MAC1B/Z,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,IAAK0O,EAAE,GAAGC,EAAE,CAAE,IAAKoL,EAAE;MACnC/Z,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZA,EAAE,CAAE,EAAE,CAAE,GAAGmc,QAAQ,CAAChlB,CAAC;MACrB6I,EAAE,CAAE,EAAE,CAAE,GAAGmc,QAAQ,CAAC1kB,CAAC;MACrBuI,EAAE,CAAE,EAAE,CAAE,GAAGmc,QAAQ,CAAC7O,CAAC;MACrBtN,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAAgnC,UAAW/K,QAAQ,EAAE5J,UAAU,EAAE/O,KAAK,EAAG;MAExC,IAAMxD,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExB,IAAIkG,EAAE,GAAGwgB,KAAK,CAAClpB,GAAG,CAAEuF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,CAAE,CAACla,MAAM,EAAE;MACxD,IAAMsd,EAAE,GAAGugB,KAAK,CAAClpB,GAAG,CAAEuF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,CAAE,CAACla,MAAM,EAAE;MAC1D,IAAMi0B,EAAE,GAAG4J,KAAK,CAAClpB,GAAG,CAAEuF,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,CAAC,CAAE,EAAEA,EAAE,CAAE,EAAE,CAAE,CAAE,CAACla,MAAM,EAAE;;MAE3D;MACA,IAAM0c,GAAG,GAAG,IAAI,CAACT,WAAW,EAAE;MAC9B,IAAKS,GAAG,GAAG,CAAC,EAAGW,EAAE,GAAG,CAAEA,EAAE;MAExBgZ,QAAQ,CAAChlB,CAAC,GAAG6I,EAAE,CAAE,EAAE,CAAE;MACrBmc,QAAQ,CAAC1kB,CAAC,GAAGuI,EAAE,CAAE,EAAE,CAAE;MACrBmc,QAAQ,CAAC7O,CAAC,GAAGtN,EAAE,CAAE,EAAE,CAAE;;MAErB;MACAmnB,KAAK,CAACjrB,IAAI,CAAE,IAAI,CAAE;MAElB,IAAMkrB,KAAK,GAAG,CAAC,GAAGjkB,EAAE;MACpB,IAAMkkB,KAAK,GAAG,CAAC,GAAGjkB,EAAE;MACpB,IAAMkkB,KAAK,GAAG,CAAC,GAAGvN,EAAE;MAEpBoN,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAImqB,KAAK;MAC5BD,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAImqB,KAAK;MAC5BD,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAImqB,KAAK;MAE5BD,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAIoqB,KAAK;MAC5BF,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAIoqB,KAAK;MAC5BF,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAIoqB,KAAK;MAE5BF,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAIqqB,KAAK;MAC5BH,KAAK,CAAClqB,QAAQ,CAAE,CAAC,CAAE,IAAIqqB,KAAK;MAC5BH,KAAK,CAAClqB,QAAQ,CAAE,EAAE,CAAE,IAAIqqB,KAAK;MAE7B/U,UAAU,CAACa,qBAAqB,CAAE+T,KAAK,CAAE;MAEzC3jB,KAAK,CAACrM,CAAC,GAAGgM,EAAE;MACZK,KAAK,CAAC/L,CAAC,GAAG2L,EAAE;MACZI,KAAK,CAAC8J,CAAC,GAAGyM,EAAE;MAEZ,OAAO,IAAI;IAEZ;EAAC;IAAA/5B,GAAA;IAAAE,KAAA,EAED,SAAAqnC,gBAAiBC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAG;MAEtD,IAAM7nB,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAM9F,CAAC,GAAG,CAAC,GAAGywB,IAAI,IAAKH,KAAK,GAAGD,IAAI,CAAE;MACrC,IAAM/vB,CAAC,GAAG,CAAC,GAAGmwB,IAAI,IAAKF,GAAG,GAAGC,MAAM,CAAE;MAErC,IAAMhuB,CAAC,GAAG,CAAE8tB,KAAK,GAAGD,IAAI,KAAOC,KAAK,GAAGD,IAAI,CAAE;MAC7C,IAAM5tB,CAAC,GAAG,CAAE8tB,GAAG,GAAGC,MAAM,KAAOD,GAAG,GAAGC,MAAM,CAAE;MAC7C,IAAM9tB,CAAC,GAAG,EAAIguB,GAAG,GAAGD,IAAI,CAAE,IAAKC,GAAG,GAAGD,IAAI,CAAE;MAC3C,IAAM5lB,CAAC,GAAG,CAAE,CAAC,GAAG6lB,GAAG,GAAGD,IAAI,IAAKC,GAAG,GAAGD,IAAI,CAAE;MAE3C5nB,EAAE,CAAE,CAAC,CAAE,GAAG7I,CAAC;MAAE6I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGrG,CAAC;MAAEqG,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACnDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAGvI,CAAC;MAAEuI,EAAE,CAAE,CAAC,CAAE,GAAGpG,CAAC;MAAEoG,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MACnDA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAGnG,CAAC;MAAEmG,EAAE,CAAE,EAAE,CAAE,GAAGgC,CAAC;MACpDhC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEtD,OAAO,IAAI;IAEZ;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAA4nC,iBAAkBN,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAG;MAEvD,IAAM7nB,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAMsQ,CAAC,GAAG,GAAG,IAAKka,KAAK,GAAGD,IAAI,CAAE;MAChC,IAAMrlB,CAAC,GAAG,GAAG,IAAKulB,GAAG,GAAGC,MAAM,CAAE;MAChC,IAAMhiB,CAAC,GAAG,GAAG,IAAKkiB,GAAG,GAAGD,IAAI,CAAE;MAE9B,IAAMzwB,CAAC,GAAG,CAAEswB,KAAK,GAAGD,IAAI,IAAKja,CAAC;MAC9B,IAAM9V,CAAC,GAAG,CAAEiwB,GAAG,GAAGC,MAAM,IAAKxlB,CAAC;MAC9B,IAAMmL,CAAC,GAAG,CAAEua,GAAG,GAAGD,IAAI,IAAKjiB,CAAC;MAE5B3F,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGuN,CAAC;MAAEvN,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE7I,CAAC;MACzD6I,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,GAAGmC,CAAC;MAAEnC,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEvI,CAAC;MACzDuI,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,GAAG2F,CAAC;MAAE3F,EAAE,CAAE,EAAE,CAAE,GAAG,CAAEsN,CAAC;MAC5DtN,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAAEA,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC;MAEpD,OAAO,IAAI;IAEZ;EAAC;IAAAhgB,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQmF,MAAM,EAAG;MAEhB,IAAM5D,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MACxB,IAAMiD,EAAE,GAAG0D,MAAM,CAAC3G,QAAQ;MAE1B,KAAM,IAAIlX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;QAE/B,IAAKia,EAAE,CAAEja,CAAC,CAAE,KAAKma,EAAE,CAAEna,CAAC,CAAE,EAAG,OAAO,KAAK;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,KAAM,IAAI5Y,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAG,EAAG;QAE/B,IAAI,CAACkX,QAAQ,CAAElX,CAAC,CAAE,GAAG6P,KAAK,CAAE7P,CAAC,GAAG4Y,MAAM,CAAE;MAEzC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqB,EAAE,GAAG,IAAI,CAAC/C,QAAQ;MAExBrH,KAAK,CAAE+I,MAAM,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MACzBpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAE7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAGqB,EAAE,CAAE,CAAC,CAAE;MAC7BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAC/BpK,KAAK,CAAE+I,MAAM,GAAG,EAAE,CAAE,GAAGqB,EAAE,CAAE,EAAE,CAAE;MAE/B,OAAOpK,KAAK;IAEb;EAAC;EAAA,OAAAitB,OAAA;AAAA;AAAArjC,OAAA,CAAAqjC,OAAA,GAAAA,OAAA;AAIF,IAAMc,KAAK,GAAG,aAAc,IAAI9M,OAAO,EAAE;AACzC,IAAMsQ,KAAK,GAAG,aAAc,IAAItE,OAAO,EAAE;AACzC,IAAM8B,KAAK,GAAG,aAAc,IAAI9N,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;AAClD,IAAM+N,IAAI,GAAG,aAAc,IAAI/N,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;AACjD,IAAM3E,EAAE,GAAG,aAAc,IAAI2E,OAAO,EAAE;AACtC,IAAM1E,EAAE,GAAG,aAAc,IAAI0E,OAAO,EAAE;AACtC,IAAMzE,EAAE,GAAG,aAAc,IAAIyE,OAAO,EAAE;AAEtC,IAAMkR,SAAS,GAAG,aAAc,IAAIlF,OAAO,EAAE;AAC7C,IAAMmF,aAAa,GAAG,aAAc,IAAIjW,UAAU,EAAE;AAAC,IAE/CkW,KAAK,0BAAAC,iBAAA;EAEV,SAAAD,MAAa9wB,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE6V,CAAC,GAAG,CAAC,EAAExT,KAAK,GAAGmuB,KAAK,CAACE,YAAY,EAAG;IAAA7/B,eAAA,OAAA2/B,KAAA;IAE9D,IAAI,CAACtV,OAAO,GAAG,IAAI;IAEnB,IAAI,CAACT,EAAE,GAAG/a,CAAC;IACX,IAAI,CAACgb,EAAE,GAAG1a,CAAC;IACX,IAAI,CAAC2a,EAAE,GAAG9E,CAAC;IACX,IAAI,CAACsF,MAAM,GAAG9Y,KAAK;EAEpB;EAAChR,YAAA,CAAAm/B,KAAA;IAAAjoC,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACwW,EAAE;IAEf,CAAC;IAAAzX,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACgyB,EAAE,GAAGhyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAACyW,EAAE;IAEf,CAAC;IAAA1X,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACiyB,EAAE,GAAGjyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAQ;MAEP,OAAO,IAAI,CAAC0W,EAAE;IAEf,CAAC;IAAA3X,GAAA,EAED,SAAAA,IAAOva,KAAK,EAAG;MAEd,IAAI,CAACkyB,EAAE,GAAGlyB,KAAK;MACf,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACkX,MAAM;IAEnB,CAAC;IAAAnY,GAAA,EAED,SAAAA,IAAWva,KAAK,EAAG;MAElB,IAAI,CAAC0yB,MAAM,GAAG1yB,KAAK;MACnB,IAAI,CAACoyB,iBAAiB,EAAE;IAEzB;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAExT,KAAK,GAAG,IAAI,CAAC8Y,MAAM,EAAG;MAEnC,IAAI,CAACV,EAAE,GAAG/a,CAAC;MACX,IAAI,CAACgb,EAAE,GAAG1a,CAAC;MACX,IAAI,CAAC2a,EAAE,GAAG9E,CAAC;MACX,IAAI,CAACsF,MAAM,GAAG9Y,KAAK;MAEnB,IAAI,CAACwY,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC8rB,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACQ,MAAM,CAAE;IAEtE;EAAC;IAAA5yB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMuW,KAAK,EAAG;MAEb,IAAI,CAACP,EAAE,GAAGO,KAAK,CAACP,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGM,KAAK,CAACN,EAAE;MAClB,IAAI,CAACC,EAAE,GAAGK,KAAK,CAACL,EAAE;MAClB,IAAI,CAACQ,MAAM,GAAGH,KAAK,CAACG,MAAM;MAE1B,IAAI,CAACN,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAkzB,sBAAuBnc,CAAC,EAAE6C,KAAK,GAAG,IAAI,CAAC8Y,MAAM,EAAEF,MAAM,GAAG,IAAI,EAAG;MAE9D;;MAEA,IAAM1S,EAAE,GAAG/I,CAAC,CAACgG,QAAQ;MACrB,IAAMgR,GAAG,GAAGjO,EAAE,CAAE,CAAC,CAAE;QAAEkO,GAAG,GAAGlO,EAAE,CAAE,CAAC,CAAE;QAAEmO,GAAG,GAAGnO,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMoO,GAAG,GAAGpO,EAAE,CAAE,CAAC,CAAE;QAAEqO,GAAG,GAAGrO,EAAE,CAAE,CAAC,CAAE;QAAEsO,GAAG,GAAGtO,EAAE,CAAE,CAAC,CAAE;MACjD,IAAMuO,GAAG,GAAGvO,EAAE,CAAE,CAAC,CAAE;QAAEwO,GAAG,GAAGxO,EAAE,CAAE,CAAC,CAAE;QAAEyO,GAAG,GAAGzO,EAAE,CAAE,EAAE,CAAE;MAElD,QAASlG,KAAK;QAEb,KAAK,KAAK;UAET,IAAI,CAACqY,EAAE,GAAGlc,IAAI,CAACmyB,IAAI,CAAExxB,KAAK,CAAEuX,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UAE3C,IAAKlY,IAAI,CAACgC,GAAG,CAAEkW,GAAG,CAAE,GAAG,SAAS,EAAG;YAElC,IAAI,CAAC+D,EAAE,GAAGjc,IAAI,CAAC6H,KAAK,CAAE,CAAEwQ,GAAG,EAAEG,GAAG,CAAE;YAClC,IAAI,CAAC2D,EAAE,GAAGnc,IAAI,CAAC6H,KAAK,CAAE,CAAEoQ,GAAG,EAAED,GAAG,CAAE;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACiE,EAAE,GAAGjc,IAAI,CAAC6H,KAAK,CAAE0Q,GAAG,EAAEH,GAAG,CAAE;YAChC,IAAI,CAAC+D,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACF,EAAE,GAAGjc,IAAI,CAACmyB,IAAI,CAAE,CAAExxB,KAAK,CAAE0X,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UAE7C,IAAKrY,IAAI,CAACgC,GAAG,CAAEqW,GAAG,CAAE,GAAG,SAAS,EAAG;YAElC,IAAI,CAAC6D,EAAE,GAAGlc,IAAI,CAAC6H,KAAK,CAAEqQ,GAAG,EAAEM,GAAG,CAAE;YAChC,IAAI,CAAC2D,EAAE,GAAGnc,IAAI,CAAC6H,KAAK,CAAEsQ,GAAG,EAAEC,GAAG,CAAE;UAEjC,CAAC,MAAM;YAEN,IAAI,CAAC8D,EAAE,GAAGlc,IAAI,CAAC6H,KAAK,CAAE,CAAEyQ,GAAG,EAAEN,GAAG,CAAE;YAClC,IAAI,CAACmE,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACF,EAAE,GAAGjc,IAAI,CAACmyB,IAAI,CAAExxB,KAAK,CAAE4X,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UAE3C,IAAKvY,IAAI,CAACgC,GAAG,CAAEuW,GAAG,CAAE,GAAG,SAAS,EAAG;YAElC,IAAI,CAAC2D,EAAE,GAAGlc,IAAI,CAAC6H,KAAK,CAAE,CAAEyQ,GAAG,EAAEE,GAAG,CAAE;YAClC,IAAI,CAAC2D,EAAE,GAAGnc,IAAI,CAAC6H,KAAK,CAAE,CAAEoQ,GAAG,EAAEG,GAAG,CAAE;UAEnC,CAAC,MAAM;YAEN,IAAI,CAAC8D,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAGnc,IAAI,CAAC6H,KAAK,CAAEsQ,GAAG,EAAEH,GAAG,CAAE;UAEjC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAACkE,EAAE,GAAGlc,IAAI,CAACmyB,IAAI,CAAE,CAAExxB,KAAK,CAAE2X,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UAE7C,IAAKtY,IAAI,CAACgC,GAAG,CAAEsW,GAAG,CAAE,GAAG,SAAS,EAAG;YAElC,IAAI,CAAC2D,EAAE,GAAGjc,IAAI,CAAC6H,KAAK,CAAE0Q,GAAG,EAAEC,GAAG,CAAE;YAChC,IAAI,CAAC2D,EAAE,GAAGnc,IAAI,CAAC6H,KAAK,CAAEsQ,GAAG,EAAEH,GAAG,CAAE;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACiE,EAAE,GAAG,CAAC;YACX,IAAI,CAACE,EAAE,GAAGnc,IAAI,CAAC6H,KAAK,CAAE,CAAEoQ,GAAG,EAAEG,GAAG,CAAE;UAEnC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAAC+D,EAAE,GAAGnc,IAAI,CAACmyB,IAAI,CAAExxB,KAAK,CAAEwX,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UAE3C,IAAKnY,IAAI,CAACgC,GAAG,CAAEmW,GAAG,CAAE,GAAG,SAAS,EAAG;YAElC,IAAI,CAAC8D,EAAE,GAAGjc,IAAI,CAAC6H,KAAK,CAAE,CAAEwQ,GAAG,EAAED,GAAG,CAAE;YAClC,IAAI,CAAC8D,EAAE,GAAGlc,IAAI,CAAC6H,KAAK,CAAE,CAAEyQ,GAAG,EAAEN,GAAG,CAAE;UAEnC,CAAC,MAAM;YAEN,IAAI,CAACiE,EAAE,GAAG,CAAC;YACX,IAAI,CAACC,EAAE,GAAGlc,IAAI,CAAC6H,KAAK,CAAEqQ,GAAG,EAAEM,GAAG,CAAE;UAEjC;UAEA;QAED,KAAK,KAAK;UAET,IAAI,CAAC2D,EAAE,GAAGnc,IAAI,CAACmyB,IAAI,CAAE,CAAExxB,KAAK,CAAEsX,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;UAE7C,IAAKjY,IAAI,CAACgC,GAAG,CAAEiW,GAAG,CAAE,GAAG,SAAS,EAAG;YAElC,IAAI,CAACgE,EAAE,GAAGjc,IAAI,CAAC6H,KAAK,CAAE0Q,GAAG,EAAEH,GAAG,CAAE;YAChC,IAAI,CAAC8D,EAAE,GAAGlc,IAAI,CAAC6H,KAAK,CAAEqQ,GAAG,EAAEF,GAAG,CAAE;UAEjC,CAAC,MAAM;YAEN,IAAI,CAACiE,EAAE,GAAGjc,IAAI,CAAC6H,KAAK,CAAE,CAAEwQ,GAAG,EAAEG,GAAG,CAAE;YAClC,IAAI,CAAC0D,EAAE,GAAG,CAAC;UAEZ;UAEA;QAED;UAECzX,OAAO,CAACC,IAAI,CAAE,sEAAsE,GAAGb,KAAK,CAAE;MAAC;MAIjG,IAAI,CAAC8Y,MAAM,GAAG9Y,KAAK;MAEnB,IAAK4Y,MAAM,KAAK,IAAI,EAAG,IAAI,CAACJ,iBAAiB,EAAE;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAAmoC,kBAAmB3uB,CAAC,EAAEI,KAAK,EAAE4Y,MAAM,EAAG;MAErCqV,SAAS,CAACtD,0BAA0B,CAAE/qB,CAAC,CAAE;MAEzC,OAAO,IAAI,CAAC0Z,qBAAqB,CAAE2U,SAAS,EAAEjuB,KAAK,EAAE4Y,MAAM,CAAE;IAE9D;EAAC;IAAA1yB,GAAA;IAAAE,KAAA,EAED,SAAAooC,eAAgBnsB,CAAC,EAAErC,KAAK,GAAG,IAAI,CAAC8Y,MAAM,EAAG;MAExC,OAAO,IAAI,CAACnY,GAAG,CAAE0B,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAACmR,CAAC,EAAExT,KAAK,CAAE;IAExC;EAAC;IAAA9Z,GAAA;IAAAE,KAAA,EAED,SAAAqoC,QAASC,QAAQ,EAAG;MAEnB;;MAEAR,aAAa,CAACxV,YAAY,CAAE,IAAI,CAAE;MAElC,OAAO,IAAI,CAAC6V,iBAAiB,CAAEL,aAAa,EAAEQ,QAAQ,CAAE;IAEzD;EAAC;IAAAxoC,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQgU,KAAK,EAAG;MAEf,OAASA,KAAK,CAACP,EAAE,KAAK,IAAI,CAACA,EAAE,IAAQO,KAAK,CAACN,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMM,KAAK,CAACL,EAAE,KAAK,IAAI,CAACA,EAAI,IAAMK,KAAK,CAACG,MAAM,KAAK,IAAI,CAACA,MAAQ;IAE5H;EAAC;IAAA5yB,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAG;MAElB,IAAI,CAACsc,EAAE,GAAGtc,KAAK,CAAE,CAAC,CAAE;MACpB,IAAI,CAACuc,EAAE,GAAGvc,KAAK,CAAE,CAAC,CAAE;MACpB,IAAI,CAACwc,EAAE,GAAGxc,KAAK,CAAE,CAAC,CAAE;MACpB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKpR,SAAS,EAAG,IAAI,CAACouB,MAAM,GAAGhd,KAAK,CAAE,CAAC,CAAE;MAExD,IAAI,CAAC0c,iBAAiB,EAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAtyB,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC/I,KAAK,CAAE+I,MAAM,CAAE,GAAG,IAAI,CAACuT,EAAE;MACzBtc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACwT,EAAE;MAC7Bvc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACyT,EAAE;MAC7Bxc,KAAK,CAAE+I,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAACiU,MAAM;MAEjC,OAAOhd,KAAK;IAEb;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAAo1B,UAAWC,QAAQ,EAAG;MAErB,IAAI,CAACjD,iBAAiB,GAAGiD,QAAQ;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAAoyB,kBAAA,EAAoB,CAAC;EAAC;IAAAtyB,GAAA,EAAAkoC,iBAAA;IAAAhoC,KAAA,eAAAX,mBAAA,GAAA+G,IAAA,CAEtB,SAAApG,MAAA;MAAA,OAAAX,mBAAA,GAAAyB,IAAA,UAAAme,OAAAspB,SAAA;QAAA,kBAAAA,SAAA,CAAAthC,IAAA,GAAAshC,SAAA,CAAA5jC,IAAA;UAAA;YAAA4jC,SAAA,CAAA5jC,IAAA;YAEC,OAAM,IAAI,CAACqtB,EAAE;UAAA;YAAAuW,SAAA,CAAA5jC,IAAA;YACb,OAAM,IAAI,CAACstB,EAAE;UAAA;YAAAsW,SAAA,CAAA5jC,IAAA;YACb,OAAM,IAAI,CAACutB,EAAE;UAAA;YAAAqW,SAAA,CAAA5jC,IAAA;YACb,OAAM,IAAI,CAAC+tB,MAAM;UAAA;UAAA;YAAA,OAAA6V,SAAA,CAAAnhC,IAAA;QAAA;MAAA,GAAApH,KAAA;IAAA,CAEjB,EAED;EAAA;IAAAF,GAAA;IAAAE,KAAA,EAEA,SAAAwoC,UAAA,EAAY;MAEXhuB,OAAO,CAACjX,KAAK,CAAE,gFAAgF,CAAE;IAElG;EAAC;EAAA,OAAAwkC,KAAA;AAAA,EAfE7nC,MAAM,CAACE,QAAQ;AAAAd,OAAA,CAAAyoC,KAAA,GAAAA,KAAA;AAmBnBA,KAAK,CAACE,YAAY,GAAG,KAAK;AAC1BF,KAAK,CAACU,cAAc,GAAG,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;AAAC,IAE9DC,MAAM;EAEX,SAAAA,OAAA,EAAc;IAAAtgC,eAAA,OAAAsgC,MAAA;IAEb,IAAI,CAACC,IAAI,GAAG,CAAC,GAAG,CAAC;EAElB;EAAC//B,YAAA,CAAA8/B,MAAA;IAAA5oC,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKquB,OAAO,EAAG;MAEd,IAAI,CAACD,IAAI,GAAG,CAAE,CAAC,IAAIC,OAAO,GAAG,CAAC,MAAO,CAAC;IAEvC;EAAC;IAAA9oC,GAAA;IAAAE,KAAA,EAED,SAAA6oC,OAAQD,OAAO,EAAG;MAEjB,IAAI,CAACD,IAAI,IAAI,CAAC,IAAIC,OAAO,GAAG,CAAC;IAE9B;EAAC;IAAA9oC,GAAA;IAAAE,KAAA,EAED,SAAA8oC,UAAA,EAAY;MAEX,IAAI,CAACH,IAAI,GAAG,UAAU,GAAG,CAAC;IAE3B;EAAC;IAAA7oC,GAAA;IAAAE,KAAA,EAED,SAAA+oC,OAAQH,OAAO,EAAG;MAEjB,IAAI,CAACD,IAAI,IAAI,CAAC,IAAIC,OAAO,GAAG,CAAC;IAE9B;EAAC;IAAA9oC,GAAA;IAAAE,KAAA,EAED,SAAAgpC,QAASJ,OAAO,EAAG;MAElB,IAAI,CAACD,IAAI,IAAI,EAAI,CAAC,IAAIC,OAAO,GAAG,CAAC,CAAE;IAEpC;EAAC;IAAA9oC,GAAA;IAAAE,KAAA,EAED,SAAAipC,WAAA,EAAa;MAEZ,IAAI,CAACN,IAAI,GAAG,CAAC;IAEd;EAAC;IAAA7oC,GAAA;IAAAE,KAAA,EAED,SAAA2oB,KAAMugB,MAAM,EAAG;MAEd,OAAO,CAAE,IAAI,CAACP,IAAI,GAAGO,MAAM,CAACP,IAAI,MAAO,CAAC;IAEzC;EAAC;IAAA7oC,GAAA;IAAAE,KAAA,EAED,SAAAmpC,UAAWP,OAAO,EAAG;MAEpB,OAAO,CAAE,IAAI,CAACD,IAAI,IAAK,CAAC,IAAIC,OAAO,GAAG,CAAC,CAAE,MAAO,CAAC;IAElD;EAAC;EAAA,OAAAF,MAAA;AAAA;AAAAppC,OAAA,CAAAopC,MAAA,GAAAA,MAAA;AAIF,IAAIU,WAAW,GAAG,CAAC;AAEnB,IAAMC,KAAK,GAAG,aAAc,IAAI1S,OAAO,EAAE;AACzC,IAAM2S,GAAG,GAAG,aAAc,IAAIzX,UAAU,EAAE;AAC1C,IAAM0X,KAAK,GAAG,aAAc,IAAI5G,OAAO,EAAE;AACzC,IAAM6G,OAAO,GAAG,aAAc,IAAI7S,OAAO,EAAE;AAE3C,IAAM8S,WAAW,GAAG,aAAc,IAAI9S,OAAO,EAAE;AAC/C,IAAM+S,QAAQ,GAAG,aAAc,IAAI/S,OAAO,EAAE;AAC5C,IAAMgT,aAAa,GAAG,aAAc,IAAI9X,UAAU,EAAE;AAEpD,IAAM+X,MAAM,GAAG,aAAc,IAAIjT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;AACnD,IAAMkT,MAAM,GAAG,aAAc,IAAIlT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;AACnD,IAAMmT,MAAM,GAAG,aAAc,IAAInT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;AAEnD,IAAMoT,WAAW,GAAG;EAAEloC,IAAI,EAAE;AAAQ,CAAC;AACrC,IAAMmoC,aAAa,GAAG;EAAEnoC,IAAI,EAAE;AAAU,CAAC;AAAC,IAEpCooC,QAAQ,0BAAAC,iBAAA;EAAAtf,SAAA,CAAAqf,QAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAArf,YAAA,CAAAmf,QAAA;EAEb,SAAAA,SAAA,EAAc;IAAA,IAAAG,MAAA;IAAAhiC,eAAA,OAAA6hC,QAAA;IAEbG,MAAA,GAAAD,OAAA,CAAAroC,IAAA;IAEAsoC,MAAA,CAAKC,UAAU,GAAG,IAAI;IAEtB7qC,MAAM,CAACI,cAAc,CAAA+rB,sBAAA,CAAAye,MAAA,GAAQ,IAAI,EAAE;MAAEpqC,KAAK,EAAEopC,WAAW;IAAI,CAAC,CAAE;IAE9DgB,MAAA,CAAK5zB,IAAI,GAAGN,YAAY,EAAE;IAE1Bk0B,MAAA,CAAKjkC,IAAI,GAAG,EAAE;IACdikC,MAAA,CAAKvoC,IAAI,GAAG,UAAU;IAEtBuoC,MAAA,CAAKE,MAAM,GAAG,IAAI;IAClBF,MAAA,CAAK9N,QAAQ,GAAG,EAAE;IAElB8N,MAAA,CAAKxF,EAAE,GAAGqF,QAAQ,CAACM,SAAS,CAACxuB,KAAK,EAAE;IAEpC,IAAMkgB,QAAQ,GAAG,IAAItF,OAAO,EAAE;IAC9B,IAAMxT,QAAQ,GAAG,IAAI4kB,KAAK,EAAE;IAC5B,IAAM1V,UAAU,GAAG,IAAIR,UAAU,EAAE;IACnC,IAAMvO,KAAK,GAAG,IAAIqT,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAEpC,SAAS6T,gBAAgBA,CAAA,EAAG;MAE3BnY,UAAU,CAACC,YAAY,CAAEnP,QAAQ,EAAE,KAAK,CAAE;IAE3C;IAEA,SAASsnB,kBAAkBA,CAAA,EAAG;MAE7BtnB,QAAQ,CAACglB,iBAAiB,CAAE9V,UAAU,EAAE/tB,SAAS,EAAE,KAAK,CAAE;IAE3D;IAEA6e,QAAQ,CAACiS,SAAS,CAAEoV,gBAAgB,CAAE;IACtCnY,UAAU,CAAC+C,SAAS,CAAEqV,kBAAkB,CAAE;IAE1CjrC,MAAM,CAACkrC,gBAAgB,CAAA/e,sBAAA,CAAAye,MAAA,GAAQ;MAC9BnO,QAAQ,EAAE;QACTt7B,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEi8B;MACR,CAAC;MACD9Y,QAAQ,EAAE;QACTxiB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEmjB;MACR,CAAC;MACDkP,UAAU,EAAE;QACX1xB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEqyB;MACR,CAAC;MACD/O,KAAK,EAAE;QACN3iB,YAAY,EAAE,IAAI;QAClBD,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAEsjB;MACR,CAAC;MACDqnB,eAAe,EAAE;QAChB3qC,KAAK,EAAE,IAAI2iC,OAAO;MACnB,CAAC;MACDiI,YAAY,EAAE;QACb5qC,KAAK,EAAE,IAAImf,OAAO;MACnB;IACD,CAAC,CAAE;IAEHirB,MAAA,CAAK1mB,MAAM,GAAG,IAAIif,OAAO,EAAE;IAC3ByH,MAAA,CAAKlS,WAAW,GAAG,IAAIyK,OAAO,EAAE;IAEhCyH,MAAA,CAAKre,gBAAgB,GAAGke,QAAQ,CAACY,uBAAuB;IACxDT,MAAA,CAAKU,sBAAsB,GAAG,KAAK;IAEnCV,MAAA,CAAKlB,MAAM,GAAG,IAAIR,MAAM,EAAE;IAC1B0B,MAAA,CAAKW,OAAO,GAAG,IAAI;IAEnBX,MAAA,CAAKY,UAAU,GAAG,KAAK;IACvBZ,MAAA,CAAKa,aAAa,GAAG,KAAK;IAE1Bb,MAAA,CAAKc,aAAa,GAAG,IAAI;IACzBd,MAAA,CAAKe,WAAW,GAAG,CAAC;IAEpBf,MAAA,CAAKgB,UAAU,GAAG,EAAE;IAEpBhB,MAAA,CAAKhe,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAAge,MAAA;EAEpB;EAACxhC,YAAA,CAAAqhC,QAAA;IAAAnqC,GAAA;IAAAE,KAAA,EAED,SAAAqrC,eAAA,CAAgB,0DAA2D,CAAC;EAAC;IAAAvrC,GAAA;IAAAE,KAAA,EAE7E,SAAAsrC,cAAA,CAAe,0DAA2D,CAAC;EAAC;IAAAxrC,GAAA;IAAAE,KAAA,EAE5E,SAAAytB,aAAc/J,MAAM,EAAG;MAEtB,IAAK,IAAI,CAACqI,gBAAgB,EAAG,IAAI,CAACS,YAAY,EAAE;MAEhD,IAAI,CAAC9I,MAAM,CAAClD,WAAW,CAAEkD,MAAM,CAAE;MAEjC,IAAI,CAACA,MAAM,CAACsjB,SAAS,CAAE,IAAI,CAAC/K,QAAQ,EAAE,IAAI,CAAC5J,UAAU,EAAE,IAAI,CAAC/O,KAAK,CAAE;IAEpE;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAg3B,gBAAiBxd,CAAC,EAAG;MAEpB,IAAI,CAAC6Y,UAAU,CAAC7R,WAAW,CAAEhH,CAAC,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA1Z,GAAA;IAAAE,KAAA,EAED,SAAAurC,yBAA0BvY,IAAI,EAAErV,KAAK,EAAG;MAEvC;;MAEA,IAAI,CAAC0U,UAAU,CAACU,gBAAgB,CAAEC,IAAI,EAAErV,KAAK,CAAE;IAEhD;EAAC;IAAA7d,GAAA;IAAAE,KAAA,EAED,SAAAwrC,qBAAsBjZ,KAAK,EAAG;MAE7B,IAAI,CAACF,UAAU,CAACC,YAAY,CAAEC,KAAK,EAAE,IAAI,CAAE;IAE5C;EAAC;IAAAzyB,GAAA;IAAAE,KAAA,EAED,SAAAyrC,sBAAuB10B,CAAC,EAAG;MAE1B;;MAEA,IAAI,CAACsb,UAAU,CAACa,qBAAqB,CAAEnc,CAAC,CAAE;IAE3C;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAA0rC,0BAA2BlyB,CAAC,EAAG;MAE9B;;MAEA,IAAI,CAAC6Y,UAAU,CAACrW,IAAI,CAAExC,CAAC,CAAE;IAE1B;EAAC;IAAA1Z,GAAA;IAAAE,KAAA,EAED,SAAA2rC,aAAc3Y,IAAI,EAAErV,KAAK,EAAG;MAE3B;MACA;;MAEA2rB,GAAG,CAACvW,gBAAgB,CAAEC,IAAI,EAAErV,KAAK,CAAE;MAEnC,IAAI,CAAC0U,UAAU,CAAC5V,QAAQ,CAAE6sB,GAAG,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAxpC,GAAA;IAAAE,KAAA,EAED,SAAA4rC,kBAAmB5Y,IAAI,EAAErV,KAAK,EAAG;MAEhC;MACA;MACA;;MAEA2rB,GAAG,CAACvW,gBAAgB,CAAEC,IAAI,EAAErV,KAAK,CAAE;MAEnC,IAAI,CAAC0U,UAAU,CAAC7R,WAAW,CAAE8oB,GAAG,CAAE;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAAxpC,GAAA;IAAAE,KAAA,EAED,SAAA6rC,QAASluB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACguB,YAAY,CAAE/B,MAAM,EAAEjsB,KAAK,CAAE;IAE1C;EAAC;IAAA7d,GAAA;IAAAE,KAAA,EAED,SAAA8rC,QAASnuB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACguB,YAAY,CAAE9B,MAAM,EAAElsB,KAAK,CAAE;IAE1C;EAAC;IAAA7d,GAAA;IAAAE,KAAA,EAED,SAAA+rC,QAASpuB,KAAK,EAAG;MAEhB,OAAO,IAAI,CAACguB,YAAY,CAAE7B,MAAM,EAAEnsB,KAAK,CAAE;IAE1C;EAAC;IAAA7d,GAAA;IAAAE,KAAA,EAED,SAAAgsC,gBAAiBhZ,IAAI,EAAEiZ,QAAQ,EAAG;MAEjC;MACA;;MAEA5C,KAAK,CAACrtB,IAAI,CAAEgX,IAAI,CAAE,CAACgE,eAAe,CAAE,IAAI,CAAC3E,UAAU,CAAE;MAErD,IAAI,CAAC4J,QAAQ,CAAC/f,GAAG,CAAEmtB,KAAK,CAAC3sB,cAAc,CAAEuvB,QAAQ,CAAE,CAAE;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAnsC,GAAA;IAAAE,KAAA,EAED,SAAAksC,WAAYD,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAEpC,MAAM,EAAEqC,QAAQ,CAAE;IAEhD;EAAC;IAAAnsC,GAAA;IAAAE,KAAA,EAED,SAAAmsC,WAAYF,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAEnC,MAAM,EAAEoC,QAAQ,CAAE;IAEhD;EAAC;IAAAnsC,GAAA;IAAAE,KAAA,EAED,SAAAosC,WAAYH,QAAQ,EAAG;MAEtB,OAAO,IAAI,CAACD,eAAe,CAAElC,MAAM,EAAEmC,QAAQ,CAAE;IAEhD;EAAC;IAAAnsC,GAAA;IAAAE,KAAA,EAED,SAAAqsC,aAAczQ,MAAM,EAAG;MAEtB,OAAOA,MAAM,CAACnO,YAAY,CAAE,IAAI,CAACyK,WAAW,CAAE;IAE/C;EAAC;IAAAp4B,GAAA;IAAAE,KAAA,EAED,SAAAssC,aAAc1Q,MAAM,EAAG;MAEtB,OAAOA,MAAM,CAACnO,YAAY,CAAE8b,KAAK,CAACvtB,IAAI,CAAE,IAAI,CAACkc,WAAW,CAAE,CAAChW,MAAM,EAAE,CAAE;IAEtE;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAAkgC,OAAQjpB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEjB;;MAEA,IAAKnW,CAAC,CAAC4f,SAAS,EAAG;QAElB2S,OAAO,CAACxtB,IAAI,CAAE/E,CAAC,CAAE;MAElB,CAAC,MAAM;QAENuyB,OAAO,CAACjvB,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAE;MAEvB;MAEA,IAAMkd,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAI,CAACxO,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErC2N,WAAW,CAAC/P,qBAAqB,CAAE,IAAI,CAACxB,WAAW,CAAE;MAErD,IAAK,IAAI,CAACqU,QAAQ,IAAI,IAAI,CAACC,OAAO,EAAG;QAEpCjD,KAAK,CAACrJ,MAAM,CAAEuJ,WAAW,EAAED,OAAO,EAAE,IAAI,CAAC5E,EAAE,CAAE;MAE9C,CAAC,MAAM;QAEN2E,KAAK,CAACrJ,MAAM,CAAEsJ,OAAO,EAAEC,WAAW,EAAE,IAAI,CAAC7E,EAAE,CAAE;MAE9C;MAEA,IAAI,CAACvS,UAAU,CAACa,qBAAqB,CAAEqW,KAAK,CAAE;MAE9C,IAAKe,MAAM,EAAG;QAEbf,KAAK,CAAChG,eAAe,CAAE+G,MAAM,CAACpS,WAAW,CAAE;QAC3CoR,GAAG,CAACpW,qBAAqB,CAAEqW,KAAK,CAAE;QAClC,IAAI,CAAClX,UAAU,CAAC7R,WAAW,CAAE8oB,GAAG,CAACpnB,MAAM,EAAE,CAAE;MAE5C;IAED;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAKrV,MAAM,EAAG;MAEb,IAAK4lC,SAAS,CAAC7mC,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4mC,SAAS,CAAC7mC,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE7C,IAAI,CAACqW,GAAG,CAAEuwB,SAAS,CAAE5mC,CAAC,CAAE,CAAE;QAE3B;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAKgB,MAAM,KAAK,IAAI,EAAG;QAEtB2T,OAAO,CAACjX,KAAK,CAAE,kEAAkE,EAAEsD,MAAM,CAAE;QAC3F,OAAO,IAAI;MAEZ;MAEA,IAAKA,MAAM,IAAIA,MAAM,CAACwjC,UAAU,EAAG;QAElC,IAAKxjC,MAAM,CAACyjC,MAAM,KAAK,IAAI,EAAG;UAE7BzjC,MAAM,CAACyjC,MAAM,CAACoC,MAAM,CAAE7lC,MAAM,CAAE;QAE/B;QAEAA,MAAM,CAACyjC,MAAM,GAAG,IAAI;QACpB,IAAI,CAAChO,QAAQ,CAACj3B,IAAI,CAAEwB,MAAM,CAAE;QAE5BA,MAAM,CAAC2O,aAAa,CAAEu0B,WAAW,CAAE;MAEpC,CAAC,MAAM;QAENvvB,OAAO,CAACjX,KAAK,CAAE,+DAA+D,EAAEsD,MAAM,CAAE;MAEzF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EAED,SAAA0sC,OAAQ7lC,MAAM,EAAG;MAEhB,IAAK4lC,SAAS,CAAC7mC,MAAM,GAAG,CAAC,EAAG;QAE3B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4mC,SAAS,CAAC7mC,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE7C,IAAI,CAAC6mC,MAAM,CAAED,SAAS,CAAE5mC,CAAC,CAAE,CAAE;QAE9B;QAEA,OAAO,IAAI;MAEZ;MAEA,IAAMyP,KAAK,GAAG,IAAI,CAACgnB,QAAQ,CAACpnB,OAAO,CAAErO,MAAM,CAAE;MAE7C,IAAKyO,KAAK,KAAK,CAAE,CAAC,EAAG;QAEpBzO,MAAM,CAACyjC,MAAM,GAAG,IAAI;QACpB,IAAI,CAAChO,QAAQ,CAAC/mB,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;QAEhCzO,MAAM,CAAC2O,aAAa,CAAEw0B,aAAa,CAAE;MAEtC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAlqC,GAAA;IAAAE,KAAA,EAED,SAAA2sC,iBAAA,EAAmB;MAElB,IAAMrC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBA,MAAM,CAACoC,MAAM,CAAE,IAAI,CAAE;MAEtB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5sC,GAAA;IAAAE,KAAA,EAED,SAAA4sC,MAAA,EAAQ;MAEP,KAAM,IAAI/mC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACy2B,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEjD,IAAMgB,MAAM,GAAG,IAAI,CAACy1B,QAAQ,CAAEz2B,CAAC,CAAE;QAEjCgB,MAAM,CAACyjC,MAAM,GAAG,IAAI;QAEpBzjC,MAAM,CAAC2O,aAAa,CAAEw0B,aAAa,CAAE;MAEtC;MAEA,IAAI,CAAC1N,QAAQ,CAAC12B,MAAM,GAAG,CAAC;MAExB,OAAO,IAAI;IAGZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA6sC,OAAQhmC,MAAM,EAAG;MAEhB;;MAEA;;MAEA,IAAI,CAACi1B,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErCyN,KAAK,CAACvtB,IAAI,CAAE,IAAI,CAACkc,WAAW,CAAE,CAAChW,MAAM,EAAE;MAEvC,IAAKrb,MAAM,CAACyjC,MAAM,KAAK,IAAI,EAAG;QAE7BzjC,MAAM,CAACyjC,MAAM,CAACxO,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;QAE9CyN,KAAK,CAAC9sB,QAAQ,CAAE5V,MAAM,CAACyjC,MAAM,CAACpS,WAAW,CAAE;MAE5C;MAEArxB,MAAM,CAAC4mB,YAAY,CAAE8b,KAAK,CAAE;MAE5B,IAAI,CAACrtB,GAAG,CAAErV,MAAM,CAAE;MAElBA,MAAM,CAACi1B,iBAAiB,CAAE,KAAK,EAAE,IAAI,CAAE;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAh8B,GAAA;IAAAE,KAAA,EAED,SAAA8sC,cAAeC,EAAE,EAAG;MAEnB,OAAO,IAAI,CAACC,mBAAmB,CAAE,IAAI,EAAED,EAAE,CAAE;IAE5C;EAAC;IAAAjtC,GAAA;IAAAE,KAAA,EAED,SAAAitC,gBAAiB9mC,IAAI,EAAG;MAEvB,OAAO,IAAI,CAAC6mC,mBAAmB,CAAE,MAAM,EAAE7mC,IAAI,CAAE;IAEhD;EAAC;IAAArG,GAAA;IAAAE,KAAA,EAED,SAAAgtC,oBAAqB7mC,IAAI,EAAEnG,KAAK,EAAG;MAElC,IAAK,IAAI,CAAEmG,IAAI,CAAE,KAAKnG,KAAK,EAAG,OAAO,IAAI;MAEzC,KAAM,IAAI6F,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAExD,IAAMqnC,KAAK,GAAG,IAAI,CAAC5Q,QAAQ,CAAEz2B,CAAC,CAAE;QAChC,IAAMgB,MAAM,GAAGqmC,KAAK,CAACF,mBAAmB,CAAE7mC,IAAI,EAAEnG,KAAK,CAAE;QAEvD,IAAK6G,MAAM,KAAKvC,SAAS,EAAG;UAE3B,OAAOuC,MAAM;QAEd;MAED;MAEA,OAAOvC,SAAS;IAEjB;EAAC;IAAAxE,GAAA;IAAAE,KAAA,EAED,SAAAmtC,iBAAkB3kC,MAAM,EAAG;MAE1B,IAAI,CAACszB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErC,OAAOtzB,MAAM,CAACkxB,qBAAqB,CAAE,IAAI,CAACxB,WAAW,CAAE;IAExD;EAAC;IAAAp4B,GAAA;IAAAE,KAAA,EAED,SAAAotC,mBAAoB5kC,MAAM,EAAG;MAE5B,IAAI,CAACszB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErC,IAAI,CAAC5D,WAAW,CAAC8O,SAAS,CAAEyC,WAAW,EAAEjhC,MAAM,EAAEkhC,QAAQ,CAAE;MAE3D,OAAOlhC,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAqtC,cAAe7kC,MAAM,EAAG;MAEvB,IAAI,CAACszB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErC,IAAI,CAAC5D,WAAW,CAAC8O,SAAS,CAAEyC,WAAW,EAAEE,aAAa,EAAEnhC,MAAM,CAAE;MAEhE,OAAOA,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAstC,kBAAmB9kC,MAAM,EAAG;MAE3B,IAAI,CAACszB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErC,IAAMhf,CAAC,GAAG,IAAI,CAACob,WAAW,CAACnb,QAAQ;MAEnC,OAAOvU,MAAM,CAAC+R,GAAG,CAAEuC,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,CAAC,CAAE,EAAEA,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC9B,SAAS,EAAE;IAEzD;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAA,CAAS,6BAA8B,CAAC;EAAC;IAAAztC,GAAA;IAAAE,KAAA,EAEzC,SAAAwtC,SAAUnY,QAAQ,EAAG;MAEpBA,QAAQ,CAAE,IAAI,CAAE;MAEhB,IAAMiH,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEnDy2B,QAAQ,CAAEz2B,CAAC,CAAE,CAAC2nC,QAAQ,CAAEnY,QAAQ,CAAE;MAEnC;IAED;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAAytC,gBAAiBpY,QAAQ,EAAG;MAE3B,IAAK,IAAI,CAAC0V,OAAO,KAAK,KAAK,EAAG;MAE9B1V,QAAQ,CAAE,IAAI,CAAE;MAEhB,IAAMiH,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEnDy2B,QAAQ,CAAEz2B,CAAC,CAAE,CAAC4nC,eAAe,CAAEpY,QAAQ,CAAE;MAE1C;IAED;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAA0tC,kBAAmBrY,QAAQ,EAAG;MAE7B,IAAMiV,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBjV,QAAQ,CAAEiV,MAAM,CAAE;QAElBA,MAAM,CAACoD,iBAAiB,CAAErY,QAAQ,CAAE;MAErC;IAED;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAAwsB,aAAA,EAAe;MAEd,IAAI,CAAC9I,MAAM,CAAC8gB,OAAO,CAAE,IAAI,CAACvI,QAAQ,EAAE,IAAI,CAAC5J,UAAU,EAAE,IAAI,CAAC/O,KAAK,CAAE;MAEjE,IAAI,CAACwnB,sBAAsB,GAAG,IAAI;IAEnC;EAAC;IAAAhrC,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1B,IAAK,IAAI,CAAC7hB,gBAAgB,EAAG,IAAI,CAACS,YAAY,EAAE;MAEhD,IAAK,IAAI,CAACse,sBAAsB,IAAI8C,KAAK,EAAG;QAE3C,IAAK,IAAI,CAACtD,MAAM,KAAK,IAAI,EAAG;UAE3B,IAAI,CAACpS,WAAW,CAAClc,IAAI,CAAE,IAAI,CAAC0H,MAAM,CAAE;QAErC,CAAC,MAAM;UAEN,IAAI,CAACwU,WAAW,CAAC3X,gBAAgB,CAAE,IAAI,CAAC+pB,MAAM,CAACpS,WAAW,EAAE,IAAI,CAACxU,MAAM,CAAE;QAE1E;QAEA,IAAI,CAAConB,sBAAsB,GAAG,KAAK;QAEnC8C,KAAK,GAAG,IAAI;MAEb;;MAEA;;MAEA,IAAMtR,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEnDy2B,QAAQ,CAAEz2B,CAAC,CAAE,CAAC8nC,iBAAiB,CAAEC,KAAK,CAAE;MAEzC;IAED;EAAC;IAAA9tC,GAAA;IAAAE,KAAA,EAED,SAAA87B,kBAAmB+R,aAAa,EAAEC,cAAc,EAAG;MAElD,IAAMxD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKuD,aAAa,KAAK,IAAI,IAAIvD,MAAM,KAAK,IAAI,EAAG;QAEhDA,MAAM,CAACxO,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAExC;MAEA,IAAK,IAAI,CAAC/P,gBAAgB,EAAG,IAAI,CAACS,YAAY,EAAE;MAEhD,IAAK,IAAI,CAAC8d,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACpS,WAAW,CAAClc,IAAI,CAAE,IAAI,CAAC0H,MAAM,CAAE;MAErC,CAAC,MAAM;QAEN,IAAI,CAACwU,WAAW,CAAC3X,gBAAgB,CAAE,IAAI,CAAC+pB,MAAM,CAACpS,WAAW,EAAE,IAAI,CAACxU,MAAM,CAAE;MAE1E;;MAEA;;MAEA,IAAKoqB,cAAc,KAAK,IAAI,EAAG;QAE9B,IAAMxR,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAE9B,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAEnDy2B,QAAQ,CAAEz2B,CAAC,CAAE,CAACi2B,iBAAiB,CAAE,KAAK,EAAE,IAAI,CAAE;QAE/C;MAED;IAED;EAAC;IAAAh8B,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd;MACA,IAAMC,YAAY,GAAKD,IAAI,KAAKzlB,SAAS,IAAI,OAAOylB,IAAI,KAAK,QAAU;MAEvE,IAAMG,MAAM,GAAG,CAAC,CAAC;;MAEjB;MACA;MACA;MACA,IAAKF,YAAY,EAAG;QAEnB;QACAD,IAAI,GAAG;UACNgkB,UAAU,EAAE,CAAC,CAAC;UACdC,SAAS,EAAE,CAAC,CAAC;UACbnhB,QAAQ,EAAE,CAAC,CAAC;UACZ5C,MAAM,EAAE,CAAC,CAAC;UACVgkB,MAAM,EAAE,CAAC,CAAC;UACVC,SAAS,EAAE,CAAC,CAAC;UACb9C,UAAU,EAAE,CAAC,CAAC;UACd+C,KAAK,EAAE,CAAC;QACT,CAAC;QAEDjkB,MAAM,CAAC4C,QAAQ,GAAG;UACjBhD,OAAO,EAAE,GAAG;UACZjoB,IAAI,EAAE,QAAQ;UACdR,SAAS,EAAE;QACZ,CAAC;MAEF;;MAEA;;MAEA,IAAMwF,MAAM,GAAG,CAAC,CAAC;MAEjBA,MAAM,CAAC2P,IAAI,GAAG,IAAI,CAACA,IAAI;MACvB3P,MAAM,CAAChF,IAAI,GAAG,IAAI,CAACA,IAAI;MAEvB,IAAK,IAAI,CAACsE,IAAI,KAAK,EAAE,EAAGU,MAAM,CAACV,IAAI,GAAG,IAAI,CAACA,IAAI;MAC/C,IAAK,IAAI,CAAC6kC,UAAU,KAAK,IAAI,EAAGnkC,MAAM,CAACmkC,UAAU,GAAG,IAAI;MACxD,IAAK,IAAI,CAACC,aAAa,KAAK,IAAI,EAAGpkC,MAAM,CAACokC,aAAa,GAAG,IAAI;MAC9D,IAAK,IAAI,CAACF,OAAO,KAAK,KAAK,EAAGlkC,MAAM,CAACkkC,OAAO,GAAG,KAAK;MACpD,IAAK,IAAI,CAACG,aAAa,KAAK,KAAK,EAAGrkC,MAAM,CAACqkC,aAAa,GAAG,KAAK;MAChE,IAAK,IAAI,CAACC,WAAW,KAAK,CAAC,EAAGtkC,MAAM,CAACskC,WAAW,GAAG,IAAI,CAACA,WAAW;MACnE,IAAK1e,IAAI,CAACE,SAAS,CAAE,IAAI,CAACP,QAAQ,CAAE,KAAK,IAAI,EAAGvlB,MAAM,CAACulB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE/EvlB,MAAM,CAACqiC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACP,IAAI;MAChC9hC,MAAM,CAAC6c,MAAM,GAAG,IAAI,CAACA,MAAM,CAAChF,OAAO,EAAE;MAErC,IAAK,IAAI,CAACqN,gBAAgB,KAAK,KAAK,EAAGllB,MAAM,CAACklB,gBAAgB,GAAG,KAAK;;MAEtE;;MAEA,IAAK,IAAI,CAACqiB,eAAe,EAAG;QAE3BvnC,MAAM,CAAChF,IAAI,GAAG,eAAe;QAC7BgF,MAAM,CAAC4qB,KAAK,GAAG,IAAI,CAACA,KAAK;QACzB5qB,MAAM,CAACwnC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACjmB,MAAM,EAAE;QACpD,IAAK,IAAI,CAACkmB,aAAa,KAAK,IAAI,EAAGznC,MAAM,CAACynC,aAAa,GAAG,IAAI,CAACA,aAAa,CAAClmB,MAAM,EAAE;MAEtF;;MAEA;;MAEA,SAASmmB,SAASA,CAAEC,OAAO,EAAEC,OAAO,EAAG;QAEtC,IAAKD,OAAO,CAAEC,OAAO,CAACj4B,IAAI,CAAE,KAAKlS,SAAS,EAAG;UAE5CkqC,OAAO,CAAEC,OAAO,CAACj4B,IAAI,CAAE,GAAGi4B,OAAO,CAACrmB,MAAM,CAAE2B,IAAI,CAAE;QAEjD;QAEA,OAAO0kB,OAAO,CAACj4B,IAAI;MAEpB;MAEA,IAAK,IAAI,CAACk4B,OAAO,EAAG;QAEnB,IAAK,IAAI,CAACC,UAAU,EAAG;UAEtB,IAAK,IAAI,CAACA,UAAU,CAAC7oB,OAAO,EAAG;YAE9Bjf,MAAM,CAAC8nC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACvmB,MAAM,EAAE;UAE7C,CAAC,MAAM,IAAK,IAAI,CAACumB,UAAU,CAACjjB,SAAS,EAAG;YAEvC7kB,MAAM,CAAC8nC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACvmB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;UAExD;QAED;QAEA,IAAK,IAAI,CAACo4B,WAAW,IAAI,IAAI,CAACA,WAAW,CAACljB,SAAS,IAAI,IAAI,CAACkjB,WAAW,CAACtiB,qBAAqB,KAAK,IAAI,EAAG;UAExGzlB,MAAM,CAAC+nC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACxmB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QAE1D;MAED,CAAC,MAAM,IAAK,IAAI,CAACq4B,MAAM,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAG;QAEzDloC,MAAM,CAACk1B,QAAQ,GAAGwS,SAAS,CAAExkB,IAAI,CAACgkB,UAAU,EAAE,IAAI,CAAChS,QAAQ,CAAE;QAE7D,IAAMiT,UAAU,GAAG,IAAI,CAACjT,QAAQ,CAACiT,UAAU;QAE3C,IAAKA,UAAU,KAAK1qC,SAAS,IAAI0qC,UAAU,CAACf,MAAM,KAAK3pC,SAAS,EAAG;UAElE,IAAM2pC,MAAM,GAAGe,UAAU,CAACf,MAAM;UAEhC,IAAK7jB,KAAK,CAACC,OAAO,CAAE4jB,MAAM,CAAE,EAAG;YAE9B,KAAM,IAAIpoC,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGs4B,MAAM,CAACroC,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;cAEjD,IAAMopC,KAAK,GAAGhB,MAAM,CAAEpoC,CAAC,CAAE;cAEzB0oC,SAAS,CAAExkB,IAAI,CAACkkB,MAAM,EAAEgB,KAAK,CAAE;YAEhC;UAED,CAAC,MAAM;YAENV,SAAS,CAAExkB,IAAI,CAACkkB,MAAM,EAAEA,MAAM,CAAE;UAEjC;QAED;MAED;MAEA,IAAK,IAAI,CAACiB,aAAa,EAAG;QAEzBroC,MAAM,CAACsoC,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC/BtoC,MAAM,CAACuoC,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC1wB,OAAO,EAAE;QAE7C,IAAK,IAAI,CAAC2wB,QAAQ,KAAK/qC,SAAS,EAAG;UAElCiqC,SAAS,CAAExkB,IAAI,CAACmkB,SAAS,EAAE,IAAI,CAACmB,QAAQ,CAAE;UAE1CxoC,MAAM,CAACwoC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC74B,IAAI;QAErC;MAED;MAEA,IAAK,IAAI,CAAC84B,QAAQ,KAAKhrC,SAAS,EAAG;QAElC,IAAK8lB,KAAK,CAACC,OAAO,CAAE,IAAI,CAACilB,QAAQ,CAAE,EAAG;UAErC,IAAMC,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI1pC,GAAC,GAAG,CAAC,EAAE8P,GAAC,GAAG,IAAI,CAAC25B,QAAQ,CAAC1pC,MAAM,EAAEC,GAAC,GAAG8P,GAAC,EAAE9P,GAAC,EAAG,EAAG;YAExD0pC,KAAK,CAAClqC,IAAI,CAAEkpC,SAAS,CAAExkB,IAAI,CAACikB,SAAS,EAAE,IAAI,CAACsB,QAAQ,CAAEzpC,GAAC,CAAE,CAAE,CAAE;UAE9D;UAEAgB,MAAM,CAACyoC,QAAQ,GAAGC,KAAK;QAExB,CAAC,MAAM;UAEN1oC,MAAM,CAACyoC,QAAQ,GAAGf,SAAS,CAAExkB,IAAI,CAACikB,SAAS,EAAE,IAAI,CAACsB,QAAQ,CAAE;QAE7D;MAED;;MAEA;;MAEA,IAAK,IAAI,CAAChT,QAAQ,CAAC12B,MAAM,GAAG,CAAC,EAAG;QAE/BiB,MAAM,CAACy1B,QAAQ,GAAG,EAAE;QAEpB,KAAM,IAAIz2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACy2B,QAAQ,CAAC12B,MAAM,EAAEC,GAAC,EAAG,EAAG;UAEjDgB,MAAM,CAACy1B,QAAQ,CAACj3B,IAAI,CAAE,IAAI,CAACi3B,QAAQ,CAAEz2B,GAAC,CAAE,CAACuiB,MAAM,CAAE2B,IAAI,CAAE,CAACljB,MAAM,CAAE;QAEjE;MAED;;MAEA;;MAEA,IAAK,IAAI,CAACukC,UAAU,CAACxlC,MAAM,GAAG,CAAC,EAAG;QAEjCiB,MAAM,CAACukC,UAAU,GAAG,EAAE;QAEtB,KAAM,IAAIvlC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAACulC,UAAU,CAACxlC,MAAM,EAAEC,GAAC,EAAG,EAAG;UAEnD,IAAM2pC,SAAS,GAAG,IAAI,CAACpE,UAAU,CAAEvlC,GAAC,CAAE;UAEtCgB,MAAM,CAACukC,UAAU,CAAC/lC,IAAI,CAAEkpC,SAAS,CAAExkB,IAAI,CAACqhB,UAAU,EAAEoE,SAAS,CAAE,CAAE;QAElE;MAED;MAEA,IAAKxlB,YAAY,EAAG;QAEnB,IAAM+jB,UAAU,GAAG0B,gBAAgB,CAAE1lB,IAAI,CAACgkB,UAAU,CAAE;QACtD,IAAMC,SAAS,GAAGyB,gBAAgB,CAAE1lB,IAAI,CAACikB,SAAS,CAAE;QACpD,IAAMnhB,QAAQ,GAAG4iB,gBAAgB,CAAE1lB,IAAI,CAAC8C,QAAQ,CAAE;QAClD,IAAM5C,MAAM,GAAGwlB,gBAAgB,CAAE1lB,IAAI,CAACE,MAAM,CAAE;QAC9C,IAAMgkB,OAAM,GAAGwB,gBAAgB,CAAE1lB,IAAI,CAACkkB,MAAM,CAAE;QAC9C,IAAMC,SAAS,GAAGuB,gBAAgB,CAAE1lB,IAAI,CAACmkB,SAAS,CAAE;QACpD,IAAM9C,UAAU,GAAGqE,gBAAgB,CAAE1lB,IAAI,CAACqhB,UAAU,CAAE;QACtD,IAAM+C,KAAK,GAAGsB,gBAAgB,CAAE1lB,IAAI,CAACokB,KAAK,CAAE;QAE5C,IAAKJ,UAAU,CAACnoC,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAAC6jB,UAAU,GAAGA,UAAU;QAC3D,IAAKC,SAAS,CAACpoC,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAAC8jB,SAAS,GAAGA,SAAS;QACxD,IAAKnhB,QAAQ,CAACjnB,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAAC2C,QAAQ,GAAGA,QAAQ;QACrD,IAAK5C,MAAM,CAACrkB,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAACD,MAAM,GAAGA,MAAM;QAC/C,IAAKgkB,OAAM,CAACroC,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAAC+jB,MAAM,GAAGA,OAAM;QAC/C,IAAKC,SAAS,CAACtoC,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAACgkB,SAAS,GAAGA,SAAS;QACxD,IAAK9C,UAAU,CAACxlC,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAACkhB,UAAU,GAAGA,UAAU;QAC3D,IAAK+C,KAAK,CAACvoC,MAAM,GAAG,CAAC,EAAGskB,MAAM,CAACikB,KAAK,GAAGA,KAAK;MAE7C;MAEAjkB,MAAM,CAACrjB,MAAM,GAAGA,MAAM;MAEtB,OAAOqjB,MAAM;;MAEb;MACA;MACA;MACA,SAASulB,gBAAgBA,CAAEC,KAAK,EAAG;QAElC,IAAMptC,MAAM,GAAG,EAAE;QACjB,KAAM,IAAMxC,GAAG,IAAI4vC,KAAK,EAAG;UAE1B,IAAM/lB,IAAI,GAAG+lB,KAAK,CAAE5vC,GAAG,CAAE;UACzB,OAAO6pB,IAAI,CAACmD,QAAQ;UACpBxqB,MAAM,CAAC+C,IAAI,CAAEskB,IAAI,CAAE;QAEpB;QAEA,OAAOrnB,MAAM;MAEd;IAED;EAAC;IAAAxC,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAO4zB,SAAS,EAAG;MAElB,OAAO,IAAI,IAAI,CAACzpC,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,EAAE2zB,SAAS,CAAE;IAEtD;EAAC;IAAA7vC,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,GAAG,IAAI,EAAG;MAEhC,IAAI,CAACxpC,IAAI,GAAGwf,MAAM,CAACxf,IAAI;MAEvB,IAAI,CAACy+B,EAAE,CAAC5oB,IAAI,CAAE2J,MAAM,CAACif,EAAE,CAAE;MAEzB,IAAI,CAAC3I,QAAQ,CAACjgB,IAAI,CAAE2J,MAAM,CAACsW,QAAQ,CAAE;MACrC,IAAI,CAAC9Y,QAAQ,CAACvJ,KAAK,GAAG+L,MAAM,CAACxC,QAAQ,CAACvJ,KAAK;MAC3C,IAAI,CAACyY,UAAU,CAACrW,IAAI,CAAE2J,MAAM,CAAC0M,UAAU,CAAE;MACzC,IAAI,CAAC/O,KAAK,CAACtH,IAAI,CAAE2J,MAAM,CAACrC,KAAK,CAAE;MAE/B,IAAI,CAACI,MAAM,CAAC1H,IAAI,CAAE2J,MAAM,CAACjC,MAAM,CAAE;MACjC,IAAI,CAACwU,WAAW,CAAClc,IAAI,CAAE2J,MAAM,CAACuS,WAAW,CAAE;MAE3C,IAAI,CAACnM,gBAAgB,GAAGpG,MAAM,CAACoG,gBAAgB;MAC/C,IAAI,CAAC+e,sBAAsB,GAAGnlB,MAAM,CAACmlB,sBAAsB;MAE3D,IAAI,CAAC5B,MAAM,CAACP,IAAI,GAAGhjB,MAAM,CAACujB,MAAM,CAACP,IAAI;MACrC,IAAI,CAACoC,OAAO,GAAGplB,MAAM,CAAColB,OAAO;MAE7B,IAAI,CAACC,UAAU,GAAGrlB,MAAM,CAACqlB,UAAU;MACnC,IAAI,CAACC,aAAa,GAAGtlB,MAAM,CAACslB,aAAa;MAEzC,IAAI,CAACC,aAAa,GAAGvlB,MAAM,CAACulB,aAAa;MACzC,IAAI,CAACC,WAAW,GAAGxlB,MAAM,CAACwlB,WAAW;MAErC,IAAI,CAAC/e,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEhH,MAAM,CAACyG,QAAQ,CAAE,CAAE;MAE/D,IAAKujB,SAAS,KAAK,IAAI,EAAG;QAEzB,KAAM,IAAI9pC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8f,MAAM,CAAC2W,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEnD,IAAMqnC,KAAK,GAAGvnB,MAAM,CAAC2W,QAAQ,CAAEz2B,CAAC,CAAE;UAClC,IAAI,CAACqW,GAAG,CAAEgxB,KAAK,CAACnxB,KAAK,EAAE,CAAE;QAE1B;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAkuB,QAAA;AAAA,EA53BqBp1B,eAAe;AAAAvV,OAAA,CAAA2qC,QAAA,GAAAA,QAAA;AAg4BtCA,QAAQ,CAACM,SAAS,GAAG,aAAc,IAAI5T,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;AACzDsT,QAAQ,CAACY,uBAAuB,GAAG,IAAI;AAEvC,IAAM+E,KAAK,GAAG,aAAc,IAAIjZ,OAAO,EAAE;AACzC,IAAMkZ,KAAK,GAAG,aAAc,IAAIlZ,OAAO,EAAE;AACzC,IAAMmZ,KAAK,GAAG,aAAc,IAAInZ,OAAO,EAAE;AACzC,IAAMoZ,KAAK,GAAG,aAAc,IAAIpZ,OAAO,EAAE;AAEzC,IAAMqZ,IAAI,GAAG,aAAc,IAAIrZ,OAAO,EAAE;AACxC,IAAMsZ,IAAI,GAAG,aAAc,IAAItZ,OAAO,EAAE;AACxC,IAAMuZ,IAAI,GAAG,aAAc,IAAIvZ,OAAO,EAAE;AACxC,IAAMwZ,IAAI,GAAG,aAAc,IAAIxZ,OAAO,EAAE;AACxC,IAAMyZ,IAAI,GAAG,aAAc,IAAIzZ,OAAO,EAAE;AACxC,IAAM0Z,IAAI,GAAG,aAAc,IAAI1Z,OAAO,EAAE;AAAC,IAEnC2Z,QAAQ;EAEb,SAAAA,SAAa72B,CAAC,GAAG,IAAIkd,OAAO,EAAE,EAAEjd,CAAC,GAAG,IAAIid,OAAO,EAAE,EAAEhd,CAAC,GAAG,IAAIgd,OAAO,EAAE,EAAG;IAAAvuB,eAAA,OAAAkoC,QAAA;IAEtE,IAAI,CAAC72B,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EAEX;EAAC/Q,YAAA,CAAA0nC,QAAA;IAAAxwC,GAAA;IAAAE,KAAA,EAoFD,SAAAua,IAAKd,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEd,IAAI,CAACF,CAAC,CAACuC,IAAI,CAAEvC,CAAC,CAAE;MAChB,IAAI,CAACC,CAAC,CAACsC,IAAI,CAAEtC,CAAC,CAAE;MAChB,IAAI,CAACC,CAAC,CAACqC,IAAI,CAAErC,CAAC,CAAE;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAuwC,wBAAyB1V,MAAM,EAAE2V,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAE7C,IAAI,CAACj3B,CAAC,CAACuC,IAAI,CAAE6e,MAAM,CAAE2V,EAAE,CAAE,CAAE;MAC3B,IAAI,CAAC92B,CAAC,CAACsC,IAAI,CAAE6e,MAAM,CAAE4V,EAAE,CAAE,CAAE;MAC3B,IAAI,CAAC92B,CAAC,CAACqC,IAAI,CAAE6e,MAAM,CAAE6V,EAAE,CAAE,CAAE;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA5wC,GAAA;IAAAE,KAAA,EAED,SAAA2wC,2BAA4B/xB,SAAS,EAAE4xB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAI,CAACj3B,CAAC,CAACkF,mBAAmB,CAAEC,SAAS,EAAE4xB,EAAE,CAAE;MAC3C,IAAI,CAAC92B,CAAC,CAACiF,mBAAmB,CAAEC,SAAS,EAAE6xB,EAAE,CAAE;MAC3C,IAAI,CAAC92B,CAAC,CAACgF,mBAAmB,CAAEC,SAAS,EAAE8xB,EAAE,CAAE;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAA5wC,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMkhB,QAAQ,EAAG;MAEhB,IAAI,CAACzjB,CAAC,CAACuC,IAAI,CAAEkhB,QAAQ,CAACzjB,CAAC,CAAE;MACzB,IAAI,CAACC,CAAC,CAACsC,IAAI,CAAEkhB,QAAQ,CAACxjB,CAAC,CAAE;MACzB,IAAI,CAACC,CAAC,CAACqC,IAAI,CAAEkhB,QAAQ,CAACvjB,CAAC,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAA4wC,QAAA,EAAU;MAEThB,KAAK,CAACpzB,UAAU,CAAE,IAAI,CAAC7C,CAAC,EAAE,IAAI,CAACD,CAAC,CAAE;MAClCm2B,KAAK,CAACrzB,UAAU,CAAE,IAAI,CAAC/C,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;MAElC,OAAOk2B,KAAK,CAACryB,KAAK,CAAEsyB,KAAK,CAAE,CAACjqC,MAAM,EAAE,GAAG,GAAG;IAE3C;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA6wC,YAAaroC,MAAM,EAAG;MAErB,OAAOA,MAAM,CAAC4T,UAAU,CAAE,IAAI,CAAC3C,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE,CAACwC,GAAG,CAAE,IAAI,CAACvC,CAAC,CAAE,CAAC+C,cAAc,CAAE,CAAC,GAAG,CAAC,CAAE;IAEjF;EAAC;IAAA5c,GAAA;IAAAE,KAAA,EAED,SAAA8wC,UAAWtoC,MAAM,EAAG;MAEnB,OAAO8nC,QAAQ,CAACQ,SAAS,CAAE,IAAI,CAACr3B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEnR,MAAM,CAAE;IAE5D;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAA+wC,SAAUvoC,MAAM,EAAG;MAElB,OAAOA,MAAM,CAACwoC,qBAAqB,CAAE,IAAI,CAACv3B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;IAE9D;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAixC,aAAcvV,KAAK,EAAElzB,MAAM,EAAG;MAE7B,OAAO8nC,QAAQ,CAACW,YAAY,CAAEvV,KAAK,EAAE,IAAI,CAACjiB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEnR,MAAM,CAAE;IAEtE;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAkxC,MAAOxV,KAAK,EAAEyV,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE7oC,MAAM,EAAG;MAErC,OAAO8nC,QAAQ,CAACY,KAAK,CAAExV,KAAK,EAAE,IAAI,CAACjiB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEw3B,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE7oC,MAAM,CAAE;IAE9E;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAu8B,cAAeb,KAAK,EAAG;MAEtB,OAAO4U,QAAQ,CAAC/T,aAAa,CAAEb,KAAK,EAAE,IAAI,CAACjiB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;IAE/D;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EAED,SAAAsxC,cAAevR,SAAS,EAAG;MAE1B,OAAOuQ,QAAQ,CAACgB,aAAa,CAAE,IAAI,CAAC73B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAEomB,SAAS,CAAE;IAEnE;EAAC;IAAAjgC,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAAC2B,kBAAkB,CAAE,IAAI,CAAE;IAEtC;EAAC;IAAAn9B,GAAA;IAAAE,KAAA,EAED,SAAAogC,oBAAqB3a,CAAC,EAAEjd,MAAM,EAAG;MAEhC,IAAMiR,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;QAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MACxC,IAAIsC,CAAC,EAAEoR,CAAC;;MAER;MACA;MACA;MACA;MACA;;MAEA2iB,IAAI,CAACxzB,UAAU,CAAE9C,CAAC,EAAED,CAAC,CAAE;MACvBw2B,IAAI,CAACzzB,UAAU,CAAE7C,CAAC,EAAEF,CAAC,CAAE;MACvB02B,IAAI,CAAC3zB,UAAU,CAAEiJ,CAAC,EAAEhM,CAAC,CAAE;MACvB,IAAMpD,EAAE,GAAG25B,IAAI,CAAC1yB,GAAG,CAAE6yB,IAAI,CAAE;MAC3B,IAAM75B,EAAE,GAAG25B,IAAI,CAAC3yB,GAAG,CAAE6yB,IAAI,CAAE;MAC3B,IAAK95B,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAG;QAEzB;QACA,OAAO9N,MAAM,CAACwT,IAAI,CAAEvC,CAAC,CAAE;MAExB;MAEA22B,IAAI,CAAC5zB,UAAU,CAAEiJ,CAAC,EAAE/L,CAAC,CAAE;MACvB,IAAMnD,EAAE,GAAGy5B,IAAI,CAAC1yB,GAAG,CAAE8yB,IAAI,CAAE;MAC3B,IAAMmB,EAAE,GAAGtB,IAAI,CAAC3yB,GAAG,CAAE8yB,IAAI,CAAE;MAC3B,IAAK75B,EAAE,IAAI,CAAC,IAAIg7B,EAAE,IAAIh7B,EAAE,EAAG;QAE1B;QACA,OAAO/N,MAAM,CAACwT,IAAI,CAAEtC,CAAC,CAAE;MAExB;MAEA,IAAM83B,EAAE,GAAGn7B,EAAE,GAAGk7B,EAAE,GAAGh7B,EAAE,GAAGD,EAAE;MAC5B,IAAKk7B,EAAE,IAAI,CAAC,IAAIn7B,EAAE,IAAI,CAAC,IAAIE,EAAE,IAAI,CAAC,EAAG;QAEpC0F,CAAC,GAAG5F,EAAE,IAAKA,EAAE,GAAGE,EAAE,CAAE;QACpB;QACA,OAAO/N,MAAM,CAACwT,IAAI,CAAEvC,CAAC,CAAE,CAAC4C,eAAe,CAAE2zB,IAAI,EAAE/zB,CAAC,CAAE;MAEnD;MAEAo0B,IAAI,CAAC7zB,UAAU,CAAEiJ,CAAC,EAAE9L,CAAC,CAAE;MACvB,IAAM83B,EAAE,GAAGzB,IAAI,CAAC1yB,GAAG,CAAE+yB,IAAI,CAAE;MAC3B,IAAMqB,EAAE,GAAGzB,IAAI,CAAC3yB,GAAG,CAAE+yB,IAAI,CAAE;MAC3B,IAAKqB,EAAE,IAAI,CAAC,IAAID,EAAE,IAAIC,EAAE,EAAG;QAE1B;QACA,OAAOlpC,MAAM,CAACwT,IAAI,CAAErC,CAAC,CAAE;MAExB;MAEA,IAAMg4B,EAAE,GAAGF,EAAE,GAAGn7B,EAAE,GAAGD,EAAE,GAAGq7B,EAAE;MAC5B,IAAKC,EAAE,IAAI,CAAC,IAAIr7B,EAAE,IAAI,CAAC,IAAIo7B,EAAE,IAAI,CAAC,EAAG;QAEpCrkB,CAAC,GAAG/W,EAAE,IAAKA,EAAE,GAAGo7B,EAAE,CAAE;QACpB;QACA,OAAOlpC,MAAM,CAACwT,IAAI,CAAEvC,CAAC,CAAE,CAAC4C,eAAe,CAAE4zB,IAAI,EAAE5iB,CAAC,CAAE;MAEnD;MAEA,IAAMukB,EAAE,GAAGr7B,EAAE,GAAGm7B,EAAE,GAAGD,EAAE,GAAGF,EAAE;MAC5B,IAAKK,EAAE,IAAI,CAAC,IAAML,EAAE,GAAGh7B,EAAE,IAAM,CAAC,IAAMk7B,EAAE,GAAGC,EAAE,IAAM,CAAC,EAAG;QAEtDxB,IAAI,CAAC1zB,UAAU,CAAE7C,CAAC,EAAED,CAAC,CAAE;QACvB2T,CAAC,GAAG,CAAEkkB,EAAE,GAAGh7B,EAAE,KAASg7B,EAAE,GAAGh7B,EAAE,IAAOk7B,EAAE,GAAGC,EAAE,CAAE,CAAE;QAC/C;QACA,OAAOlpC,MAAM,CAACwT,IAAI,CAAEtC,CAAC,CAAE,CAAC2C,eAAe,CAAE6zB,IAAI,EAAE7iB,CAAC,CAAE,CAAC,CAAC;MAErD;;MAEA;MACA,IAAMwkB,KAAK,GAAG,CAAC,IAAKD,EAAE,GAAGD,EAAE,GAAGH,EAAE,CAAE;MAClC;MACAv1B,CAAC,GAAG01B,EAAE,GAAGE,KAAK;MACdxkB,CAAC,GAAGmkB,EAAE,GAAGK,KAAK;MAEd,OAAOrpC,MAAM,CAACwT,IAAI,CAAEvC,CAAC,CAAE,CAAC4C,eAAe,CAAE2zB,IAAI,EAAE/zB,CAAC,CAAE,CAACI,eAAe,CAAE4zB,IAAI,EAAE5iB,CAAC,CAAE;IAE9E;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQ2e,QAAQ,EAAG;MAElB,OAAOA,QAAQ,CAACzjB,CAAC,CAAC8E,MAAM,CAAE,IAAI,CAAC9E,CAAC,CAAE,IAAIyjB,QAAQ,CAACxjB,CAAC,CAAC6E,MAAM,CAAE,IAAI,CAAC7E,CAAC,CAAE,IAAIwjB,QAAQ,CAACvjB,CAAC,CAAC4E,MAAM,CAAE,IAAI,CAAC5E,CAAC,CAAE;IAEjG;EAAC;IAAA7Z,GAAA;IAAAE,KAAA,EA9QD,SAAA8wC,UAAkBr3B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEnR,MAAM,EAAG;MAEnCA,MAAM,CAACgU,UAAU,CAAE7C,CAAC,EAAED,CAAC,CAAE;MACzBk2B,KAAK,CAACpzB,UAAU,CAAE/C,CAAC,EAAEC,CAAC,CAAE;MACxBlR,MAAM,CAAC+U,KAAK,CAAEqyB,KAAK,CAAE;MAErB,IAAMkC,cAAc,GAAGtpC,MAAM,CAACgV,QAAQ,EAAE;MACxC,IAAKs0B,cAAc,GAAG,CAAC,EAAG;QAEzB,OAAOtpC,MAAM,CAACkU,cAAc,CAAE,CAAC,GAAG3G,IAAI,CAAC0H,IAAI,CAAEq0B,cAAc,CAAE,CAAE;MAEhE;MAEA,OAAOtpC,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE7B;;IAEA;IACA;EAAA;IAAAza,GAAA;IAAAE,KAAA,EACA,SAAAixC,aAAqBvV,KAAK,EAAEjiB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEnR,MAAM,EAAG;MAE7ConC,KAAK,CAACpzB,UAAU,CAAE7C,CAAC,EAAEF,CAAC,CAAE;MACxBo2B,KAAK,CAACrzB,UAAU,CAAE9C,CAAC,EAAED,CAAC,CAAE;MACxBq2B,KAAK,CAACtzB,UAAU,CAAEkf,KAAK,EAAEjiB,CAAC,CAAE;MAE5B,IAAMs4B,KAAK,GAAGnC,KAAK,CAACtyB,GAAG,CAAEsyB,KAAK,CAAE;MAChC,IAAMoC,KAAK,GAAGpC,KAAK,CAACtyB,GAAG,CAAEuyB,KAAK,CAAE;MAChC,IAAMoC,KAAK,GAAGrC,KAAK,CAACtyB,GAAG,CAAEwyB,KAAK,CAAE;MAChC,IAAMoC,KAAK,GAAGrC,KAAK,CAACvyB,GAAG,CAAEuyB,KAAK,CAAE;MAChC,IAAMsC,KAAK,GAAGtC,KAAK,CAACvyB,GAAG,CAAEwyB,KAAK,CAAE;MAEhC,IAAM+B,KAAK,GAAKE,KAAK,GAAGG,KAAK,GAAGF,KAAK,GAAGA,KAAO;;MAE/C;MACA,IAAKH,KAAK,KAAK,CAAC,EAAG;QAElB;QACA;QACA,OAAOrpC,MAAM,CAAC+R,GAAG,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAEnC;MAEA,IAAM63B,QAAQ,GAAG,CAAC,GAAGP,KAAK;MAC1B,IAAM9X,CAAC,GAAG,CAAEmY,KAAK,GAAGD,KAAK,GAAGD,KAAK,GAAGG,KAAK,IAAKC,QAAQ;MACtD,IAAMn2B,CAAC,GAAG,CAAE81B,KAAK,GAAGI,KAAK,GAAGH,KAAK,GAAGC,KAAK,IAAKG,QAAQ;;MAEtD;MACA,OAAO5pC,MAAM,CAAC+R,GAAG,CAAE,CAAC,GAAGwf,CAAC,GAAG9d,CAAC,EAAEA,CAAC,EAAE8d,CAAC,CAAE;IAErC;EAAC;IAAAj6B,GAAA;IAAAE,KAAA,EAED,SAAAu8B,cAAsBb,KAAK,EAAEjiB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEtC,IAAI,CAACs3B,YAAY,CAAEvV,KAAK,EAAEjiB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEo2B,KAAK,CAAE;MAE1C,OAASA,KAAK,CAAC94B,CAAC,IAAI,CAAC,IAAQ84B,KAAK,CAACx4B,CAAC,IAAI,CAAG,IAAQw4B,KAAK,CAAC94B,CAAC,GAAG84B,KAAK,CAACx4B,CAAC,IAAM,CAAG;IAE9E;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAkxC,MAAcxV,KAAK,EAAE8C,EAAE,EAAEC,EAAE,EAAE4T,EAAE,EAAElB,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE7oC,MAAM,EAAG;MAExD,IAAI,CAACyoC,YAAY,CAAEvV,KAAK,EAAE8C,EAAE,EAAEC,EAAE,EAAE4T,EAAE,EAAEtC,KAAK,CAAE;MAE7CvnC,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;MAClB/R,MAAM,CAAC6T,eAAe,CAAE80B,GAAG,EAAEpB,KAAK,CAAC94B,CAAC,CAAE;MACtCzO,MAAM,CAAC6T,eAAe,CAAE+0B,GAAG,EAAErB,KAAK,CAACx4B,CAAC,CAAE;MACtC/O,MAAM,CAAC6T,eAAe,CAAEg1B,GAAG,EAAEtB,KAAK,CAAC3iB,CAAC,CAAE;MAEtC,OAAO5kB,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAsxC,cAAsB73B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEomB,SAAS,EAAG;MAE1C6P,KAAK,CAACpzB,UAAU,CAAE7C,CAAC,EAAED,CAAC,CAAE;MACxBm2B,KAAK,CAACrzB,UAAU,CAAE/C,CAAC,EAAEC,CAAC,CAAE;;MAExB;MACA,OAASk2B,KAAK,CAACryB,KAAK,CAAEsyB,KAAK,CAAE,CAACvyB,GAAG,CAAEyiB,SAAS,CAAE,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;IAEpE;EAAC;EAAA,OAAAuQ,QAAA;AAAA;AAAAhxC,OAAA,CAAAgxC,QAAA,GAAAA,QAAA;AAkMF,IAAIgC,UAAU,GAAG,CAAC;AAAC,IAEbC,QAAQ,0BAAAC,iBAAA;EAAA5nB,SAAA,CAAA2nB,QAAA,EAAAC,iBAAA;EAAA,IAAAC,OAAA,GAAA3nB,YAAA,CAAAynB,QAAA;EAEb,SAAAA,SAAA,EAAc;IAAA,IAAAG,OAAA;IAAAtqC,eAAA,OAAAmqC,QAAA;IAEbG,OAAA,GAAAD,OAAA,CAAA3wC,IAAA;IAEA4wC,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtBnzC,MAAM,CAACI,cAAc,CAAA+rB,sBAAA,CAAA+mB,OAAA,GAAQ,IAAI,EAAE;MAAE1yC,KAAK,EAAEsyC,UAAU;IAAI,CAAC,CAAE;IAE7DI,OAAA,CAAKl8B,IAAI,GAAGN,YAAY,EAAE;IAE1Bw8B,OAAA,CAAKvsC,IAAI,GAAG,EAAE;IACdusC,OAAA,CAAK7wC,IAAI,GAAG,UAAU;IAEtB6wC,OAAA,CAAKE,QAAQ,GAAG5nC,cAAc;IAC9B0nC,OAAA,CAAKG,IAAI,GAAGnoC,SAAS;IACrBgoC,OAAA,CAAKI,YAAY,GAAG,KAAK;IAEzBJ,OAAA,CAAKK,OAAO,GAAG,CAAC;IAChBL,OAAA,CAAKM,WAAW,GAAG,KAAK;IAExBN,OAAA,CAAKO,QAAQ,GAAGnnC,cAAc;IAC9B4mC,OAAA,CAAKQ,QAAQ,GAAGnnC,sBAAsB;IACtC2mC,OAAA,CAAKS,aAAa,GAAG9nC,WAAW;IAChCqnC,OAAA,CAAKU,aAAa,GAAG,IAAI;IACzBV,OAAA,CAAKW,aAAa,GAAG,IAAI;IACzBX,OAAA,CAAKY,kBAAkB,GAAG,IAAI;IAE9BZ,OAAA,CAAKa,SAAS,GAAG/mC,cAAc;IAC/BkmC,OAAA,CAAKc,SAAS,GAAG,IAAI;IACrBd,OAAA,CAAKe,UAAU,GAAG,IAAI;IAEtBf,OAAA,CAAKgB,gBAAgB,GAAG,IAAI;IAC5BhB,OAAA,CAAKiB,WAAW,GAAG3/B,iBAAiB;IACpC0+B,OAAA,CAAKkB,UAAU,GAAG,CAAC;IACnBlB,OAAA,CAAKmB,eAAe,GAAG,IAAI;IAC3BnB,OAAA,CAAKoB,WAAW,GAAG5gC,aAAa;IAChCw/B,OAAA,CAAKqB,YAAY,GAAG7gC,aAAa;IACjCw/B,OAAA,CAAKsB,YAAY,GAAG9gC,aAAa;IACjCw/B,OAAA,CAAKuB,YAAY,GAAG,KAAK;IAEzBvB,OAAA,CAAKwB,cAAc,GAAG,IAAI;IAC1BxB,OAAA,CAAKyB,gBAAgB,GAAG,KAAK;IAC7BzB,OAAA,CAAK0B,WAAW,GAAG,KAAK;IAExB1B,OAAA,CAAK2B,UAAU,GAAG,IAAI;IAEtB3B,OAAA,CAAK4B,UAAU,GAAG,IAAI;IAEtB5B,OAAA,CAAK6B,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEvB7B,OAAA,CAAK8B,aAAa,GAAG,KAAK;IAC1B9B,OAAA,CAAK+B,mBAAmB,GAAG,CAAC;IAC5B/B,OAAA,CAAKgC,kBAAkB,GAAG,CAAC;IAE3BhC,OAAA,CAAKiC,SAAS,GAAG,KAAK;IAEtBjC,OAAA,CAAKkC,eAAe,GAAG,KAAK;IAC5BlC,OAAA,CAAKmC,kBAAkB,GAAG,KAAK;IAE/BnC,OAAA,CAAK3H,OAAO,GAAG,IAAI;IAEnB2H,OAAA,CAAKoC,UAAU,GAAG,IAAI;IAEtBpC,OAAA,CAAKtmB,QAAQ,GAAG,CAAC,CAAC;IAElBsmB,OAAA,CAAK5oB,OAAO,GAAG,CAAC;IAEhB4oB,OAAA,CAAKqC,UAAU,GAAG,CAAC;IAAC,OAAArC,OAAA;EAErB;EAAC9pC,YAAA,CAAA2pC,QAAA;IAAAzyC,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAgB;MAEf,OAAO,IAAI,CAACu5B,UAAU;IAEvB,CAAC;IAAAx6B,GAAA,EAED,SAAAA,IAAeva,KAAK,EAAG;MAEtB,IAAK,IAAI,CAAC+0C,UAAU,GAAG,CAAC,KAAK/0C,KAAK,GAAG,CAAC,EAAG;QAExC,IAAI,CAAC8pB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACirB,UAAU,GAAG/0C,KAAK;IAExB;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAg1C,QAAA,CAAS,8BAA+B,CAAC;EAAC;IAAAl1C,GAAA;IAAAE,KAAA,EAE1C,SAAAqrC,eAAA,CAAgB,wDAAyD,CAAC;EAAC;IAAAvrC,GAAA;IAAAE,KAAA,EAE3E,SAAAi1C,gBAAA,CAAiB,8BAA+B,CAAC;EAAC;IAAAn1C,GAAA;IAAAE,KAAA,EAElD,SAAAk1C,sBAAA,EAAwB;MAEvB,OAAO,IAAI,CAACD,eAAe,CAAC9tB,QAAQ,EAAE;IAEvC;EAAC;IAAArnB,GAAA;IAAAE,KAAA,EAED,SAAAm1C,UAAW7yC,MAAM,EAAG;MAEnB,IAAKA,MAAM,KAAKgC,SAAS,EAAG;MAE5B,KAAM,IAAMxE,GAAG,IAAIwC,MAAM,EAAG;QAE3B,IAAM8yC,QAAQ,GAAG9yC,MAAM,CAAExC,GAAG,CAAE;QAE9B,IAAKs1C,QAAQ,KAAK9wC,SAAS,EAAG;UAE7BkW,OAAO,CAACC,IAAI,CAAE,oBAAoB,GAAG3a,GAAG,GAAG,4BAA4B,CAAE;UACzE;QAED;;QAEA;QACA,IAAKA,GAAG,KAAK,SAAS,EAAG;UAExB0a,OAAO,CAACC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC5Y,IAAI,GAAG,oEAAoE,CAAE;UAC3G,IAAI,CAACwzC,WAAW,GAAKD,QAAQ,KAAKvqC,WAAW,GAAK,IAAI,GAAG,KAAK;UAC9D;QAED;QAEA,IAAMyqC,YAAY,GAAG,IAAI,CAAEx1C,GAAG,CAAE;QAEhC,IAAKw1C,YAAY,KAAKhxC,SAAS,EAAG;UAEjCkW,OAAO,CAACC,IAAI,CAAE,QAAQ,GAAG,IAAI,CAAC5Y,IAAI,GAAG,MAAM,GAAG/B,GAAG,GAAG,wCAAwC,CAAE;UAC9F;QAED;QAEA,IAAKw1C,YAAY,IAAIA,YAAY,CAACxvB,OAAO,EAAG;UAE3CwvB,YAAY,CAAC/6B,GAAG,CAAE66B,QAAQ,CAAE;QAE7B,CAAC,MAAM,IAAOE,YAAY,IAAIA,YAAY,CAACze,SAAS,IAAQue,QAAQ,IAAIA,QAAQ,CAACve,SAAW,EAAG;UAE9Fye,YAAY,CAACt5B,IAAI,CAAEo5B,QAAQ,CAAE;QAE9B,CAAC,MAAM;UAEN,IAAI,CAAEt1C,GAAG,CAAE,GAAGs1C,QAAQ;QAEvB;MAED;IAED;EAAC;IAAAt1C,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMC,YAAY,GAAKD,IAAI,KAAKzlB,SAAS,IAAI,OAAOylB,IAAI,KAAK,QAAU;MAEvE,IAAKC,YAAY,EAAG;QAEnBD,IAAI,GAAG;UACN8C,QAAQ,EAAE,CAAC,CAAC;UACZ5C,MAAM,EAAE,CAAC;QACV,CAAC;MAEF;MAEA,IAAMN,IAAI,GAAG;QACZmD,QAAQ,EAAE;UACThD,OAAO,EAAE,GAAG;UACZjoB,IAAI,EAAE,UAAU;UAChBR,SAAS,EAAE;QACZ;MACD,CAAC;;MAED;MACAsoB,IAAI,CAACnT,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBmT,IAAI,CAAC9nB,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,IAAK,IAAI,CAACsE,IAAI,KAAK,EAAE,EAAGwjB,IAAI,CAACxjB,IAAI,GAAG,IAAI,CAACA,IAAI;MAE7C,IAAK,IAAI,CAAC4e,KAAK,IAAI,IAAI,CAACA,KAAK,CAACe,OAAO,EAAG6D,IAAI,CAAC5E,KAAK,GAAG,IAAI,CAACA,KAAK,CAACkC,MAAM,EAAE;MAExE,IAAK,IAAI,CAACsuB,SAAS,KAAKjxC,SAAS,EAAGqlB,IAAI,CAAC4rB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,SAAS,KAAKlxC,SAAS,EAAGqlB,IAAI,CAAC6rB,SAAS,GAAG,IAAI,CAACA,SAAS;MAEnE,IAAK,IAAI,CAACC,KAAK,KAAKnxC,SAAS,EAAGqlB,IAAI,CAAC8rB,KAAK,GAAG,IAAI,CAACA,KAAK;MACvD,IAAK,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAAC5vB,OAAO,EAAG6D,IAAI,CAAC+rB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACzuB,MAAM,EAAE;MAC5F,IAAK,IAAI,CAAC0uB,cAAc,KAAKrxC,SAAS,EAAGqlB,IAAI,CAACgsB,cAAc,GAAG,IAAI,CAACA,cAAc;MAClF,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC9vB,OAAO,EAAG6D,IAAI,CAACisB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC3uB,MAAM,EAAE;MACpF,IAAK,IAAI,CAAC4uB,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,KAAK,CAAC,EAAGlsB,IAAI,CAACksB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAE7G,IAAK,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAChwB,OAAO,EAAG6D,IAAI,CAACmsB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC7uB,MAAM,EAAE;MACpF,IAAK,IAAI,CAAC8uB,iBAAiB,KAAKzxC,SAAS,EAAGqlB,IAAI,CAACosB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAC3F,IAAK,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAAClwB,OAAO,EAAG6D,IAAI,CAACqsB,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC/uB,MAAM,EAAE;MACxG,IAAK,IAAI,CAACgvB,SAAS,KAAK3xC,SAAS,EAAGqlB,IAAI,CAACssB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,SAAS,KAAK5xC,SAAS,EAAGqlB,IAAI,CAACusB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,kBAAkB,KAAK7xC,SAAS,EAAGqlB,IAAI,CAACwsB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAE9F,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC1qB,SAAS,EAAG;QAEvD/B,IAAI,CAACysB,YAAY,GAAG,IAAI,CAACA,YAAY,CAAChuB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAE1D;MAEA,IAAK,IAAI,CAAC6/B,qBAAqB,IAAI,IAAI,CAACA,qBAAqB,CAAC3qB,SAAS,EAAG;QAEzE/B,IAAI,CAAC0sB,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACjuB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAE5E;MAEA,IAAK,IAAI,CAAC8/B,kBAAkB,IAAI,IAAI,CAACA,kBAAkB,CAAC5qB,SAAS,EAAG;QAEnE/B,IAAI,CAAC2sB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACluB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QACrEmT,IAAI,CAAC4sB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAAC73B,OAAO,EAAE;MAEhE;MAEA,IAAK,IAAI,CAAC83B,WAAW,KAAKlyC,SAAS,EAAGqlB,IAAI,CAAC6sB,WAAW,GAAG,IAAI,CAACA,WAAW;MACzE,IAAK,IAAI,CAACC,cAAc,KAAKnyC,SAAS,EAAGqlB,IAAI,CAAC8sB,cAAc,GAAG,IAAI,CAACA,cAAc;MAClF,IAAK,IAAI,CAACC,yBAAyB,KAAKpyC,SAAS,EAAGqlB,IAAI,CAAC+sB,yBAAyB,GAAG,IAAI,CAACA,yBAAyB;MAEnH,IAAK,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,CAACjrB,SAAS,EAAG;QAE3D/B,IAAI,CAACgtB,cAAc,GAAG,IAAI,CAACA,cAAc,CAACvuB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAE9D;MAEA,IAAK,IAAI,CAACogC,uBAAuB,IAAI,IAAI,CAACA,uBAAuB,CAAClrB,SAAS,EAAG;QAE7E/B,IAAI,CAACitB,uBAAuB,GAAG,IAAI,CAACA,uBAAuB,CAACxuB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAEhF;MAEA,IAAK,IAAI,CAACqgC,GAAG,IAAI,IAAI,CAACA,GAAG,CAACnrB,SAAS,EAAG/B,IAAI,CAACktB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACzuB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAC7E,IAAK,IAAI,CAACsgC,MAAM,IAAI,IAAI,CAACA,MAAM,CAACprB,SAAS,EAAG/B,IAAI,CAACmtB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC1uB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MACzF,IAAK,IAAI,CAACugC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACrrB,SAAS,EAAG/B,IAAI,CAACotB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC3uB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAEjG,IAAK,IAAI,CAACwgC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACtrB,SAAS,EAAG;QAE/C/B,IAAI,CAACqtB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC5uB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QACjDmT,IAAI,CAACstB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEhD;MAEA,IAAK,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACxrB,SAAS,EAAG;QAEzC/B,IAAI,CAACutB,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC9uB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QAC3CmT,IAAI,CAACwtB,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C;MAEA,IAAK,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC1rB,SAAS,EAAG;QAE7C/B,IAAI,CAACytB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAChvB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QAC/CmT,IAAI,CAAC0tB,SAAS,GAAG,IAAI,CAACA,SAAS;MAEhC;MAEA,IAAK,IAAI,CAACC,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC5rB,SAAS,EAAG;QAEjD/B,IAAI,CAAC2tB,SAAS,GAAG,IAAI,CAACA,SAAS,CAAClvB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QACnDmT,IAAI,CAAC4tB,aAAa,GAAG,IAAI,CAACA,aAAa;QACvC5tB,IAAI,CAAC6tB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC94B,OAAO,EAAE;MAE9C;MAEA,IAAK,IAAI,CAAC+4B,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC/rB,SAAS,EAAG;QAE7D/B,IAAI,CAAC8tB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACrvB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QAC/DmT,IAAI,CAAC+tB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAC/C/tB,IAAI,CAACguB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE9C;MAEA,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAAClsB,SAAS,EAAG/B,IAAI,CAACiuB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACxvB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MACjH,IAAK,IAAI,CAACqhC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACnsB,SAAS,EAAG/B,IAAI,CAACkuB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACzvB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAEjH,IAAK,IAAI,CAACshC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACpsB,SAAS,EAAG/B,IAAI,CAACmuB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC1vB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAC7G,IAAK,IAAI,CAACuhC,WAAW,IAAI,IAAI,CAACA,WAAW,CAACrsB,SAAS,EAAG/B,IAAI,CAACouB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC3vB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAC7G,IAAK,IAAI,CAACwhC,oBAAoB,IAAI,IAAI,CAACA,oBAAoB,CAACtsB,SAAS,EAAG/B,IAAI,CAACquB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAAC5vB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MACjJ,IAAK,IAAI,CAACyhC,gBAAgB,IAAI,IAAI,CAACA,gBAAgB,CAACvsB,SAAS,EAAG/B,IAAI,CAACsuB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAAC7vB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAEjI,IAAK,IAAI,CAAC0hC,MAAM,IAAI,IAAI,CAACA,MAAM,CAACxsB,SAAS,EAAG;QAE3C/B,IAAI,CAACuuB,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC9vB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;QAE7C,IAAK,IAAI,CAAC2hC,OAAO,KAAK7zC,SAAS,EAAGqlB,IAAI,CAACwuB,OAAO,GAAG,IAAI,CAACA,OAAO;MAE9D;MAEA,IAAK,IAAI,CAACC,eAAe,KAAK9zC,SAAS,EAAGqlB,IAAI,CAACyuB,eAAe,GAAG,IAAI,CAACA,eAAe;MACrF,IAAK,IAAI,CAACC,YAAY,KAAK/zC,SAAS,EAAGqlB,IAAI,CAAC0uB,YAAY,GAAG,IAAI,CAACA,YAAY;MAC5E,IAAK,IAAI,CAACC,eAAe,KAAKh0C,SAAS,EAAGqlB,IAAI,CAAC2uB,eAAe,GAAG,IAAI,CAACA,eAAe;MAErF,IAAK,IAAI,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,CAAC7sB,SAAS,EAAG;QAErD/B,IAAI,CAAC4uB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACnwB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAExD;MAEA,IAAK,IAAI,CAACgiC,YAAY,KAAKl0C,SAAS,EAAGqlB,IAAI,CAAC6uB,YAAY,GAAG,IAAI,CAACA,YAAY;MAC5E,IAAK,IAAI,CAACC,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC/sB,SAAS,EAAG/B,IAAI,CAAC8uB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACrwB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MAC7H,IAAK,IAAI,CAACkiC,SAAS,KAAKp0C,SAAS,EAAGqlB,IAAI,CAAC+uB,SAAS,GAAG,IAAI,CAACA,SAAS;MACnE,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACjtB,SAAS,EAAG/B,IAAI,CAACgvB,YAAY,GAAG,IAAI,CAACA,YAAY,CAACvwB,MAAM,CAAE2B,IAAI,CAAE,CAACvT,IAAI;MACjH,IAAK,IAAI,CAACoiC,mBAAmB,KAAKt0C,SAAS,EAAGqlB,IAAI,CAACivB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MACjG,IAAK,IAAI,CAACC,gBAAgB,KAAKv0C,SAAS,EAAGqlB,IAAI,CAACkvB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAAC5xB,MAAM,EAAE;MAEjG,IAAK,IAAI,CAACN,IAAI,KAAKriB,SAAS,EAAGqlB,IAAI,CAAChD,IAAI,GAAG,IAAI,CAACA,IAAI;MACpD,IAAK,IAAI,CAAC0tB,UAAU,KAAK,IAAI,EAAG1qB,IAAI,CAAC0qB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjE,IAAK,IAAI,CAACyE,eAAe,KAAKx0C,SAAS,EAAGqlB,IAAI,CAACmvB,eAAe,GAAG,IAAI,CAACA,eAAe;MAErF,IAAK,IAAI,CAAClG,QAAQ,KAAK5nC,cAAc,EAAG2e,IAAI,CAACipB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MACrE,IAAK,IAAI,CAACC,IAAI,KAAKnoC,SAAS,EAAGif,IAAI,CAACkpB,IAAI,GAAG,IAAI,CAACA,IAAI;MACpD,IAAK,IAAI,CAACC,YAAY,EAAGnpB,IAAI,CAACmpB,YAAY,GAAG,IAAI;MAEjD,IAAK,IAAI,CAACC,OAAO,GAAG,CAAC,EAAGppB,IAAI,CAACopB,OAAO,GAAG,IAAI,CAACA,OAAO;MACnD,IAAK,IAAI,CAACC,WAAW,KAAK,IAAI,EAAGrpB,IAAI,CAACqpB,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpErpB,IAAI,CAAC4pB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/B5pB,IAAI,CAAC6pB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/B7pB,IAAI,CAAC8pB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjC9pB,IAAI,CAAC2qB,UAAU,GAAG,IAAI,CAACA,UAAU;MAEjC3qB,IAAI,CAACsqB,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCtqB,IAAI,CAAC+pB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAC7C/pB,IAAI,CAACgqB,WAAW,GAAG,IAAI,CAACA,WAAW;MACnChqB,IAAI,CAACiqB,UAAU,GAAG,IAAI,CAACA,UAAU;MACjCjqB,IAAI,CAACkqB,eAAe,GAAG,IAAI,CAACA,eAAe;MAC3ClqB,IAAI,CAACmqB,WAAW,GAAG,IAAI,CAACA,WAAW;MACnCnqB,IAAI,CAACoqB,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCpqB,IAAI,CAACqqB,YAAY,GAAG,IAAI,CAACA,YAAY;;MAErC;MACA,IAAK,IAAI,CAAC7wB,QAAQ,KAAK7e,SAAS,IAAI,IAAI,CAAC6e,QAAQ,KAAK,CAAC,EAAGwG,IAAI,CAACxG,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEvF,IAAK,IAAI,CAACqxB,aAAa,KAAK,IAAI,EAAG7qB,IAAI,CAAC6qB,aAAa,GAAG,IAAI;MAC5D,IAAK,IAAI,CAACC,mBAAmB,KAAK,CAAC,EAAG9qB,IAAI,CAAC8qB,mBAAmB,GAAG,IAAI,CAACA,mBAAmB;MACzF,IAAK,IAAI,CAACC,kBAAkB,KAAK,CAAC,EAAG/qB,IAAI,CAAC+qB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAEtF,IAAK,IAAI,CAACqE,SAAS,KAAKz0C,SAAS,IAAI,IAAI,CAACy0C,SAAS,KAAK,CAAC,EAAGpvB,IAAI,CAACovB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC3F,IAAK,IAAI,CAACC,QAAQ,KAAK10C,SAAS,EAAGqlB,IAAI,CAACqvB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAChE,IAAK,IAAI,CAACC,OAAO,KAAK30C,SAAS,EAAGqlB,IAAI,CAACsvB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC7D,IAAK,IAAI,CAAC31B,KAAK,KAAKhf,SAAS,EAAGqlB,IAAI,CAACrG,KAAK,GAAG,IAAI,CAACA,KAAK;MAEvD,IAAK,IAAI,CAACqxB,SAAS,KAAK,IAAI,EAAGhrB,IAAI,CAACgrB,SAAS,GAAG,IAAI;MAEpD,IAAK,IAAI,CAACuE,SAAS,GAAG,CAAC,EAAGvvB,IAAI,CAACuvB,SAAS,GAAG,IAAI,CAACA,SAAS;MACzD,IAAK,IAAI,CAACtE,eAAe,KAAK,IAAI,EAAGjrB,IAAI,CAACirB,eAAe,GAAG,IAAI,CAACA,eAAe;MAChF,IAAK,IAAI,CAACC,kBAAkB,KAAK,IAAI,EAAGlrB,IAAI,CAACkrB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MAEzF,IAAK,IAAI,CAACsE,SAAS,KAAK,IAAI,EAAGxvB,IAAI,CAACwvB,SAAS,GAAG,IAAI,CAACA,SAAS;MAC9D,IAAK,IAAI,CAACC,kBAAkB,GAAG,CAAC,EAAGzvB,IAAI,CAACyvB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACpF,IAAK,IAAI,CAACC,gBAAgB,KAAK,OAAO,EAAG1vB,IAAI,CAAC0vB,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MACtF,IAAK,IAAI,CAACC,iBAAiB,KAAK,OAAO,EAAG3vB,IAAI,CAAC2vB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEzF,IAAK,IAAI,CAACjE,WAAW,KAAK,IAAI,EAAG1rB,IAAI,CAAC0rB,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpE,IAAK,IAAI,CAACtK,OAAO,KAAK,KAAK,EAAGphB,IAAI,CAACohB,OAAO,GAAG,KAAK;MAElD,IAAK,IAAI,CAAC+J,UAAU,KAAK,KAAK,EAAGnrB,IAAI,CAACmrB,UAAU,GAAG,KAAK;MAExD,IAAK,IAAI,CAACyE,GAAG,KAAK,KAAK,EAAG5vB,IAAI,CAAC4vB,GAAG,GAAG,KAAK;MAE1C,IAAK9sB,IAAI,CAACE,SAAS,CAAE,IAAI,CAACP,QAAQ,CAAE,KAAK,IAAI,EAAGzC,IAAI,CAACyC,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE7E;;MAEA,SAASqjB,gBAAgBA,CAAEC,KAAK,EAAG;QAElC,IAAMptC,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAMxC,GAAG,IAAI4vC,KAAK,EAAG;UAE1B,IAAM/lB,MAAI,GAAG+lB,KAAK,CAAE5vC,GAAG,CAAE;UACzB,OAAO6pB,MAAI,CAACmD,QAAQ;UACpBxqB,MAAM,CAAC+C,IAAI,CAAEskB,MAAI,CAAE;QAEpB;QAEA,OAAOrnB,MAAM;MAEd;MAEA,IAAK0nB,YAAY,EAAG;QAEnB,IAAM6C,QAAQ,GAAG4iB,gBAAgB,CAAE1lB,IAAI,CAAC8C,QAAQ,CAAE;QAClD,IAAM5C,MAAM,GAAGwlB,gBAAgB,CAAE1lB,IAAI,CAACE,MAAM,CAAE;QAE9C,IAAK4C,QAAQ,CAACjnB,MAAM,GAAG,CAAC,EAAG+jB,IAAI,CAACkD,QAAQ,GAAGA,QAAQ;QACnD,IAAK5C,MAAM,CAACrkB,MAAM,GAAG,CAAC,EAAG+jB,IAAI,CAACM,MAAM,GAAGA,MAAM;MAE9C;MAEA,OAAON,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACxf,IAAI,GAAGwf,MAAM,CAACxf,IAAI;MAEvB,IAAI,CAACysC,QAAQ,GAAGjtB,MAAM,CAACitB,QAAQ;MAC/B,IAAI,CAACC,IAAI,GAAGltB,MAAM,CAACktB,IAAI;MACvB,IAAI,CAACC,YAAY,GAAGntB,MAAM,CAACmtB,YAAY;MAEvC,IAAI,CAACC,OAAO,GAAGptB,MAAM,CAACotB,OAAO;MAC7B,IAAI,CAACC,WAAW,GAAGrtB,MAAM,CAACqtB,WAAW;MAErC,IAAI,CAACC,QAAQ,GAAGttB,MAAM,CAACstB,QAAQ;MAC/B,IAAI,CAACC,QAAQ,GAAGvtB,MAAM,CAACutB,QAAQ;MAC/B,IAAI,CAACC,aAAa,GAAGxtB,MAAM,CAACwtB,aAAa;MACzC,IAAI,CAACC,aAAa,GAAGztB,MAAM,CAACytB,aAAa;MACzC,IAAI,CAACC,aAAa,GAAG1tB,MAAM,CAAC0tB,aAAa;MACzC,IAAI,CAACC,kBAAkB,GAAG3tB,MAAM,CAAC2tB,kBAAkB;MAEnD,IAAI,CAACC,SAAS,GAAG5tB,MAAM,CAAC4tB,SAAS;MACjC,IAAI,CAACC,SAAS,GAAG7tB,MAAM,CAAC6tB,SAAS;MACjC,IAAI,CAACC,UAAU,GAAG9tB,MAAM,CAAC8tB,UAAU;MAEnC,IAAI,CAACC,gBAAgB,GAAG/tB,MAAM,CAAC+tB,gBAAgB;MAC/C,IAAI,CAACC,WAAW,GAAGhuB,MAAM,CAACguB,WAAW;MACrC,IAAI,CAACC,UAAU,GAAGjuB,MAAM,CAACiuB,UAAU;MACnC,IAAI,CAACC,eAAe,GAAGluB,MAAM,CAACkuB,eAAe;MAC7C,IAAI,CAACC,WAAW,GAAGnuB,MAAM,CAACmuB,WAAW;MACrC,IAAI,CAACC,YAAY,GAAGpuB,MAAM,CAACouB,YAAY;MACvC,IAAI,CAACC,YAAY,GAAGruB,MAAM,CAACquB,YAAY;MACvC,IAAI,CAACC,YAAY,GAAGtuB,MAAM,CAACsuB,YAAY;MAEvC,IAAMuF,SAAS,GAAG7zB,MAAM,CAACuuB,cAAc;MACvC,IAAIuF,SAAS,GAAG,IAAI;MAEpB,IAAKD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAM1iC,CAAC,GAAG0iC,SAAS,CAAC5zC,MAAM;QAC1B6zC,SAAS,GAAG,IAAIrvB,KAAK,CAAEtT,CAAC,CAAE;QAE1B,KAAM,IAAIjR,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;UAEhC4zC,SAAS,CAAE5zC,CAAC,CAAE,GAAG2zC,SAAS,CAAE3zC,CAAC,CAAE,CAACkW,KAAK,EAAE;QAExC;MAED;MAEA,IAAI,CAACm4B,cAAc,GAAGuF,SAAS;MAC/B,IAAI,CAACtF,gBAAgB,GAAGxuB,MAAM,CAACwuB,gBAAgB;MAC/C,IAAI,CAACC,WAAW,GAAGzuB,MAAM,CAACyuB,WAAW;MAErC,IAAI,CAACC,UAAU,GAAG1uB,MAAM,CAAC0uB,UAAU;MAEnC,IAAI,CAACC,UAAU,GAAG3uB,MAAM,CAAC2uB,UAAU;MAEnC,IAAI,CAACC,SAAS,GAAG5uB,MAAM,CAAC4uB,SAAS;MAEjC,IAAI,CAACC,aAAa,GAAG7uB,MAAM,CAAC6uB,aAAa;MACzC,IAAI,CAACC,mBAAmB,GAAG9uB,MAAM,CAAC8uB,mBAAmB;MACrD,IAAI,CAACC,kBAAkB,GAAG/uB,MAAM,CAAC+uB,kBAAkB;MAEnD,IAAI,CAACC,SAAS,GAAGhvB,MAAM,CAACgvB,SAAS;MAEjC,IAAI,CAACuE,SAAS,GAAGvzB,MAAM,CAACuzB,SAAS;MACjC,IAAI,CAACtE,eAAe,GAAGjvB,MAAM,CAACivB,eAAe;MAC7C,IAAI,CAACC,kBAAkB,GAAGlvB,MAAM,CAACkvB,kBAAkB;MAEnD,IAAI,CAAC9J,OAAO,GAAGplB,MAAM,CAAColB,OAAO;MAE7B,IAAI,CAAC+J,UAAU,GAAGnvB,MAAM,CAACmvB,UAAU;MAEnC,IAAI,CAAC1oB,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEhH,MAAM,CAACyG,QAAQ,CAAE,CAAE;MAE/D,OAAO,IAAI;IAEZ;EAAC;IAAAtsB,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACvX,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAU,CAAC,CAAE;IAE1C;EAAC;IAAA/B,GAAA;IAAAya,GAAA,EAED,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC8pB,OAAO,EAAG;IAEtC;EAAC;EAAA,OAAAyoB,QAAA;AAAA,EA3eqB19B,eAAe;AAAAvV,OAAA,CAAAizC,QAAA,GAAAA,QAAA;AAAA,IA+ehCmH,iBAAiB,0BAAAC,SAAA;EAAA/uB,SAAA,CAAA8uB,iBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA9uB,YAAA,CAAA4uB,iBAAA;EAEtB,SAAAA,kBAAa1K,UAAU,EAAG;IAAA,IAAA6K,OAAA;IAAAzxC,eAAA,OAAAsxC,iBAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAA93C,IAAA;IAEA+3C,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKh4C,IAAI,GAAG,mBAAmB;IAE/Bg4C,OAAA,CAAK90B,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;IAEpCi0B,OAAA,CAAKhD,GAAG,GAAG,IAAI;IAEfgD,OAAA,CAAK7C,QAAQ,GAAG,IAAI;IACpB6C,OAAA,CAAK5C,iBAAiB,GAAG,GAAG;IAE5B4C,OAAA,CAAK3C,KAAK,GAAG,IAAI;IACjB2C,OAAA,CAAK1C,cAAc,GAAG,GAAG;IAEzB0C,OAAA,CAAK9B,WAAW,GAAG,IAAI;IAEvB8B,OAAA,CAAK9C,QAAQ,GAAG,IAAI;IAEpB8C,OAAA,CAAK3B,MAAM,GAAG,IAAI;IAClB2B,OAAA,CAAK1B,OAAO,GAAGtrC,iBAAiB;IAChCgtC,OAAA,CAAKxB,YAAY,GAAG,CAAC;IACrBwB,OAAA,CAAKvB,eAAe,GAAG,IAAI;IAE3BuB,OAAA,CAAKV,SAAS,GAAG,KAAK;IACtBU,OAAA,CAAKT,kBAAkB,GAAG,CAAC;IAC3BS,OAAA,CAAKR,gBAAgB,GAAG,OAAO;IAC/BQ,OAAA,CAAKP,iBAAiB,GAAG,OAAO;IAEhCO,OAAA,CAAKN,GAAG,GAAG,IAAI;IAEfM,OAAA,CAAK1E,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA6K,OAAA;EAE9B;EAACjxC,YAAA,CAAA8wC,iBAAA;IAAA55C,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAN,iBAAA,CAAAj6C,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAAC8xB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGrxB,MAAM,CAACqxB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGtxB,MAAM,CAACsxB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGvxB,MAAM,CAACuxB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGxxB,MAAM,CAACwxB,cAAc;MAE3C,IAAI,CAACY,WAAW,GAAGpyB,MAAM,CAACoyB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGvyB,MAAM,CAACuyB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGxyB,MAAM,CAACwyB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAG1yB,MAAM,CAAC0yB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAG3yB,MAAM,CAAC2yB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAG1zB,MAAM,CAAC0zB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAG3zB,MAAM,CAAC2zB,iBAAiB;MAEjD,IAAI,CAACC,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAG,iBAAA;AAAA,EAxE8BnH,QAAQ;AAAAjzC,OAAA,CAAAo6C,iBAAA,GAAAA,iBAAA;AA4ExC,IAAMO,SAAS,GAAG,aAAc,IAAItjB,OAAO,EAAE;AAC7C,IAAMujB,UAAU,GAAG,aAAc,IAAI7+B,OAAO,EAAE;AAAC,IAEzC8+B,eAAe;EAEpB,SAAAA,gBAAazkC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAA+xC,eAAA;IAE1C,IAAK/vB,KAAK,CAACC,OAAO,CAAE3U,KAAK,CAAE,EAAG;MAE7B,MAAM,IAAIlR,SAAS,CAAE,uDAAuD,CAAE;IAE/E;IAEA,IAAI,CAAC61C,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACl0C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACuP,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC0kC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC3oB,KAAK,GAAG/b,KAAK,KAAKpR,SAAS,GAAGoR,KAAK,CAAC9P,MAAM,GAAGw0C,QAAQ,GAAG,CAAC;IAC9D,IAAI,CAACjyB,UAAU,GAAGA,UAAU,KAAK,IAAI;IAErC,IAAI,CAACmyB,KAAK,GAAGrmC,eAAe;IAC5B,IAAI,CAACsmC,WAAW,GAAG;MAAE97B,MAAM,EAAE,CAAC;MAAEgT,KAAK,EAAE,CAAE;IAAE,CAAC;IAE5C,IAAI,CAAC3H,OAAO,GAAG,CAAC;EAEjB;EAAClhB,YAAA,CAAAuxC,eAAA;IAAAr6C,GAAA;IAAAE,KAAA,EAED,SAAAw6C,iBAAA,EAAmB,CAAC;EAAC;IAAA16C,GAAA;IAAAya,GAAA,EAErB,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC8pB,OAAO,EAAG;IAEtC;EAAC;IAAAhqB,GAAA;IAAAE,KAAA,EAED,SAAAy6C,SAAUz6C,KAAK,EAAG;MAEjB,IAAI,CAACs6C,KAAK,GAAGt6C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACxf,IAAI,GAAGwf,MAAM,CAACxf,IAAI;MACvB,IAAI,CAACuP,KAAK,GAAG,IAAIiQ,MAAM,CAACjQ,KAAK,CAACxP,WAAW,CAAEyf,MAAM,CAACjQ,KAAK,CAAE;MACzD,IAAI,CAAC0kC,QAAQ,GAAGz0B,MAAM,CAACy0B,QAAQ;MAC/B,IAAI,CAAC3oB,KAAK,GAAG9L,MAAM,CAAC8L,KAAK;MACzB,IAAI,CAACtJ,UAAU,GAAGxC,MAAM,CAACwC,UAAU;MAEnC,IAAI,CAACmyB,KAAK,GAAG30B,MAAM,CAAC20B,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAx6C,GAAA;IAAAE,KAAA,EAED,SAAA06C,OAAQC,MAAM,EAAE/7B,SAAS,EAAEg8B,MAAM,EAAG;MAEnCD,MAAM,IAAI,IAAI,CAACP,QAAQ;MACvBQ,MAAM,IAAIh8B,SAAS,CAACw7B,QAAQ;MAE5B,KAAM,IAAIv0C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACykC,QAAQ,EAAEv0C,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAI,CAAC6P,KAAK,CAAEilC,MAAM,GAAG90C,CAAC,CAAE,GAAG+Y,SAAS,CAAClJ,KAAK,CAAEklC,MAAM,GAAG/0C,CAAC,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA66C,UAAWnlC,KAAK,EAAG;MAElB,IAAI,CAACA,KAAK,CAAC6E,GAAG,CAAE7E,KAAK,CAAE;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA5V,GAAA;IAAAE,KAAA,EAED,SAAA86C,gBAAiBC,MAAM,EAAG;MAEzB,IAAMrlC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI+I,MAAM,GAAG,CAAC;MAEd,KAAM,IAAI5Y,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGolC,MAAM,CAACn1C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAIkf,KAAK,GAAGg2B,MAAM,CAAEl1C,CAAC,CAAE;QAEvB,IAAKkf,KAAK,KAAKzgB,SAAS,EAAG;UAE1BkW,OAAO,CAACC,IAAI,CAAE,6DAA6D,EAAE5U,CAAC,CAAE;UAChFkf,KAAK,GAAG,IAAIa,KAAK,EAAE;QAEpB;QAEAlQ,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGsG,KAAK,CAAClC,CAAC;QAC5BnN,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGsG,KAAK,CAAC/C,CAAC;QAC5BtM,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGsG,KAAK,CAACrL,CAAC;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5Z,GAAA;IAAAE,KAAA,EAED,SAAAg7C,kBAAmBC,OAAO,EAAG;MAE5B,IAAMvlC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI+I,MAAM,GAAG,CAAC;MAEd,KAAM,IAAI5Y,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGslC,OAAO,CAACr1C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAElD,IAAI+1B,MAAM,GAAGqf,OAAO,CAAEp1C,CAAC,CAAE;QAEzB,IAAK+1B,MAAM,KAAKt3B,SAAS,EAAG;UAE3BkW,OAAO,CAACC,IAAI,CAAE,gEAAgE,EAAE5U,CAAC,CAAE;UACnF+1B,MAAM,GAAG,IAAIvgB,OAAO,EAAE;QAEvB;QAEA3F,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAAC3kB,CAAC;QAC7BvB,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAACrkB,CAAC;MAE9B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAk7C,kBAAmBD,OAAO,EAAG;MAE5B,IAAMvlC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI+I,MAAM,GAAG,CAAC;MAEd,KAAM,IAAI5Y,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGslC,OAAO,CAACr1C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAElD,IAAI+1B,MAAM,GAAGqf,OAAO,CAAEp1C,CAAC,CAAE;QAEzB,IAAK+1B,MAAM,KAAKt3B,SAAS,EAAG;UAE3BkW,OAAO,CAACC,IAAI,CAAE,gEAAgE,EAAE5U,CAAC,CAAE;UACnF+1B,MAAM,GAAG,IAAIjF,OAAO,EAAE;QAEvB;QAEAjhB,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAAC3kB,CAAC;QAC7BvB,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAACrkB,CAAC;QAC7B7B,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAACxO,CAAC;MAE9B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm7C,kBAAmBF,OAAO,EAAG;MAE5B,IAAMvlC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI+I,MAAM,GAAG,CAAC;MAEd,KAAM,IAAI5Y,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGslC,OAAO,CAACr1C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAElD,IAAI+1B,MAAM,GAAGqf,OAAO,CAAEp1C,CAAC,CAAE;QAEzB,IAAK+1B,MAAM,KAAKt3B,SAAS,EAAG;UAE3BkW,OAAO,CAACC,IAAI,CAAE,gEAAgE,EAAE5U,CAAC,CAAE;UACnF+1B,MAAM,GAAG,IAAI1O,OAAO,EAAE;QAEvB;QAEAxX,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAAC3kB,CAAC;QAC7BvB,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAACrkB,CAAC;QAC7B7B,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAACxO,CAAC;QAC7B1X,KAAK,CAAE+I,MAAM,EAAG,CAAE,GAAGmd,MAAM,CAACvO,CAAC;MAE9B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA6c,aAAc9F,CAAC,EAAG;MAEjB,IAAK,IAAI,CAACqjC,QAAQ,KAAK,CAAC,EAAG;QAE1B,KAAM,IAAIv0C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE9Cq0C,UAAU,CAACv7B,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;UACzCq0C,UAAU,CAACr9B,YAAY,CAAE9F,CAAC,CAAE;UAE5B,IAAI,CAACqkC,KAAK,CAAEv1C,CAAC,EAAEq0C,UAAU,CAACjjC,CAAC,EAAEijC,UAAU,CAAC3iC,CAAC,CAAE;QAE5C;MAED,CAAC,MAAM,IAAK,IAAI,CAAC6iC,QAAQ,KAAK,CAAC,EAAG;QAEjC,KAAM,IAAIv0C,GAAC,GAAG,CAAC,EAAE8P,GAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,GAAC,GAAG8P,GAAC,EAAE9P,GAAC,EAAG,EAAG;UAE9Co0C,SAAS,CAACt7B,mBAAmB,CAAE,IAAI,EAAE9Y,GAAC,CAAE;UACxCo0C,SAAS,CAACp9B,YAAY,CAAE9F,CAAC,CAAE;UAE3B,IAAI,CAACskC,MAAM,CAAEx1C,GAAC,EAAEo0C,SAAS,CAAChjC,CAAC,EAAEgjC,SAAS,CAAC1iC,CAAC,EAAE0iC,SAAS,CAAC7sB,CAAC,CAAE;QAExD;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc1W,CAAC,EAAG;MAEjB,KAAM,IAAIlR,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAE9Co0C,SAAS,CAACt7B,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;QAExCo0C,SAAS,CAACxsB,YAAY,CAAE1W,CAAC,CAAE;QAE3B,IAAI,CAACskC,MAAM,CAAEx1C,CAAC,EAAEo0C,SAAS,CAAChjC,CAAC,EAAEgjC,SAAS,CAAC1iC,CAAC,EAAE0iC,SAAS,CAAC7sB,CAAC,CAAE;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm3B,kBAAmBpgB,CAAC,EAAG;MAEtB,KAAM,IAAIlR,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAE9Co0C,SAAS,CAACt7B,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;QAExCo0C,SAAS,CAAC9iB,iBAAiB,CAAEpgB,CAAC,CAAE;QAEhC,IAAI,CAACskC,MAAM,CAAEx1C,CAAC,EAAEo0C,SAAS,CAAChjC,CAAC,EAAEgjC,SAAS,CAAC1iC,CAAC,EAAE0iC,SAAS,CAAC7sB,CAAC,CAAE;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm4B,mBAAoBphB,CAAC,EAAG;MAEvB,KAAM,IAAIlR,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAE9Co0C,SAAS,CAACt7B,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;QAExCo0C,SAAS,CAAC9hB,kBAAkB,CAAEphB,CAAC,CAAE;QAEjC,IAAI,CAACskC,MAAM,CAAEx1C,CAAC,EAAEo0C,SAAS,CAAChjC,CAAC,EAAEgjC,SAAS,CAAC1iC,CAAC,EAAE0iC,SAAS,CAAC7sB,CAAC,CAAE;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKva,KAAK,EAAEye,MAAM,GAAG,CAAC,EAAG;MAExB,IAAI,CAAC/I,KAAK,CAAC6E,GAAG,CAAEva,KAAK,EAAEye,MAAM,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA6e,KAAMvJ,KAAK,EAAG;MAEb,OAAO,IAAI,CAACI,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,CAAE;IAE3C;EAAC;IAAAt6C,GAAA;IAAAE,KAAA,EAED,SAAA2b,KAAMrG,KAAK,EAAE2B,CAAC,EAAG;MAEhB,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,CAAE,GAAGnjC,CAAC;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAnX,GAAA;IAAAE,KAAA,EAED,SAAA8e,KAAMxJ,KAAK,EAAG;MAEb,OAAO,IAAI,CAACI,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,GAAG,CAAC,CAAE;IAE/C;EAAC;IAAAt6C,GAAA;IAAAE,KAAA,EAED,SAAA4b,KAAMtG,KAAK,EAAEiC,CAAC,EAAG;MAEhB,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,GAAG,CAAC,CAAE,GAAG7iC,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAkoB,KAAM5S,KAAK,EAAG;MAEb,OAAO,IAAI,CAACI,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,GAAG,CAAC,CAAE;IAE/C;EAAC;IAAAt6C,GAAA;IAAAE,KAAA,EAED,SAAAutB,KAAMjY,KAAK,EAAE8X,CAAC,EAAG;MAEhB,IAAI,CAAC1X,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,GAAG,CAAC,CAAE,GAAGhtB,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA8uB,KAAMxZ,KAAK,EAAG;MAEb,OAAO,IAAI,CAACI,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,GAAG,CAAC,CAAE;IAE/C;EAAC;IAAAt6C,GAAA;IAAAE,KAAA,EAED,SAAAwtB,KAAMlY,KAAK,EAAE+X,CAAC,EAAG;MAEhB,IAAI,CAAC3X,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAAC8kC,QAAQ,GAAG,CAAC,CAAE,GAAG/sB,CAAC;MAE3C,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAo7C,MAAO9lC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;MAEpBjC,KAAK,IAAI,IAAI,CAAC8kC,QAAQ;MAEtB,IAAI,CAAC1kC,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAq7C,OAAQ/lC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAExB9X,KAAK,IAAI,IAAI,CAAC8kC,QAAQ;MAEtB,IAAI,CAAC1kC,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAC3B,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG8X,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAs7C,QAAShmC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAEC,CAAC,EAAG;MAE5B/X,KAAK,IAAI,IAAI,CAAC8kC,QAAQ;MAEtB,IAAI,CAAC1kC,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAC3B,IAAI,CAACvB,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAC3B,IAAI,CAAC7B,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG8X,CAAC;MAC3B,IAAI,CAAC1X,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+X,CAAC;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAAu7C,SAAUlmB,QAAQ,EAAG;MAEpB,IAAI,CAACmlB,gBAAgB,GAAGnlB,QAAQ;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAACwP,KAAK,EAAE,IAAI,CAAC0kC,QAAQ,CAAE,CAACp+B,IAAI,CAAE,IAAI,CAAE;IAEtE;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAG;QACZywB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBv4C,IAAI,EAAE,IAAI,CAAC6T,KAAK,CAACxP,WAAW,CAACC,IAAI;QACjCuP,KAAK,EAAE0U,KAAK,CAACI,IAAI,CAAE,IAAI,CAAC9U,KAAK,CAAE;QAC/ByS,UAAU,EAAE,IAAI,CAACA;MAClB,CAAC;MAED,IAAK,IAAI,CAAChiB,IAAI,KAAK,EAAE,EAAGwjB,IAAI,CAACxjB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,IAAK,IAAI,CAACm0C,KAAK,KAAKrmC,eAAe,EAAG0V,IAAI,CAAC2wB,KAAK,GAAG,IAAI,CAACA,KAAK;MAC7D,IAAK,IAAI,CAACC,WAAW,CAAC97B,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC87B,WAAW,CAAC9oB,KAAK,KAAK,CAAE,CAAC,EAAG9H,IAAI,CAAC4wB,WAAW,GAAG,IAAI,CAACA,WAAW;MAE1G,OAAO5wB,IAAI;IAEZ;EAAC;EAAA,OAAAwwB,eAAA;AAAA,KAIF;AAAA76C,OAAA,CAAA66C,eAAA,GAAAA,eAAA;AAAA,IAEMqB,mBAAmB,0BAAAC,gBAAA;EAAA7wB,SAAA,CAAA4wB,mBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA5wB,YAAA,CAAA0wB,mBAAA;EAExB,SAAAA,oBAAa9lC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAAozC,mBAAA;IAAA,OAAAE,QAAA,CAAA55C,IAAA,OAEnC,IAAIiZ,SAAS,CAAErF,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAEpD;EAAC,OAAAvf,YAAA,CAAA4yC,mBAAA;AAAA,EANgCrB,eAAe;AAAA76C,OAAA,CAAAk8C,mBAAA,GAAAA,mBAAA;AAAA,IAU3CG,oBAAoB,0BAAAC,iBAAA;EAAAhxB,SAAA,CAAA+wB,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA/wB,YAAA,CAAA6wB,oBAAA;EAEzB,SAAAA,qBAAajmC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAAuzC,oBAAA;IAAA,OAAAE,QAAA,CAAA/5C,IAAA,OAEnC,IAAI+Y,UAAU,CAAEnF,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAErD;EAAC,OAAAvf,YAAA,CAAA+yC,oBAAA;AAAA,EANiCxB,eAAe;AAAA76C,OAAA,CAAAq8C,oBAAA,GAAAA,oBAAA;AAAA,IAU5CG,2BAA2B,0BAAAC,iBAAA;EAAAnxB,SAAA,CAAAkxB,2BAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAlxB,YAAA,CAAAgxB,2BAAA;EAEhC,SAAAA,4BAAapmC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAA0zC,2BAAA;IAAA,OAAAE,QAAA,CAAAl6C,IAAA,OAEnC,IAAI+hB,iBAAiB,CAAEnO,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAE5D;EAAC,OAAAvf,YAAA,CAAAkzC,2BAAA;AAAA,EANwC3B,eAAe;AAAA76C,OAAA,CAAAw8C,2BAAA,GAAAA,2BAAA;AAAA,IAUnDG,oBAAoB,0BAAAC,iBAAA;EAAAtxB,SAAA,CAAAqxB,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAArxB,YAAA,CAAAmxB,oBAAA;EAEzB,SAAAA,qBAAavmC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAA6zC,oBAAA;IAAA,OAAAE,QAAA,CAAAr6C,IAAA,OAEnC,IAAIgZ,UAAU,CAAEpF,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAErD;EAAC,OAAAvf,YAAA,CAAAqzC,oBAAA;AAAA,EANiC9B,eAAe;AAAA76C,OAAA,CAAA28C,oBAAA,GAAAA,oBAAA;AAAA,IAU5CG,qBAAqB,0BAAAC,iBAAA;EAAAzxB,SAAA,CAAAwxB,qBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAxxB,YAAA,CAAAsxB,qBAAA;EAE1B,SAAAA,sBAAa1mC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAAg0C,qBAAA;IAAA,OAAAE,QAAA,CAAAx6C,IAAA,OAEnC,IAAI8Y,WAAW,CAAElF,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAEtD;EAAC,OAAAvf,YAAA,CAAAwzC,qBAAA;AAAA,EANkCjC,eAAe;AAAA76C,OAAA,CAAA88C,qBAAA,GAAAA,qBAAA;AAAA,IAU7CG,oBAAoB,0BAAAC,iBAAA;EAAA5xB,SAAA,CAAA2xB,oBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA3xB,YAAA,CAAAyxB,oBAAA;EAEzB,SAAAA,qBAAa7mC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAAm0C,oBAAA;IAAA,OAAAE,QAAA,CAAA36C,IAAA,OAEnC,IAAIgiB,UAAU,CAAEpO,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAErD;EAAC,OAAAvf,YAAA,CAAA2zC,oBAAA;AAAA,EANiCpC,eAAe;AAAA76C,OAAA,CAAAi9C,oBAAA,GAAAA,oBAAA;AAAA,IAU5CG,qBAAqB,0BAAAC,iBAAA;EAAA/xB,SAAA,CAAA8xB,qBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA9xB,YAAA,CAAA4xB,qBAAA;EAE1B,SAAAA,sBAAahnC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAAs0C,qBAAA;IAAA,OAAAE,QAAA,CAAA96C,IAAA,OAEnC,IAAIiiB,WAAW,CAAErO,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAEtD;EAAC,OAAAvf,YAAA,CAAA8zC,qBAAA;AAAA,EANkCvC,eAAe;AAAA76C,OAAA,CAAAo9C,qBAAA,GAAAA,qBAAA;AAAA,IAU7CG,sBAAsB,0BAAAC,iBAAA;EAAAlyB,SAAA,CAAAiyB,sBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAjyB,YAAA,CAAA+xB,sBAAA;EAE3B,SAAAA,uBAAannC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA,IAAA60B,OAAA;IAAA50C,eAAA,OAAAy0C,sBAAA;IAE1CG,OAAA,GAAAD,QAAA,CAAAj7C,IAAA,OAAO,IAAI8Y,WAAW,CAAElF,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;IAErD60B,OAAA,CAAKC,wBAAwB,GAAG,IAAI;IAAC,OAAAD,OAAA;EAEtC;EAAC,OAAAp0C,YAAA,CAAAi0C,sBAAA;AAAA,EARmC1C,eAAe;AAAA76C,OAAA,CAAAu9C,sBAAA,GAAAA,sBAAA;AAAA,IAa9CK,sBAAsB,0BAAAC,iBAAA;EAAAvyB,SAAA,CAAAsyB,sBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAtyB,YAAA,CAAAoyB,sBAAA;EAE3B,SAAAA,uBAAaxnC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAA80C,sBAAA;IAAA,OAAAE,QAAA,CAAAt7C,IAAA,OAEnC,IAAI6Y,YAAY,CAAEjF,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAEvD;EAAC,OAAAvf,YAAA,CAAAs0C,sBAAA;AAAA,EANmC/C,eAAe;AAAA76C,OAAA,CAAA49C,sBAAA,GAAAA,sBAAA;AAAA,IAU9CG,sBAAsB,0BAAAC,kBAAA;EAAA1yB,SAAA,CAAAyyB,sBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAzyB,YAAA,CAAAuyB,sBAAA;EAE3B,SAAAA,uBAAa3nC,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAG;IAAA/f,eAAA,OAAAi1C,sBAAA;IAAA,OAAAE,QAAA,CAAAz7C,IAAA,OAEnC,IAAIkiB,YAAY,CAAEtO,KAAK,CAAE,EAAE0kC,QAAQ,EAAEjyB,UAAU;EAEvD;EAAC,OAAAvf,YAAA,CAAAy0C,sBAAA;AAAA,EANmClD,eAAe;AAAA76C,OAAA,CAAA+9C,sBAAA,GAAAA,sBAAA;AAUpD,IAAIG,KAAK,GAAG,CAAC;AAEb,IAAMC,GAAG,GAAG,aAAc,IAAI9a,OAAO,EAAE;AACvC,IAAM+a,IAAI,GAAG,aAAc,IAAIzT,QAAQ,EAAE;AACzC,IAAM0T,OAAO,GAAG,aAAc,IAAIhnB,OAAO,EAAE;AAC3C,IAAMinB,MAAM,GAAG,aAAc,IAAI3jB,IAAI,EAAE;AACvC,IAAM4jB,gBAAgB,GAAG,aAAc,IAAI5jB,IAAI,EAAE;AACjD,IAAM6jB,SAAS,GAAG,aAAc,IAAInnB,OAAO,EAAE;AAAC,IAExConB,cAAc,0BAAAC,iBAAA;EAAApzB,SAAA,CAAAmzB,cAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAnzB,YAAA,CAAAizB,cAAA;EAEnB,SAAAA,eAAA,EAAc;IAAA,IAAAG,OAAA;IAAA91C,eAAA,OAAA21C,cAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAn8C,IAAA;IAEAo8C,OAAA,CAAKC,gBAAgB,GAAG,IAAI;IAE5B3+C,MAAM,CAACI,cAAc,CAAA+rB,sBAAA,CAAAuyB,OAAA,GAAQ,IAAI,EAAE;MAAEl+C,KAAK,EAAEw9C,KAAK;IAAI,CAAC,CAAE;IAExDU,OAAA,CAAK1nC,IAAI,GAAGN,YAAY,EAAE;IAE1BgoC,OAAA,CAAK/3C,IAAI,GAAG,EAAE;IACd+3C,OAAA,CAAKr8C,IAAI,GAAG,gBAAgB;IAE5Bq8C,OAAA,CAAK5oC,KAAK,GAAG,IAAI;IACjB4oC,OAAA,CAAKliB,UAAU,GAAG,CAAC,CAAC;IAEpBkiB,OAAA,CAAKE,eAAe,GAAG,CAAC,CAAC;IACzBF,OAAA,CAAKG,oBAAoB,GAAG,KAAK;IAEjCH,OAAA,CAAKI,MAAM,GAAG,EAAE;IAEhBJ,OAAA,CAAKhiB,WAAW,GAAG,IAAI;IACvBgiB,OAAA,CAAKK,cAAc,GAAG,IAAI;IAE1BL,OAAA,CAAKM,SAAS,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEhtB,KAAK,EAAEyI;IAAS,CAAC;IAE9CgkB,OAAA,CAAK9xB,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAA8xB,OAAA;EAEpB;EAACt1C,YAAA,CAAAm1C,cAAA;IAAAj+C,GAAA;IAAAE,KAAA,EAED,SAAA0+C,SAAA,EAAW;MAEV,OAAO,IAAI,CAACppC,KAAK;IAElB;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA2+C,SAAUrpC,KAAK,EAAG;MAEjB,IAAK8U,KAAK,CAACC,OAAO,CAAE/U,KAAK,CAAE,EAAG;QAE7B,IAAI,CAACA,KAAK,GAAG,KAAMqO,gBAAgB,CAAErO,KAAK,CAAE,GAAGonC,qBAAqB,GAAGN,qBAAqB,EAAI9mC,KAAK,EAAE,CAAC,CAAE;MAE3G,CAAC,MAAM;QAEN,IAAI,CAACA,KAAK,GAAGA,KAAK;MAEnB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA4+C,aAAcz4C,IAAI,EAAG;MAEpB,OAAO,IAAI,CAAC61B,UAAU,CAAE71B,IAAI,CAAE;IAE/B;EAAC;IAAArG,GAAA;IAAAE,KAAA,EAED,SAAA6+C,aAAc14C,IAAI,EAAEyY,SAAS,EAAG;MAE/B,IAAI,CAACod,UAAU,CAAE71B,IAAI,CAAE,GAAGyY,SAAS;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAA9e,GAAA;IAAAE,KAAA,EAED,SAAA8+C,gBAAiB34C,IAAI,EAAG;MAEvB,OAAO,IAAI,CAAC61B,UAAU,CAAE71B,IAAI,CAAE;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAArG,GAAA;IAAAE,KAAA,EAED,SAAA++C,aAAc54C,IAAI,EAAG;MAEpB,OAAO,IAAI,CAAC61B,UAAU,CAAE71B,IAAI,CAAE,KAAK7B,SAAS;IAE7C;EAAC;IAAAxE,GAAA;IAAAE,KAAA,EAED,SAAAg/C,SAAUP,KAAK,EAAEhtB,KAAK,EAAEwtB,aAAa,GAAG,CAAC,EAAG;MAE3C,IAAI,CAACX,MAAM,CAACj5C,IAAI,CAAE;QAEjBo5C,KAAK,EAAEA,KAAK;QACZhtB,KAAK,EAAEA,KAAK;QACZwtB,aAAa,EAAEA;MAEhB,CAAC,CAAE;IAEJ;EAAC;IAAAn/C,GAAA;IAAAE,KAAA,EAED,SAAAk/C,YAAA,EAAc;MAEb,IAAI,CAACZ,MAAM,GAAG,EAAE;IAEjB;EAAC;IAAAx+C,GAAA;IAAAE,KAAA,EAED,SAAAm/C,aAAcV,KAAK,EAAEhtB,KAAK,EAAG;MAE5B,IAAI,CAAC+sB,SAAS,CAACC,KAAK,GAAGA,KAAK;MAC5B,IAAI,CAACD,SAAS,CAAC/sB,KAAK,GAAGA,KAAK;IAE7B;EAAC;IAAA3xB,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc/J,MAAM,EAAG;MAEtB,IAAMuY,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MAEzC,IAAKA,QAAQ,KAAK33B,SAAS,EAAG;QAE7B23B,QAAQ,CAACxO,YAAY,CAAE/J,MAAM,CAAE;QAE/BuY,QAAQ,CAACrP,WAAW,GAAG,IAAI;MAE5B;MAEA,IAAMqM,MAAM,GAAG,IAAI,CAAC+C,UAAU,CAAC/C,MAAM;MAErC,IAAKA,MAAM,KAAK30B,SAAS,EAAG;QAE3B,IAAMsmC,YAAY,GAAG,IAAIzrB,OAAO,EAAE,CAACuD,eAAe,CAAEgB,MAAM,CAAE;QAE5DuV,MAAM,CAAC9B,iBAAiB,CAAEyT,YAAY,CAAE;QAExC3R,MAAM,CAACrM,WAAW,GAAG,IAAI;MAE1B;MAEA,IAAMwyB,OAAO,GAAG,IAAI,CAACpjB,UAAU,CAACojB,OAAO;MAEvC,IAAKA,OAAO,KAAK96C,SAAS,EAAG;QAE5B86C,OAAO,CAACjnB,kBAAkB,CAAEzU,MAAM,CAAE;QAEpC07B,OAAO,CAACxyB,WAAW,GAAG,IAAI;MAE3B;MAEA,IAAK,IAAI,CAACsP,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACC,kBAAkB,EAAE;MAE1B;MAEA,IAAK,IAAI,CAACoiB,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACc,qBAAqB,EAAE;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAv/C,GAAA;IAAAE,KAAA,EAED,SAAAg3B,gBAAiBxd,CAAC,EAAG;MAEpBikC,GAAG,CAAClZ,0BAA0B,CAAE/qB,CAAC,CAAE;MAEnC,IAAI,CAACiU,YAAY,CAAEgwB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAA6rC,QAASluB,KAAK,EAAG;MAEhB;;MAEA8/B,GAAG,CAACxX,aAAa,CAAEtoB,KAAK,CAAE;MAE1B,IAAI,CAAC8P,YAAY,CAAEgwB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAA8rC,QAASnuB,KAAK,EAAG;MAEhB;;MAEA8/B,GAAG,CAACvX,aAAa,CAAEvoB,KAAK,CAAE;MAE1B,IAAI,CAAC8P,YAAY,CAAEgwB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAA+rC,QAASpuB,KAAK,EAAG;MAEhB;;MAEA8/B,GAAG,CAACtX,aAAa,CAAExoB,KAAK,CAAE;MAE1B,IAAI,CAAC8P,YAAY,CAAEgwB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAAyjB,UAAWxM,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEpB;;MAEAqwB,GAAG,CAACzX,eAAe,CAAE/uB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAE;MAE9B,IAAI,CAACK,YAAY,CAAEgwB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAAsjB,MAAOrM,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEhB;;MAEAqwB,GAAG,CAACpX,SAAS,CAAEpvB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAE;MAExB,IAAI,CAACK,YAAY,CAAEgwB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA39C,GAAA;IAAAE,KAAA,EAED,SAAAkgC,OAAQtE,MAAM,EAAG;MAEhB8hB,IAAI,CAACxd,MAAM,CAAEtE,MAAM,CAAE;MAErB8hB,IAAI,CAAClxB,YAAY,EAAE;MAEnB,IAAI,CAACiB,YAAY,CAAEiwB,IAAI,CAACh6B,MAAM,CAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA5jB,GAAA;IAAAE,KAAA,EAED,SAAAgf,OAAA,EAAS;MAER,IAAI,CAACmd,kBAAkB,EAAE;MAEzB,IAAI,CAACD,WAAW,CAACV,SAAS,CAAEmiB,OAAO,CAAE,CAACtgC,MAAM,EAAE;MAE9C,IAAI,CAACoG,SAAS,CAAEk6B,OAAO,CAAC1mC,CAAC,EAAE0mC,OAAO,CAACpmC,CAAC,EAAEomC,OAAO,CAACvwB,CAAC,CAAE;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA46B,cAAeC,MAAM,EAAG;MAEvB,IAAMoB,QAAQ,GAAG,EAAE;MAEnB,KAAM,IAAIp2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGklB,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAM61B,KAAK,GAAGb,MAAM,CAAEh1B,CAAC,CAAE;QACzBo2B,QAAQ,CAAC52B,IAAI,CAAEq2B,KAAK,CAACzkB,CAAC,EAAEykB,KAAK,CAACnkB,CAAC,EAAEmkB,KAAK,CAACtO,CAAC,IAAI,CAAC,CAAE;MAEhD;MAEA,IAAI,CAACyxB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEjhB,QAAQ,EAAE,CAAC,CAAE,CAAE;MAE1E,OAAO,IAAI;IAEZ;EAAC;IAAAn8B,GAAA;IAAAE,KAAA,EAED,SAAAm8B,mBAAA,EAAqB;MAEpB,IAAK,IAAI,CAACD,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,GAAG,IAAIjC,IAAI,EAAE;MAE9B;MAEA,IAAMgC,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MACzC,IAAMqjB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAACniB,QAAQ;MAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAACsjB,mBAAmB,EAAG;QAE/C/kC,OAAO,CAACjX,KAAK,CAAE,iJAAiJ,EAAE,IAAI,CAAE;QAExK,IAAI,CAAC24B,WAAW,CAAC3hB,GAAG,CACnB,IAAIoc,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EACjD,IAAIvD,OAAO,CAAE,CAAEuD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAQ,CAAE,CACjD;QAED;MAED;MAEA,IAAK+B,QAAQ,KAAK33B,SAAS,EAAG;QAE7B,IAAI,CAAC43B,WAAW,CAACvB,sBAAsB,CAAEsB,QAAQ,CAAE;;QAEnD;;QAEA,IAAKqjB,uBAAuB,EAAG;UAE9B,KAAM,IAAIz5C,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG0tB,uBAAuB,CAAC15C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAEpE,IAAM25C,cAAc,GAAGF,uBAAuB,CAAEz5C,CAAC,CAAE;YACnD+3C,MAAM,CAACjjB,sBAAsB,CAAE6kB,cAAc,CAAE;YAE/C,IAAK,IAAI,CAACnB,oBAAoB,EAAG;cAEhCP,SAAS,CAAC1hC,UAAU,CAAE,IAAI,CAAC8f,WAAW,CAACvlB,GAAG,EAAEinC,MAAM,CAACjnC,GAAG,CAAE;cACxD,IAAI,CAACulB,WAAW,CAACnB,aAAa,CAAE+iB,SAAS,CAAE;cAE3CA,SAAS,CAAC1hC,UAAU,CAAE,IAAI,CAAC8f,WAAW,CAACtlB,GAAG,EAAEgnC,MAAM,CAAChnC,GAAG,CAAE;cACxD,IAAI,CAACslB,WAAW,CAACnB,aAAa,CAAE+iB,SAAS,CAAE;YAE5C,CAAC,MAAM;cAEN,IAAI,CAAC5hB,WAAW,CAACnB,aAAa,CAAE6iB,MAAM,CAACjnC,GAAG,CAAE;cAC5C,IAAI,CAACulB,WAAW,CAACnB,aAAa,CAAE6iB,MAAM,CAAChnC,GAAG,CAAE;YAE7C;UAED;QAED;MAED,CAAC,MAAM;QAEN,IAAI,CAACslB,WAAW,CAACpB,SAAS,EAAE;MAE7B;MAEA,IAAKn1B,KAAK,CAAE,IAAI,CAACu2B,WAAW,CAACvlB,GAAG,CAACM,CAAC,CAAE,IAAItR,KAAK,CAAE,IAAI,CAACu2B,WAAW,CAACvlB,GAAG,CAACY,CAAC,CAAE,IAAI5R,KAAK,CAAE,IAAI,CAACu2B,WAAW,CAACvlB,GAAG,CAACyW,CAAC,CAAE,EAAG;QAE5G5S,OAAO,CAACjX,KAAK,CAAE,qIAAqI,EAAE,IAAI,CAAE;MAE7J;IAED;EAAC;IAAAzD,GAAA;IAAAE,KAAA,EAED,SAAAq/C,sBAAA,EAAwB;MAEvB,IAAK,IAAI,CAACd,cAAc,KAAK,IAAI,EAAG;QAEnC,IAAI,CAACA,cAAc,GAAG,IAAIzf,MAAM,EAAE;MAEnC;MAEA,IAAM7C,QAAQ,GAAG,IAAI,CAACD,UAAU,CAACC,QAAQ;MACzC,IAAMqjB,uBAAuB,GAAG,IAAI,CAAClB,eAAe,CAACniB,QAAQ;MAE7D,IAAKA,QAAQ,IAAIA,QAAQ,CAACsjB,mBAAmB,EAAG;QAE/C/kC,OAAO,CAACjX,KAAK,CAAE,uJAAuJ,EAAE,IAAI,CAAE;QAE9K,IAAI,CAACg7C,cAAc,CAAChkC,GAAG,CAAE,IAAIoc,OAAO,EAAE,EAAEuD,QAAQ,CAAE;QAElD;MAED;MAEA,IAAK+B,QAAQ,EAAG;QAEf;;QAEA,IAAMjd,MAAM,GAAG,IAAI,CAACu/B,cAAc,CAACv/B,MAAM;QAEzC4+B,MAAM,CAACjjB,sBAAsB,CAAEsB,QAAQ,CAAE;;QAEzC;;QAEA,IAAKqjB,uBAAuB,EAAG;UAE9B,KAAM,IAAIz5C,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG0tB,uBAAuB,CAAC15C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAEpE,IAAM25C,cAAc,GAAGF,uBAAuB,CAAEz5C,CAAC,CAAE;YACnDg4C,gBAAgB,CAACljB,sBAAsB,CAAE6kB,cAAc,CAAE;YAEzD,IAAK,IAAI,CAACnB,oBAAoB,EAAG;cAEhCP,SAAS,CAAC1hC,UAAU,CAAEwhC,MAAM,CAACjnC,GAAG,EAAEknC,gBAAgB,CAAClnC,GAAG,CAAE;cACxDinC,MAAM,CAAC7iB,aAAa,CAAE+iB,SAAS,CAAE;cAEjCA,SAAS,CAAC1hC,UAAU,CAAEwhC,MAAM,CAAChnC,GAAG,EAAEinC,gBAAgB,CAACjnC,GAAG,CAAE;cACxDgnC,MAAM,CAAC7iB,aAAa,CAAE+iB,SAAS,CAAE;YAElC,CAAC,MAAM;cAENF,MAAM,CAAC7iB,aAAa,CAAE8iB,gBAAgB,CAAClnC,GAAG,CAAE;cAC5CinC,MAAM,CAAC7iB,aAAa,CAAE8iB,gBAAgB,CAACjnC,GAAG,CAAE;YAE7C;UAED;QAED;QAEAgnC,MAAM,CAACpiB,SAAS,CAAExc,MAAM,CAAE;;QAE1B;QACA;;QAEA,IAAIggB,WAAW,GAAG,CAAC;QAEnB,KAAM,IAAIn5B,GAAC,GAAG,CAAC,EAAE+rB,GAAE,GAAGqK,QAAQ,CAACxK,KAAK,EAAE5rB,GAAC,GAAG+rB,GAAE,EAAE/rB,GAAC,EAAG,EAAG;UAEpDi4C,SAAS,CAACn/B,mBAAmB,CAAEsd,QAAQ,EAAEp2B,GAAC,CAAE;UAE5Cm5B,WAAW,GAAGjpB,IAAI,CAACa,GAAG,CAAEooB,WAAW,EAAEhgB,MAAM,CAAClB,iBAAiB,CAAEggC,SAAS,CAAE,CAAE;QAE7E;;QAEA;;QAEA,IAAKwB,uBAAuB,EAAG;UAE9B,KAAM,IAAIz5C,GAAC,GAAG,CAAC,EAAE+rB,IAAE,GAAG0tB,uBAAuB,CAAC15C,MAAM,EAAEC,GAAC,GAAG+rB,IAAE,EAAE/rB,GAAC,EAAG,EAAG;YAEpE,IAAM25C,eAAc,GAAGF,uBAAuB,CAAEz5C,GAAC,CAAE;YACnD,IAAMw4C,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;YAEtD,KAAM,IAAI/f,CAAC,GAAG,CAAC,EAAEmhB,EAAE,GAAGD,eAAc,CAAC/tB,KAAK,EAAE6M,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,EAAG,EAAG;cAE1Dwf,SAAS,CAACn/B,mBAAmB,CAAE6gC,eAAc,EAAElhB,CAAC,CAAE;cAElD,IAAK+f,oBAAoB,EAAG;gBAE3BV,OAAO,CAACh/B,mBAAmB,CAAEsd,QAAQ,EAAEqC,CAAC,CAAE;gBAC1Cwf,SAAS,CAAC5hC,GAAG,CAAEyhC,OAAO,CAAE;cAEzB;cAEA3e,WAAW,GAAGjpB,IAAI,CAACa,GAAG,CAAEooB,WAAW,EAAEhgB,MAAM,CAAClB,iBAAiB,CAAEggC,SAAS,CAAE,CAAE;YAE7E;UAED;QAED;QAEA,IAAI,CAACS,cAAc,CAACllB,MAAM,GAAGtjB,IAAI,CAAC0H,IAAI,CAAEuhB,WAAW,CAAE;QAErD,IAAKr5B,KAAK,CAAE,IAAI,CAAC44C,cAAc,CAACllB,MAAM,CAAE,EAAG;UAE1C7e,OAAO,CAACjX,KAAK,CAAE,8HAA8H,EAAE,IAAI,CAAE;QAEtJ;MAED;IAED;EAAC;IAAAzD,GAAA;IAAAE,KAAA,EAED,SAAA0/C,gBAAA,EAAkB;MAEjB,IAAMpqC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAM0mB,UAAU,GAAG,IAAI,CAACA,UAAU;;MAElC;MACA;;MAEA,IAAK1mB,KAAK,KAAK,IAAI,IACjB0mB,UAAU,CAACC,QAAQ,KAAK33B,SAAS,IACjC03B,UAAU,CAAC/C,MAAM,KAAK30B,SAAS,IAC/B03B,UAAU,CAAC/O,EAAE,KAAK3oB,SAAS,EAAG;QAE/BkW,OAAO,CAACjX,KAAK,CAAE,8GAA8G,CAAE;QAC/H;MAED;MAEA,IAAMo8C,OAAO,GAAGrqC,KAAK,CAACI,KAAK;MAC3B,IAAMkqC,SAAS,GAAG5jB,UAAU,CAACC,QAAQ,CAACvmB,KAAK;MAC3C,IAAMmqC,OAAO,GAAG7jB,UAAU,CAAC/C,MAAM,CAACvjB,KAAK;MACvC,IAAMoqC,GAAG,GAAG9jB,UAAU,CAAC/O,EAAE,CAACvX,KAAK;MAE/B,IAAMqqC,SAAS,GAAGH,SAAS,CAACh6C,MAAM,GAAG,CAAC;MAEtC,IAAK,IAAI,CAACm5C,YAAY,CAAE,SAAS,CAAE,KAAK,KAAK,EAAG;QAE/C,IAAI,CAACF,YAAY,CAAE,SAAS,EAAE,IAAI1E,eAAe,CAAE,IAAIx/B,YAAY,CAAE,CAAC,GAAGolC,SAAS,CAAE,EAAE,CAAC,CAAE,CAAE;MAE5F;MAEA,IAAMC,QAAQ,GAAG,IAAI,CAACpB,YAAY,CAAE,SAAS,CAAE,CAAClpC,KAAK;MAErD,IAAMuqC,IAAI,GAAG,EAAE;QAAEC,IAAI,GAAG,EAAE;MAE1B,KAAM,IAAIr6C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk6C,SAAS,EAAEl6C,CAAC,EAAG,EAAG;QAEtCo6C,IAAI,CAAEp6C,CAAC,CAAE,GAAG,IAAI8wB,OAAO,EAAE;QACzBupB,IAAI,CAAEr6C,CAAC,CAAE,GAAG,IAAI8wB,OAAO,EAAE;MAE1B;MAEA,IAAMwpB,EAAE,GAAG,IAAIxpB,OAAO,EAAE;QACvBypB,EAAE,GAAG,IAAIzpB,OAAO,EAAE;QAClB0pB,EAAE,GAAG,IAAI1pB,OAAO,EAAE;QAElB2pB,GAAG,GAAG,IAAIjlC,OAAO,EAAE;QACnBklC,GAAG,GAAG,IAAIllC,OAAO,EAAE;QACnBmlC,GAAG,GAAG,IAAInlC,OAAO,EAAE;QAEnBolC,IAAI,GAAG,IAAI9pB,OAAO,EAAE;QACpB+pB,IAAI,GAAG,IAAI/pB,OAAO,EAAE;MAErB,SAASgqB,cAAcA,CAAElnC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAElCwmC,EAAE,CAAC3hC,SAAS,CAAEohC,SAAS,EAAEnmC,CAAC,GAAG,CAAC,CAAE;QAChC2mC,EAAE,CAAC5hC,SAAS,CAAEohC,SAAS,EAAElmC,CAAC,GAAG,CAAC,CAAE;QAChC2mC,EAAE,CAAC7hC,SAAS,CAAEohC,SAAS,EAAEjmC,CAAC,GAAG,CAAC,CAAE;QAEhC2mC,GAAG,CAAC9hC,SAAS,CAAEshC,GAAG,EAAErmC,CAAC,GAAG,CAAC,CAAE;QAC3B8mC,GAAG,CAAC/hC,SAAS,CAAEshC,GAAG,EAAEpmC,CAAC,GAAG,CAAC,CAAE;QAC3B8mC,GAAG,CAAChiC,SAAS,CAAEshC,GAAG,EAAEnmC,CAAC,GAAG,CAAC,CAAE;QAE3BymC,EAAE,CAAC9jC,GAAG,CAAE6jC,EAAE,CAAE;QACZE,EAAE,CAAC/jC,GAAG,CAAE6jC,EAAE,CAAE;QAEZI,GAAG,CAACjkC,GAAG,CAAEgkC,GAAG,CAAE;QACdE,GAAG,CAAClkC,GAAG,CAAEgkC,GAAG,CAAE;QAEd,IAAMz9B,CAAC,GAAG,GAAG,IAAK09B,GAAG,CAACtpC,CAAC,GAAGupC,GAAG,CAACjpC,CAAC,GAAGipC,GAAG,CAACvpC,CAAC,GAAGspC,GAAG,CAAChpC,CAAC,CAAE;;QAEjD;;QAEA,IAAK,CAAEqpC,QAAQ,CAAE/9B,CAAC,CAAE,EAAG;QAEvB49B,IAAI,CAACzkC,IAAI,CAAEokC,EAAE,CAAE,CAAC1jC,cAAc,CAAE8jC,GAAG,CAACjpC,CAAC,CAAE,CAAC8E,eAAe,CAAEgkC,EAAE,EAAE,CAAEE,GAAG,CAAChpC,CAAC,CAAE,CAACmF,cAAc,CAAEmG,CAAC,CAAE;QAC1F69B,IAAI,CAAC1kC,IAAI,CAAEqkC,EAAE,CAAE,CAAC3jC,cAAc,CAAE6jC,GAAG,CAACtpC,CAAC,CAAE,CAACoF,eAAe,CAAE+jC,EAAE,EAAE,CAAEI,GAAG,CAACvpC,CAAC,CAAE,CAACyF,cAAc,CAAEmG,CAAC,CAAE;QAE1Fo9B,IAAI,CAAExmC,CAAC,CAAE,CAACyC,GAAG,CAAEukC,IAAI,CAAE;QACrBR,IAAI,CAAEvmC,CAAC,CAAE,CAACwC,GAAG,CAAEukC,IAAI,CAAE;QACrBR,IAAI,CAAEtmC,CAAC,CAAE,CAACuC,GAAG,CAAEukC,IAAI,CAAE;QAErBP,IAAI,CAAEzmC,CAAC,CAAE,CAACyC,GAAG,CAAEwkC,IAAI,CAAE;QACrBR,IAAI,CAAExmC,CAAC,CAAE,CAACwC,GAAG,CAAEwkC,IAAI,CAAE;QACrBR,IAAI,CAAEvmC,CAAC,CAAE,CAACuC,GAAG,CAAEwkC,IAAI,CAAE;MAEtB;MAEA,IAAIpC,MAAM,GAAG,IAAI,CAACA,MAAM;MAExB,IAAKA,MAAM,CAAC14C,MAAM,KAAK,CAAC,EAAG;QAE1B04C,MAAM,GAAG,CAAE;UACVG,KAAK,EAAE,CAAC;UACRhtB,KAAK,EAAEkuB,OAAO,CAAC/5C;QAChB,CAAC,CAAE;MAEJ;MAEA,KAAM,IAAIC,GAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG0sB,MAAM,CAAC14C,MAAM,EAAEC,GAAC,GAAG+rB,EAAE,EAAE,EAAG/rB,GAAC,EAAG;QAEnD,IAAMg7C,KAAK,GAAGvC,MAAM,CAAEz4C,GAAC,CAAE;QAEzB,IAAM44C,KAAK,GAAGoC,KAAK,CAACpC,KAAK;QACzB,IAAMhtB,KAAK,GAAGovB,KAAK,CAACpvB,KAAK;QAEzB,KAAM,IAAI6M,CAAC,GAAGmgB,KAAK,EAAEgB,EAAE,GAAGhB,KAAK,GAAGhtB,KAAK,EAAE6M,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,IAAI,CAAC,EAAG;UAEzDqiB,cAAc,CACbhB,OAAO,CAAErhB,CAAC,GAAG,CAAC,CAAE,EAChBqhB,OAAO,CAAErhB,CAAC,GAAG,CAAC,CAAE,EAChBqhB,OAAO,CAAErhB,CAAC,GAAG,CAAC,CAAE,CAChB;QAEF;MAED;MAEA,IAAM7b,GAAG,GAAG,IAAIkU,OAAO,EAAE;QAAEmqB,IAAI,GAAG,IAAInqB,OAAO,EAAE;MAC/C,IAAM7f,CAAC,GAAG,IAAI6f,OAAO,EAAE;QAAEoqB,EAAE,GAAG,IAAIpqB,OAAO,EAAE;MAE3C,SAASqqB,YAAYA,CAAE/kC,CAAC,EAAG;QAE1BnF,CAAC,CAAC0H,SAAS,CAAEqhC,OAAO,EAAE5jC,CAAC,GAAG,CAAC,CAAE;QAC7B8kC,EAAE,CAAC/kC,IAAI,CAAElF,CAAC,CAAE;QAEZ,IAAMW,CAAC,GAAGwoC,IAAI,CAAEhkC,CAAC,CAAE;;QAEnB;;QAEAwG,GAAG,CAACzG,IAAI,CAAEvE,CAAC,CAAE;QACbgL,GAAG,CAACnG,GAAG,CAAExF,CAAC,CAAC4F,cAAc,CAAE5F,CAAC,CAACwG,GAAG,CAAE7F,CAAC,CAAE,CAAE,CAAE,CAACuD,SAAS,EAAE;;QAErD;;QAEA8lC,IAAI,CAAC1oB,YAAY,CAAE2oB,EAAE,EAAEtpC,CAAC,CAAE;QAC1B,IAAMkR,IAAI,GAAGm4B,IAAI,CAACxjC,GAAG,CAAE4iC,IAAI,CAAEjkC,CAAC,CAAE,CAAE;QAClC,IAAMoR,CAAC,GAAK1E,IAAI,GAAG,GAAG,GAAK,CAAE,GAAG,GAAG,GAAG;QAEtCq3B,QAAQ,CAAE/jC,CAAC,GAAG,CAAC,CAAE,GAAGwG,GAAG,CAACxL,CAAC;QACzB+oC,QAAQ,CAAE/jC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAGwG,GAAG,CAAClL,CAAC;QAC7ByoC,QAAQ,CAAE/jC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAGwG,GAAG,CAAC2K,CAAC;QAC7B4yB,QAAQ,CAAE/jC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAGoR,CAAC;MAE1B;MAEA,KAAM,IAAIxnB,IAAC,GAAG,CAAC,EAAE+rB,IAAE,GAAG0sB,MAAM,CAAC14C,MAAM,EAAEC,IAAC,GAAG+rB,IAAE,EAAE,EAAG/rB,IAAC,EAAG;QAEnD,IAAMg7C,MAAK,GAAGvC,MAAM,CAAEz4C,IAAC,CAAE;QAEzB,IAAM44C,OAAK,GAAGoC,MAAK,CAACpC,KAAK;QACzB,IAAMhtB,MAAK,GAAGovB,MAAK,CAACpvB,KAAK;QAEzB,KAAM,IAAI6M,EAAC,GAAGmgB,OAAK,EAAEgB,GAAE,GAAGhB,OAAK,GAAGhtB,MAAK,EAAE6M,EAAC,GAAGmhB,GAAE,EAAEnhB,EAAC,IAAI,CAAC,EAAG;UAEzD0iB,YAAY,CAAErB,OAAO,CAAErhB,EAAC,GAAG,CAAC,CAAE,CAAE;UAChC0iB,YAAY,CAAErB,OAAO,CAAErhB,EAAC,GAAG,CAAC,CAAE,CAAE;UAChC0iB,YAAY,CAAErB,OAAO,CAAErhB,EAAC,GAAG,CAAC,CAAE,CAAE;QAEjC;MAED;IAED;EAAC;IAAAx+B,GAAA;IAAAE,KAAA,EAED,SAAAihD,qBAAA,EAAuB;MAEtB,IAAM3rC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAM4rC,iBAAiB,GAAG,IAAI,CAACtC,YAAY,CAAE,UAAU,CAAE;MAEzD,IAAKsC,iBAAiB,KAAK58C,SAAS,EAAG;QAEtC,IAAI68C,eAAe,GAAG,IAAI,CAACvC,YAAY,CAAE,QAAQ,CAAE;QAEnD,IAAKuC,eAAe,KAAK78C,SAAS,EAAG;UAEpC68C,eAAe,GAAG,IAAIhH,eAAe,CAAE,IAAIx/B,YAAY,CAAEumC,iBAAiB,CAACzvB,KAAK,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE;UAC3F,IAAI,CAACotB,YAAY,CAAE,QAAQ,EAAEsC,eAAe,CAAE;QAE/C,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAIt7C,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGuvB,eAAe,CAAC1vB,KAAK,EAAE5rB,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAE3Ds7C,eAAe,CAAC9F,MAAM,CAAEx1C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAErC;QAED;QAEA,IAAMu7C,EAAE,GAAG,IAAIzqB,OAAO,EAAE;UAAE0qB,EAAE,GAAG,IAAI1qB,OAAO,EAAE;UAAE2qB,EAAE,GAAG,IAAI3qB,OAAO,EAAE;QAChE,IAAM4qB,EAAE,GAAG,IAAI5qB,OAAO,EAAE;UAAE6qB,EAAE,GAAG,IAAI7qB,OAAO,EAAE;UAAE8qB,EAAE,GAAG,IAAI9qB,OAAO,EAAE;QAChE,IAAM+qB,EAAE,GAAG,IAAI/qB,OAAO,EAAE;UAAEgrB,EAAE,GAAG,IAAIhrB,OAAO,EAAE;;QAE5C;;QAEA,IAAKrhB,KAAK,EAAG;UAEZ,KAAM,IAAIzP,IAAC,GAAG,CAAC,EAAE+rB,IAAE,GAAGtc,KAAK,CAACmc,KAAK,EAAE5rB,IAAC,GAAG+rB,IAAE,EAAE/rB,IAAC,IAAI,CAAC,EAAG;YAEnD,IAAMs6C,EAAE,GAAG7qC,KAAK,CAACuJ,IAAI,CAAEhZ,IAAC,GAAG,CAAC,CAAE;YAC9B,IAAMu6C,EAAE,GAAG9qC,KAAK,CAACuJ,IAAI,CAAEhZ,IAAC,GAAG,CAAC,CAAE;YAC9B,IAAMw6C,EAAE,GAAG/qC,KAAK,CAACuJ,IAAI,CAAEhZ,IAAC,GAAG,CAAC,CAAE;YAE9Bu7C,EAAE,CAACziC,mBAAmB,CAAEuiC,iBAAiB,EAAEf,EAAE,CAAE;YAC/CkB,EAAE,CAAC1iC,mBAAmB,CAAEuiC,iBAAiB,EAAEd,EAAE,CAAE;YAC/CkB,EAAE,CAAC3iC,mBAAmB,CAAEuiC,iBAAiB,EAAEb,EAAE,CAAE;YAE/CqB,EAAE,CAACllC,UAAU,CAAE8kC,EAAE,EAAED,EAAE,CAAE;YACvBM,EAAE,CAACnlC,UAAU,CAAE4kC,EAAE,EAAEC,EAAE,CAAE;YACvBK,EAAE,CAACnkC,KAAK,CAAEokC,EAAE,CAAE;YAEdJ,EAAE,CAAC5iC,mBAAmB,CAAEwiC,eAAe,EAAEhB,EAAE,CAAE;YAC7CqB,EAAE,CAAC7iC,mBAAmB,CAAEwiC,eAAe,EAAEf,EAAE,CAAE;YAC7CqB,EAAE,CAAC9iC,mBAAmB,CAAEwiC,eAAe,EAAEd,EAAE,CAAE;YAE7CkB,EAAE,CAACrlC,GAAG,CAAEwlC,EAAE,CAAE;YACZF,EAAE,CAACtlC,GAAG,CAAEwlC,EAAE,CAAE;YACZD,EAAE,CAACvlC,GAAG,CAAEwlC,EAAE,CAAE;YAEZP,eAAe,CAAC9F,MAAM,CAAE8E,EAAE,EAAEoB,EAAE,CAACtqC,CAAC,EAAEsqC,EAAE,CAAChqC,CAAC,EAAEgqC,EAAE,CAACn0B,CAAC,CAAE;YAC9C+zB,eAAe,CAAC9F,MAAM,CAAE+E,EAAE,EAAEoB,EAAE,CAACvqC,CAAC,EAAEuqC,EAAE,CAACjqC,CAAC,EAAEiqC,EAAE,CAACp0B,CAAC,CAAE;YAC9C+zB,eAAe,CAAC9F,MAAM,CAAEgF,EAAE,EAAEoB,EAAE,CAACxqC,CAAC,EAAEwqC,EAAE,CAAClqC,CAAC,EAAEkqC,EAAE,CAACr0B,CAAC,CAAE;UAE/C;QAED,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAIvnB,IAAC,GAAG,CAAC,EAAE+rB,IAAE,GAAGsvB,iBAAiB,CAACzvB,KAAK,EAAE5rB,IAAC,GAAG+rB,IAAE,EAAE/rB,IAAC,IAAI,CAAC,EAAG;YAE/Du7C,EAAE,CAACziC,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,IAAC,GAAG,CAAC,CAAE;YAClDw7C,EAAE,CAAC1iC,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,IAAC,GAAG,CAAC,CAAE;YAClDy7C,EAAE,CAAC3iC,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,IAAC,GAAG,CAAC,CAAE;YAElD67C,EAAE,CAACllC,UAAU,CAAE8kC,EAAE,EAAED,EAAE,CAAE;YACvBM,EAAE,CAACnlC,UAAU,CAAE4kC,EAAE,EAAEC,EAAE,CAAE;YACvBK,EAAE,CAACnkC,KAAK,CAAEokC,EAAE,CAAE;YAEdR,eAAe,CAAC9F,MAAM,CAAEx1C,IAAC,GAAG,CAAC,EAAE67C,EAAE,CAACzqC,CAAC,EAAEyqC,EAAE,CAACnqC,CAAC,EAAEmqC,EAAE,CAACt0B,CAAC,CAAE;YACjD+zB,eAAe,CAAC9F,MAAM,CAAEx1C,IAAC,GAAG,CAAC,EAAE67C,EAAE,CAACzqC,CAAC,EAAEyqC,EAAE,CAACnqC,CAAC,EAAEmqC,EAAE,CAACt0B,CAAC,CAAE;YACjD+zB,eAAe,CAAC9F,MAAM,CAAEx1C,IAAC,GAAG,CAAC,EAAE67C,EAAE,CAACzqC,CAAC,EAAEyqC,EAAE,CAACnqC,CAAC,EAAEmqC,EAAE,CAACt0B,CAAC,CAAE;UAElD;QAED;QAEA,IAAI,CAACw0B,gBAAgB,EAAE;QAEvBT,eAAe,CAACv0B,WAAW,GAAG,IAAI;MAEnC;IAED;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAA6hD,MAAO9lB,QAAQ,EAAEtd,MAAM,EAAG;MAEzB,IAAK,EAAIsd,QAAQ,IAAIA,QAAQ,CAACoiB,gBAAgB,CAAE,EAAG;QAElD3jC,OAAO,CAACjX,KAAK,CAAE,iFAAiF,EAAEw4B,QAAQ,CAAE;QAC5G;MAED;MAEA,IAAKtd,MAAM,KAAKna,SAAS,EAAG;QAE3Bma,MAAM,GAAG,CAAC;QAEVjE,OAAO,CAACC,IAAI,CACX,qFAAqF,GACnF,qEAAqE,CACvE;MAEF;MAEA,IAAMuhB,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,KAAM,IAAMl8B,GAAG,IAAIk8B,UAAU,EAAG;QAE/B,IAAKD,QAAQ,CAACC,UAAU,CAAEl8B,GAAG,CAAE,KAAKwE,SAAS,EAAG;QAEhD,IAAMw9C,UAAU,GAAG9lB,UAAU,CAAEl8B,GAAG,CAAE;QACpC,IAAMiiD,eAAe,GAAGD,UAAU,CAACpsC,KAAK;QAExC,IAAMssC,UAAU,GAAGjmB,QAAQ,CAACC,UAAU,CAAEl8B,GAAG,CAAE;QAC7C,IAAMmiD,eAAe,GAAGD,UAAU,CAACtsC,KAAK;QAExC,IAAMwsC,eAAe,GAAGF,UAAU,CAAC5H,QAAQ,GAAG37B,MAAM;QACpD,IAAM7Y,MAAM,GAAGmQ,IAAI,CAACY,GAAG,CAAEsrC,eAAe,CAACr8C,MAAM,EAAEm8C,eAAe,CAACn8C,MAAM,GAAGs8C,eAAe,CAAE;QAE3F,KAAM,IAAIr8C,CAAC,GAAG,CAAC,EAAEy4B,CAAC,GAAG4jB,eAAe,EAAEr8C,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAG,EAAEy4B,CAAC,EAAG,EAAG;UAE9DyjB,eAAe,CAAEzjB,CAAC,CAAE,GAAG2jB,eAAe,CAAEp8C,CAAC,CAAE;QAE5C;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA4hD,iBAAA,EAAmB;MAElB,IAAM/B,OAAO,GAAG,IAAI,CAAC7jB,UAAU,CAAC/C,MAAM;MAEtC,KAAM,IAAIpzB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGiuB,OAAO,CAACpuB,KAAK,EAAE5rB,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEnDi4C,SAAS,CAACn/B,mBAAmB,CAAEkhC,OAAO,EAAEh6C,CAAC,CAAE;QAE3Ci4C,SAAS,CAAC9iC,SAAS,EAAE;QAErB6kC,OAAO,CAACxE,MAAM,CAAEx1C,CAAC,EAAEi4C,SAAS,CAAC7mC,CAAC,EAAE6mC,SAAS,CAACvmC,CAAC,EAAEumC,SAAS,CAAC1wB,CAAC,CAAE;MAE3D;IAED;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAmiD,aAAA,EAAe;MAEd,SAASC,sBAAsBA,CAAExjC,SAAS,EAAE+gC,OAAO,EAAG;QAErD,IAAMjqC,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;QAC7B,IAAM0kC,QAAQ,GAAGx7B,SAAS,CAACw7B,QAAQ;QACnC,IAAMjyB,UAAU,GAAGvJ,SAAS,CAACuJ,UAAU;QAEvC,IAAMk6B,MAAM,GAAG,IAAI3sC,KAAK,CAACxP,WAAW,CAAEy5C,OAAO,CAAC/5C,MAAM,GAAGw0C,QAAQ,CAAE;QAEjE,IAAI9kC,KAAK,GAAG,CAAC;UAAEslC,MAAM,GAAG,CAAC;QAEzB,KAAM,IAAI/0C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGgqC,OAAO,CAAC/5C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAElD,IAAK+Y,SAAS,CAAC0jC,4BAA4B,EAAG;YAE7ChtC,KAAK,GAAGqqC,OAAO,CAAE95C,CAAC,CAAE,GAAG+Y,SAAS,CAAC+K,IAAI,CAAC44B,MAAM,GAAG3jC,SAAS,CAACH,MAAM;UAEhE,CAAC,MAAM;YAENnJ,KAAK,GAAGqqC,OAAO,CAAE95C,CAAC,CAAE,GAAGu0C,QAAQ;UAEhC;UAEA,KAAM,IAAI9b,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8b,QAAQ,EAAE9b,CAAC,EAAG,EAAG;YAErC+jB,MAAM,CAAEzH,MAAM,EAAG,CAAE,GAAGllC,KAAK,CAAEJ,KAAK,EAAG,CAAE;UAExC;QAED;QAEA,OAAO,IAAI6kC,eAAe,CAAEkI,MAAM,EAAEjI,QAAQ,EAAEjyB,UAAU,CAAE;MAE3D;;MAEA;;MAEA,IAAK,IAAI,CAAC7S,KAAK,KAAK,IAAI,EAAG;QAE1BkF,OAAO,CAACC,IAAI,CAAE,6EAA6E,CAAE;QAC7F,OAAO,IAAI;MAEZ;MAEA,IAAM+nC,SAAS,GAAG,IAAIzE,cAAc,EAAE;MAEtC,IAAM4B,OAAO,GAAG,IAAI,CAACrqC,KAAK,CAACI,KAAK;MAChC,IAAMsmB,UAAU,GAAG,IAAI,CAACA,UAAU;;MAElC;;MAEA,KAAM,IAAM71B,IAAI,IAAI61B,UAAU,EAAG;QAEhC,IAAMpd,SAAS,GAAGod,UAAU,CAAE71B,IAAI,CAAE;QAEpC,IAAMs8C,YAAY,GAAGL,sBAAsB,CAAExjC,SAAS,EAAE+gC,OAAO,CAAE;QAEjE6C,SAAS,CAAC3D,YAAY,CAAE14C,IAAI,EAAEs8C,YAAY,CAAE;MAE7C;;MAEA;;MAEA,IAAMrE,eAAe,GAAG,IAAI,CAACA,eAAe;MAE5C,KAAM,IAAMj4C,KAAI,IAAIi4C,eAAe,EAAG;QAErC,IAAMsE,UAAU,GAAG,EAAE;QACrB,IAAMlD,cAAc,GAAGpB,eAAe,CAAEj4C,KAAI,CAAE,CAAC,CAAC;;QAEhD,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG4tB,cAAc,CAAC55C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAE3D,IAAM+Y,UAAS,GAAG4gC,cAAc,CAAE35C,CAAC,CAAE;UAErC,IAAM48C,aAAY,GAAGL,sBAAsB,CAAExjC,UAAS,EAAE+gC,OAAO,CAAE;UAEjE+C,UAAU,CAACr9C,IAAI,CAAEo9C,aAAY,CAAE;QAEhC;QAEAD,SAAS,CAACpE,eAAe,CAAEj4C,KAAI,CAAE,GAAGu8C,UAAU;MAE/C;MAEAF,SAAS,CAACnE,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;;MAE1D;;MAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIz4C,IAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2oC,MAAM,CAAC14C,MAAM,EAAEC,IAAC,GAAG8P,CAAC,EAAE9P,IAAC,EAAG,EAAG;QAEjD,IAAMg7C,KAAK,GAAGvC,MAAM,CAAEz4C,IAAC,CAAE;QACzB28C,SAAS,CAACxD,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACpvB,KAAK,EAAEovB,KAAK,CAAC5B,aAAa,CAAE;MAEpE;MAEA,OAAOuD,SAAS;IAEjB;EAAC;IAAA1iD,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAG;QACZmD,QAAQ,EAAE;UACThD,OAAO,EAAE,GAAG;UACZjoB,IAAI,EAAE,gBAAgB;UACtBR,SAAS,EAAE;QACZ;MACD,CAAC;;MAED;;MAEAsoB,IAAI,CAACnT,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBmT,IAAI,CAAC9nB,IAAI,GAAG,IAAI,CAACA,IAAI;MACrB,IAAK,IAAI,CAACsE,IAAI,KAAK,EAAE,EAAGwjB,IAAI,CAACxjB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,IAAK3G,MAAM,CAACmH,IAAI,CAAE,IAAI,CAACylB,QAAQ,CAAE,CAACxmB,MAAM,GAAG,CAAC,EAAG+jB,IAAI,CAACyC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE5E,IAAK,IAAI,CAAC4iB,UAAU,KAAK1qC,SAAS,EAAG;QAEpC,IAAM0qC,UAAU,GAAG,IAAI,CAACA,UAAU;QAElC,KAAM,IAAMlvC,GAAG,IAAIkvC,UAAU,EAAG;UAE/B,IAAKA,UAAU,CAAElvC,GAAG,CAAE,KAAKwE,SAAS,EAAGqlB,IAAI,CAAE7pB,GAAG,CAAE,GAAGkvC,UAAU,CAAElvC,GAAG,CAAE;QAEvE;QAEA,OAAO6pB,IAAI;MAEZ;;MAEA;;MAEAA,IAAI,CAACA,IAAI,GAAG;QAAEqS,UAAU,EAAE,CAAC;MAAE,CAAC;MAE9B,IAAM1mB,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErBqU,IAAI,CAACA,IAAI,CAACrU,KAAK,GAAG;UACjBzT,IAAI,EAAEyT,KAAK,CAACI,KAAK,CAACxP,WAAW,CAACC,IAAI;UAClCuP,KAAK,EAAE0U,KAAK,CAAC3qB,SAAS,CAAC0H,KAAK,CAACrF,IAAI,CAAEwT,KAAK,CAACI,KAAK;QAC/C,CAAC;MAEF;MAEA,IAAMsmB,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,KAAM,IAAMl8B,IAAG,IAAIk8B,UAAU,EAAG;QAE/B,IAAMpd,SAAS,GAAGod,UAAU,CAAEl8B,IAAG,CAAE;QAEnC6pB,IAAI,CAACA,IAAI,CAACqS,UAAU,CAAEl8B,IAAG,CAAE,GAAG8e,SAAS,CAACwJ,MAAM,CAAEuB,IAAI,CAACA,IAAI,CAAE;MAE5D;MAEA,IAAMy0B,eAAe,GAAG,CAAC,CAAC;MAC1B,IAAIuE,kBAAkB,GAAG,KAAK;MAE9B,KAAM,IAAM7iD,KAAG,IAAI,IAAI,CAACs+C,eAAe,EAAG;QAEzC,IAAMwE,cAAc,GAAG,IAAI,CAACxE,eAAe,CAAEt+C,KAAG,CAAE;QAElD,IAAM4V,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI7P,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGgxB,cAAc,CAACh9C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAE3D,IAAM+Y,WAAS,GAAGgkC,cAAc,CAAE/8C,CAAC,CAAE;UAErC6P,KAAK,CAACrQ,IAAI,CAAEuZ,WAAS,CAACwJ,MAAM,CAAEuB,IAAI,CAACA,IAAI,CAAE,CAAE;QAE5C;QAEA,IAAKjU,KAAK,CAAC9P,MAAM,GAAG,CAAC,EAAG;UAEvBw4C,eAAe,CAAEt+C,KAAG,CAAE,GAAG4V,KAAK;UAE9BitC,kBAAkB,GAAG,IAAI;QAE1B;MAED;MAEA,IAAKA,kBAAkB,EAAG;QAEzBh5B,IAAI,CAACA,IAAI,CAACy0B,eAAe,GAAGA,eAAe;QAC3Cz0B,IAAI,CAACA,IAAI,CAAC00B,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;MAE3D;MAEA,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC14C,MAAM,GAAG,CAAC,EAAG;QAExB+jB,IAAI,CAACA,IAAI,CAAC20B,MAAM,GAAG7xB,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAE2xB,MAAM,CAAE,CAAE;MAE1D;MAEA,IAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C,IAAKA,cAAc,KAAK,IAAI,EAAG;QAE9B50B,IAAI,CAACA,IAAI,CAAC40B,cAAc,GAAG;UAC1Bv/B,MAAM,EAAEu/B,cAAc,CAACv/B,MAAM,CAACN,OAAO,EAAE;UACvC2a,MAAM,EAAEklB,cAAc,CAACllB;QACxB,CAAC;MAEF;MAEA,OAAO1P,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEN,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE5C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd;;MAEA,IAAI,CAACrQ,KAAK,GAAG,IAAI;MACjB,IAAI,CAAC0mB,UAAU,GAAG,CAAC,CAAC;MACpB,IAAI,CAACoiB,eAAe,GAAG,CAAC,CAAC;MACzB,IAAI,CAACE,MAAM,GAAG,EAAE;MAChB,IAAI,CAACpiB,WAAW,GAAG,IAAI;MACvB,IAAI,CAACqiB,cAAc,GAAG,IAAI;;MAE1B;;MAEA,IAAM50B,IAAI,GAAG,CAAC,CAAC;;MAEf;;MAEA,IAAI,CAACxjB,IAAI,GAAGwf,MAAM,CAACxf,IAAI;;MAEvB;;MAEA,IAAMmP,KAAK,GAAGqQ,MAAM,CAACrQ,KAAK;MAE1B,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErB,IAAI,CAACqpC,QAAQ,CAAErpC,KAAK,CAACyG,KAAK,CAAE4N,IAAI,CAAE,CAAE;MAErC;;MAEA;;MAEA,IAAMqS,UAAU,GAAGrW,MAAM,CAACqW,UAAU;MAEpC,KAAM,IAAM71B,IAAI,IAAI61B,UAAU,EAAG;QAEhC,IAAMpd,SAAS,GAAGod,UAAU,CAAE71B,IAAI,CAAE;QACpC,IAAI,CAAC04C,YAAY,CAAE14C,IAAI,EAAEyY,SAAS,CAAC7C,KAAK,CAAE4N,IAAI,CAAE,CAAE;MAEnD;;MAEA;;MAEA,IAAMy0B,eAAe,GAAGz4B,MAAM,CAACy4B,eAAe;MAE9C,KAAM,IAAMj4C,MAAI,IAAIi4C,eAAe,EAAG;QAErC,IAAM1oC,KAAK,GAAG,EAAE;QAChB,IAAM8pC,cAAc,GAAGpB,eAAe,CAAEj4C,MAAI,CAAE,CAAC,CAAC;;QAEhD,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG6pC,cAAc,CAAC55C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAEzD6P,KAAK,CAACrQ,IAAI,CAAEm6C,cAAc,CAAE35C,CAAC,CAAE,CAACkW,KAAK,CAAE4N,IAAI,CAAE,CAAE;QAEhD;QAEA,IAAI,CAACy0B,eAAe,CAAEj4C,MAAI,CAAE,GAAGuP,KAAK;MAErC;MAEA,IAAI,CAAC2oC,oBAAoB,GAAG14B,MAAM,CAAC04B,oBAAoB;;MAEvD;;MAEA,IAAMC,MAAM,GAAG34B,MAAM,CAAC24B,MAAM;MAE5B,KAAM,IAAIz4C,IAAC,GAAG,CAAC,EAAE8P,GAAC,GAAG2oC,MAAM,CAAC14C,MAAM,EAAEC,IAAC,GAAG8P,GAAC,EAAE9P,IAAC,EAAG,EAAG;QAEjD,IAAMg7C,KAAK,GAAGvC,MAAM,CAAEz4C,IAAC,CAAE;QACzB,IAAI,CAACm5C,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACpvB,KAAK,EAAEovB,KAAK,CAAC5B,aAAa,CAAE;MAE/D;;MAEA;;MAEA,IAAM/iB,WAAW,GAAGvW,MAAM,CAACuW,WAAW;MAEtC,IAAKA,WAAW,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACA,WAAW,GAAGA,WAAW,CAACngB,KAAK,EAAE;MAEvC;;MAEA;;MAEA,IAAMwiC,cAAc,GAAG54B,MAAM,CAAC44B,cAAc;MAE5C,IAAKA,cAAc,KAAK,IAAI,EAAG;QAE9B,IAAI,CAACA,cAAc,GAAGA,cAAc,CAACxiC,KAAK,EAAE;MAE7C;;MAEA;;MAEA,IAAI,CAACyiC,SAAS,CAACC,KAAK,GAAG94B,MAAM,CAAC64B,SAAS,CAACC,KAAK;MAC7C,IAAI,CAACD,SAAS,CAAC/sB,KAAK,GAAG9L,MAAM,CAAC64B,SAAS,CAAC/sB,KAAK;;MAE7C;;MAEA,IAAI,CAACrF,QAAQ,GAAGzG,MAAM,CAACyG,QAAQ;;MAE/B;;MAEA,IAAKzG,MAAM,CAACqpB,UAAU,KAAK1qC,SAAS,EAAG,IAAI,CAAC0qC,UAAU,GAAGxvC,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAACqpB,UAAU,CAAE;MAE/F,OAAO,IAAI;IAEZ;EAAC;IAAAlvC,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACvX,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAU,CAAC,CAAE;IAE1C;EAAC;EAAA,OAAAk8C,cAAA;AAAA,EAhlC2BlpC,eAAe;AAAAvV,OAAA,CAAAy+C,cAAA,GAAAA,cAAA;AAolC5C,IAAM8E,gBAAgB,GAAG,aAAc,IAAIlgB,OAAO,EAAE;AACpD,IAAMmgB,MAAM,GAAG,aAAc,IAAIjjB,GAAG,EAAE;AACtC,IAAMkjB,SAAS,GAAG,aAAc,IAAIjkB,MAAM,EAAE;AAE5C,IAAMkkB,KAAK,GAAG,aAAc,IAAIrsB,OAAO,EAAE;AACzC,IAAMssB,KAAK,GAAG,aAAc,IAAItsB,OAAO,EAAE;AACzC,IAAMusB,KAAK,GAAG,aAAc,IAAIvsB,OAAO,EAAE;AAEzC,IAAMwsB,MAAM,GAAG,aAAc,IAAIxsB,OAAO,EAAE;AAC1C,IAAMysB,MAAM,GAAG,aAAc,IAAIzsB,OAAO,EAAE;AAC1C,IAAM0sB,MAAM,GAAG,aAAc,IAAI1sB,OAAO,EAAE;AAE1C,IAAM2sB,OAAO,GAAG,aAAc,IAAI3sB,OAAO,EAAE;AAC3C,IAAM4sB,OAAO,GAAG,aAAc,IAAI5sB,OAAO,EAAE;AAC3C,IAAM6sB,OAAO,GAAG,aAAc,IAAI7sB,OAAO,EAAE;AAE3C,IAAM8sB,MAAM,GAAG,aAAc,IAAIpoC,OAAO,EAAE;AAC1C,IAAMqoC,MAAM,GAAG,aAAc,IAAIroC,OAAO,EAAE;AAC1C,IAAMsoC,MAAM,GAAG,aAAc,IAAItoC,OAAO,EAAE;AAE1C,IAAMuoC,kBAAkB,GAAG,aAAc,IAAIjtB,OAAO,EAAE;AACtD,IAAMktB,uBAAuB,GAAG,aAAc,IAAIltB,OAAO,EAAE;AAAC,IAEtDmtB,IAAI,0BAAAC,SAAA;EAAAn5B,SAAA,CAAAk5B,IAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAl5B,YAAA,CAAAg5B,IAAA;EAET,SAAAA,KAAa/nB,QAAQ,GAAG,IAAIgiB,cAAc,EAAE,EAAEzO,QAAQ,GAAG,IAAIoK,iBAAiB,EAAE,EAAG;IAAA,IAAAuK,OAAA;IAAA77C,eAAA,OAAA07C,IAAA;IAElFG,OAAA,GAAAD,QAAA,CAAAliD,IAAA;IAEAmiD,OAAA,CAAKpV,MAAM,GAAG,IAAI;IAElBoV,OAAA,CAAKpiD,IAAI,GAAG,MAAM;IAElBoiD,OAAA,CAAKloB,QAAQ,GAAGA,QAAQ;IACxBkoB,OAAA,CAAK3U,QAAQ,GAAGA,QAAQ;IAExB2U,OAAA,CAAKC,kBAAkB,EAAE;IAAC,OAAAD,OAAA;EAE3B;EAACr7C,YAAA,CAAAk7C,IAAA;IAAAhkD,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA8J,IAAA,CAAArkD,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAKhqB,MAAM,CAACw+B,qBAAqB,KAAK7/C,SAAS,EAAG;QAEjD,IAAI,CAAC6/C,qBAAqB,GAAGx+B,MAAM,CAACw+B,qBAAqB,CAACh9C,KAAK,EAAE;MAElE;MAEA,IAAKwe,MAAM,CAACy+B,qBAAqB,KAAK9/C,SAAS,EAAG;QAEjD,IAAI,CAAC8/C,qBAAqB,GAAG5kD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAACy+B,qBAAqB,CAAE;MAE/E;MAEA,IAAI,CAAC9U,QAAQ,GAAG3pB,MAAM,CAAC2pB,QAAQ;MAC/B,IAAI,CAACvT,QAAQ,GAAGpW,MAAM,CAACoW,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAj8B,GAAA;IAAAE,KAAA,EAED,SAAAkkD,mBAAA,EAAqB;MAEpB,IAAMnoB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMqiB,eAAe,GAAGriB,QAAQ,CAACqiB,eAAe;MAChD,IAAMz3C,IAAI,GAAGnH,MAAM,CAACmH,IAAI,CAAEy3C,eAAe,CAAE;MAE3C,IAAKz3C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAM45C,cAAc,GAAGpB,eAAe,CAAEz3C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAK64C,cAAc,KAAKl7C,SAAS,EAAG;UAEnC,IAAI,CAAC6/C,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAIrtC,CAAC,GAAG,CAAC,EAAEstC,EAAE,GAAG7E,cAAc,CAAC55C,MAAM,EAAEmR,CAAC,GAAGstC,EAAE,EAAEttC,CAAC,EAAG,EAAG;YAE3D,IAAM5Q,IAAI,GAAGq5C,cAAc,CAAEzoC,CAAC,CAAE,CAAC5Q,IAAI,IAAI6C,MAAM,CAAE+N,CAAC,CAAE;YAEpD,IAAI,CAACotC,qBAAqB,CAAC9+C,IAAI,CAAE,CAAC,CAAE;YACpC,IAAI,CAAC++C,qBAAqB,CAAEj+C,IAAI,CAAE,GAAG4Q,CAAC;UAEvC;QAED;MAED;IAED;EAAC;IAAAjX,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAS+W,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMxoB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMuT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMpX,WAAW,GAAG,IAAI,CAACA,WAAW;MAEpC,IAAKoX,QAAQ,KAAKhrC,SAAS,EAAG;;MAE9B;;MAEA,IAAKy3B,QAAQ,CAACwiB,cAAc,KAAK,IAAI,EAAGxiB,QAAQ,CAACsjB,qBAAqB,EAAE;MAExE0D,SAAS,CAAC/mC,IAAI,CAAE+f,QAAQ,CAACwiB,cAAc,CAAE;MACzCwE,SAAS,CAACt1B,YAAY,CAAEyK,WAAW,CAAE;MAErC,IAAKosB,SAAS,CAACtkB,GAAG,CAACrD,gBAAgB,CAAEomB,SAAS,CAAE,KAAK,KAAK,EAAG;;MAE7D;;MAEAF,gBAAgB,CAAC7mC,IAAI,CAAEkc,WAAW,CAAE,CAAChW,MAAM,EAAE;MAC7C4gC,MAAM,CAAC9mC,IAAI,CAAEsoC,SAAS,CAACtkB,GAAG,CAAE,CAACvS,YAAY,CAAEo1B,gBAAgB,CAAE;;MAE7D;;MAEA,IAAK9mB,QAAQ,CAACG,WAAW,KAAK,IAAI,EAAG;QAEpC,IAAK4mB,MAAM,CAACpmB,aAAa,CAAEX,QAAQ,CAACG,WAAW,CAAE,KAAK,KAAK,EAAG;MAE/D;MAEA,IAAIsoB,YAAY;MAEhB,IAAMlvC,KAAK,GAAGymB,QAAQ,CAACzmB,KAAK;MAC5B,IAAM2mB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAC7C,IAAMwoB,aAAa,GAAG1oB,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ;MACvD,IAAMoiB,oBAAoB,GAAGtiB,QAAQ,CAACsiB,oBAAoB;MAC1D,IAAMpxB,EAAE,GAAG8O,QAAQ,CAACC,UAAU,CAAC/O,EAAE;MACjC,IAAMmkB,GAAG,GAAGrV,QAAQ,CAACC,UAAU,CAACoV,GAAG;MACnC,IAAMkN,MAAM,GAAGviB,QAAQ,CAACuiB,MAAM;MAC9B,IAAME,SAAS,GAAGziB,QAAQ,CAACyiB,SAAS;MAEpC,IAAKlpC,KAAK,KAAK,IAAI,EAAG;QAErB;;QAEA,IAAK8U,KAAK,CAACC,OAAO,CAAEilB,QAAQ,CAAE,EAAG;UAEhC,KAAM,IAAIzpC,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG0sB,MAAM,CAAC14C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAEnD,IAAMg7C,KAAK,GAAGvC,MAAM,CAAEz4C,CAAC,CAAE;YACzB,IAAM6+C,aAAa,GAAGpV,QAAQ,CAAEuR,KAAK,CAAC5B,aAAa,CAAE;YAErD,IAAMR,KAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAEiqC,KAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAK,CAAE;YACtD,IAAMkG,GAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACmc,KAAK,EAAE1b,IAAI,CAACY,GAAG,CAAIkqC,KAAK,CAACpC,KAAK,GAAGoC,KAAK,CAACpvB,KAAK,EAAM+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI,CAAE;YAErH,KAAM,IAAI6M,CAAC,GAAGmgB,KAAK,EAAEgB,EAAE,GAAGkF,GAAG,EAAErmB,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,IAAI,CAAC,EAAG;cAE/C,IAAM7kB,CAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAEyf,CAAC,CAAE;cACzB,IAAM5kB,CAAC,GAAGpE,KAAK,CAACuJ,IAAI,CAAEyf,CAAC,GAAG,CAAC,CAAE;cAC7B,IAAM3kB,CAAC,GAAGrE,KAAK,CAACuJ,IAAI,CAAEyf,CAAC,GAAG,CAAC,CAAE;cAE7BkmB,YAAY,GAAGI,+BAA+B,CAAE,IAAI,EAAEF,aAAa,EAAEJ,SAAS,EAAExB,MAAM,EAAE7mB,QAAQ,EAAEwoB,aAAa,EAAEpG,oBAAoB,EAAEpxB,EAAE,EAAEmkB,GAAG,EAAE33B,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE;cAEzJ,IAAK6qC,YAAY,EAAG;gBAEnBA,YAAY,CAACK,SAAS,GAAG9uC,IAAI,CAACsC,KAAK,CAAEimB,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;gBAC9CkmB,YAAY,CAACM,IAAI,CAAC7F,aAAa,GAAG4B,KAAK,CAAC5B,aAAa;gBACrDsF,UAAU,CAACl/C,IAAI,CAAEm/C,YAAY,CAAE;cAEhC;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAM/F,OAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE4nC,SAAS,CAACC,KAAK,CAAE;UAC5C,IAAMkG,KAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACmc,KAAK,EAAI+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI;UAE1E,KAAM,IAAI5rB,IAAC,GAAG44C,OAAK,EAAE7sB,IAAE,GAAG+yB,KAAG,EAAE9+C,IAAC,GAAG+rB,IAAE,EAAE/rB,IAAC,IAAI,CAAC,EAAG;YAE/C,IAAM4T,EAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAEhZ,IAAC,CAAE;YACzB,IAAM6T,EAAC,GAAGpE,KAAK,CAACuJ,IAAI,CAAEhZ,IAAC,GAAG,CAAC,CAAE;YAC7B,IAAM8T,EAAC,GAAGrE,KAAK,CAACuJ,IAAI,CAAEhZ,IAAC,GAAG,CAAC,CAAE;YAE7B2+C,YAAY,GAAGI,+BAA+B,CAAE,IAAI,EAAEtV,QAAQ,EAAEgV,SAAS,EAAExB,MAAM,EAAE7mB,QAAQ,EAAEwoB,aAAa,EAAEpG,oBAAoB,EAAEpxB,EAAE,EAAEmkB,GAAG,EAAE33B,EAAC,EAAEC,EAAC,EAAEC,EAAC,CAAE;YAEpJ,IAAK6qC,YAAY,EAAG;cAEnBA,YAAY,CAACK,SAAS,GAAG9uC,IAAI,CAACsC,KAAK,CAAExS,IAAC,GAAG,CAAC,CAAE,CAAC,CAAC;cAC9C0+C,UAAU,CAACl/C,IAAI,CAAEm/C,YAAY,CAAE;YAEhC;UAED;QAED;MAED,CAAC,MAAM,IAAKvoB,QAAQ,KAAK33B,SAAS,EAAG;QAEpC;;QAEA,IAAK8lB,KAAK,CAACC,OAAO,CAAEilB,QAAQ,CAAE,EAAG;UAEhC,KAAM,IAAIzpC,IAAC,GAAG,CAAC,EAAE+rB,IAAE,GAAG0sB,MAAM,CAAC14C,MAAM,EAAEC,IAAC,GAAG+rB,IAAE,EAAE/rB,IAAC,EAAG,EAAG;YAEnD,IAAMg7C,OAAK,GAAGvC,MAAM,CAAEz4C,IAAC,CAAE;YACzB,IAAM6+C,cAAa,GAAGpV,QAAQ,CAAEuR,OAAK,CAAC5B,aAAa,CAAE;YAErD,IAAMR,OAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAEiqC,OAAK,CAACpC,KAAK,EAAED,SAAS,CAACC,KAAK,CAAE;YACtD,IAAMkG,KAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAEslB,QAAQ,CAACxK,KAAK,EAAE1b,IAAI,CAACY,GAAG,CAAIkqC,OAAK,CAACpC,KAAK,GAAGoC,OAAK,CAACpvB,KAAK,EAAM+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI,CAAE;YAExH,KAAM,IAAI6M,GAAC,GAAGmgB,OAAK,EAAEgB,IAAE,GAAGkF,KAAG,EAAErmB,GAAC,GAAGmhB,IAAE,EAAEnhB,GAAC,IAAI,CAAC,EAAG;cAE/C,IAAM7kB,GAAC,GAAG6kB,GAAC;cACX,IAAM5kB,GAAC,GAAG4kB,GAAC,GAAG,CAAC;cACf,IAAM3kB,GAAC,GAAG2kB,GAAC,GAAG,CAAC;cAEfkmB,YAAY,GAAGI,+BAA+B,CAAE,IAAI,EAAEF,cAAa,EAAEJ,SAAS,EAAExB,MAAM,EAAE7mB,QAAQ,EAAEwoB,aAAa,EAAEpG,oBAAoB,EAAEpxB,EAAE,EAAEmkB,GAAG,EAAE33B,GAAC,EAAEC,GAAC,EAAEC,GAAC,CAAE;cAEzJ,IAAK6qC,YAAY,EAAG;gBAEnBA,YAAY,CAACK,SAAS,GAAG9uC,IAAI,CAACsC,KAAK,CAAEimB,GAAC,GAAG,CAAC,CAAE,CAAC,CAAC;gBAC9CkmB,YAAY,CAACM,IAAI,CAAC7F,aAAa,GAAG4B,OAAK,CAAC5B,aAAa;gBACrDsF,UAAU,CAACl/C,IAAI,CAAEm/C,YAAY,CAAE;cAEhC;YAED;UAED;QAED,CAAC,MAAM;UAEN,IAAM/F,OAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE4nC,SAAS,CAACC,KAAK,CAAE;UAC5C,IAAMkG,KAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAEslB,QAAQ,CAACxK,KAAK,EAAI+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI;UAE7E,KAAM,IAAI5rB,IAAC,GAAG44C,OAAK,EAAE7sB,IAAE,GAAG+yB,KAAG,EAAE9+C,IAAC,GAAG+rB,IAAE,EAAE/rB,IAAC,IAAI,CAAC,EAAG;YAE/C,IAAM4T,GAAC,GAAG5T,IAAC;YACX,IAAM6T,GAAC,GAAG7T,IAAC,GAAG,CAAC;YACf,IAAM8T,GAAC,GAAG9T,IAAC,GAAG,CAAC;YAEf2+C,YAAY,GAAGI,+BAA+B,CAAE,IAAI,EAAEtV,QAAQ,EAAEgV,SAAS,EAAExB,MAAM,EAAE7mB,QAAQ,EAAEwoB,aAAa,EAAEpG,oBAAoB,EAAEpxB,EAAE,EAAEmkB,GAAG,EAAE33B,GAAC,EAAEC,GAAC,EAAEC,GAAC,CAAE;YAEpJ,IAAK6qC,YAAY,EAAG;cAEnBA,YAAY,CAACK,SAAS,GAAG9uC,IAAI,CAACsC,KAAK,CAAExS,IAAC,GAAG,CAAC,CAAE,CAAC,CAAC;cAC9C0+C,UAAU,CAACl/C,IAAI,CAAEm/C,YAAY,CAAE;YAEhC;UAED;QAED;MAED;IAED;EAAC;EAAA,OAAAV,IAAA;AAAA,EAtOiB7Z,QAAQ;AAAA3qC,OAAA,CAAAwkD,IAAA,GAAAA,IAAA;AA0O3B,SAASiB,iBAAiBA,CAAEl+C,MAAM,EAAEyoC,QAAQ,EAAEgV,SAAS,EAAEtkB,GAAG,EAAEohB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE5lB,KAAK,EAAG;EAEjF,IAAIuC,SAAS;EAEb,IAAKqR,QAAQ,CAACuD,IAAI,KAAKloC,QAAQ,EAAG;IAEjCszB,SAAS,GAAG+B,GAAG,CAACoC,iBAAiB,CAAEkf,EAAE,EAAED,EAAE,EAAED,EAAE,EAAE,IAAI,EAAE1lB,KAAK,CAAE;EAE7D,CAAC,MAAM;IAENuC,SAAS,GAAG+B,GAAG,CAACoC,iBAAiB,CAAEgf,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEhS,QAAQ,CAACuD,IAAI,KAAKjoC,UAAU,EAAE8wB,KAAK,CAAE;EAErF;EAEA,IAAKuC,SAAS,KAAK,IAAI,EAAG,OAAO,IAAI;EAErC4lB,uBAAuB,CAAC7nC,IAAI,CAAE0f,KAAK,CAAE;EACrCmoB,uBAAuB,CAACp2B,YAAY,CAAE5mB,MAAM,CAACqxB,WAAW,CAAE;EAE1D,IAAM+T,QAAQ,GAAGqY,SAAS,CAACtkB,GAAG,CAACF,MAAM,CAACjiB,UAAU,CAAEgmC,uBAAuB,CAAE;EAE3E,IAAK5X,QAAQ,GAAGqY,SAAS,CAAC5c,IAAI,IAAIuE,QAAQ,GAAGqY,SAAS,CAAC3c,GAAG,EAAG,OAAO,IAAI;EAExE,OAAO;IACNsE,QAAQ,EAAEA,QAAQ;IAClBvQ,KAAK,EAAEmoB,uBAAuB,CAAC9nC,KAAK,EAAE;IACtClV,MAAM,EAAEA;EACT,CAAC;AAEF;AAEA,SAAS+9C,+BAA+BA,CAAE/9C,MAAM,EAAEyoC,QAAQ,EAAEgV,SAAS,EAAEtkB,GAAG,EAAE/D,QAAQ,EAAEwoB,aAAa,EAAEpG,oBAAoB,EAAEpxB,EAAE,EAAEmkB,GAAG,EAAE33B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;EAE7IqpC,KAAK,CAACrkC,mBAAmB,CAAEsd,QAAQ,EAAExiB,CAAC,CAAE;EACxCwpC,KAAK,CAACtkC,mBAAmB,CAAEsd,QAAQ,EAAEviB,CAAC,CAAE;EACxCwpC,KAAK,CAACvkC,mBAAmB,CAAEsd,QAAQ,EAAEtiB,CAAC,CAAE;EAExC,IAAMqrC,eAAe,GAAGn+C,MAAM,CAACs9C,qBAAqB;EAEpD,IAAKM,aAAa,IAAIO,eAAe,EAAG;IAEvC1B,OAAO,CAAC/oC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACtBgpC,OAAO,CAAChpC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACtBipC,OAAO,CAACjpC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAEtB,KAAM,IAAI1U,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG6yB,aAAa,CAAC7+C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAE1D,IAAMo/C,SAAS,GAAGD,eAAe,CAAEn/C,CAAC,CAAE;MACtC,IAAM25C,cAAc,GAAGiF,aAAa,CAAE5+C,CAAC,CAAE;MAEzC,IAAKo/C,SAAS,KAAK,CAAC,EAAG;MAEvB9B,MAAM,CAACxkC,mBAAmB,CAAE6gC,cAAc,EAAE/lC,CAAC,CAAE;MAC/C2pC,MAAM,CAACzkC,mBAAmB,CAAE6gC,cAAc,EAAE9lC,CAAC,CAAE;MAC/C2pC,MAAM,CAAC1kC,mBAAmB,CAAE6gC,cAAc,EAAE7lC,CAAC,CAAE;MAE/C,IAAK0kC,oBAAoB,EAAG;QAE3BiF,OAAO,CAACjnC,eAAe,CAAE8mC,MAAM,EAAE8B,SAAS,CAAE;QAC5C1B,OAAO,CAAClnC,eAAe,CAAE+mC,MAAM,EAAE6B,SAAS,CAAE;QAC5CzB,OAAO,CAACnnC,eAAe,CAAEgnC,MAAM,EAAE4B,SAAS,CAAE;MAE7C,CAAC,MAAM;QAEN3B,OAAO,CAACjnC,eAAe,CAAE8mC,MAAM,CAAC7mC,GAAG,CAAE0mC,KAAK,CAAE,EAAEiC,SAAS,CAAE;QACzD1B,OAAO,CAAClnC,eAAe,CAAE+mC,MAAM,CAAC9mC,GAAG,CAAE2mC,KAAK,CAAE,EAAEgC,SAAS,CAAE;QACzDzB,OAAO,CAACnnC,eAAe,CAAEgnC,MAAM,CAAC/mC,GAAG,CAAE4mC,KAAK,CAAE,EAAE+B,SAAS,CAAE;MAE1D;IAED;IAEAjC,KAAK,CAAC9mC,GAAG,CAAEonC,OAAO,CAAE;IACpBL,KAAK,CAAC/mC,GAAG,CAAEqnC,OAAO,CAAE;IACpBL,KAAK,CAAChnC,GAAG,CAAEsnC,OAAO,CAAE;EAErB;EAEA,IAAK38C,MAAM,CAACqoC,aAAa,EAAG;IAE3BroC,MAAM,CAACq+C,aAAa,CAAEzrC,CAAC,EAAEupC,KAAK,CAAE;IAChCn8C,MAAM,CAACq+C,aAAa,CAAExrC,CAAC,EAAEupC,KAAK,CAAE;IAChCp8C,MAAM,CAACq+C,aAAa,CAAEvrC,CAAC,EAAEupC,KAAK,CAAE;EAEjC;EAEA,IAAMsB,YAAY,GAAGO,iBAAiB,CAAEl+C,MAAM,EAAEyoC,QAAQ,EAAEgV,SAAS,EAAEtkB,GAAG,EAAEgjB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEU,kBAAkB,CAAE;EAEnH,IAAKY,YAAY,EAAG;IAEnB,IAAKv3B,EAAE,EAAG;MAETw2B,MAAM,CAAC9kC,mBAAmB,CAAEsO,EAAE,EAAExT,CAAC,CAAE;MACnCiqC,MAAM,CAAC/kC,mBAAmB,CAAEsO,EAAE,EAAEvT,CAAC,CAAE;MACnCiqC,MAAM,CAAChlC,mBAAmB,CAAEsO,EAAE,EAAEtT,CAAC,CAAE;MAEnC6qC,YAAY,CAACv3B,EAAE,GAAGqjB,QAAQ,CAACY,KAAK,CAAE0S,kBAAkB,EAAEZ,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEO,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAItoC,OAAO,EAAE,CAAE;IAEnH;IAEA,IAAK+1B,GAAG,EAAG;MAEVqS,MAAM,CAAC9kC,mBAAmB,CAAEyyB,GAAG,EAAE33B,CAAC,CAAE;MACpCiqC,MAAM,CAAC/kC,mBAAmB,CAAEyyB,GAAG,EAAE13B,CAAC,CAAE;MACpCiqC,MAAM,CAAChlC,mBAAmB,CAAEyyB,GAAG,EAAEz3B,CAAC,CAAE;MAEpC6qC,YAAY,CAACpT,GAAG,GAAGd,QAAQ,CAACY,KAAK,CAAE0S,kBAAkB,EAAEZ,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEO,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAE,IAAItoC,OAAO,EAAE,CAAE;IAEpH;IAEA,IAAMypC,IAAI,GAAG;MACZrrC,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJsf,MAAM,EAAE,IAAItC,OAAO,EAAE;MACrBsoB,aAAa,EAAE;IAChB,CAAC;IAED3O,QAAQ,CAACQ,SAAS,CAAEkS,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE4B,IAAI,CAAC7rB,MAAM,CAAE;IAEtDurB,YAAY,CAACM,IAAI,GAAGA,IAAI;EAEzB;EAEA,OAAON,YAAY;AAEpB;AAAC,IAEKW,WAAW,0BAAAC,eAAA;EAAAx6B,SAAA,CAAAu6B,WAAA,EAAAC,eAAA;EAAA,IAAAC,QAAA,GAAAv6B,YAAA,CAAAq6B,WAAA;EAEhB,SAAAA,YAAap8B,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEsG,KAAK,GAAG,CAAC,EAAEg2B,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAr9C,eAAA,OAAA+8C,WAAA;IAEzGM,OAAA,GAAAJ,QAAA,CAAAvjD,IAAA;IAEA2jD,OAAA,CAAK5jD,IAAI,GAAG,aAAa;IAEzB4jD,OAAA,CAAKzW,UAAU,GAAG;MACjBjmB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdsG,KAAK,EAAEA,KAAK;MACZg2B,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA,cAAc;MAC9BC,aAAa,EAAEA;IAChB,CAAC;IAED,IAAME,KAAK,GAAA/5B,sBAAA,CAAA85B,OAAA,CAAO;;IAElB;;IAEAH,aAAa,GAAGvvC,IAAI,CAACsC,KAAK,CAAEitC,aAAa,CAAE;IAC3CC,cAAc,GAAGxvC,IAAI,CAACsC,KAAK,CAAEktC,cAAc,CAAE;IAC7CC,aAAa,GAAGzvC,IAAI,CAACsC,KAAK,CAAEmtC,aAAa,CAAE;;IAE3C;;IAEA,IAAM7F,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI8F,gBAAgB,GAAG,CAAC;IACxB,IAAIC,UAAU,GAAG,CAAC;;IAElB;;IAEAC,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAEx2B,KAAK,EAAEtG,MAAM,EAAED,KAAK,EAAEy8B,aAAa,EAAED,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;IAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEx2B,KAAK,EAAEtG,MAAM,EAAE,CAAED,KAAK,EAAEy8B,aAAa,EAAED,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;IAC/FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE/8B,KAAK,EAAEuG,KAAK,EAAEtG,MAAM,EAAEs8B,aAAa,EAAEE,aAAa,EAAE,CAAC,CAAE,CAAC,CAAC;IAC1FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE/8B,KAAK,EAAEuG,KAAK,EAAE,CAAEtG,MAAM,EAAEs8B,aAAa,EAAEE,aAAa,EAAE,CAAC,CAAE,CAAC,CAAC;IAC9FM,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE/8B,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAEg2B,aAAa,EAAEC,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;IAC7FO,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE/8B,KAAK,EAAEC,MAAM,EAAE,CAAEsG,KAAK,EAAEg2B,aAAa,EAAEC,cAAc,EAAE,CAAC,CAAE,CAAC,CAAC;;IAEjG;;IAEAE,OAAA,CAAK9G,QAAQ,CAAEgB,OAAO,CAAE;IACxB8F,OAAA,CAAK5G,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1EF,OAAA,CAAK5G,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvE4F,OAAA,CAAK5G,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAE/D,SAASgG,UAAUA,CAAE/rB,CAAC,EAAE9d,CAAC,EAAEoR,CAAC,EAAE04B,IAAI,EAAEC,IAAI,EAAEj9B,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAE22B,KAAK,EAAEC,KAAK,EAAEjH,aAAa,EAAG;MAE7F,IAAMkH,YAAY,GAAGp9B,KAAK,GAAGk9B,KAAK;MAClC,IAAMG,aAAa,GAAGp9B,MAAM,GAAGk9B,KAAK;MAEpC,IAAMG,SAAS,GAAGt9B,KAAK,GAAG,CAAC;MAC3B,IAAMu9B,UAAU,GAAGt9B,MAAM,GAAG,CAAC;MAC7B,IAAMu9B,SAAS,GAAGj3B,KAAK,GAAG,CAAC;MAE3B,IAAMk3B,MAAM,GAAGP,KAAK,GAAG,CAAC;MACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;MAExB,IAAIQ,aAAa,GAAG,CAAC;MACrB,IAAIC,UAAU,GAAG,CAAC;MAElB,IAAM/qB,MAAM,GAAG,IAAIjF,OAAO,EAAE;;MAE5B;;MAEA,KAAM,IAAIc,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGgvB,MAAM,EAAEhvB,EAAE,EAAG,EAAG;QAEtC,IAAMlgB,CAAC,GAAGkgB,EAAE,GAAG2uB,aAAa,GAAGE,UAAU;QAEzC,KAAM,IAAI9uB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGgvB,MAAM,EAAEhvB,EAAE,EAAG,EAAG;UAEtC,IAAMvgB,CAAC,GAAGugB,EAAE,GAAG2uB,YAAY,GAAGE,SAAS;;UAEvC;;UAEAzqB,MAAM,CAAE7B,CAAC,CAAE,GAAG9iB,CAAC,GAAG8uC,IAAI;UACtBnqB,MAAM,CAAE3f,CAAC,CAAE,GAAG1E,CAAC,GAAGyuC,IAAI;UACtBpqB,MAAM,CAAEvO,CAAC,CAAE,GAAGk5B,SAAS;;UAEvB;;UAEAZ,QAAQ,CAACtgD,IAAI,CAAEu2B,MAAM,CAAC3kB,CAAC,EAAE2kB,MAAM,CAACrkB,CAAC,EAAEqkB,MAAM,CAACxO,CAAC,CAAE;;UAE7C;;UAEAwO,MAAM,CAAE7B,CAAC,CAAE,GAAG,CAAC;UACf6B,MAAM,CAAE3f,CAAC,CAAE,GAAG,CAAC;UACf2f,MAAM,CAAEvO,CAAC,CAAE,GAAGiC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;;UAEjC;;UAEAuwB,OAAO,CAACx6C,IAAI,CAAEu2B,MAAM,CAAC3kB,CAAC,EAAE2kB,MAAM,CAACrkB,CAAC,EAAEqkB,MAAM,CAACxO,CAAC,CAAE;;UAE5C;;UAEA0yB,GAAG,CAACz6C,IAAI,CAAEmyB,EAAE,GAAGyuB,KAAK,CAAE;UACtBnG,GAAG,CAACz6C,IAAI,CAAE,CAAC,GAAKoyB,EAAE,GAAGyuB,KAAO,CAAE;;UAE9B;;UAEAQ,aAAa,IAAI,CAAC;QAEnB;MAED;;MAEA;;MAEA;MACA;MACA;;MAEA,KAAM,IAAIjvB,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAGyuB,KAAK,EAAEzuB,GAAE,EAAG,EAAG;QAErC,KAAM,IAAID,GAAE,GAAG,CAAC,EAAEA,GAAE,GAAGyuB,KAAK,EAAEzuB,GAAE,EAAG,EAAG;UAErC,IAAM/d,CAAC,GAAGmsC,gBAAgB,GAAGpuB,GAAE,GAAGgvB,MAAM,GAAG/uB,GAAE;UAC7C,IAAM/d,CAAC,GAAGksC,gBAAgB,GAAGpuB,GAAE,GAAGgvB,MAAM,IAAK/uB,GAAE,GAAG,CAAC,CAAE;UACrD,IAAM9d,CAAC,GAAGisC,gBAAgB,IAAKpuB,GAAE,GAAG,CAAC,CAAE,GAAGgvB,MAAM,IAAK/uB,GAAE,GAAG,CAAC,CAAE;UAC7D,IAAM3V,CAAC,GAAG8jC,gBAAgB,IAAKpuB,GAAE,GAAG,CAAC,CAAE,GAAGgvB,MAAM,GAAG/uB,GAAE;;UAErD;;UAEAkoB,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;;UAEvB;;UAEA6kC,UAAU,IAAI,CAAC;QAEhB;MAED;;MAEA;;MAEAjB,KAAK,CAAC1G,QAAQ,CAAE6G,UAAU,EAAEc,UAAU,EAAE1H,aAAa,CAAE;;MAEvD;;MAEA4G,UAAU,IAAIc,UAAU;;MAExB;;MAEAf,gBAAgB,IAAIc,aAAa;IAElC;IAAC,OAAAjB,OAAA;EAEF;EAAC78C,YAAA,CAAAu8C,WAAA;IAAArlD,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIw7B,WAAW,CAAEx7B,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAAC2F,KAAK,EAAE3F,IAAI,CAAC27B,aAAa,EAAE37B,IAAI,CAAC47B,cAAc,EAAE57B,IAAI,CAAC67B,aAAa,CAAE;IAE3H;EAAC;EAAA,OAAAL,WAAA;AAAA,EAjKwBpH,cAAc;AAqKxC;AACA;AACA;AAFAz+C,OAAA,CAAA6lD,WAAA,GAAA7lD,OAAA,CAAAunD,iBAAA,GAAA1B,WAAA;AAIA,SAAS2B,aAAaA,CAAEl+B,GAAG,EAAG;EAE7B,IAAM4M,GAAG,GAAG,CAAC,CAAC;EAEd,KAAM,IAAMuE,CAAC,IAAInR,GAAG,EAAG;IAEtB4M,GAAG,CAAEuE,CAAC,CAAE,GAAG,CAAC,CAAC;IAEb,KAAM,IAAMtU,CAAC,IAAImD,GAAG,CAAEmR,CAAC,CAAE,EAAG;MAE3B,IAAMgtB,QAAQ,GAAGn+B,GAAG,CAAEmR,CAAC,CAAE,CAAEtU,CAAC,CAAE;MAE9B,IAAKshC,QAAQ,KAAMA,QAAQ,CAACjhC,OAAO,IAClCihC,QAAQ,CAAC3nC,SAAS,IAAI2nC,QAAQ,CAACnkB,SAAS,IACxCmkB,QAAQ,CAACxrC,SAAS,IAAIwrC,QAAQ,CAAClwB,SAAS,IAAIkwB,QAAQ,CAACz5B,SAAS,IAC9Dy5B,QAAQ,CAACr7B,SAAS,IAAIq7B,QAAQ,CAACh1B,YAAY,CAAE,EAAG;QAEhDyD,GAAG,CAAEuE,CAAC,CAAE,CAAEtU,CAAC,CAAE,GAAGshC,QAAQ,CAAChrC,KAAK,EAAE;MAEjC,CAAC,MAAM,IAAKqO,KAAK,CAACC,OAAO,CAAE08B,QAAQ,CAAE,EAAG;QAEvCvxB,GAAG,CAAEuE,CAAC,CAAE,CAAEtU,CAAC,CAAE,GAAGshC,QAAQ,CAAC5/C,KAAK,EAAE;MAEjC,CAAC,MAAM;QAENquB,GAAG,CAAEuE,CAAC,CAAE,CAAEtU,CAAC,CAAE,GAAGshC,QAAQ;MAEzB;IAED;EAED;EAEA,OAAOvxB,GAAG;AAEX;AAEA,SAASwxB,aAAaA,CAAEC,QAAQ,EAAG;EAElC,IAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,KAAM,IAAIntB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGktB,QAAQ,CAACrhD,MAAM,EAAEm0B,CAAC,EAAG,EAAG;IAE5C,IAAMtX,IAAG,GAAGqkC,aAAa,CAAEG,QAAQ,CAAEltB,CAAC,CAAE,CAAE;IAE1C,KAAM,IAAMtU,CAAC,IAAIhD,IAAG,EAAG;MAEtBykC,MAAM,CAAEzhC,CAAC,CAAE,GAAGhD,IAAG,CAAEgD,CAAC,CAAE;IAEvB;EAED;EAEA,OAAOyhC,MAAM;AAEd;AAEA,SAASC,mBAAmBA,CAAEv+B,GAAG,EAAG;EAEnC,IAAM4M,GAAG,GAAG,EAAE;EAEd,KAAM,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnR,GAAG,CAAChjB,MAAM,EAAEm0B,CAAC,EAAG,EAAG;IAEvCvE,GAAG,CAACnwB,IAAI,CAAEujB,GAAG,CAAEmR,CAAC,CAAE,CAAChe,KAAK,EAAE,CAAE;EAE7B;EAEA,OAAOyZ,GAAG;AAEX;;AAEA;;AAEA,IAAM4xB,aAAa,GAAG;EAAErrC,KAAK,EAAE+qC,aAAa;EAAEjF,KAAK,EAAEmF;AAAc,CAAC;AAAC1nD,OAAA,CAAA8nD,aAAA,GAAAA,aAAA;AAErE,IAAIC,cAAc,GAAG,+FAA+F;AAEpH,IAAIC,gBAAgB,GAAG,gEAAgE;AAAC,IAElFC,cAAc,0BAAAC,UAAA;EAAA58B,SAAA,CAAA28B,cAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA38B,YAAA,CAAAy8B,cAAA;EAEnB,SAAAA,eAAavY,UAAU,EAAG;IAAA,IAAA0Y,OAAA;IAAAt/C,eAAA,OAAAm/C,cAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAA3lD,IAAA;IAEA4lD,OAAA,CAAKC,gBAAgB,GAAG,IAAI;IAE5BD,OAAA,CAAK7lD,IAAI,GAAG,gBAAgB;IAE5B6lD,OAAA,CAAKE,OAAO,GAAG,CAAC,CAAC;IACjBF,OAAA,CAAKT,QAAQ,GAAG,CAAC,CAAC;IAClBS,OAAA,CAAKG,cAAc,GAAG,EAAE;IAExBH,OAAA,CAAKI,YAAY,GAAGT,cAAc;IAClCK,OAAA,CAAKK,cAAc,GAAGT,gBAAgB;IAEtCI,OAAA,CAAK3O,SAAS,GAAG,CAAC;IAElB2O,OAAA,CAAKvO,SAAS,GAAG,KAAK;IACtBuO,OAAA,CAAKtO,kBAAkB,GAAG,CAAC;IAE3BsO,OAAA,CAAKnO,GAAG,GAAG,KAAK,CAAC,CAAC;IAClBmO,OAAA,CAAKM,MAAM,GAAG,KAAK,CAAC,CAAC;IACrBN,OAAA,CAAKO,QAAQ,GAAG,KAAK,CAAC,CAAC;;IAEvBP,OAAA,CAAKQ,UAAU,GAAG;MACjBC,WAAW,EAAE,KAAK;MAAE;MACpBC,SAAS,EAAE,KAAK;MAAE;MAClBC,WAAW,EAAE,KAAK;MAAE;MACpBC,gBAAgB,EAAE,KAAK,CAAC;IACzB,CAAC;;IAED;IACA;IACAZ,OAAA,CAAKa,sBAAsB,GAAG;MAC7B,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACpB,IAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;MACd,KAAK,EAAE,CAAE,CAAC,EAAE,CAAC;IACd,CAAC;IAEDb,OAAA,CAAKc,mBAAmB,GAAGlkD,SAAS;IACpCojD,OAAA,CAAKe,kBAAkB,GAAG,KAAK;IAE/Bf,OAAA,CAAKgB,WAAW,GAAG,IAAI;IAEvB,IAAK1Z,UAAU,KAAK1qC,SAAS,EAAG;MAE/B,IAAK0qC,UAAU,CAAChT,UAAU,KAAK13B,SAAS,EAAG;QAE1CkW,OAAO,CAACjX,KAAK,CAAE,yFAAyF,CAAE;MAE3G;MAEAmkD,OAAA,CAAKvS,SAAS,CAAEnG,UAAU,CAAE;IAE7B;IAAC,OAAA0Y,OAAA;EAEF;EAAC9+C,YAAA,CAAA2+C,cAAA;IAAAznD,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAuN,cAAA,CAAA9nD,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACoiC,cAAc,GAAGpiC,MAAM,CAACoiC,cAAc;MAC3C,IAAI,CAACD,YAAY,GAAGniC,MAAM,CAACmiC,YAAY;MAEvC,IAAI,CAACb,QAAQ,GAAGH,aAAa,CAAEnhC,MAAM,CAACshC,QAAQ,CAAE;MAChD,IAAI,CAACY,cAAc,GAAGV,mBAAmB,CAAExhC,MAAM,CAACkiC,cAAc,CAAE;MAElE,IAAI,CAACD,OAAO,GAAGpoD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAACiiC,OAAO,CAAE;MAElD,IAAI,CAACzO,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MAEnD,IAAI,CAACG,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MACrB,IAAI,CAACyO,MAAM,GAAGriC,MAAM,CAACqiC,MAAM;MAC3B,IAAI,CAACC,QAAQ,GAAGtiC,MAAM,CAACsiC,QAAQ;MAE/B,IAAI,CAACC,UAAU,GAAG1oD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAACuiC,UAAU,CAAE;MAExD,IAAI,CAACQ,WAAW,GAAG/iC,MAAM,CAAC+iC,WAAW;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAA5oD,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAuN,cAAA,CAAA9nD,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjCJ,IAAI,CAAC++B,WAAW,GAAG,IAAI,CAACA,WAAW;MACnC/+B,IAAI,CAACs9B,QAAQ,GAAG,CAAC,CAAC;MAElB,KAAM,IAAM9gD,IAAI,IAAI,IAAI,CAAC8gD,QAAQ,EAAG;QAEnC,IAAM0B,OAAO,GAAG,IAAI,CAAC1B,QAAQ,CAAE9gD,IAAI,CAAE;QACrC,IAAMnG,MAAK,GAAG2oD,OAAO,CAAC3oD,KAAK;QAE3B,IAAKA,MAAK,IAAIA,MAAK,CAAC0rB,SAAS,EAAG;UAE/B/B,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,GAAG;YACT7B,KAAK,EAAEA,MAAK,CAACooB,MAAM,CAAE2B,IAAI,CAAE,CAACvT;UAC7B,CAAC;QAEF,CAAC,MAAM,IAAKxW,MAAK,IAAIA,MAAK,CAAC8lB,OAAO,EAAG;UAEpC6D,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,GAAG;YACT7B,KAAK,EAAEA,MAAK,CAACinB,MAAM;UACpB,CAAC;QAEF,CAAC,MAAM,IAAKjnB,MAAK,IAAIA,MAAK,CAACub,SAAS,EAAG;UAEtCoO,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,MAAK,CAAC0e,OAAO;UACrB,CAAC;QAEF,CAAC,MAAM,IAAK1e,MAAK,IAAIA,MAAK,CAAC62B,SAAS,EAAG;UAEtClN,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,MAAK,CAAC0e,OAAO;UACrB,CAAC;QAEF,CAAC,MAAM,IAAK1e,MAAK,IAAIA,MAAK,CAACstB,SAAS,EAAG;UAEtC3D,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,MAAK,CAAC0e,OAAO;UACrB,CAAC;QAEF,CAAC,MAAM,IAAK1e,MAAK,IAAIA,MAAK,CAACof,SAAS,EAAG;UAEtCuK,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,MAAK,CAAC0e,OAAO;UACrB,CAAC;QAEF,CAAC,MAAM,IAAK1e,MAAK,IAAIA,MAAK,CAAC4iC,SAAS,EAAG;UAEtCjZ,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBtE,IAAI,EAAE,IAAI;YACV7B,KAAK,EAAEA,MAAK,CAAC0e,OAAO;UACrB,CAAC;QAEF,CAAC,MAAM;UAENiL,IAAI,CAACs9B,QAAQ,CAAE9gD,IAAI,CAAE,GAAG;YACvBnG,KAAK,EAAEA;UACR,CAAC;;UAED;QAED;MAED;;MAEA,IAAKR,MAAM,CAACmH,IAAI,CAAE,IAAI,CAACihD,OAAO,CAAE,CAAChiD,MAAM,GAAG,CAAC,EAAG+jB,IAAI,CAACi+B,OAAO,GAAG,IAAI,CAACA,OAAO;MAEzEj+B,IAAI,CAACm+B,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCn+B,IAAI,CAACo+B,cAAc,GAAG,IAAI,CAACA,cAAc;MAEzC,IAAMG,UAAU,GAAG,CAAC,CAAC;MAErB,KAAM,IAAMpoD,GAAG,IAAI,IAAI,CAACooD,UAAU,EAAG;QAEpC,IAAK,IAAI,CAACA,UAAU,CAAEpoD,GAAG,CAAE,KAAK,IAAI,EAAGooD,UAAU,CAAEpoD,GAAG,CAAE,GAAG,IAAI;MAEhE;MAEA,IAAKN,MAAM,CAACmH,IAAI,CAAEuhD,UAAU,CAAE,CAACtiD,MAAM,GAAG,CAAC,EAAG+jB,IAAI,CAACu+B,UAAU,GAAGA,UAAU;MAExE,OAAOv+B,IAAI;IAEZ;EAAC;EAAA,OAAA49B,cAAA;AAAA,EAjL2BhV,QAAQ;AAAAjzC,OAAA,CAAAioD,cAAA,GAAAA,cAAA;AAAA,IAqL/BqB,MAAM,0BAAAC,UAAA;EAAAj+B,SAAA,CAAAg+B,MAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAh+B,YAAA,CAAA89B,MAAA;EAEX,SAAAA,OAAA,EAAc;IAAA,IAAAG,OAAA;IAAA3gD,eAAA,OAAAwgD,MAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAhnD,IAAA;IAEAinD,OAAA,CAAKxc,QAAQ,GAAG,IAAI;IAEpBwc,OAAA,CAAKlnD,IAAI,GAAG,QAAQ;IAEpBknD,OAAA,CAAKjxB,kBAAkB,GAAG,IAAI6K,OAAO,EAAE;IAEvComB,OAAA,CAAKhxB,gBAAgB,GAAG,IAAI4K,OAAO,EAAE;IACrComB,OAAA,CAAK9wB,uBAAuB,GAAG,IAAI0K,OAAO,EAAE;IAAC,OAAAomB,OAAA;EAE9C;EAACngD,YAAA,CAAAggD,MAAA;IAAA9oD,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA4O,MAAA,CAAAnpD,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAAC7X,kBAAkB,CAAC9b,IAAI,CAAE2J,MAAM,CAACmS,kBAAkB,CAAE;MAEzD,IAAI,CAACC,gBAAgB,CAAC/b,IAAI,CAAE2J,MAAM,CAACoS,gBAAgB,CAAE;MACrD,IAAI,CAACE,uBAAuB,CAACjc,IAAI,CAAE2J,MAAM,CAACsS,uBAAuB,CAAE;MAEnE,OAAO,IAAI;IAEZ;EAAC;IAAAn4B,GAAA;IAAAE,KAAA,EAED,SAAAstC,kBAAmB9kC,MAAM,EAAG;MAE3B,IAAI,CAACszB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;MAErC,IAAMhf,CAAC,GAAG,IAAI,CAACob,WAAW,CAACnb,QAAQ;MAEnC,OAAOvU,MAAM,CAAC+R,GAAG,CAAE,CAAEuC,CAAC,CAAE,CAAC,CAAE,EAAE,CAAEA,CAAC,CAAE,CAAC,CAAE,EAAE,CAAEA,CAAC,CAAE,EAAE,CAAE,CAAE,CAAC9B,SAAS,EAAE;IAE/D;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1BmM,IAAA,CAAAC,eAAA,CAAA4O,MAAA,CAAAnpD,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;MAE9B,IAAI,CAAC9V,kBAAkB,CAAC9b,IAAI,CAAE,IAAI,CAACkc,WAAW,CAAE,CAAChW,MAAM,EAAE;IAE1D;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAA87B,kBAAmB+R,aAAa,EAAEC,cAAc,EAAG;MAElDiM,IAAA,CAAAC,eAAA,CAAA4O,MAAA,CAAAnpD,SAAA,8BAAAqC,IAAA,OAAyB+rC,aAAa,EAAEC,cAAc;MAEtD,IAAI,CAAChW,kBAAkB,CAAC9b,IAAI,CAAE,IAAI,CAACkc,WAAW,CAAE,CAAChW,MAAM,EAAE;IAE1D;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAA4sC,MAAA;AAAA,EA5DmB3e,QAAQ;AAAA3qC,OAAA,CAAAspD,MAAA,GAAAA,MAAA;AAAA,IAgEvBI,iBAAiB,0BAAAC,OAAA;EAAAr+B,SAAA,CAAAo+B,iBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAp+B,YAAA,CAAAk+B,iBAAA;EAEtB,SAAAA,kBAAaG,GAAG,GAAG,EAAE,EAAEC,MAAM,GAAG,CAAC,EAAE1hB,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA,IAAA0hB,OAAA;IAAAjhD,eAAA,OAAA4gD,iBAAA;IAE3DK,OAAA,GAAAH,QAAA,CAAApnD,IAAA;IAEAunD,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAKxnD,IAAI,GAAG,mBAAmB;IAE/BwnD,OAAA,CAAKF,GAAG,GAAGA,GAAG;IACdE,OAAA,CAAKE,IAAI,GAAG,CAAC;IAEbF,OAAA,CAAK3hB,IAAI,GAAGA,IAAI;IAChB2hB,OAAA,CAAK1hB,GAAG,GAAGA,GAAG;IACd0hB,OAAA,CAAKG,KAAK,GAAG,EAAE;IAEfH,OAAA,CAAKD,MAAM,GAAGA,MAAM;IACpBC,OAAA,CAAKI,IAAI,GAAG,IAAI;IAEhBJ,OAAA,CAAKK,SAAS,GAAG,EAAE,CAAC,CAAC;IACrBL,OAAA,CAAKM,UAAU,GAAG,CAAC,CAAC,CAAC;;IAErBN,OAAA,CAAKO,sBAAsB,EAAE;IAAC,OAAAP,OAAA;EAE/B;EAACzgD,YAAA,CAAAogD,iBAAA;IAAAlpD,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAgP,iBAAA,CAAAvpD,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACwZ,GAAG,GAAGxjC,MAAM,CAACwjC,GAAG;MACrB,IAAI,CAACI,IAAI,GAAG5jC,MAAM,CAAC4jC,IAAI;MAEvB,IAAI,CAAC7hB,IAAI,GAAG/hB,MAAM,CAAC+hB,IAAI;MACvB,IAAI,CAACC,GAAG,GAAGhiB,MAAM,CAACgiB,GAAG;MACrB,IAAI,CAAC6hB,KAAK,GAAG7jC,MAAM,CAAC6jC,KAAK;MAEzB,IAAI,CAACJ,MAAM,GAAGzjC,MAAM,CAACyjC,MAAM;MAC3B,IAAI,CAACK,IAAI,GAAG9jC,MAAM,CAAC8jC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGjqD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAAC8jC,IAAI,CAAE;MAE1E,IAAI,CAACC,SAAS,GAAG/jC,MAAM,CAAC+jC,SAAS;MACjC,IAAI,CAACC,UAAU,GAAGhkC,MAAM,CAACgkC,UAAU;MAEnC,OAAO,IAAI;IAEZ;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EAPC;IAAA7pD,GAAA;IAAAE,KAAA,EAQA,SAAA6pD,eAAgBC,WAAW,EAAG;MAE7B;MACA,IAAMC,YAAY,GAAG,GAAG,GAAG,IAAI,CAACC,aAAa,EAAE,GAAGF,WAAW;MAE7D,IAAI,CAACX,GAAG,GAAGlzC,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACk0C,IAAI,CAAEF,YAAY,CAAE;MAClD,IAAI,CAACH,sBAAsB,EAAE;IAE9B;;IAEA;AACD;AACA;EAFC;IAAA9pD,GAAA;IAAAE,KAAA,EAGA,SAAAkqD,eAAA,EAAiB;MAEhB,IAAMH,YAAY,GAAGh0C,IAAI,CAACo0C,GAAG,CAAEr0C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACqzC,GAAG,CAAE;MAEzD,OAAO,GAAG,GAAG,IAAI,CAACa,aAAa,EAAE,GAAGD,YAAY;IAEjD;EAAC;IAAAjqD,GAAA;IAAAE,KAAA,EAED,SAAAoqD,gBAAA,EAAkB;MAEjB,OAAOn0C,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACk0C,IAAI,CAC7Bl0C,IAAI,CAACo0C,GAAG,CAAEr0C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACqzC,GAAG,CAAE,GAAG,IAAI,CAACI,IAAI,CAAE;IAEpD;EAAC;IAAAzpD,GAAA;IAAAE,KAAA,EAED,SAAAqqD,aAAA,EAAe;MAEd;MACA,OAAO,IAAI,CAACX,SAAS,GAAG3zC,IAAI,CAACY,GAAG,CAAE,IAAI,CAACyyC,MAAM,EAAE,CAAC,CAAE;IAEnD;EAAC;IAAAtpD,GAAA;IAAAE,KAAA,EAED,SAAAgqD,cAAA,EAAgB;MAEf;MACA,OAAO,IAAI,CAACN,SAAS,GAAG3zC,IAAI,CAACa,GAAG,CAAE,IAAI,CAACwyC,MAAM,EAAE,CAAC,CAAE;IAEnD;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlCC;IAAAtpD,GAAA;IAAAE,KAAA,EAmCA,SAAAsqD,cAAeC,SAAS,EAAEC,UAAU,EAAEvzC,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAG;MAE3D,IAAI,CAACogC,MAAM,GAAGmB,SAAS,GAAGC,UAAU;MAEpC,IAAK,IAAI,CAACf,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,GAAG;UACXgB,OAAO,EAAE,IAAI;UACbF,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbE,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACV5hC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACT,CAAC;MAEF;MAEA,IAAI,CAACygC,IAAI,CAACgB,OAAO,GAAG,IAAI;MACxB,IAAI,CAAChB,IAAI,CAACc,SAAS,GAAGA,SAAS;MAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;MACjC,IAAI,CAACf,IAAI,CAACiB,OAAO,GAAGzzC,CAAC;MACrB,IAAI,CAACwyC,IAAI,CAACkB,OAAO,GAAGpzC,CAAC;MACrB,IAAI,CAACkyC,IAAI,CAAC1gC,KAAK,GAAGA,KAAK;MACvB,IAAI,CAAC0gC,IAAI,CAACzgC,MAAM,GAAGA,MAAM;MAEzB,IAAI,CAAC4gC,sBAAsB,EAAE;IAE9B;EAAC;IAAA9pD,GAAA;IAAAE,KAAA,EAED,SAAA4qD,gBAAA,EAAkB;MAEjB,IAAK,IAAI,CAACnB,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,CAACgB,OAAO,GAAG,KAAK;MAE1B;MAEA,IAAI,CAACb,sBAAsB,EAAE;IAE9B;EAAC;IAAA9pD,GAAA;IAAAE,KAAA,EAED,SAAA4pD,uBAAA,EAAyB;MAExB,IAAMliB,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAIF,GAAG,GAAGE,IAAI,GAAG3xB,IAAI,CAACo0C,GAAG,CAAEr0C,OAAO,GAAG,GAAG,GAAG,IAAI,CAACqzC,GAAG,CAAE,GAAG,IAAI,CAACI,IAAI;MACjE,IAAIvgC,MAAM,GAAG,CAAC,GAAGwe,GAAG;MACpB,IAAIze,KAAK,GAAG,IAAI,CAACqgC,MAAM,GAAGpgC,MAAM;MAChC,IAAIse,IAAI,GAAG,CAAE,GAAG,GAAGve,KAAK;MACxB,IAAM0gC,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAK,IAAI,CAACA,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAACgB,OAAO,EAAG;QAE9C,IAAMF,SAAS,GAAGd,IAAI,CAACc,SAAS;UAC/BC,UAAU,GAAGf,IAAI,CAACe,UAAU;QAE7BljB,IAAI,IAAImiB,IAAI,CAACiB,OAAO,GAAG3hC,KAAK,GAAGwhC,SAAS;QACxC/iB,GAAG,IAAIiiB,IAAI,CAACkB,OAAO,GAAG3hC,MAAM,GAAGwhC,UAAU;QACzCzhC,KAAK,IAAI0gC,IAAI,CAAC1gC,KAAK,GAAGwhC,SAAS;QAC/BvhC,MAAM,IAAIygC,IAAI,CAACzgC,MAAM,GAAGwhC,UAAU;MAEnC;MAEA,IAAMK,IAAI,GAAG,IAAI,CAAClB,UAAU;MAC5B,IAAKkB,IAAI,KAAK,CAAC,EAAGvjB,IAAI,IAAII,IAAI,GAAGmjB,IAAI,GAAG,IAAI,CAACR,YAAY,EAAE;MAE3D,IAAI,CAACtyB,gBAAgB,CAACsP,eAAe,CAAEC,IAAI,EAAEA,IAAI,GAAGve,KAAK,EAAEye,GAAG,EAAEA,GAAG,GAAGxe,MAAM,EAAE0e,IAAI,EAAE,IAAI,CAACC,GAAG,CAAE;MAE9F,IAAI,CAAC1P,uBAAuB,CAACjc,IAAI,CAAE,IAAI,CAAC+b,gBAAgB,CAAE,CAAC7V,MAAM,EAAE;IAEpE;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAgP,iBAAA,CAAAvpD,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjCJ,IAAI,CAAC9iB,MAAM,CAACsiD,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1Bx/B,IAAI,CAAC9iB,MAAM,CAAC0iD,IAAI,GAAG,IAAI,CAACA,IAAI;MAE5B5/B,IAAI,CAAC9iB,MAAM,CAAC6gC,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B/d,IAAI,CAAC9iB,MAAM,CAAC8gC,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1Bhe,IAAI,CAAC9iB,MAAM,CAAC2iD,KAAK,GAAG,IAAI,CAACA,KAAK;MAE9B7/B,IAAI,CAAC9iB,MAAM,CAACuiD,MAAM,GAAG,IAAI,CAACA,MAAM;MAEhC,IAAK,IAAI,CAACK,IAAI,KAAK,IAAI,EAAG9/B,IAAI,CAAC9iB,MAAM,CAAC4iD,IAAI,GAAGjqD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAACy5B,IAAI,CAAE;MAE3E9/B,IAAI,CAAC9iB,MAAM,CAAC6iD,SAAS,GAAG,IAAI,CAACA,SAAS;MACtC//B,IAAI,CAAC9iB,MAAM,CAAC8iD,UAAU,GAAG,IAAI,CAACA,UAAU;MAExC,OAAOhgC,IAAI;IAEZ;EAAC;EAAA,OAAAq/B,iBAAA;AAAA,EAjO8BJ,MAAM;AAAAtpD,OAAA,CAAA0pD,iBAAA,GAAAA,iBAAA;AAqOtC,IAAMG,GAAG,GAAG,EAAE;EAAEC,MAAM,GAAG,CAAC;AAAC,IAErB0B,UAAU,0BAAAC,UAAA;EAAAngC,SAAA,CAAAkgC,UAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAlgC,YAAA,CAAAggC,UAAA;EAEf,SAAAA,WAAapjB,IAAI,EAAEC,GAAG,EAAEsjB,YAAY,EAAG;IAAA,IAAAC,OAAA;IAAA9iD,eAAA,OAAA0iD,UAAA;IAEtCI,OAAA,GAAAF,QAAA,CAAAlpD,IAAA;IAEAopD,OAAA,CAAKrpD,IAAI,GAAG,YAAY;IAExB,IAAKopD,YAAY,CAACE,uBAAuB,KAAK,IAAI,EAAG;MAEpD3wC,OAAO,CAACjX,KAAK,CAAE,wGAAwG,CAAE;MACzH,OAAA6nD,0BAAA,CAAAF,OAAA;IAED;IAEAA,OAAA,CAAKD,YAAY,GAAGA,YAAY;IAEhC,IAAMI,QAAQ,GAAG,IAAIrC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;IAChE0jB,QAAQ,CAACniB,MAAM,GAAGgiB,OAAA,CAAKhiB,MAAM;IAC7BmiB,QAAQ,CAACzmB,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAC5B8wC,QAAQ,CAACnrB,MAAM,CAAE,IAAIvJ,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IACzCu0B,OAAA,CAAKhvC,GAAG,CAAEmvC,QAAQ,CAAE;IAEpB,IAAMC,QAAQ,GAAG,IAAItC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;IAChE2jB,QAAQ,CAACpiB,MAAM,GAAGgiB,OAAA,CAAKhiB,MAAM;IAC7BoiB,QAAQ,CAAC1mB,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAC5B+wC,QAAQ,CAACprB,MAAM,CAAE,IAAIvJ,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IAC3Cu0B,OAAA,CAAKhvC,GAAG,CAAEovC,QAAQ,CAAE;IAEpB,IAAMC,QAAQ,GAAG,IAAIvC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;IAChE4jB,QAAQ,CAACriB,MAAM,GAAGgiB,OAAA,CAAKhiB,MAAM;IAC7BqiB,QAAQ,CAAC3mB,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAC1BgxC,QAAQ,CAACrrB,MAAM,CAAE,IAAIvJ,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IACzCu0B,OAAA,CAAKhvC,GAAG,CAAEqvC,QAAQ,CAAE;IAEpB,IAAMC,QAAQ,GAAG,IAAIxC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;IAChE6jB,QAAQ,CAACtiB,MAAM,GAAGgiB,OAAA,CAAKhiB,MAAM;IAC7BsiB,QAAQ,CAAC5mB,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;IAC5BixC,QAAQ,CAACtrB,MAAM,CAAE,IAAIvJ,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IAC3Cu0B,OAAA,CAAKhvC,GAAG,CAAEsvC,QAAQ,CAAE;IAEpB,IAAMC,QAAQ,GAAG,IAAIzC,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;IAChE8jB,QAAQ,CAACviB,MAAM,GAAGgiB,OAAA,CAAKhiB,MAAM;IAC7BuiB,QAAQ,CAAC7mB,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAC5BkxC,QAAQ,CAACvrB,MAAM,CAAE,IAAIvJ,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IACzCu0B,OAAA,CAAKhvC,GAAG,CAAEuvC,QAAQ,CAAE;IAEpB,IAAMC,QAAQ,GAAG,IAAI1C,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;IAChE+jB,QAAQ,CAACxiB,MAAM,GAAGgiB,OAAA,CAAKhiB,MAAM;IAC7BwiB,QAAQ,CAAC9mB,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAC5BmxC,QAAQ,CAACxrB,MAAM,CAAE,IAAIvJ,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CAAE;IAC3Cu0B,OAAA,CAAKhvC,GAAG,CAAEwvC,QAAQ,CAAE;IAAC,OAAAR,OAAA;EAEtB;EAACtiD,YAAA,CAAAkiD,UAAA;IAAAhrD,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAQm5B,QAAQ,EAAEC,KAAK,EAAG;MAEzB,IAAK,IAAI,CAACthB,MAAM,KAAK,IAAI,EAAG,IAAI,CAACqD,iBAAiB,EAAE;MAEpD,IAAMsd,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,IAAAY,cAAA,GAAAC,cAAA,CAAuE,IAAI,CAACxvB,QAAQ;QAA5E+uB,QAAQ,GAAAQ,cAAA;QAAEP,QAAQ,GAAAO,cAAA;QAAEN,QAAQ,GAAAM,cAAA;QAAEL,QAAQ,GAAAK,cAAA;QAAEJ,QAAQ,GAAAI,cAAA;QAAEH,QAAQ,GAAAG,cAAA;MAElE,IAAME,mBAAmB,GAAGJ,QAAQ,CAACK,eAAe,EAAE;MAEtD,IAAMC,kBAAkB,GAAGN,QAAQ,CAACO,WAAW;MAC/C,IAAMC,gBAAgB,GAAGR,QAAQ,CAACS,EAAE,CAAC3B,OAAO;MAE5CkB,QAAQ,CAACO,WAAW,GAAGl/C,aAAa;MACpC2+C,QAAQ,CAACS,EAAE,CAAC3B,OAAO,GAAG,KAAK;MAE3B,IAAMz+B,eAAe,GAAGi/B,YAAY,CAACv7B,OAAO,CAAC1D,eAAe;MAE5Di/B,YAAY,CAACv7B,OAAO,CAAC1D,eAAe,GAAG,KAAK;MAE5C2/B,QAAQ,CAACU,eAAe,CAAEpB,YAAY,EAAE,CAAC,CAAE;MAC3CU,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEP,QAAQ,CAAE;MAElCM,QAAQ,CAACU,eAAe,CAAEpB,YAAY,EAAE,CAAC,CAAE;MAC3CU,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEN,QAAQ,CAAE;MAElCK,QAAQ,CAACU,eAAe,CAAEpB,YAAY,EAAE,CAAC,CAAE;MAC3CU,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEL,QAAQ,CAAE;MAElCI,QAAQ,CAACU,eAAe,CAAEpB,YAAY,EAAE,CAAC,CAAE;MAC3CU,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEJ,QAAQ,CAAE;MAElCG,QAAQ,CAACU,eAAe,CAAEpB,YAAY,EAAE,CAAC,CAAE;MAC3CU,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEH,QAAQ,CAAE;MAElCR,YAAY,CAACv7B,OAAO,CAAC1D,eAAe,GAAGA,eAAe;MAEtD2/B,QAAQ,CAACU,eAAe,CAAEpB,YAAY,EAAE,CAAC,CAAE;MAC3CU,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEF,QAAQ,CAAE;MAElCC,QAAQ,CAACU,eAAe,CAAEN,mBAAmB,CAAE;MAE/CJ,QAAQ,CAACO,WAAW,GAAGD,kBAAkB;MACzCN,QAAQ,CAACS,EAAE,CAAC3B,OAAO,GAAG0B,gBAAgB;MAEtClB,YAAY,CAACv7B,OAAO,CAACnD,gBAAgB,GAAG,IAAI;IAE7C;EAAC;EAAA,OAAAu+B,UAAA;AAAA,EAtGuB7gB,QAAQ;AAAA3qC,OAAA,CAAAwrD,UAAA,GAAAA,UAAA;AAAA,IA0G3ByB,WAAW,0BAAAC,SAAA;EAAA5hC,SAAA,CAAA2hC,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA3hC,YAAA,CAAAyhC,WAAA;EAEhB,SAAAA,YAAatiC,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU,EAAEC,QAAQ,EAAG;IAAA,IAAAkhC,OAAA;IAAAtkD,eAAA,OAAAmkD,WAAA;IAEtGtiC,MAAM,GAAGA,MAAM,KAAK3lB,SAAS,GAAG2lB,MAAM,GAAG,EAAE;IAC3Ce,OAAO,GAAGA,OAAO,KAAK1mB,SAAS,GAAG0mB,OAAO,GAAGzd,qBAAqB;IAEjEm/C,OAAA,GAAAD,QAAA,CAAA3qD,IAAA,OAAOmoB,MAAM,EAAEe,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU,EAAEC,QAAQ;IAE9FkhC,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAKxgC,KAAK,GAAG,KAAK;IAAC,OAAAwgC,OAAA;EAEpB;EAAC9jD,YAAA,CAAA2jD,WAAA;IAAAzsD,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAa;MAEZ,OAAO,IAAI,CAACkN,KAAK;IAElB,CAAC;IAAAnO,GAAA,EAED,SAAAA,IAAYva,KAAK,EAAG;MAEnB,IAAI,CAAC0oB,KAAK,GAAG1oB,KAAK;IAEnB;EAAC;EAAA,OAAAusD,WAAA;AAAA,EAzBwB7hC,OAAO;AAAAprB,OAAA,CAAAitD,WAAA,GAAAA,WAAA;AAAA,IA6B3BK,qBAAqB,0BAAAC,mBAAA;EAAAjiC,SAAA,CAAAgiC,qBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAAhiC,YAAA,CAAA8hC,qBAAA;EAE1B,SAAAA,sBAAajmC,IAAI,EAAEwI,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAA49B,OAAA;IAAA3kD,eAAA,OAAAwkD,qBAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAhrD,IAAA,OAAO6kB,IAAI,EAAEA,IAAI,EAAEwI,OAAO;IAE1B49B,OAAA,CAAK5B,uBAAuB,GAAG,IAAI;IAEnC,IAAMziC,KAAK,GAAG;MAAEK,KAAK,EAAEpC,IAAI;MAAEqC,MAAM,EAAErC,IAAI;MAAE2I,KAAK,EAAE;IAAE,CAAC;IACrD,IAAMrF,MAAM,GAAG,CAAEvB,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAE;IAE3DqkC,OAAA,CAAKr9B,OAAO,GAAG,IAAI68B,WAAW,CAAEtiC,MAAM,EAAEkF,OAAO,CAACnE,OAAO,EAAEmE,OAAO,CAACjE,KAAK,EAAEiE,OAAO,CAAChE,KAAK,EAAEgE,OAAO,CAAC/D,SAAS,EAAE+D,OAAO,CAAC9D,SAAS,EAAE8D,OAAO,CAAC7D,MAAM,EAAE6D,OAAO,CAACttB,IAAI,EAAEstB,OAAO,CAAC5D,UAAU,EAAE4D,OAAO,CAAC3D,QAAQ,CAAE;;IAEjM;IACA;IACA;;IAEA;IACA;IACA;;IAEAuhC,OAAA,CAAKr9B,OAAO,CAACpD,qBAAqB,GAAG,IAAI;IAEzCygC,OAAA,CAAKr9B,OAAO,CAAC1D,eAAe,GAAGmD,OAAO,CAACnD,eAAe,KAAK1nB,SAAS,GAAG6qB,OAAO,CAACnD,eAAe,GAAG,KAAK;IACtG+gC,OAAA,CAAKr9B,OAAO,CAACrE,SAAS,GAAG8D,OAAO,CAAC9D,SAAS,KAAK/mB,SAAS,GAAG6qB,OAAO,CAAC9D,SAAS,GAAGjd,YAAY;IAAC,OAAA2+C,OAAA;EAE7F;EAACnkD,YAAA,CAAAgkD,qBAAA;IAAA9sD,GAAA;IAAAE,KAAA,EAED,SAAAgtD,2BAA4BrB,QAAQ,EAAEj8B,OAAO,EAAG;MAE/C,IAAI,CAACA,OAAO,CAAC7tB,IAAI,GAAG6tB,OAAO,CAAC7tB,IAAI;MAChC,IAAI,CAAC6tB,OAAO,CAAClE,QAAQ,GAAGkE,OAAO,CAAClE,QAAQ;MAExC,IAAI,CAACkE,OAAO,CAAC1D,eAAe,GAAG0D,OAAO,CAAC1D,eAAe;MACtD,IAAI,CAAC0D,OAAO,CAACrE,SAAS,GAAGqE,OAAO,CAACrE,SAAS;MAC1C,IAAI,CAACqE,OAAO,CAACtE,SAAS,GAAGsE,OAAO,CAACtE,SAAS;MAE1C,IAAM6hC,MAAM,GAAG;QAEdhG,QAAQ,EAAE;UACTiG,SAAS,EAAE;YAAEltD,KAAK,EAAE;UAAK;QAC1B,CAAC;QAED8nD,YAAY,EAAE,8YAkBb;QAEDC,cAAc,EAAE;MAkBjB,CAAC;MAED,IAAMhsB,QAAQ,GAAG,IAAIopB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE3C,IAAM7V,QAAQ,GAAG,IAAIiY,cAAc,CAAE;QAEpCphD,IAAI,EAAE,qBAAqB;QAE3B8gD,QAAQ,EAAEH,aAAa,CAAEmG,MAAM,CAAChG,QAAQ,CAAE;QAC1Ca,YAAY,EAAEmF,MAAM,CAACnF,YAAY;QACjCC,cAAc,EAAEkF,MAAM,CAAClF,cAAc;QACrClV,IAAI,EAAEloC,QAAQ;QACdioC,QAAQ,EAAE7nC;MAEX,CAAC,CAAE;MAEHukC,QAAQ,CAAC2X,QAAQ,CAACiG,SAAS,CAACltD,KAAK,GAAG0vB,OAAO;MAE3C,IAAMy9B,IAAI,GAAG,IAAIrJ,IAAI,CAAE/nB,QAAQ,EAAEuT,QAAQ,CAAE;MAE3C,IAAM8d,gBAAgB,GAAG19B,OAAO,CAACrE,SAAS;;MAE1C;MACA,IAAKqE,OAAO,CAACrE,SAAS,KAAK9c,wBAAwB,EAAGmhB,OAAO,CAACrE,SAAS,GAAGjd,YAAY;MAEtF,IAAMypB,MAAM,GAAG,IAAIizB,UAAU,CAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAE;MAC5CjzB,MAAM,CAACrF,MAAM,CAAEm5B,QAAQ,EAAEwB,IAAI,CAAE;MAE/Bz9B,OAAO,CAACrE,SAAS,GAAG+hC,gBAAgB;MAEpCD,IAAI,CAACpxB,QAAQ,CAAChP,OAAO,EAAE;MACvBogC,IAAI,CAAC7d,QAAQ,CAACviB,OAAO,EAAE;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAA4sC,MAAO+e,QAAQ,EAAE5mC,KAAK,EAAEuK,KAAK,EAAE+9B,OAAO,EAAG;MAExC,IAAMtB,mBAAmB,GAAGJ,QAAQ,CAACK,eAAe,EAAE;MAEtD,KAAM,IAAInmD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B8lD,QAAQ,CAACU,eAAe,CAAE,IAAI,EAAExmD,CAAC,CAAE;QAEnC8lD,QAAQ,CAAC/e,KAAK,CAAE7nB,KAAK,EAAEuK,KAAK,EAAE+9B,OAAO,CAAE;MAExC;MAEA1B,QAAQ,CAACU,eAAe,CAAEN,mBAAmB,CAAE;IAEhD;EAAC;EAAA,OAAAa,qBAAA;AAAA,EApIkC59B,iBAAiB;AAAA1vB,OAAA,CAAAstD,qBAAA,GAAAA,qBAAA;AAwIrD,IAAMU,QAAQ,GAAG,aAAc,IAAI32B,OAAO,EAAE;AAC5C,IAAM42B,QAAQ,GAAG,aAAc,IAAI52B,OAAO,EAAE;AAC5C,IAAM62B,aAAa,GAAG,aAAc,IAAIruC,OAAO,EAAE;AAAC,IAE5CsuC,KAAK;EAEV,SAAAA,MAAax0B,MAAM,GAAG,IAAItC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAEqG,QAAQ,GAAG,CAAC,EAAG;IAAA50B,eAAA,OAAAqlD,KAAA;IAE5D,IAAI,CAACC,OAAO,GAAG,IAAI;;IAEnB;;IAEA,IAAI,CAACz0B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC+D,QAAQ,GAAGA,QAAQ;EAEzB;EAACp0B,YAAA,CAAA6kD,KAAA;IAAA3tD,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK0e,MAAM,EAAE+D,QAAQ,EAAG;MAEvB,IAAI,CAAC/D,MAAM,CAACjd,IAAI,CAAEid,MAAM,CAAE;MAC1B,IAAI,CAAC+D,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAl9B,GAAA;IAAAE,KAAA,EAED,SAAA2tD,cAAe12C,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAEC,CAAC,EAAG;MAE3B,IAAI,CAAC4L,MAAM,CAAC1e,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAE;MAC1B,IAAI,CAAC4P,QAAQ,GAAG3P,CAAC;MAEjB,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA4tD,8BAA+B30B,MAAM,EAAEyC,KAAK,EAAG;MAE9C,IAAI,CAACzC,MAAM,CAACjd,IAAI,CAAEid,MAAM,CAAE;MAC1B,IAAI,CAAC+D,QAAQ,GAAG,CAAEtB,KAAK,CAACpe,GAAG,CAAE,IAAI,CAAC2b,MAAM,CAAE;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAAn5B,GAAA;IAAAE,KAAA,EAED,SAAAgxC,sBAAuBv3B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEhC,IAAMsf,MAAM,GAAGq0B,QAAQ,CAAC9wC,UAAU,CAAE7C,CAAC,EAAED,CAAC,CAAE,CAAC6D,KAAK,CAAEgwC,QAAQ,CAAC/wC,UAAU,CAAE/C,CAAC,EAAEC,CAAC,CAAE,CAAE,CAACsB,SAAS,EAAE;;MAE3F;;MAEA,IAAI,CAAC4yC,6BAA6B,CAAE30B,MAAM,EAAExf,CAAC,CAAE;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM+gB,KAAK,EAAG;MAEb,IAAI,CAAC9D,MAAM,CAACjd,IAAI,CAAE+gB,KAAK,CAAC9D,MAAM,CAAE;MAChC,IAAI,CAAC+D,QAAQ,GAAGD,KAAK,CAACC,QAAQ;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAAl9B,GAAA;IAAAE,KAAA,EAED,SAAAgb,UAAA,EAAY;MAEX;;MAEA,IAAM6yC,mBAAmB,GAAG,GAAG,GAAG,IAAI,CAAC50B,MAAM,CAACrzB,MAAM,EAAE;MACtD,IAAI,CAACqzB,MAAM,CAACvc,cAAc,CAAEmxC,mBAAmB,CAAE;MACjD,IAAI,CAAC7wB,QAAQ,IAAI6wB,mBAAmB;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAA/tD,GAAA;IAAAE,KAAA,EAED,SAAAqd,OAAA,EAAS;MAER,IAAI,CAAC2f,QAAQ,IAAI,CAAE,CAAC;MACpB,IAAI,CAAC/D,MAAM,CAAC5b,MAAM,EAAE;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAvd,GAAA;IAAAE,KAAA,EAED,SAAA89B,gBAAiBpC,KAAK,EAAG;MAExB,OAAO,IAAI,CAACzC,MAAM,CAAC3b,GAAG,CAAEoe,KAAK,CAAE,GAAG,IAAI,CAACsB,QAAQ;IAEhD;EAAC;IAAAl9B,GAAA;IAAAE,KAAA,EAED,SAAA8tD,iBAAkBlxB,MAAM,EAAG;MAE1B,OAAO,IAAI,CAACkB,eAAe,CAAElB,MAAM,CAAC5d,MAAM,CAAE,GAAG4d,MAAM,CAACvD,MAAM;IAE7D;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA+tD,aAAcryB,KAAK,EAAElzB,MAAM,EAAG;MAE7B,OAAOA,MAAM,CAACwT,IAAI,CAAE,IAAI,CAACid,MAAM,CAAE,CAACvc,cAAc,CAAE,CAAE,IAAI,CAACohB,eAAe,CAAEpC,KAAK,CAAE,CAAE,CAACxf,GAAG,CAAEwf,KAAK,CAAE;IAEjG;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAguD,cAAeC,IAAI,EAAEzlD,MAAM,EAAG;MAE7B,IAAMu3B,SAAS,GAAGkuB,IAAI,CAACzmC,KAAK,CAAE8lC,QAAQ,CAAE;MAExC,IAAM10B,WAAW,GAAG,IAAI,CAACK,MAAM,CAAC3b,GAAG,CAAEyiB,SAAS,CAAE;MAEhD,IAAKnH,WAAW,KAAK,CAAC,EAAG;QAExB;QACA,IAAK,IAAI,CAACkF,eAAe,CAAEmwB,IAAI,CAACxP,KAAK,CAAE,KAAK,CAAC,EAAG;UAE/C,OAAOj2C,MAAM,CAACwT,IAAI,CAAEiyC,IAAI,CAACxP,KAAK,CAAE;QAEjC;;QAEA;QACA,OAAO,IAAI;MAEZ;MAEA,IAAMhnC,CAAC,GAAG,EAAIw2C,IAAI,CAACxP,KAAK,CAACnhC,GAAG,CAAE,IAAI,CAAC2b,MAAM,CAAE,GAAG,IAAI,CAAC+D,QAAQ,CAAE,GAAGpE,WAAW;MAE3E,IAAKnhB,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAG;QAErB,OAAO,IAAI;MAEZ;MAEA,OAAOjP,MAAM,CAACwT,IAAI,CAAE+jB,SAAS,CAAE,CAACrjB,cAAc,CAAEjF,CAAC,CAAE,CAACyE,GAAG,CAAE+xC,IAAI,CAACxP,KAAK,CAAE;IAEtE;EAAC;IAAA3+C,GAAA;IAAAE,KAAA,EAED,SAAAkuD,eAAgBD,IAAI,EAAG;MAEtB;;MAEA,IAAME,SAAS,GAAG,IAAI,CAACrwB,eAAe,CAAEmwB,IAAI,CAACxP,KAAK,CAAE;MACpD,IAAM2P,OAAO,GAAG,IAAI,CAACtwB,eAAe,CAAEmwB,IAAI,CAACtJ,GAAG,CAAE;MAEhD,OAASwJ,SAAS,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,IAAQA,OAAO,GAAG,CAAC,IAAID,SAAS,GAAG,CAAG;IAE5E;EAAC;IAAAruD,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB,OAAOA,GAAG,CAACwB,eAAe,CAAE,IAAI,CAAE;IAEnC;EAAC;IAAAh9B,GAAA;IAAAE,KAAA,EAED,SAAA28B,iBAAkBC,MAAM,EAAG;MAE1B,OAAOA,MAAM,CAACE,eAAe,CAAE,IAAI,CAAE;IAEtC;EAAC;IAAAh9B,GAAA;IAAAE,KAAA,EAED,SAAAquD,cAAe7lD,MAAM,EAAG;MAEvB,OAAOA,MAAM,CAACwT,IAAI,CAAE,IAAI,CAACid,MAAM,CAAE,CAACvc,cAAc,CAAE,CAAE,IAAI,CAACsgB,QAAQ,CAAE;IAEpE;EAAC;IAAAl9B,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc/J,MAAM,EAAE4qC,oBAAoB,EAAG;MAE5C,IAAM1jB,YAAY,GAAG0jB,oBAAoB,IAAId,aAAa,CAAC9qC,eAAe,CAAEgB,MAAM,CAAE;MAEpF,IAAM6qC,cAAc,GAAG,IAAI,CAACF,aAAa,CAAEf,QAAQ,CAAE,CAAC7/B,YAAY,CAAE/J,MAAM,CAAE;MAE5E,IAAMuV,MAAM,GAAG,IAAI,CAACA,MAAM,CAACpc,YAAY,CAAE+tB,YAAY,CAAE,CAAC5vB,SAAS,EAAE;MAEnE,IAAI,CAACgiB,QAAQ,GAAG,CAAEuxB,cAAc,CAACjxC,GAAG,CAAE2b,MAAM,CAAE;MAE9C,OAAO,IAAI;IAEZ;EAAC;IAAAn5B,GAAA;IAAAE,KAAA,EAED,SAAAyjB,UAAWhF,MAAM,EAAG;MAEnB,IAAI,CAACue,QAAQ,IAAIve,MAAM,CAACnB,GAAG,CAAE,IAAI,CAAC2b,MAAM,CAAE;MAE1C,OAAO,IAAI;IAEZ;EAAC;IAAAn5B,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQwe,KAAK,EAAG;MAEf,OAAOA,KAAK,CAAC9D,MAAM,CAAC1a,MAAM,CAAE,IAAI,CAAC0a,MAAM,CAAE,IAAM8D,KAAK,CAACC,QAAQ,KAAK,IAAI,CAACA,QAAU;IAElF;EAAC;IAAAl9B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAAyxC,KAAA;AAAA;AAAAnuD,OAAA,CAAAmuD,KAAA,GAAAA,KAAA;AAIF,IAAMe,SAAS,GAAG,aAAc,IAAI1vB,MAAM,EAAE;AAC5C,IAAM2vB,SAAS,GAAG,aAAc,IAAI93B,OAAO,EAAE;AAAC,IAExC+3B,OAAO;EAEZ,SAAAA,QAAanwB,EAAE,GAAG,IAAIkvB,KAAK,EAAE,EAAEjvB,EAAE,GAAG,IAAIivB,KAAK,EAAE,EAAEhvB,EAAE,GAAG,IAAIgvB,KAAK,EAAE,EAAEpb,EAAE,GAAG,IAAIob,KAAK,EAAE,EAAEkB,EAAE,GAAG,IAAIlB,KAAK,EAAE,EAAEmB,EAAE,GAAG,IAAInB,KAAK,EAAE,EAAG;IAAArlD,eAAA,OAAAsmD,OAAA;IAEzH,IAAI,CAACG,MAAM,GAAG,CAAEtwB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE4T,EAAE,EAAEsc,EAAE,EAAEC,EAAE,CAAE;EAEzC;EAAChmD,YAAA,CAAA8lD,OAAA;IAAA5uD,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKgkB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE4T,EAAE,EAAEsc,EAAE,EAAEC,EAAE,EAAG;MAE7B,IAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1BA,MAAM,CAAE,CAAC,CAAE,CAAC7yC,IAAI,CAAEuiB,EAAE,CAAE;MACtBswB,MAAM,CAAE,CAAC,CAAE,CAAC7yC,IAAI,CAAEwiB,EAAE,CAAE;MACtBqwB,MAAM,CAAE,CAAC,CAAE,CAAC7yC,IAAI,CAAEyiB,EAAE,CAAE;MACtBowB,MAAM,CAAE,CAAC,CAAE,CAAC7yC,IAAI,CAAEq2B,EAAE,CAAE;MACtBwc,MAAM,CAAE,CAAC,CAAE,CAAC7yC,IAAI,CAAE2yC,EAAE,CAAE;MACtBE,MAAM,CAAE,CAAC,CAAE,CAAC7yC,IAAI,CAAE4yC,EAAE,CAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA9uD,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM8yC,OAAO,EAAG;MAEf,IAAMD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIhpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BgpD,MAAM,CAAEhpD,CAAC,CAAE,CAACmW,IAAI,CAAE8yC,OAAO,CAACD,MAAM,CAAEhpD,CAAC,CAAE,CAAE;MAExC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA+uD,wBAAyBh4C,CAAC,EAAG;MAE5B,IAAM83C,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM7uC,EAAE,GAAGjJ,CAAC,CAACgG,QAAQ;MACrB,IAAMiyC,GAAG,GAAGhvC,EAAE,CAAE,CAAC,CAAE;QAAEivC,GAAG,GAAGjvC,EAAE,CAAE,CAAC,CAAE;QAAEkvC,GAAG,GAAGlvC,EAAE,CAAE,CAAC,CAAE;QAAEmvC,GAAG,GAAGnvC,EAAE,CAAE,CAAC,CAAE;MAChE,IAAMovC,GAAG,GAAGpvC,EAAE,CAAE,CAAC,CAAE;QAAEqvC,GAAG,GAAGrvC,EAAE,CAAE,CAAC,CAAE;QAAEsvC,GAAG,GAAGtvC,EAAE,CAAE,CAAC,CAAE;QAAEuvC,GAAG,GAAGvvC,EAAE,CAAE,CAAC,CAAE;MAChE,IAAMwvC,GAAG,GAAGxvC,EAAE,CAAE,CAAC,CAAE;QAAEyvC,GAAG,GAAGzvC,EAAE,CAAE,CAAC,CAAE;QAAE0vC,IAAI,GAAG1vC,EAAE,CAAE,EAAE,CAAE;QAAE2vC,IAAI,GAAG3vC,EAAE,CAAE,EAAE,CAAE;MACpE,IAAM4vC,IAAI,GAAG5vC,EAAE,CAAE,EAAE,CAAE;QAAE6vC,IAAI,GAAG7vC,EAAE,CAAE,EAAE,CAAE;QAAE8vC,IAAI,GAAG9vC,EAAE,CAAE,EAAE,CAAE;QAAE+vC,IAAI,GAAG/vC,EAAE,CAAE,EAAE,CAAE;MAExE6uC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAI,CAAE,CAAC50C,SAAS,EAAE;MACtF6zC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGH,GAAG,EAAEO,GAAG,GAAGH,GAAG,EAAEO,IAAI,GAAGH,GAAG,EAAEO,IAAI,GAAGH,IAAI,CAAE,CAAC50C,SAAS,EAAE;MACtF6zC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAI,CAAE,CAAC70C,SAAS,EAAE;MACtF6zC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGF,GAAG,EAAEM,GAAG,GAAGF,GAAG,EAAEM,IAAI,GAAGF,GAAG,EAAEM,IAAI,GAAGF,IAAI,CAAE,CAAC70C,SAAS,EAAE;MACtF6zC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAI,CAAE,CAAC90C,SAAS,EAAE;MACvF6zC,MAAM,CAAE,CAAC,CAAE,CAAClB,aAAa,CAAEwB,GAAG,GAAGD,GAAG,EAAEK,GAAG,GAAGD,GAAG,EAAEK,IAAI,GAAGD,IAAI,EAAEK,IAAI,GAAGD,IAAI,CAAE,CAAC90C,SAAS,EAAE;MAEvF,OAAO,IAAI;IAEZ;EAAC;IAAAlb,GAAA;IAAAE,KAAA,EAED,SAAAgwD,iBAAkBnpD,MAAM,EAAG;MAE1B,IAAMk1B,QAAQ,GAAGl1B,MAAM,CAACk1B,QAAQ;MAEhC,IAAKA,QAAQ,CAACwiB,cAAc,KAAK,IAAI,EAAGxiB,QAAQ,CAACsjB,qBAAqB,EAAE;MAExEmP,SAAS,CAACxyC,IAAI,CAAE+f,QAAQ,CAACwiB,cAAc,CAAE,CAAC9wB,YAAY,CAAE5mB,MAAM,CAACqxB,WAAW,CAAE;MAE5E,OAAO,IAAI,CAACyE,gBAAgB,CAAE6xB,SAAS,CAAE;IAE1C;EAAC;IAAA1uD,GAAA;IAAAE,KAAA,EAED,SAAAiwD,iBAAkBC,MAAM,EAAG;MAE1B1B,SAAS,CAACxvC,MAAM,CAACzE,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC/Bi0C,SAAS,CAACn1B,MAAM,GAAG,kBAAkB;MACrCm1B,SAAS,CAAC/gC,YAAY,CAAEyiC,MAAM,CAACh4B,WAAW,CAAE;MAE5C,OAAO,IAAI,CAACyE,gBAAgB,CAAE6xB,SAAS,CAAE;IAE1C;EAAC;IAAA1uD,GAAA;IAAAE,KAAA,EAED,SAAA28B,iBAAkBC,MAAM,EAAG;MAE1B,IAAMiyB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM7vC,MAAM,GAAG4d,MAAM,CAAC5d,MAAM;MAC5B,IAAMmxC,SAAS,GAAG,CAAEvzB,MAAM,CAACvD,MAAM;MAEjC,KAAM,IAAIxzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAMomC,QAAQ,GAAG4iB,MAAM,CAAEhpD,CAAC,CAAE,CAACi4B,eAAe,CAAE9e,MAAM,CAAE;QAEtD,IAAKitB,QAAQ,GAAGkkB,SAAS,EAAG;UAE3B,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAArwD,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB,IAAMuzB,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIhpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAMk3B,KAAK,GAAG8xB,MAAM,CAAEhpD,CAAC,CAAE;;QAEzB;;QAEA4oD,SAAS,CAACx3C,CAAC,GAAG8lB,KAAK,CAAC9D,MAAM,CAAChiB,CAAC,GAAG,CAAC,GAAGqkB,GAAG,CAAC1kB,GAAG,CAACK,CAAC,GAAGqkB,GAAG,CAAC3kB,GAAG,CAACM,CAAC;QACxDw3C,SAAS,CAACl3C,CAAC,GAAGwlB,KAAK,CAAC9D,MAAM,CAAC1hB,CAAC,GAAG,CAAC,GAAG+jB,GAAG,CAAC1kB,GAAG,CAACW,CAAC,GAAG+jB,GAAG,CAAC3kB,GAAG,CAACY,CAAC;QACxDk3C,SAAS,CAACrhC,CAAC,GAAG2P,KAAK,CAAC9D,MAAM,CAAC7L,CAAC,GAAG,CAAC,GAAGkO,GAAG,CAAC1kB,GAAG,CAACwW,CAAC,GAAGkO,GAAG,CAAC3kB,GAAG,CAACyW,CAAC;QAExD,IAAK2P,KAAK,CAACe,eAAe,CAAE2wB,SAAS,CAAE,GAAG,CAAC,EAAG;UAE7C,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3uD,GAAA;IAAAE,KAAA,EAED,SAAAu8B,cAAeb,KAAK,EAAG;MAEtB,IAAMmzB,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIhpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAKgpD,MAAM,CAAEhpD,CAAC,CAAE,CAACi4B,eAAe,CAAEpC,KAAK,CAAE,GAAG,CAAC,EAAG;UAE/C,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAA0yC,OAAA;AAAA;AAAApvD,OAAA,CAAAovD,OAAA,GAAAA,OAAA;AAIF,SAAS0B,cAAcA,CAAA,EAAG;EAEzB,IAAI7uD,OAAO,GAAG,IAAI;EAClB,IAAI8uD,WAAW,GAAG,KAAK;EACvB,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIC,SAAS,GAAG,IAAI;EAEpB,SAASC,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;IAExCJ,aAAa,CAAEG,IAAI,EAAEC,KAAK,CAAE;IAE5BH,SAAS,GAAGhvD,OAAO,CAACovD,qBAAqB,CAAEH,gBAAgB,CAAE;EAE9D;EAEA,OAAO;IAEN/R,KAAK,EAAE,SAAAA,MAAA,EAAY;MAElB,IAAK4R,WAAW,KAAK,IAAI,EAAG;MAC5B,IAAKC,aAAa,KAAK,IAAI,EAAG;MAE9BC,SAAS,GAAGhvD,OAAO,CAACovD,qBAAqB,CAAEH,gBAAgB,CAAE;MAE7DH,WAAW,GAAG,IAAI;IAEnB,CAAC;IAEDjpD,IAAI,EAAE,SAAAA,KAAA,EAAY;MAEjB7F,OAAO,CAACqvD,oBAAoB,CAAEL,SAAS,CAAE;MAEzCF,WAAW,GAAG,KAAK;IAEpB,CAAC;IAEDQ,gBAAgB,EAAE,SAAAA,iBAAWx7B,QAAQ,EAAG;MAEvCi7B,aAAa,GAAGj7B,QAAQ;IAEzB,CAAC;IAEDy7B,UAAU,EAAE,SAAAA,WAAW9wD,KAAK,EAAG;MAE9BuB,OAAO,GAAGvB,KAAK;IAEhB;EAED,CAAC;AAEF;AAEA,SAAS+wD,eAAeA,CAAEC,EAAE,EAAEC,YAAY,EAAG;EAE5C,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAMC,OAAO,GAAG,IAAIC,OAAO,EAAE;EAE7B,SAASC,YAAYA,CAAEzyC,SAAS,EAAE0yC,UAAU,EAAG;IAE9C,IAAM57C,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;IAC7B,IAAM4kC,KAAK,GAAG17B,SAAS,CAAC07B,KAAK;IAE7B,IAAMp2B,MAAM,GAAG8sC,EAAE,CAACK,YAAY,EAAE;IAEhCL,EAAE,CAACO,UAAU,CAAED,UAAU,EAAEptC,MAAM,CAAE;IACnC8sC,EAAE,CAACQ,UAAU,CAAEF,UAAU,EAAE57C,KAAK,EAAE4kC,KAAK,CAAE;IAEzC17B,SAAS,CAAC47B,gBAAgB,EAAE;IAE5B,IAAI34C,IAAI;IAER,IAAK6T,KAAK,YAAYiF,YAAY,EAAG;MAEpC9Y,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM,IAAK6T,KAAK,YAAYkF,WAAW,EAAG;MAE1C,IAAKgE,SAAS,CAACq+B,wBAAwB,EAAG;QAEzC,IAAKiU,QAAQ,EAAG;UAEfrvD,IAAI,GAAG,IAAI;QAEZ,CAAC,MAAM;UAEN,MAAM,IAAI8B,KAAK,CAAE,yEAAyE,CAAE;QAE7F;MAED,CAAC,MAAM;QAEN9B,IAAI,GAAG,IAAI;MAEZ;IAED,CAAC,MAAM,IAAK6T,KAAK,YAAYoF,UAAU,EAAG;MAEzCjZ,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM,IAAK6T,KAAK,YAAYqO,WAAW,EAAG;MAE1CliB,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM,IAAK6T,KAAK,YAAYoO,UAAU,EAAG;MAEzCjiB,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM,IAAK6T,KAAK,YAAYqF,SAAS,EAAG;MAExClZ,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM,IAAK6T,KAAK,YAAYmF,UAAU,EAAG;MAEzChZ,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM,IAAK6T,KAAK,YAAYmO,iBAAiB,EAAG;MAEhDhiB,IAAI,GAAG,IAAI;IAEZ,CAAC,MAAM;MAEN,MAAM,IAAI8B,KAAK,CAAE,yDAAyD,GAAG+R,KAAK,CAAE;IAErF;IAEA,OAAO;MACNwO,MAAM,EAAEA,MAAM;MACdriB,IAAI,EAAEA,IAAI;MACV4vD,eAAe,EAAE/7C,KAAK,CAACg8C,iBAAiB;MACxC5nC,OAAO,EAAElL,SAAS,CAACkL;IACpB,CAAC;EAEF;EAEA,SAAS6nC,YAAYA,CAAEztC,MAAM,EAAEtF,SAAS,EAAE0yC,UAAU,EAAG;IAEtD,IAAM57C,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;IAC7B,IAAM6kC,WAAW,GAAG37B,SAAS,CAAC27B,WAAW;IAEzCyW,EAAE,CAACO,UAAU,CAAED,UAAU,EAAEptC,MAAM,CAAE;IAEnC,IAAKq2B,WAAW,CAAC9oB,KAAK,KAAK,CAAE,CAAC,EAAG;MAEhC;;MAEAu/B,EAAE,CAACY,aAAa,CAAEN,UAAU,EAAE,CAAC,EAAE57C,KAAK,CAAE;IAEzC,CAAC,MAAM;MAEN,IAAKw7C,QAAQ,EAAG;QAEfF,EAAE,CAACY,aAAa,CAAEN,UAAU,EAAE/W,WAAW,CAAC97B,MAAM,GAAG/I,KAAK,CAACg8C,iBAAiB,EACzEh8C,KAAK,EAAE6kC,WAAW,CAAC97B,MAAM,EAAE87B,WAAW,CAAC9oB,KAAK,CAAE;MAEhD,CAAC,MAAM;QAENu/B,EAAE,CAACY,aAAa,CAAEN,UAAU,EAAE/W,WAAW,CAAC97B,MAAM,GAAG/I,KAAK,CAACg8C,iBAAiB,EACzEh8C,KAAK,CAACm8C,QAAQ,CAAEtX,WAAW,CAAC97B,MAAM,EAAE87B,WAAW,CAAC97B,MAAM,GAAG87B,WAAW,CAAC9oB,KAAK,CAAE,CAAE;MAEhF;MAEA8oB,WAAW,CAAC9oB,KAAK,GAAG,CAAE,CAAC,CAAC,CAAC;IAE1B;EAED;;EAEA;;EAEA,SAASjW,GAAGA,CAAEoD,SAAS,EAAG;IAEzB,IAAKA,SAAS,CAAC0jC,4BAA4B,EAAG1jC,SAAS,GAAGA,SAAS,CAAC+K,IAAI;IAExE,OAAOwnC,OAAO,CAAC31C,GAAG,CAAEoD,SAAS,CAAE;EAEhC;EAEA,SAAS8tB,MAAMA,CAAE9tB,SAAS,EAAG;IAE5B,IAAKA,SAAS,CAAC0jC,4BAA4B,EAAG1jC,SAAS,GAAGA,SAAS,CAAC+K,IAAI;IAExE,IAAMA,IAAI,GAAGwnC,OAAO,CAAC31C,GAAG,CAAEoD,SAAS,CAAE;IAErC,IAAK+K,IAAI,EAAG;MAEXqnC,EAAE,CAACc,YAAY,CAAEnoC,IAAI,CAACzF,MAAM,CAAE;MAE9BitC,OAAO,CAACY,MAAM,CAAEnzC,SAAS,CAAE;IAE5B;EAED;EAEA,SAAS4T,MAAMA,CAAE5T,SAAS,EAAE0yC,UAAU,EAAG;IAExC,IAAK1yC,SAAS,CAAC2gC,mBAAmB,EAAG;MAEpC,IAAMyS,MAAM,GAAGb,OAAO,CAAC31C,GAAG,CAAEoD,SAAS,CAAE;MAEvC,IAAK,CAAEozC,MAAM,IAAIA,MAAM,CAACloC,OAAO,GAAGlL,SAAS,CAACkL,OAAO,EAAG;QAErDqnC,OAAO,CAAC52C,GAAG,CAAEqE,SAAS,EAAE;UACvBsF,MAAM,EAAEtF,SAAS,CAACsF,MAAM;UACxBriB,IAAI,EAAE+c,SAAS,CAAC/c,IAAI;UACpB4vD,eAAe,EAAE7yC,SAAS,CAACqzC,WAAW;UACtCnoC,OAAO,EAAElL,SAAS,CAACkL;QACpB,CAAC,CAAE;MAEJ;MAEA;IAED;IAEA,IAAKlL,SAAS,CAAC0jC,4BAA4B,EAAG1jC,SAAS,GAAGA,SAAS,CAAC+K,IAAI;IAExE,IAAMA,IAAI,GAAGwnC,OAAO,CAAC31C,GAAG,CAAEoD,SAAS,CAAE;IAErC,IAAK+K,IAAI,KAAKrlB,SAAS,EAAG;MAEzB6sD,OAAO,CAAC52C,GAAG,CAAEqE,SAAS,EAAEyyC,YAAY,CAAEzyC,SAAS,EAAE0yC,UAAU,CAAE,CAAE;IAEhE,CAAC,MAAM,IAAK3nC,IAAI,CAACG,OAAO,GAAGlL,SAAS,CAACkL,OAAO,EAAG;MAE9C6nC,YAAY,CAAEhoC,IAAI,CAACzF,MAAM,EAAEtF,SAAS,EAAE0yC,UAAU,CAAE;MAElD3nC,IAAI,CAACG,OAAO,GAAGlL,SAAS,CAACkL,OAAO;IAEjC;EAED;EAEA,OAAO;IAENtO,GAAG,EAAEA,GAAG;IACRkxB,MAAM,EAAEA,MAAM;IACdla,MAAM,EAAEA;EAET,CAAC;AAEF;AAAC,IAEK0/B,aAAa,0BAAAC,gBAAA;EAAAvnC,SAAA,CAAAsnC,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAtnC,YAAA,CAAAonC,aAAA;EAElB,SAAAA,cAAanpC,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEs8B,aAAa,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;IAAA,IAAA8M,OAAA;IAAAjqD,eAAA,OAAA8pD,aAAA;IAE3EG,OAAA,GAAAD,QAAA,CAAAtwD,IAAA;IAEAuwD,OAAA,CAAKxwD,IAAI,GAAG,eAAe;IAE3BwwD,OAAA,CAAKrjB,UAAU,GAAG;MACjBjmB,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACds8B,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA;IACjB,CAAC;IAED,IAAM+M,UAAU,GAAGvpC,KAAK,GAAG,CAAC;IAC5B,IAAMwpC,WAAW,GAAGvpC,MAAM,GAAG,CAAC;IAE9B,IAAMi9B,KAAK,GAAGlwC,IAAI,CAACsC,KAAK,CAAEitC,aAAa,CAAE;IACzC,IAAMY,KAAK,GAAGnwC,IAAI,CAACsC,KAAK,CAAEktC,cAAc,CAAE;IAE1C,IAAMiB,MAAM,GAAGP,KAAK,GAAG,CAAC;IACxB,IAAMQ,MAAM,GAAGP,KAAK,GAAG,CAAC;IAExB,IAAMsM,aAAa,GAAGzpC,KAAK,GAAGk9B,KAAK;IACnC,IAAMwM,cAAc,GAAGzpC,MAAM,GAAGk9B,KAAK;;IAErC;;IAEA,IAAMvG,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IAEd,KAAM,IAAIroB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGgvB,MAAM,EAAEhvB,EAAE,EAAG,EAAG;MAEtC,IAAMlgB,CAAC,GAAGkgB,EAAE,GAAGg7B,cAAc,GAAGF,WAAW;MAE3C,KAAM,IAAI/6B,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGgvB,MAAM,EAAEhvB,EAAE,EAAG,EAAG;QAEtC,IAAMvgB,CAAC,GAAGugB,EAAE,GAAGg7B,aAAa,GAAGF,UAAU;QAEzC3M,QAAQ,CAACtgD,IAAI,CAAE4R,CAAC,EAAE,CAAEM,CAAC,EAAE,CAAC,CAAE;QAE1BsoC,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEvBy6C,GAAG,CAACz6C,IAAI,CAAEmyB,EAAE,GAAGyuB,KAAK,CAAE;QACtBnG,GAAG,CAACz6C,IAAI,CAAE,CAAC,GAAKoyB,EAAE,GAAGyuB,KAAO,CAAE;MAE/B;IAED;IAEA,KAAM,IAAIzuB,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGyuB,KAAK,EAAEzuB,IAAE,EAAG,EAAG;MAErC,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAGyuB,KAAK,EAAEzuB,IAAE,EAAG,EAAG;QAErC,IAAM/d,CAAC,GAAG+d,IAAE,GAAGgvB,MAAM,GAAG/uB,IAAE;QAC1B,IAAM/d,CAAC,GAAG8d,IAAE,GAAGgvB,MAAM,IAAK/uB,IAAE,GAAG,CAAC,CAAE;QAClC,IAAM9d,CAAC,GAAK6d,IAAE,GAAG,CAAC,GAAKgvB,MAAM,IAAK/uB,IAAE,GAAG,CAAC,CAAE;QAC1C,IAAM3V,CAAC,GAAK0V,IAAE,GAAG,CAAC,GAAKgvB,MAAM,GAAG/uB,IAAE;QAElCkoB,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;QACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;MAExB;IAED;IAEAuwC,OAAA,CAAK1T,QAAQ,CAAEgB,OAAO,CAAE;IACxB0S,OAAA,CAAKxT,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1E0M,OAAA,CAAKxT,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvEwS,OAAA,CAAKxT,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAAC,OAAAuS,OAAA;EAEjE;EAACzpD,YAAA,CAAAspD,aAAA;IAAApyD,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIuoC,aAAa,CAAEvoC,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAAC27B,aAAa,EAAE37B,IAAI,CAAC47B,cAAc,CAAE;IAE7F;EAAC;EAAA,OAAA2M,aAAA;AAAA,EAhF0BnU,cAAc;AAAAz+C,OAAA,CAAA4yD,aAAA,GAAA5yD,OAAA,CAAAozD,mBAAA,GAAAR,aAAA;AAoF1C,IAAIS,iBAAiB,GAAG,gFAAgF;AAExG,IAAIC,sBAAsB,GAAG,4DAA4D;AAEzF,IAAIC,kBAAkB,GAAG,4EAA4E;AAErG,IAAIC,uBAAuB,GAAG,0DAA0D;AAExF,IAAIC,cAAc,GAAG,kaAAka;AAEvb,IAAIC,mBAAmB,GAAG,uFAAuF;AAEjH,IAAIC,YAAY,GAAG,sCAAsC;AAEzD,IAAIC,kBAAkB,GAAG,8GAA8G;AAEvI,IAAIC,KAAK,GAAG,+yMAA+yM;AAE3zM,IAAIC,oBAAoB,GAAG,u2FAAu2F;AAEl4F,IAAIC,qBAAqB,GAAG,m2BAAm2B;AAE/3B,IAAIC,wBAAwB,GAAG,4nBAA4nB;AAE3pB,IAAIC,6BAA6B,GAAG,2HAA2H;AAE/J,IAAIC,2BAA2B,GAAG,oEAAoE;AAEtG,IAAIC,sBAAsB,GAAG,0EAA0E;AAEvG,IAAIC,cAAc,GAAG,8HAA8H;AAEnJ,IAAIC,mBAAmB,GAAG,oHAAoH;AAE9I,IAAIC,iBAAiB,GAAG,uJAAuJ;AAE/K,IAAIC,YAAY,GAAG,gRAAgR;AAEnS,IAAIC,MAAM,GAAG,kzEAAkzE;AAE/zE,IAAIC,2BAA2B,GAAG,s2GAAs2G;AAEx4G,IAAIC,oBAAoB,GAAG,0jBAA0jB;AAErlB,IAAIC,2BAA2B,GAAG,iJAAiJ;AAEnL,IAAIC,sBAAsB,GAAG,kKAAkK;AAE/L,IAAIC,oBAAoB,GAAG,sIAAsI;AAEjK,IAAIC,yBAAyB,GAAG,kEAAkE;AAElG,IAAIC,kBAAkB,GAAG,qDAAqD;AAE9E,IAAIC,uBAAuB,GAAG,4QAA4Q;AAE1S,IAAIC,eAAe,GAAG,qxCAAqxC;AAE3yC,IAAIC,2BAA2B,GAAG,4MAA4M;AAE9O,IAAIC,oBAAoB,GAAG,wTAAwT;AAEnV,IAAIC,kBAAkB,GAAG,8RAA8R;AAEvT,IAAIC,aAAa,GAAG,2oBAA2oB;AAE/pB,IAAIC,UAAU,GAAG,uDAAuD;AAExE,IAAIC,eAAe,GAAG,oDAAoD;AAE1E,IAAIC,YAAY,GAAG,0RAA0R;AAE7S,IAAIC,iBAAiB,GAAG,0MAA0M;AAElO,IAAIC,yBAAyB,GAAG,sYAAsY;AAEta,IAAIC,iBAAiB,GAAG,+MAA+M;AAEvO,IAAIC,sBAAsB,GAAG,gGAAgG;AAE7H,IAAIC,qBAAqB,GAAG,mvFAAmvF;AAE/wF,IAAIC,iBAAiB,GAAG,gwJAAgwJ;AAExxJ,IAAIC,6BAA6B,GAAG,y4BAAy4B;AAE76B,IAAIC,oBAAoB,GAAG,mEAAmE;AAE9F,IAAIC,yBAAyB,GAAG,00BAA00B;AAE12B,IAAIC,qBAAqB,GAAG,qMAAqM;AAEjO,IAAIC,0BAA0B,GAAG,kqCAAkqC;AAEnsC,IAAIC,wBAAwB,GAAG,0wFAA0wF;AAEzyF,IAAIC,6BAA6B,GAAG,k0PAAk0P;AAEt2P,IAAIC,qBAAqB,GAAG,k3IAAk3I;AAE94I,IAAIC,oBAAoB,GAAG,+rBAA+rB;AAE1tB,IAAIC,mBAAmB,GAAG,0QAA0Q;AAEpS,IAAIC,oBAAoB,GAAG,kLAAkL;AAE7M,IAAIC,yBAAyB,GAAG,wKAAwK;AAExM,IAAIC,uBAAuB,GAAG,qLAAqL;AAEnN,IAAIC,kBAAkB,GAAG,8XAA8X;AAEvZ,IAAIC,YAAY,GAAG,6ZAA6Z;AAEhb,IAAIC,iBAAiB,GAAG,kDAAkD;AAE1E,IAAIC,qBAAqB,GAAG,gSAAgS;AAE5T,IAAIC,0BAA0B,GAAG,sMAAsM;AAEvO,IAAIC,qBAAqB,GAAG,sKAAsK;AAElM,IAAIC,0BAA0B,GAAG,oEAAoE;AAErG,IAAIC,iBAAiB,GAAG,4eAA4e;AAEpgB,IAAIC,kBAAkB,GAAG,8jBAA8jB;AAEvlB,IAAIC,uBAAuB,GAAG,i1BAAi1B;AAE/2B,IAAIC,kBAAkB,GAAG,s2BAAs2B;AAE/3B,IAAIC,qBAAqB,GAAG,m2BAAm2B;AAE/3B,IAAIC,oBAAoB,GAAG,kqBAAkqB;AAE7rB,IAAIC,oBAAoB,GAAG,gJAAgJ;AAE3K,IAAIC,kBAAkB,GAAG,gJAAgJ;AAEzK,IAAIC,aAAa,GAAG,kOAAkO;AAEtP,IAAIC,uBAAuB,GAAG,o5BAAo5B;AAEl7B,IAAIC,+BAA+B,GAAG,wEAAwE;AAE9G,IAAIC,8BAA8B,GAAG,kXAAkX;AAEvZ,IAAIC,uBAAuB,GAAG,kRAAkR;AAEhT,IAAIC,yBAAyB,GAAG,mKAAmK;AAEnM,IAAIC,eAAe,GAAG,kLAAkL;AAExM,IAAIC,OAAO,GAAG,2jDAA2jD;AAEzkD,IAAIC,4BAA4B,GAAG,2EAA2E;AAE9G,IAAIC,cAAc,GAAG,mNAAmN;AAExO,IAAIC,kBAAkB,GAAG,+EAA+E;AAExG,IAAIC,uBAAuB,GAAG,0UAA0U;AAExW,IAAIC,qBAAqB,GAAG,sKAAsK;AAElM,IAAIC,0BAA0B,GAAG,oEAAoE;AAErG,IAAIC,uBAAuB,GAAG,06RAA06R;AAEx8R,IAAIC,qBAAqB,GAAG,kxCAAkxC;AAE9yC,IAAIC,gBAAgB,GAAG,izCAAizC;AAEx0C,IAAIC,wBAAwB,GAAG,i5CAAi5C;AAEh7C,IAAIC,eAAe,GAAG,iOAAiO;AAEvP,IAAIC,oBAAoB,GAAG,oyBAAoyB;AAE/zB,IAAIC,eAAe,GAAG,8XAA8X;AAEpZ,IAAIC,iBAAiB,GAAG,odAAod;AAE5e,IAAIC,oBAAoB,GAAG,yLAAyL;AAEpN,IAAIC,yBAAyB,GAAG,kEAAkE;AAElG,IAAIC,oBAAoB,GAAG,4FAA4F;AAEvH,IAAIC,yBAAyB,GAAG,myCAAmyC;AAEn0C,IAAIC,qBAAqB,GAAG,i5BAAi5B;AAE76B,IAAIC,0BAA0B,GAAG,smGAAsmG;AAEvoG,IAAIC,gBAAgB,GAAG,wFAAwF;AAE/G,IAAIC,cAAc,GAAG,uIAAuI;AAE5J,IAAIC,SAAS,GAAG,oEAAoE;AAEpF,IAAIC,iBAAiB,GAAG,mFAAmF;AAE3G,IAAIC,eAAe,GAAG,wIAAwI;AAE9J,IAAIC,UAAU,GAAG,6GAA6G;AAE9H,IAAIC,eAAe,GAAG,iTAAiT;AAEvU,IAAMC,QAAQ,GAAG,6JAA6J;AAE9K,IAAMC,UAAU,GAAG,+aAA+a;AAElc,IAAMC,QAAQ,GAAG,gOAAgO;AAEjP,IAAMC,UAAU,GAAG,yVAAyV;AAE5W,IAAMC,QAAQ,GAAG,uuBAAuuB;AAExvB,IAAMC,UAAU,GAAG,63BAA63B;AAEh5B,IAAMC,QAAQ,GAAG,itBAAitB;AAEluB,IAAMC,UAAU,GAAG,guBAAguB;AAEnvB,IAAMC,QAAQ,GAAG,8LAA8L;AAE/M,IAAMC,UAAU,GAAG,wTAAwT;AAE3U,IAAMC,QAAQ,GAAG,8jBAA8jB;AAE/kB,IAAMC,UAAU,GAAG,uwBAAuwB;AAE1xB,IAAMC,QAAQ,GAAG,m7BAAm7B;AAEp8B,IAAMC,UAAU,GAAG,4pDAA4pD;AAE/qD,IAAMC,QAAQ,GAAG,4pCAA4pC;AAE7qC,IAAMC,UAAU,GAAG,q0EAAq0E;AAEx1E,IAAMC,QAAQ,GAAG,i7BAAi7B;AAEl8B,IAAMC,UAAU,GAAG,w+CAAw+C;AAE3/C,IAAMC,QAAQ,GAAG,2+BAA2+B;AAE5/B,IAAMC,UAAU,GAAG,yqBAAyqB;AAE5rB,IAAMC,QAAQ,GAAG,+nCAA+nC;AAEhpC,IAAMC,UAAU,GAAG,2kEAA2kE;AAE9lE,IAAMC,QAAQ,GAAG,gtCAAgtC;AAEjuC,IAAMC,UAAU,GAAG,82HAA82H;AAEj4H,IAAMC,QAAQ,GAAG,mkCAAmkC;AAEplC,IAAMC,UAAU,GAAG,kyDAAkyD;AAErzD,IAAMC,QAAQ,GAAG,otBAAotB;AAEruB,IAAMC,UAAU,GAAG,4vBAA4vB;AAE/wB,IAAMC,QAAQ,GAAG,whBAAwhB;AAEziB,IAAMC,UAAU,GAAG,kaAAka;AAErb,IAAMC,QAAQ,GAAG,qnCAAqnC;AAEtoC,IAAMC,UAAU,GAAG,kuBAAkuB;AAErvB,IAAMC,WAAW,GAAG;EACnBzI,iBAAiB,EAAEA,iBAAiB;EACpCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,YAAY,EAAEA,YAAY;EAC1BC,kBAAkB,EAAEA,kBAAkB;EACtCC,KAAK,EAAEA,KAAK;EACZC,oBAAoB,EAAEA,oBAAoB;EAC1CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,wBAAwB,EAAEA,wBAAwB;EAClDC,6BAA6B,EAAEA,6BAA6B;EAC5DC,2BAA2B,EAAEA,2BAA2B;EACxDC,sBAAsB,EAAEA,sBAAsB;EAC9CC,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,iBAAiB,EAAEA,iBAAiB;EACpCC,YAAY,EAAEA,YAAY;EAC1BC,MAAM,EAAEA,MAAM;EACdC,2BAA2B,EAAEA,2BAA2B;EACxDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,2BAA2B,EAAEA,2BAA2B;EACxDC,sBAAsB,EAAEA,sBAAsB;EAC9CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,eAAe,EAAEA,eAAe;EAChCC,2BAA2B,EAAEA,2BAA2B;EACxDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,kBAAkB,EAAEA,kBAAkB;EACtCW,6BAA6B,EAAEA,6BAA6B;EAC5DV,aAAa,EAAEA,aAAa;EAC5BC,UAAU,EAAEA,UAAU;EACtBC,eAAe,EAAEA,eAAe;EAChCC,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCC,yBAAyB,EAAEA,yBAAyB;EACpDC,iBAAiB,EAAEA,iBAAiB;EACpCC,sBAAsB,EAAEA,sBAAsB;EAC9CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,iBAAiB,EAAEA,iBAAiB;EACpCE,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,wBAAwB,EAAEA,wBAAwB;EAClDC,6BAA6B,EAAEA,6BAA6B;EAC5DC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,mBAAmB,EAAEA,mBAAmB;EACxCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,uBAAuB,EAAEA,uBAAuB;EAChDC,kBAAkB,EAAEA,kBAAkB;EACtCC,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,iBAAiB,EAAEA,iBAAiB;EACpCC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,kBAAkB,EAAEA,kBAAkB;EACtCC,qBAAqB,EAAEA,qBAAqB;EAC5CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,oBAAoB,EAAEA,oBAAoB;EAC1CC,kBAAkB,EAAEA,kBAAkB;EACtCC,aAAa,EAAEA,aAAa;EAC5BC,uBAAuB,EAAEA,uBAAuB;EAChDC,+BAA+B,EAAEA,+BAA+B;EAChEC,8BAA8B,EAAEA,8BAA8B;EAC9DC,uBAAuB,EAAEA,uBAAuB;EAChDC,yBAAyB,EAAEA,yBAAyB;EACpDC,eAAe,EAAEA,eAAe;EAChCC,OAAO,EAAEA,OAAO;EAChBC,4BAA4B,EAAEA,4BAA4B;EAC1DC,cAAc,EAAEA,cAAc;EAC9BC,kBAAkB,EAAEA,kBAAkB;EACtCC,uBAAuB,EAAEA,uBAAuB;EAChDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,uBAAuB,EAAEA,uBAAuB;EAChDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,gBAAgB,EAAEA,gBAAgB;EAClCC,wBAAwB,EAAEA,wBAAwB;EAClDC,eAAe,EAAEA,eAAe;EAChCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,eAAe,EAAEA,eAAe;EAChCC,iBAAiB,EAAEA,iBAAiB;EACpCC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,oBAAoB,EAAEA,oBAAoB;EAC1CC,yBAAyB,EAAEA,yBAAyB;EACpDC,qBAAqB,EAAEA,qBAAqB;EAC5CC,0BAA0B,EAAEA,0BAA0B;EACtDC,gBAAgB,EAAEA,gBAAgB;EAClCC,cAAc,EAAEA,cAAc;EAC9BC,SAAS,EAAEA,SAAS;EACpBC,iBAAiB,EAAEA,iBAAiB;EACpCC,eAAe,EAAEA,eAAe;EAChCC,UAAU,EAAEA,UAAU;EACtBC,eAAe,EAAEA,eAAe;EAEhCkC,eAAe,EAAEjC,QAAQ;EACzBkC,eAAe,EAAEjC,UAAU;EAC3BkC,SAAS,EAAEjC,QAAQ;EACnBkC,SAAS,EAAEjC,UAAU;EACrBkC,UAAU,EAAEjC,QAAQ;EACpBkC,UAAU,EAAEjC,UAAU;EACtBkC,iBAAiB,EAAEjC,QAAQ;EAC3BkC,iBAAiB,EAAEjC,UAAU;EAC7BkC,aAAa,EAAEjC,QAAQ;EACvBkC,aAAa,EAAEjC,UAAU;EACzBkC,eAAe,EAAEjC,QAAQ;EACzBkC,eAAe,EAAEjC,UAAU;EAC3BkC,cAAc,EAAEjC,QAAQ;EACxBkC,cAAc,EAAEjC,UAAU;EAC1BkC,gBAAgB,EAAEjC,QAAQ;EAC1BkC,gBAAgB,EAAEjC,UAAU;EAC5BkC,eAAe,EAAEjC,QAAQ;EACzBkC,eAAe,EAAEjC,UAAU;EAC3BkC,eAAe,EAAEjC,QAAQ;EACzBkC,eAAe,EAAEjC,UAAU;EAC3BkC,cAAc,EAAEjC,QAAQ;EACxBkC,cAAc,EAAEjC,UAAU;EAC1BkC,iBAAiB,EAAEjC,QAAQ;EAC3BkC,iBAAiB,EAAEjC,UAAU;EAC7BkC,aAAa,EAAEjC,QAAQ;EACvBkC,aAAa,EAAEjC,UAAU;EACzBkC,WAAW,EAAEjC,QAAQ;EACrBkC,WAAW,EAAEjC,UAAU;EACvBkC,WAAW,EAAEjC,QAAQ;EACrBkC,WAAW,EAAEjC,UAAU;EACvBkC,WAAW,EAAEjC,QAAQ;EACrBkC,WAAW,EAAEjC;AACd,CAAC;;AAED;AACA;AACA;AAFA77D,OAAA,CAAA87D,WAAA,GAAAA,WAAA;AAIA,IAAMiC,WAAW,GAAG;EAEnBvJ,MAAM,EAAE;IAEPwJ,OAAO,EAAE;MAAEt9D,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;IAAG,CAAC;IACvDmtB,OAAO,EAAE;MAAE/yC,KAAK,EAAE;IAAI,CAAC;IAEvB62C,GAAG,EAAE;MAAE72C,KAAK,EAAE;IAAK,CAAC;IACpBu9D,WAAW,EAAE;MAAEv9D,KAAK,EAAE,aAAc,IAAImf,OAAO;IAAG,CAAC;IACnDq+C,YAAY,EAAE;MAAEx9D,KAAK,EAAE,aAAc,IAAImf,OAAO;IAAG,CAAC;IAEpD43B,QAAQ,EAAE;MAAE/2C,KAAK,EAAE;IAAK,CAAC;IACzBk5C,SAAS,EAAE;MAAEl5C,KAAK,EAAE;IAAE;EAEvB,CAAC;EAEDy9D,WAAW,EAAE;IAEZ1lB,WAAW,EAAE;MAAE/3C,KAAK,EAAE;IAAK;EAE5B,CAAC;EAED09D,MAAM,EAAE;IAEPxlB,MAAM,EAAE;MAAEl4C,KAAK,EAAE;IAAK,CAAC;IACvB29D,UAAU,EAAE;MAAE39D,KAAK,EAAE,CAAE;IAAE,CAAC;IAC1Bq4C,YAAY,EAAE;MAAEr4C,KAAK,EAAE;IAAI,CAAC;IAAE;IAC9B49D,GAAG,EAAE;MAAE59D,KAAK,EAAE;IAAI,CAAC;IAAE;IACrBs4C,eAAe,EAAE;MAAEt4C,KAAK,EAAE;IAAK,CAAC,CAAC;EAElC,CAAC;;EAED69D,KAAK,EAAE;IAEN3mB,KAAK,EAAE;MAAEl3C,KAAK,EAAE;IAAK,CAAC;IACtBm3C,cAAc,EAAE;MAAEn3C,KAAK,EAAE;IAAE;EAE5B,CAAC;EAED89D,QAAQ,EAAE;IAET9mB,QAAQ,EAAE;MAAEh3C,KAAK,EAAE;IAAK,CAAC;IACzBi3C,iBAAiB,EAAE;MAAEj3C,KAAK,EAAE;IAAE;EAE/B,CAAC;EAED+9D,WAAW,EAAE;IAEZjmB,WAAW,EAAE;MAAE93C,KAAK,EAAE;IAAK;EAE5B,CAAC;EAEDg+D,OAAO,EAAE;IAER5mB,OAAO,EAAE;MAAEp3C,KAAK,EAAE;IAAK,CAAC;IACxBq3C,SAAS,EAAE;MAAEr3C,KAAK,EAAE;IAAE;EAEvB,CAAC;EAEDi+D,SAAS,EAAE;IAEV3mB,SAAS,EAAE;MAAEt3C,KAAK,EAAE;IAAK,CAAC;IAC1Bw3C,WAAW,EAAE;MAAEx3C,KAAK,EAAE,aAAc,IAAIqb,OAAO,CAAE,CAAC,EAAE,CAAC;IAAG;EAEzD,CAAC;EAED6iD,eAAe,EAAE;IAEhBzmB,eAAe,EAAE;MAAEz3C,KAAK,EAAE;IAAK,CAAC;IAChC03C,iBAAiB,EAAE;MAAE13C,KAAK,EAAE;IAAE,CAAC;IAC/B23C,gBAAgB,EAAE;MAAE33C,KAAK,EAAE;IAAE;EAE9B,CAAC;EAEDm+D,YAAY,EAAE;IAEbvmB,YAAY,EAAE;MAAE53C,KAAK,EAAE;IAAK;EAE7B,CAAC;EAEDo+D,YAAY,EAAE;IAEbvmB,YAAY,EAAE;MAAE73C,KAAK,EAAE;IAAK;EAE7B,CAAC;EAEDq+D,WAAW,EAAE;IAEZ9lB,WAAW,EAAE;MAAEv4C,KAAK,EAAE;IAAK;EAE5B,CAAC;EAEDu5C,GAAG,EAAE;IAEJ+kB,UAAU,EAAE;MAAEt+D,KAAK,EAAE;IAAQ,CAAC;IAC9Bu+D,OAAO,EAAE;MAAEv+D,KAAK,EAAE;IAAE,CAAC;IACrBw+D,MAAM,EAAE;MAAEx+D,KAAK,EAAE;IAAK,CAAC;IACvBy+D,QAAQ,EAAE;MAAEz+D,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;IAAG;EAExD,CAAC;EAEDoiC,MAAM,EAAE;IAEP0W,iBAAiB,EAAE;MAAE1+D,KAAK,EAAE;IAAG,CAAC;IAEhC2+D,UAAU,EAAE;MAAE3+D,KAAK,EAAE;IAAG,CAAC;IAEzB4+D,iBAAiB,EAAE;MAAE5+D,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QAC3C9+B,SAAS,EAAE,CAAC,CAAC;QACbhb,KAAK,EAAE,CAAC;MACT;IAAE,CAAC;IAEH+5C,uBAAuB,EAAE;MAAE9+D,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QACjDE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC;MACjB;IAAE,CAAC;IAEHC,oBAAoB,EAAE;MAAEn/D,KAAK,EAAE;IAAG,CAAC;IACnCo/D,uBAAuB,EAAE;MAAEp/D,KAAK,EAAE;IAAG,CAAC;IAEtCq/D,UAAU,EAAE;MAAEr/D,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QACpC95C,KAAK,EAAE,CAAC,CAAC;QACTkX,QAAQ,EAAE,CAAC,CAAC;QACZ8D,SAAS,EAAE,CAAC,CAAC;QACbkM,QAAQ,EAAE,CAAC,CAAC;QACZqzB,OAAO,EAAE,CAAC,CAAC;QACXC,WAAW,EAAE,CAAC,CAAC;QACfC,KAAK,EAAE,CAAC;MACT;IAAE,CAAC;IAEHC,gBAAgB,EAAE;MAAEz/D,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QAC1CE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC;MACjB;IAAE,CAAC;IAEHQ,aAAa,EAAE;MAAE1/D,KAAK,EAAE;IAAG,CAAC;IAC5B2/D,gBAAgB,EAAE;MAAE3/D,KAAK,EAAE;IAAG,CAAC;IAE/B4/D,WAAW,EAAE;MAAE5/D,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QACrC95C,KAAK,EAAE,CAAC,CAAC;QACTkX,QAAQ,EAAE,CAAC,CAAC;QACZujC,KAAK,EAAE,CAAC,CAAC;QACTvzB,QAAQ,EAAE,CAAC;MACZ;IAAE,CAAC;IAEH4zB,iBAAiB,EAAE;MAAE7/D,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QAC3CE,UAAU,EAAE,CAAC,CAAC;QACdC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,YAAY,EAAE,CAAC,CAAC;QAChBC,aAAa,EAAE,CAAC,CAAC;QACjBY,gBAAgB,EAAE,CAAC,CAAC;QACpBC,eAAe,EAAE,CAAC;MACnB;IAAE,CAAC;IAEHC,cAAc,EAAE;MAAEhgE,KAAK,EAAE;IAAG,CAAC;IAC7BigE,iBAAiB,EAAE;MAAEjgE,KAAK,EAAE;IAAG,CAAC;IAEhCkgE,gBAAgB,EAAE;MAAElgE,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QAC1C9+B,SAAS,EAAE,CAAC,CAAC;QACbogC,QAAQ,EAAE,CAAC,CAAC;QACZC,WAAW,EAAE,CAAC;MACf;IAAE,CAAC;IAEH;IACAC,cAAc,EAAE;MAAErgE,KAAK,EAAE,EAAE;MAAE6+D,UAAU,EAAE;QACxC95C,KAAK,EAAE,CAAC,CAAC;QACTkX,QAAQ,EAAE,CAAC,CAAC;QACZlT,KAAK,EAAE,CAAC,CAAC;QACTC,MAAM,EAAE,CAAC;MACV;IAAE,CAAC;IAEHs3C,KAAK,EAAE;MAAEtgE,KAAK,EAAE;IAAK,CAAC;IACtBugE,KAAK,EAAE;MAAEvgE,KAAK,EAAE;IAAK;EAEtB,CAAC;EAED66B,MAAM,EAAE;IAEPyiC,OAAO,EAAE;MAAEt9D,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;IAAG,CAAC;IACvDmtB,OAAO,EAAE;MAAE/yC,KAAK,EAAE;IAAI,CAAC;IACvB2mB,IAAI,EAAE;MAAE3mB,KAAK,EAAE;IAAI,CAAC;IACpBsjB,KAAK,EAAE;MAAEtjB,KAAK,EAAE;IAAI,CAAC;IACrB62C,GAAG,EAAE;MAAE72C,KAAK,EAAE;IAAK,CAAC;IACpB+2C,QAAQ,EAAE;MAAE/2C,KAAK,EAAE;IAAK,CAAC;IACzBk5C,SAAS,EAAE;MAAEl5C,KAAK,EAAE;IAAE,CAAC;IACvBu9D,WAAW,EAAE;MAAEv9D,KAAK,EAAE,aAAc,IAAImf,OAAO;IAAG;EAEnD,CAAC;EAED+wC,MAAM,EAAE;IAEPoN,OAAO,EAAE;MAAEt9D,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;IAAG,CAAC;IACvDmtB,OAAO,EAAE;MAAE/yC,KAAK,EAAE;IAAI,CAAC;IACvBgf,MAAM,EAAE;MAAEhf,KAAK,EAAE,aAAc,IAAIqb,OAAO,CAAE,GAAG,EAAE,GAAG;IAAG,CAAC;IACxD8H,QAAQ,EAAE;MAAEnjB,KAAK,EAAE;IAAI,CAAC;IACxB62C,GAAG,EAAE;MAAE72C,KAAK,EAAE;IAAK,CAAC;IACpB+2C,QAAQ,EAAE;MAAE/2C,KAAK,EAAE;IAAK,CAAC;IACzBk5C,SAAS,EAAE;MAAEl5C,KAAK,EAAE;IAAE,CAAC;IACvBu9D,WAAW,EAAE;MAAEv9D,KAAK,EAAE,aAAc,IAAImf,OAAO;IAAG;EAEnD;AAED,CAAC;AAAC7f,OAAA,CAAA+9D,WAAA,GAAAA,WAAA;AAEF,IAAMmD,SAAS,GAAG;EAEjBC,KAAK,EAAE;IAENxZ,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACK,MAAM,EAClBL,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACS,QAAQ,EACpBT,WAAW,CAAC9jB,GAAG,CACf,CAAE;IAEHuO,YAAY,EAAEsT,WAAW,CAACa,cAAc;IACxClU,cAAc,EAAEqT,WAAW,CAACc;EAE7B,CAAC;EAEDwE,OAAO,EAAE;IAERzZ,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACK,MAAM,EAClBL,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACS,QAAQ,EACpBT,WAAW,CAACU,WAAW,EACvBV,WAAW,CAAC9jB,GAAG,EACf8jB,WAAW,CAACrV,MAAM,EAClB;MACCpS,QAAQ,EAAE;QAAE51C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;MAAG;IACxD,CAAC,CACD,CAAE;IAEHkiC,YAAY,EAAEsT,WAAW,CAACe,gBAAgB;IAC1CpU,cAAc,EAAEqT,WAAW,CAACgB;EAE7B,CAAC;EAEDuE,KAAK,EAAE;IAEN1Z,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACK,MAAM,EAClBL,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACS,QAAQ,EACpBT,WAAW,CAACU,WAAW,EACvBV,WAAW,CAACW,OAAO,EACnBX,WAAW,CAACY,SAAS,EACrBZ,WAAW,CAACa,eAAe,EAC3Bb,WAAW,CAAC9jB,GAAG,EACf8jB,WAAW,CAACrV,MAAM,EAClB;MACCpS,QAAQ,EAAE;QAAE51C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;MAAG,CAAC;MACxDkwB,QAAQ,EAAE;QAAE91C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;MAAG,CAAC;MACxDqwB,SAAS,EAAE;QAAEj2C,KAAK,EAAE;MAAG;IACxB,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAACqB,cAAc;IACxC1U,cAAc,EAAEqT,WAAW,CAACsB;EAE7B,CAAC;EAEDkE,QAAQ,EAAE;IAET3Z,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACK,MAAM,EAClBL,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACS,QAAQ,EACpBT,WAAW,CAACU,WAAW,EACvBV,WAAW,CAACW,OAAO,EACnBX,WAAW,CAACY,SAAS,EACrBZ,WAAW,CAACa,eAAe,EAC3Bb,WAAW,CAACc,YAAY,EACxBd,WAAW,CAACe,YAAY,EACxBf,WAAW,CAAC9jB,GAAG,EACf8jB,WAAW,CAACrV,MAAM,EAClB;MACCpS,QAAQ,EAAE;QAAE51C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;MAAG,CAAC;MACxD2vB,SAAS,EAAE;QAAEv1C,KAAK,EAAE;MAAI,CAAC;MACzBw1C,SAAS,EAAE;QAAEx1C,KAAK,EAAE;MAAI,CAAC;MACzBo4C,eAAe,EAAE;QAAEp4C,KAAK,EAAE;MAAE,CAAC,CAAC;IAC/B,CAAC,CACD,CAAE;;IAEH8nD,YAAY,EAAEsT,WAAW,CAACuB,iBAAiB;IAC3C5U,cAAc,EAAEqT,WAAW,CAACwB;EAE7B,CAAC;EAEDiE,IAAI,EAAE;IAEL5Z,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACQ,KAAK,EACjBR,WAAW,CAACS,QAAQ,EACpBT,WAAW,CAACU,WAAW,EACvBV,WAAW,CAACW,OAAO,EACnBX,WAAW,CAACY,SAAS,EACrBZ,WAAW,CAACa,eAAe,EAC3Bb,WAAW,CAACgB,WAAW,EACvBhB,WAAW,CAAC9jB,GAAG,EACf8jB,WAAW,CAACrV,MAAM,EAClB;MACCpS,QAAQ,EAAE;QAAE51C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;MAAG;IACxD,CAAC,CACD,CAAE;IAEHkiC,YAAY,EAAEsT,WAAW,CAACyB,aAAa;IACvC9U,cAAc,EAAEqT,WAAW,CAAC0B;EAE7B,CAAC;EAEDhmB,MAAM,EAAE;IAEPmQ,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACW,OAAO,EACnBX,WAAW,CAACY,SAAS,EACrBZ,WAAW,CAACa,eAAe,EAC3Bb,WAAW,CAAC9jB,GAAG,EACf;MACCzC,MAAM,EAAE;QAAE92C,KAAK,EAAE;MAAK;IACvB,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAACiB,eAAe;IACzCtU,cAAc,EAAEqT,WAAW,CAACkB;EAE7B,CAAC;EAEDzhC,MAAM,EAAE;IAEPosB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACxiC,MAAM,EAClBwiC,WAAW,CAAC9jB,GAAG,CACf,CAAE;IAEHuO,YAAY,EAAEsT,WAAW,CAAC2B,WAAW;IACrChV,cAAc,EAAEqT,WAAW,CAAC4B;EAE7B,CAAC;EAED8D,MAAM,EAAE;IAEP7Z,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAAC9jB,GAAG,EACf;MACCj2B,KAAK,EAAE;QAAEtjB,KAAK,EAAE;MAAE,CAAC;MACnBg5C,QAAQ,EAAE;QAAEh5C,KAAK,EAAE;MAAE,CAAC;MACtB+gE,SAAS,EAAE;QAAE/gE,KAAK,EAAE;MAAE;IACvB,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAACW,eAAe;IACzChU,cAAc,EAAEqT,WAAW,CAACY;EAE7B,CAAC;EAED1sC,KAAK,EAAE;IAEN23B,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACa,eAAe,CAC3B,CAAE;IAEHpW,YAAY,EAAEsT,WAAW,CAACK,UAAU;IACpC1T,cAAc,EAAEqT,WAAW,CAACM;EAE7B,CAAC;EAEDziC,MAAM,EAAE;IAEPguB,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACW,OAAO,EACnBX,WAAW,CAACY,SAAS,EACrBZ,WAAW,CAACa,eAAe,EAC3B;MACCnrB,OAAO,EAAE;QAAE/yC,KAAK,EAAE;MAAI;IACvB,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAACmB,eAAe;IACzCxU,cAAc,EAAEqT,WAAW,CAACoB;EAE7B,CAAC;EAEDtM,MAAM,EAAE;IAEPjJ,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACnN,MAAM,EAClBmN,WAAW,CAAC9jB,GAAG,CACf,CAAE;IAEHuO,YAAY,EAAEsT,WAAW,CAAC+B,WAAW;IACrCpV,cAAc,EAAEqT,WAAW,CAACgC;EAE7B,CAAC;EAEDzuB,UAAU,EAAE;IAEXsY,QAAQ,EAAE;MACTsW,WAAW,EAAE;QAAEv9D,KAAK,EAAE,aAAc,IAAImf,OAAO;MAAG,CAAC;MACnD6hD,GAAG,EAAE;QAAEhhE,KAAK,EAAE;MAAK;IACpB,CAAC;IAED8nD,YAAY,EAAEsT,WAAW,CAACC,eAAe;IACzCtT,cAAc,EAAEqT,WAAW,CAACE;EAE7B,CAAC;EAED2F,IAAI,EAAE;IAELha,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACK,MAAM,EAClB;MACC3qB,OAAO,EAAE;QAAE/yC,KAAK,EAAE;MAAI;IACvB,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAACG,SAAS;IACnCxT,cAAc,EAAEqT,WAAW,CAACI;EAE7B,CAAC;EAED0F,QAAQ,EAAE;IAETja,QAAQ,EAAE;MACTiG,SAAS,EAAE;QAAEltD,KAAK,EAAE;MAAK;IAC1B,CAAC;IAED8nD,YAAY,EAAEsT,WAAW,CAACS,aAAa;IACvC9T,cAAc,EAAEqT,WAAW,CAACU;EAE7B,CAAC;EAEDqF,YAAY,EAAE;IAEbla,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACvJ,MAAM,EAClBuJ,WAAW,CAACa,eAAe,EAC3B;MACCkD,iBAAiB,EAAE;QAAEphE,KAAK,EAAE,aAAc,IAAI22B,OAAO;MAAG,CAAC;MACzD0qC,YAAY,EAAE;QAAErhE,KAAK,EAAE;MAAE,CAAC;MAC1BshE,WAAW,EAAE;QAAEthE,KAAK,EAAE;MAAK;IAC5B,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAACO,iBAAiB;IAC3C5T,cAAc,EAAEqT,WAAW,CAACQ;EAE7B,CAAC;EAED2F,MAAM,EAAE;IAEPta,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCqW,WAAW,CAACrV,MAAM,EAClBqV,WAAW,CAAC9jB,GAAG,EACf;MACCx0B,KAAK,EAAE;QAAE/kB,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,OAAO;MAAG,CAAC;MACpDmtB,OAAO,EAAE;QAAE/yC,KAAK,EAAE;MAAI;IACvB,CAAC,CACD,CAAE;IAEH8nD,YAAY,EAAEsT,WAAW,CAAC6B,WAAW;IACrClV,cAAc,EAAEqT,WAAW,CAAC8B;EAE7B;AAED,CAAC;AAAC59D,OAAA,CAAAkhE,SAAA,GAAAA,SAAA;AAEFA,SAAS,CAACgB,QAAQ,GAAG;EAEpBva,QAAQ,EAAE,aAAcD,aAAa,CAAE,CACtCwZ,SAAS,CAACI,QAAQ,CAAC3Z,QAAQ,EAC3B;IACC/Q,SAAS,EAAE;MAAEl2C,KAAK,EAAE;IAAE,CAAC;IACvBo2C,YAAY,EAAE;MAAEp2C,KAAK,EAAE;IAAK,CAAC;IAC7Bm2C,kBAAkB,EAAE;MAAEn2C,KAAK,EAAE;IAAE,CAAC;IAChCq2C,qBAAqB,EAAE;MAAEr2C,KAAK,EAAE;IAAK,CAAC;IACtCu2C,oBAAoB,EAAE;MAAEv2C,KAAK,EAAE,aAAc,IAAIqb,OAAO,CAAE,CAAC,EAAE,CAAC;IAAG,CAAC;IAClEi7B,kBAAkB,EAAE;MAAEt2C,KAAK,EAAE;IAAK,CAAC;IACnCw2C,WAAW,EAAE;MAAEx2C,KAAK,EAAE;IAAE,CAAC;IACzB22C,cAAc,EAAE;MAAE32C,KAAK,EAAE;IAAK,CAAC;IAC/By2C,cAAc,EAAE;MAAEz2C,KAAK,EAAE;IAAI,CAAC;IAC9ByhE,2BAA2B,EAAE;MAAEzhE,KAAK,EAAE;IAAI,CAAC;IAC3C0hE,2BAA2B,EAAE;MAAE1hE,KAAK,EAAE;IAAI,CAAC;IAC3C42C,uBAAuB,EAAE;MAAE52C,KAAK,EAAE;IAAK,CAAC;IACxCy1C,KAAK,EAAE;MAAEz1C,KAAK,EAAE;IAAE,CAAC;IACnB01C,UAAU,EAAE;MAAE11C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;IAAG,CAAC;IAC1D+7C,aAAa,EAAE;MAAE3hE,KAAK,EAAE;IAAK,CAAC;IAC9B21C,cAAc,EAAE;MAAE31C,KAAK,EAAE;IAAE,CAAC;IAC5B4hE,iBAAiB,EAAE;MAAE5hE,KAAK,EAAE;IAAK,CAAC;IAClCw4C,YAAY,EAAE;MAAEx4C,KAAK,EAAE;IAAE,CAAC;IAC1By4C,eAAe,EAAE;MAAEz4C,KAAK,EAAE;IAAK,CAAC;IAChC6hE,uBAAuB,EAAE;MAAE7hE,KAAK,EAAE,aAAc,IAAIqb,OAAO;IAAG,CAAC;IAC/DymD,sBAAsB,EAAE;MAAE9hE,KAAK,EAAE;IAAK,CAAC;IACvC04C,SAAS,EAAE;MAAE14C,KAAK,EAAE;IAAE,CAAC;IACvB24C,YAAY,EAAE;MAAE34C,KAAK,EAAE;IAAK,CAAC;IAC7B44C,mBAAmB,EAAE;MAAE54C,KAAK,EAAE;IAAE,CAAC;IACjC64C,gBAAgB,EAAE;MAAE74C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,QAAQ;IAAG,CAAC;IAChEmwB,iBAAiB,EAAE;MAAE/1C,KAAK,EAAE;IAAE,CAAC;IAC/Bg4C,oBAAoB,EAAE;MAAEh4C,KAAK,EAAE;IAAK,CAAC;IACrCg2C,aAAa,EAAE;MAAEh2C,KAAK,EAAE,aAAc,IAAI4lB,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAAG,CAAC;IAC5DqyB,gBAAgB,EAAE;MAAEj4C,KAAK,EAAE;IAAK;EACjC,CAAC,CACD,CAAE;EAEH8nD,YAAY,EAAEsT,WAAW,CAACuB,iBAAiB;EAC3C5U,cAAc,EAAEqT,WAAW,CAACwB;AAE7B,CAAC;AAED,SAASmF,eAAeA,CAAEpW,QAAQ,EAAEqW,QAAQ,EAAEt+D,KAAK,EAAEu+D,OAAO,EAAE9jD,KAAK,EAAE02B,kBAAkB,EAAG;EAEzF,IAAMqtB,UAAU,GAAG,IAAIt8C,KAAK,CAAE,QAAQ,CAAE;EACxC,IAAIu8C,UAAU,GAAGhkD,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;EAEvC,IAAIikD,SAAS;EACb,IAAIC,OAAO;EAEX,IAAIC,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,wBAAwB,GAAG,CAAC;EAChC,IAAIC,kBAAkB,GAAG,IAAI;EAE7B,SAASlW,MAAMA,CAAEmW,UAAU,EAAE7W,KAAK,EAAG;IAEpC,IAAI8W,UAAU,GAAG,KAAK;IACtB,IAAI/zB,UAAU,GAAGid,KAAK,CAACld,OAAO,KAAK,IAAI,GAAGkd,KAAK,CAACjd,UAAU,GAAG,IAAI;IAEjE,IAAKA,UAAU,IAAIA,UAAU,CAACjjB,SAAS,EAAG;MAEzCijB,UAAU,GAAGqzB,QAAQ,CAACxmD,GAAG,CAAEmzB,UAAU,CAAE;IAExC;;IAEA;IACA;;IAEA,IAAMyd,EAAE,GAAGT,QAAQ,CAACS,EAAE;IACtB,IAAMuW,OAAO,GAAGvW,EAAE,CAACwW,UAAU,IAAIxW,EAAE,CAACwW,UAAU,EAAE;IAEhD,IAAKD,OAAO,IAAIA,OAAO,CAACE,oBAAoB,KAAK,UAAU,EAAG;MAE7Dl0B,UAAU,GAAG,IAAI;IAElB;IAEA,IAAKA,UAAU,KAAK,IAAI,EAAG;MAE1Bm0B,QAAQ,CAAEZ,UAAU,EAAEC,UAAU,CAAE;IAEnC,CAAC,MAAM,IAAKxzB,UAAU,IAAIA,UAAU,CAAC7oB,OAAO,EAAG;MAE9Cg9C,QAAQ,CAAEn0B,UAAU,EAAE,CAAC,CAAE;MACzB+zB,UAAU,GAAG,IAAI;IAElB;IAEA,IAAK/W,QAAQ,CAACoX,SAAS,IAAIL,UAAU,EAAG;MAEvC/W,QAAQ,CAAC/e,KAAK,CAAE+e,QAAQ,CAACqX,cAAc,EAAErX,QAAQ,CAACsX,cAAc,EAAEtX,QAAQ,CAACuX,gBAAgB,CAAE;IAE9F;IAEA,IAAKv0B,UAAU,KAAMA,UAAU,CAACge,aAAa,IAAIhe,UAAU,CAAC3jB,OAAO,KAAKrd,uBAAuB,CAAE,EAAG;MAEnG,IAAK00D,OAAO,KAAK/9D,SAAS,EAAG;QAE5B+9D,OAAO,GAAG,IAAIve,IAAI,CACjB,IAAIqB,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAC1B,IAAIoC,cAAc,CAAE;UACnBphD,IAAI,EAAE,wBAAwB;UAC9B8gD,QAAQ,EAAEH,aAAa,CAAE0Z,SAAS,CAACS,IAAI,CAACha,QAAQ,CAAE;UAClDa,YAAY,EAAE0Y,SAAS,CAACS,IAAI,CAACnZ,YAAY;UACzCC,cAAc,EAAEyY,SAAS,CAACS,IAAI,CAAClZ,cAAc;UAC7ClV,IAAI,EAAEloC,QAAQ;UACd6oC,SAAS,EAAE,KAAK;UAChBC,UAAU,EAAE,KAAK;UACjB8F,GAAG,EAAE;QACN,CAAC,CAAE,CACH;QAED8oB,OAAO,CAACtmC,QAAQ,CAAC+iB,eAAe,CAAE,QAAQ,CAAE;QAC5CujB,OAAO,CAACtmC,QAAQ,CAAC+iB,eAAe,CAAE,IAAI,CAAE;QAExCujB,OAAO,CAACh3B,cAAc,GAAG,UAAWsgB,QAAQ,EAAEC,KAAK,EAAE/zB,MAAM,EAAG;UAE7D,IAAI,CAACK,WAAW,CAACkL,YAAY,CAAEvL,MAAM,CAACK,WAAW,CAAE;QAEpD,CAAC;;QAED;QACA14B,MAAM,CAACI,cAAc,CAAEyiE,OAAO,CAAC/yB,QAAQ,EAAE,QAAQ,EAAE;UAElD9zB,GAAG,EAAE,SAAAA,IAAA,EAAY;YAEhB,OAAO,IAAI,CAACyrC,QAAQ,CAAC/O,MAAM,CAACl4C,KAAK;UAElC;QAED,CAAC,CAAE;QAEHiiE,OAAO,CAACzvC,MAAM,CAAE6vC,OAAO,CAAE;MAE1B;MAEAA,OAAO,CAAC/yB,QAAQ,CAAC2X,QAAQ,CAAC/O,MAAM,CAACl4C,KAAK,GAAG2uC,UAAU;MACnD0zB,OAAO,CAAC/yB,QAAQ,CAAC2X,QAAQ,CAAC0W,UAAU,CAAC39D,KAAK,GAAK2uC,UAAU,CAACge,aAAa,IAAIhe,UAAU,CAACriB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAEjI,IAAKg2C,iBAAiB,KAAK3zB,UAAU,IACpC4zB,wBAAwB,KAAK5zB,UAAU,CAAC7kB,OAAO,IAC/C04C,kBAAkB,KAAK7W,QAAQ,CAACO,WAAW,EAAG;QAE9CmW,OAAO,CAAC/yB,QAAQ,CAAC1iB,WAAW,GAAG,IAAI;QAEnC01C,iBAAiB,GAAG3zB,UAAU;QAC9B4zB,wBAAwB,GAAG5zB,UAAU,CAAC7kB,OAAO;QAC7C04C,kBAAkB,GAAG7W,QAAQ,CAACO,WAAW;MAE1C;MAEAmW,OAAO,CAACn5B,MAAM,CAACJ,SAAS,EAAE;;MAE1B;MACA25B,UAAU,CAACU,OAAO,CAAEd,OAAO,EAAEA,OAAO,CAACtmC,QAAQ,EAAEsmC,OAAO,CAAC/yB,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE;IAE9E,CAAC,MAAM,IAAKX,UAAU,IAAIA,UAAU,CAACjjB,SAAS,EAAG;MAEhD,IAAK02C,SAAS,KAAK99D,SAAS,EAAG;QAE9B89D,SAAS,GAAG,IAAIte,IAAI,CACnB,IAAIoO,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE,EACzB,IAAI3K,cAAc,CAAE;UACnBphD,IAAI,EAAE,oBAAoB;UAC1B8gD,QAAQ,EAAEH,aAAa,CAAE0Z,SAAS,CAAC7xB,UAAU,CAACsY,QAAQ,CAAE;UACxDa,YAAY,EAAE0Y,SAAS,CAAC7xB,UAAU,CAACmZ,YAAY;UAC/CC,cAAc,EAAEyY,SAAS,CAAC7xB,UAAU,CAACoZ,cAAc;UACnDlV,IAAI,EAAEnoC,SAAS;UACf8oC,SAAS,EAAE,KAAK;UAChBC,UAAU,EAAE,KAAK;UACjB8F,GAAG,EAAE;QACN,CAAC,CAAE,CACH;QAED6oB,SAAS,CAACrmC,QAAQ,CAAC+iB,eAAe,CAAE,QAAQ,CAAE;;QAE9C;QACAt/C,MAAM,CAACI,cAAc,CAAEwiE,SAAS,CAAC9yB,QAAQ,EAAE,KAAK,EAAE;UAEjD9zB,GAAG,EAAE,SAAAA,IAAA,EAAY;YAEhB,OAAO,IAAI,CAACyrC,QAAQ,CAAC+Z,GAAG,CAAChhE,KAAK;UAE/B;QAED,CAAC,CAAE;QAEHiiE,OAAO,CAACzvC,MAAM,CAAE4vC,SAAS,CAAE;MAE5B;MAEAA,SAAS,CAAC9yB,QAAQ,CAAC2X,QAAQ,CAAC+Z,GAAG,CAAChhE,KAAK,GAAG2uC,UAAU;MAElD,IAAKA,UAAU,CAAC5iB,gBAAgB,KAAK,IAAI,EAAG;QAE3C4iB,UAAU,CAACniB,YAAY,EAAE;MAE1B;MAEA41C,SAAS,CAAC9yB,QAAQ,CAAC2X,QAAQ,CAACsW,WAAW,CAACv9D,KAAK,CAACgc,IAAI,CAAE2yB,UAAU,CAACjrB,MAAM,CAAE;MAEvE,IAAK4+C,iBAAiB,KAAK3zB,UAAU,IACpC4zB,wBAAwB,KAAK5zB,UAAU,CAAC7kB,OAAO,IAC/C04C,kBAAkB,KAAK7W,QAAQ,CAACO,WAAW,EAAG;QAE9CkW,SAAS,CAAC9yB,QAAQ,CAAC1iB,WAAW,GAAG,IAAI;QAErC01C,iBAAiB,GAAG3zB,UAAU;QAC9B4zB,wBAAwB,GAAG5zB,UAAU,CAAC7kB,OAAO;QAC7C04C,kBAAkB,GAAG7W,QAAQ,CAACO,WAAW;MAE1C;MAEAkW,SAAS,CAACl5B,MAAM,CAACJ,SAAS,EAAE;;MAE5B;MACA25B,UAAU,CAACU,OAAO,CAAEf,SAAS,EAAEA,SAAS,CAACrmC,QAAQ,EAAEqmC,SAAS,CAAC9yB,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE;IAEpF;EAED;EAEA,SAASwzB,QAAQA,CAAE/9C,KAAK,EAAE5G,KAAK,EAAG;IAEjCza,KAAK,CAACytD,OAAO,CAACpsC,KAAK,CAAC+9C,QAAQ,CAAE/9C,KAAK,CAAClC,CAAC,EAAEkC,KAAK,CAAC/C,CAAC,EAAE+C,KAAK,CAACrL,CAAC,EAAEyE,KAAK,EAAE02B,kBAAkB,CAAE;EAErF;EAEA,OAAO;IAENuuB,aAAa,EAAE,SAAAA,cAAA,EAAY;MAE1B,OAAOlB,UAAU;IAElB,CAAC;IACDmB,aAAa,EAAE,SAAAA,cAAWt+C,KAAK,EAAE5G,KAAK,GAAG,CAAC,EAAG;MAE5C+jD,UAAU,CAAC3nD,GAAG,CAAEwK,KAAK,CAAE;MACvBo9C,UAAU,GAAGhkD,KAAK;MAClB2kD,QAAQ,CAAEZ,UAAU,EAAEC,UAAU,CAAE;IAEnC,CAAC;IACDmB,aAAa,EAAE,SAAAA,cAAA,EAAY;MAE1B,OAAOnB,UAAU;IAElB,CAAC;IACDoB,aAAa,EAAE,SAAAA,cAAWplD,KAAK,EAAG;MAEjCgkD,UAAU,GAAGhkD,KAAK;MAClB2kD,QAAQ,CAAEZ,UAAU,EAAEC,UAAU,CAAE;IAEnC,CAAC;IACD7V,MAAM,EAAEA;EAET,CAAC;AAEF;AAEA,SAASkX,kBAAkBA,CAAExS,EAAE,EAAE9I,UAAU,EAAElsB,UAAU,EAAEi1B,YAAY,EAAG;EAEvE,IAAMwS,mBAAmB,GAAGzS,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAEpD,IAAMinC,SAAS,GAAGzS,YAAY,CAACC,QAAQ,GAAG,IAAI,GAAGhJ,UAAU,CAAC1sC,GAAG,CAAE,yBAAyB,CAAE;EAC5F,IAAMmoD,YAAY,GAAG1S,YAAY,CAACC,QAAQ,IAAIwS,SAAS,KAAK,IAAI;EAEhE,IAAME,aAAa,GAAG,CAAC,CAAC;EAExB,IAAMC,YAAY,GAAGC,kBAAkB,CAAE,IAAI,CAAE;EAC/C,IAAIC,YAAY,GAAGF,YAAY;EAC/B,IAAIG,WAAW,GAAG,KAAK;EAEvB,SAASC,KAAKA,CAAEp9D,MAAM,EAAEyoC,QAAQ,EAAE40B,OAAO,EAAEnoC,QAAQ,EAAEzmB,KAAK,EAAG;IAE5D,IAAI6uD,aAAa,GAAG,KAAK;IAEzB,IAAKR,YAAY,EAAG;MAEnB,IAAMjgE,KAAK,GAAG0gE,eAAe,CAAEroC,QAAQ,EAAEmoC,OAAO,EAAE50B,QAAQ,CAAE;MAE5D,IAAKy0B,YAAY,KAAKrgE,KAAK,EAAG;QAE7BqgE,YAAY,GAAGrgE,KAAK;QACpB2gE,qBAAqB,CAAEN,YAAY,CAACl9D,MAAM,CAAE;MAE7C;MAEAs9D,aAAa,GAAGv3C,WAAW,CAAE/lB,MAAM,EAAEk1B,QAAQ,EAAEmoC,OAAO,EAAE5uD,KAAK,CAAE;MAE/D,IAAK6uD,aAAa,EAAGG,SAAS,CAAEz9D,MAAM,EAAEk1B,QAAQ,EAAEmoC,OAAO,EAAE5uD,KAAK,CAAE;IAEnE,CAAC,MAAM;MAEN,IAAM6jC,SAAS,GAAK7J,QAAQ,CAAC6J,SAAS,KAAK,IAAM;MAEjD,IAAK4qB,YAAY,CAAChoC,QAAQ,KAAKA,QAAQ,CAACgR,EAAE,IACzCg3B,YAAY,CAACG,OAAO,KAAKA,OAAO,CAACn3B,EAAE,IACnCg3B,YAAY,CAAC5qB,SAAS,KAAKA,SAAS,EAAG;QAEvC4qB,YAAY,CAAChoC,QAAQ,GAAGA,QAAQ,CAACgR,EAAE;QACnCg3B,YAAY,CAACG,OAAO,GAAGA,OAAO,CAACn3B,EAAE;QACjCg3B,YAAY,CAAC5qB,SAAS,GAAGA,SAAS;QAElCgrB,aAAa,GAAG,IAAI;MAErB;IAED;IAEA,IAAK7uD,KAAK,KAAK,IAAI,EAAG;MAErB0mB,UAAU,CAACxJ,MAAM,CAAEld,KAAK,EAAE,KAAK,CAAE;IAElC;IAEA,IAAK6uD,aAAa,IAAIH,WAAW,EAAG;MAEnCA,WAAW,GAAG,KAAK;MAEnBO,qBAAqB,CAAE19D,MAAM,EAAEyoC,QAAQ,EAAE40B,OAAO,EAAEnoC,QAAQ,CAAE;MAE5D,IAAKzmB,KAAK,KAAK,IAAI,EAAG;QAErB07C,EAAE,CAACO,UAAU,CAAE,KAAK,EAAEv1B,UAAU,CAACxgB,GAAG,CAAElG,KAAK,CAAE,CAAC4O,MAAM,CAAE;MAEvD;IAED;EAED;EAEA,SAASsgD,uBAAuBA,CAAA,EAAG;IAElC,IAAKvT,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAACyT,iBAAiB,EAAE;IAE1D,OAAOf,SAAS,CAACgB,oBAAoB,EAAE;EAExC;EAEA,SAASL,qBAAqBA,CAAEM,GAAG,EAAG;IAErC,IAAK1T,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAAC4T,eAAe,CAAED,GAAG,CAAE;IAE7D,OAAOjB,SAAS,CAACmB,kBAAkB,CAAEF,GAAG,CAAE;EAE3C;EAEA,SAASG,uBAAuBA,CAAEH,GAAG,EAAG;IAEvC,IAAK1T,YAAY,CAACC,QAAQ,EAAG,OAAOF,EAAE,CAAC+T,iBAAiB,CAAEJ,GAAG,CAAE;IAE/D,OAAOjB,SAAS,CAACsB,oBAAoB,CAAEL,GAAG,CAAE;EAE7C;EAEA,SAASP,eAAeA,CAAEroC,QAAQ,EAAEmoC,OAAO,EAAE50B,QAAQ,EAAG;IAEvD,IAAM6J,SAAS,GAAK7J,QAAQ,CAAC6J,SAAS,KAAK,IAAM;IAEjD,IAAI8rB,UAAU,GAAGrB,aAAa,CAAE7nC,QAAQ,CAACgR,EAAE,CAAE;IAE7C,IAAKk4B,UAAU,KAAK3gE,SAAS,EAAG;MAE/B2gE,UAAU,GAAG,CAAC,CAAC;MACfrB,aAAa,CAAE7nC,QAAQ,CAACgR,EAAE,CAAE,GAAGk4B,UAAU;IAE1C;IAEA,IAAIC,QAAQ,GAAGD,UAAU,CAAEf,OAAO,CAACn3B,EAAE,CAAE;IAEvC,IAAKm4B,QAAQ,KAAK5gE,SAAS,EAAG;MAE7B4gE,QAAQ,GAAG,CAAC,CAAC;MACbD,UAAU,CAAEf,OAAO,CAACn3B,EAAE,CAAE,GAAGm4B,QAAQ;IAEpC;IAEA,IAAIxhE,KAAK,GAAGwhE,QAAQ,CAAE/rB,SAAS,CAAE;IAEjC,IAAKz1C,KAAK,KAAKY,SAAS,EAAG;MAE1BZ,KAAK,GAAGogE,kBAAkB,CAAEU,uBAAuB,EAAE,CAAE;MACvDU,QAAQ,CAAE/rB,SAAS,CAAE,GAAGz1C,KAAK;IAE9B;IAEA,OAAOA,KAAK;EAEb;EAEA,SAASogE,kBAAkBA,CAAEa,GAAG,EAAG;IAElC,IAAMQ,aAAa,GAAG,EAAE;IACxB,IAAMC,iBAAiB,GAAG,EAAE;IAC5B,IAAMC,iBAAiB,GAAG,EAAE;IAE5B,KAAM,IAAIx/D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG49D,mBAAmB,EAAE59D,CAAC,EAAG,EAAG;MAEhDs/D,aAAa,CAAEt/D,CAAC,CAAE,GAAG,CAAC;MACtBu/D,iBAAiB,CAAEv/D,CAAC,CAAE,GAAG,CAAC;MAC1Bw/D,iBAAiB,CAAEx/D,CAAC,CAAE,GAAG,CAAC;IAE3B;IAEA,OAAO;MAEN;MACAk2B,QAAQ,EAAE,IAAI;MACdmoC,OAAO,EAAE,IAAI;MACb/qB,SAAS,EAAE,KAAK;MAEhBgsB,aAAa,EAAEA,aAAa;MAC5BC,iBAAiB,EAAEA,iBAAiB;MACpCC,iBAAiB,EAAEA,iBAAiB;MACpCx+D,MAAM,EAAE89D,GAAG;MACX3oC,UAAU,EAAE,CAAC,CAAC;MACd1mB,KAAK,EAAE;IAER,CAAC;EAEF;EAEA,SAASsX,WAAWA,CAAE/lB,MAAM,EAAEk1B,QAAQ,EAAEmoC,OAAO,EAAE5uD,KAAK,EAAG;IAExD,IAAMgwD,gBAAgB,GAAGvB,YAAY,CAAC/nC,UAAU;IAChD,IAAMupC,kBAAkB,GAAGxpC,QAAQ,CAACC,UAAU;IAE9C,IAAIwpC,aAAa,GAAG,CAAC;IAErB,IAAMC,iBAAiB,GAAGvB,OAAO,CAACwB,aAAa,EAAE;IAEjD,KAAM,IAAMv/D,IAAI,IAAIs/D,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEt/D,IAAI,CAAE;MAElD,IAAKw/D,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAMC,eAAe,GAAGP,gBAAgB,CAAEn/D,IAAI,CAAE;QAChD,IAAI2/D,iBAAiB,GAAGP,kBAAkB,CAAEp/D,IAAI,CAAE;QAElD,IAAK2/D,iBAAiB,KAAKxhE,SAAS,EAAG;UAEtC,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAACwnC,cAAc,EAAGy3B,iBAAiB,GAAGj/D,MAAM,CAACwnC,cAAc;UACnG,IAAKloC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAACynC,aAAa,EAAGw3B,iBAAiB,GAAGj/D,MAAM,CAACynC,aAAa;QAEjG;QAEA,IAAKu3B,eAAe,KAAKvhE,SAAS,EAAG,OAAO,IAAI;QAEhD,IAAKuhE,eAAe,CAACjnD,SAAS,KAAKknD,iBAAiB,EAAG,OAAO,IAAI;QAElE,IAAKA,iBAAiB,IAAID,eAAe,CAACl8C,IAAI,KAAKm8C,iBAAiB,CAACn8C,IAAI,EAAG,OAAO,IAAI;QAEvF67C,aAAa,EAAG;MAEjB;IAED;IAEA,IAAKzB,YAAY,CAACyB,aAAa,KAAKA,aAAa,EAAG,OAAO,IAAI;IAE/D,IAAKzB,YAAY,CAACzuD,KAAK,KAAKA,KAAK,EAAG,OAAO,IAAI;IAE/C,OAAO,KAAK;EAEb;EAEA,SAASgvD,SAASA,CAAEz9D,MAAM,EAAEk1B,QAAQ,EAAEmoC,OAAO,EAAE5uD,KAAK,EAAG;IAEtD,IAAMo6B,KAAK,GAAG,CAAC,CAAC;IAChB,IAAM1T,UAAU,GAAGD,QAAQ,CAACC,UAAU;IACtC,IAAIwpC,aAAa,GAAG,CAAC;IAErB,IAAMC,iBAAiB,GAAGvB,OAAO,CAACwB,aAAa,EAAE;IAEjD,KAAM,IAAMv/D,IAAI,IAAIs/D,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEt/D,IAAI,CAAE;MAElD,IAAKw/D,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAIhnD,SAAS,GAAGod,UAAU,CAAE71B,IAAI,CAAE;QAElC,IAAKyY,SAAS,KAAKta,SAAS,EAAG;UAE9B,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAACwnC,cAAc,EAAGzvB,SAAS,GAAG/X,MAAM,CAACwnC,cAAc;UAC3F,IAAKloC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAACynC,aAAa,EAAG1vB,SAAS,GAAG/X,MAAM,CAACynC,aAAa;QAEzF;QAEA,IAAM3kB,IAAI,GAAG,CAAC,CAAC;QACfA,IAAI,CAAC/K,SAAS,GAAGA,SAAS;QAE1B,IAAKA,SAAS,IAAIA,SAAS,CAAC+K,IAAI,EAAG;UAElCA,IAAI,CAACA,IAAI,GAAG/K,SAAS,CAAC+K,IAAI;QAE3B;QAEA+lB,KAAK,CAAEvpC,IAAI,CAAE,GAAGwjB,IAAI;QAEpB67C,aAAa,EAAG;MAEjB;IAED;IAEAzB,YAAY,CAAC/nC,UAAU,GAAG0T,KAAK;IAC/Bq0B,YAAY,CAACyB,aAAa,GAAGA,aAAa;IAE1CzB,YAAY,CAACzuD,KAAK,GAAGA,KAAK;EAE3B;EAEA,SAASywD,cAAcA,CAAA,EAAG;IAEzB,IAAMZ,aAAa,GAAGpB,YAAY,CAACoB,aAAa;IAEhD,KAAM,IAAIt/D,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGuzC,aAAa,CAACv/D,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAE1Ds/D,aAAa,CAAEt/D,CAAC,CAAE,GAAG,CAAC;IAEvB;EAED;EAEA,SAASmgE,eAAeA,CAAEpnD,SAAS,EAAG;IAErCqnD,yBAAyB,CAAErnD,SAAS,EAAE,CAAC,CAAE;EAE1C;EAEA,SAASqnD,yBAAyBA,CAAErnD,SAAS,EAAEsnD,gBAAgB,EAAG;IAEjE,IAAMf,aAAa,GAAGpB,YAAY,CAACoB,aAAa;IAChD,IAAMC,iBAAiB,GAAGrB,YAAY,CAACqB,iBAAiB;IACxD,IAAMC,iBAAiB,GAAGtB,YAAY,CAACsB,iBAAiB;IAExDF,aAAa,CAAEvmD,SAAS,CAAE,GAAG,CAAC;IAE9B,IAAKwmD,iBAAiB,CAAExmD,SAAS,CAAE,KAAK,CAAC,EAAG;MAE3CoyC,EAAE,CAACmV,uBAAuB,CAAEvnD,SAAS,CAAE;MACvCwmD,iBAAiB,CAAExmD,SAAS,CAAE,GAAG,CAAC;IAEnC;IAEA,IAAKymD,iBAAiB,CAAEzmD,SAAS,CAAE,KAAKsnD,gBAAgB,EAAG;MAE1D,IAAMxC,UAAS,GAAGzS,YAAY,CAACC,QAAQ,GAAGF,EAAE,GAAG9I,UAAU,CAAC1sC,GAAG,CAAE,wBAAwB,CAAE;MAEzFkoD,UAAS,CAAEzS,YAAY,CAACC,QAAQ,GAAG,qBAAqB,GAAG,0BAA0B,CAAE,CAAEtyC,SAAS,EAAEsnD,gBAAgB,CAAE;MACtHb,iBAAiB,CAAEzmD,SAAS,CAAE,GAAGsnD,gBAAgB;IAElD;EAED;EAEA,SAASE,uBAAuBA,CAAA,EAAG;IAElC,IAAMjB,aAAa,GAAGpB,YAAY,CAACoB,aAAa;IAChD,IAAMC,iBAAiB,GAAGrB,YAAY,CAACqB,iBAAiB;IAExD,KAAM,IAAIv/D,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGwzC,iBAAiB,CAACx/D,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAE9D,IAAKu/D,iBAAiB,CAAEv/D,CAAC,CAAE,KAAKs/D,aAAa,CAAEt/D,CAAC,CAAE,EAAG;QAEpDmrD,EAAE,CAACqV,wBAAwB,CAAExgE,CAAC,CAAE;QAChCu/D,iBAAiB,CAAEv/D,CAAC,CAAE,GAAG,CAAC;MAE3B;IAED;EAED;EAEA,SAASygE,mBAAmBA,CAAEhxD,KAAK,EAAEqR,IAAI,EAAE9kB,IAAI,EAAEsmB,UAAU,EAAEo6B,MAAM,EAAE9jC,MAAM,EAAG;IAE7E,IAAKwyC,YAAY,CAACC,QAAQ,KAAK,IAAI,KAAMrvD,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAE,EAAG;MAE3EmvD,EAAE,CAACuV,oBAAoB,CAAEjxD,KAAK,EAAEqR,IAAI,EAAE9kB,IAAI,EAAE0gD,MAAM,EAAE9jC,MAAM,CAAE;IAE7D,CAAC,MAAM;MAENuyC,EAAE,CAACsV,mBAAmB,CAAEhxD,KAAK,EAAEqR,IAAI,EAAE9kB,IAAI,EAAEsmB,UAAU,EAAEo6B,MAAM,EAAE9jC,MAAM,CAAE;IAExE;EAED;EAEA,SAAS8lD,qBAAqBA,CAAE19D,MAAM,EAAEyoC,QAAQ,EAAE40B,OAAO,EAAEnoC,QAAQ,EAAG;IAErE,IAAKk1B,YAAY,CAACC,QAAQ,KAAK,KAAK,KAAMrqD,MAAM,CAACunC,eAAe,IAAIrS,QAAQ,CAACyqC,yBAAyB,CAAE,EAAG;MAE1G,IAAKte,UAAU,CAAC1sC,GAAG,CAAE,wBAAwB,CAAE,KAAK,IAAI,EAAG;IAE5D;IAEAuqD,cAAc,EAAE;IAEhB,IAAMR,kBAAkB,GAAGxpC,QAAQ,CAACC,UAAU;IAE9C,IAAMypC,iBAAiB,GAAGvB,OAAO,CAACwB,aAAa,EAAE;IAEjD,IAAMe,8BAA8B,GAAGn3B,QAAQ,CAACiZ,sBAAsB;IAEtE,KAAM,IAAMpiD,IAAI,IAAIs/D,iBAAiB,EAAG;MAEvC,IAAME,gBAAgB,GAAGF,iBAAiB,CAAEt/D,IAAI,CAAE;MAElD,IAAKw/D,gBAAgB,CAACC,QAAQ,IAAI,CAAC,EAAG;QAErC,IAAIE,iBAAiB,GAAGP,kBAAkB,CAAEp/D,IAAI,CAAE;QAElD,IAAK2/D,iBAAiB,KAAKxhE,SAAS,EAAG;UAEtC,IAAK6B,IAAI,KAAK,gBAAgB,IAAIU,MAAM,CAACwnC,cAAc,EAAGy3B,iBAAiB,GAAGj/D,MAAM,CAACwnC,cAAc;UACnG,IAAKloC,IAAI,KAAK,eAAe,IAAIU,MAAM,CAACynC,aAAa,EAAGw3B,iBAAiB,GAAGj/D,MAAM,CAACynC,aAAa;QAEjG;QAEA,IAAKw3B,iBAAiB,KAAKxhE,SAAS,EAAG;UAEtC,IAAM6jB,UAAU,GAAG29C,iBAAiB,CAAC39C,UAAU;UAC/C,IAAMxB,IAAI,GAAGm/C,iBAAiB,CAAC1rB,QAAQ;UAEvC,IAAMx7B,SAAS,GAAGod,UAAU,CAACxgB,GAAG,CAAEsqD,iBAAiB,CAAE;;UAErD;;UAEA,IAAKlnD,SAAS,KAAKta,SAAS,EAAG;UAE/B,IAAM4f,MAAM,GAAGtF,SAAS,CAACsF,MAAM;UAC/B,IAAMriB,IAAI,GAAG+c,SAAS,CAAC/c,IAAI;UAC3B,IAAM4vD,eAAe,GAAG7yC,SAAS,CAAC6yC,eAAe;UAEjD,IAAKqU,iBAAiB,CAACxjB,4BAA4B,EAAG;YAErD,IAAM34B,IAAI,GAAGm8C,iBAAiB,CAACn8C,IAAI;YACnC,IAAM44B,MAAM,GAAG54B,IAAI,CAAC44B,MAAM;YAC1B,IAAM9jC,MAAM,GAAGqnD,iBAAiB,CAACrnD,MAAM;YAEvC,IAAKkL,IAAI,CAAC+8C,4BAA4B,EAAG;cAExC,KAAM,IAAI7gE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8/D,gBAAgB,CAACgB,YAAY,EAAE9gE,CAAC,EAAG,EAAG;gBAE1DogE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAG//D,CAAC,EAAE8jB,IAAI,CAACu8C,gBAAgB,CAAE;cAElF;cAEA,IAAKr/D,MAAM,CAACunC,eAAe,KAAK,IAAI,IAAIrS,QAAQ,CAAC6qC,iBAAiB,KAAKtiE,SAAS,EAAG;gBAElFy3B,QAAQ,CAAC6qC,iBAAiB,GAAGj9C,IAAI,CAACu8C,gBAAgB,GAAGv8C,IAAI,CAAC8H,KAAK;cAEhE;YAED,CAAC,MAAM;cAEN,KAAM,IAAI5rB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8/D,gBAAgB,CAACgB,YAAY,EAAE9gE,IAAC,EAAG,EAAG;gBAE1DmgE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAG//D,IAAC,CAAE;cAEjD;YAED;YAEAmrD,EAAE,CAACO,UAAU,CAAE,KAAK,EAAErtC,MAAM,CAAE;YAE9B,KAAM,IAAIre,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8/D,gBAAgB,CAACgB,YAAY,EAAE9gE,IAAC,EAAG,EAAG;cAE1DygE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAG//D,IAAC,EAC7B8gB,IAAI,GAAGg/C,gBAAgB,CAACgB,YAAY,EACpC9kE,IAAI,EACJsmB,UAAU,EACVo6B,MAAM,GAAGkP,eAAe,EACxB,CAAEhzC,MAAM,GAAKkI,IAAI,GAAGg/C,gBAAgB,CAACgB,YAAY,GAAK9gE,IAAC,IAAK4rD,eAAe,CAC3E;YAEF;UAED,CAAC,MAAM;YAEN,IAAKqU,iBAAiB,CAACe,0BAA0B,EAAG;cAEnD,KAAM,IAAIhhE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8/D,gBAAgB,CAACgB,YAAY,EAAE9gE,IAAC,EAAG,EAAG;gBAE1DogE,yBAAyB,CAAEN,gBAAgB,CAACC,QAAQ,GAAG//D,IAAC,EAAEigE,iBAAiB,CAACI,gBAAgB,CAAE;cAE/F;cAEA,IAAKr/D,MAAM,CAACunC,eAAe,KAAK,IAAI,IAAIrS,QAAQ,CAAC6qC,iBAAiB,KAAKtiE,SAAS,EAAG;gBAElFy3B,QAAQ,CAAC6qC,iBAAiB,GAAGd,iBAAiB,CAACI,gBAAgB,GAAGJ,iBAAiB,CAACr0C,KAAK;cAE1F;YAED,CAAC,MAAM;cAEN,KAAM,IAAI5rB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8/D,gBAAgB,CAACgB,YAAY,EAAE9gE,IAAC,EAAG,EAAG;gBAE1DmgE,eAAe,CAAEL,gBAAgB,CAACC,QAAQ,GAAG//D,IAAC,CAAE;cAEjD;YAED;YAEAmrD,EAAE,CAACO,UAAU,CAAE,KAAK,EAAErtC,MAAM,CAAE;YAE9B,KAAM,IAAIre,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8/D,gBAAgB,CAACgB,YAAY,EAAE9gE,IAAC,EAAG,EAAG;cAE1DygE,mBAAmB,CAClBX,gBAAgB,CAACC,QAAQ,GAAG//D,IAAC,EAC7B8gB,IAAI,GAAGg/C,gBAAgB,CAACgB,YAAY,EACpC9kE,IAAI,EACJsmB,UAAU,EACVxB,IAAI,GAAG8qC,eAAe,EACpB9qC,IAAI,GAAGg/C,gBAAgB,CAACgB,YAAY,GAAK9gE,IAAC,GAAG4rD,eAAe,CAC9D;YAEF;UAED;QAED,CAAC,MAAM,IAAKgV,8BAA8B,KAAKniE,SAAS,EAAG;UAE1D,IAAMtE,OAAK,GAAGymE,8BAA8B,CAAEtgE,IAAI,CAAE;UAEpD,IAAKnG,OAAK,KAAKsE,SAAS,EAAG;YAE1B,QAAStE,OAAK,CAAC4F,MAAM;cAEpB,KAAK,CAAC;gBACLorD,EAAE,CAAC8V,eAAe,CAAEnB,gBAAgB,CAACC,QAAQ,EAAE5lE,OAAK,CAAE;gBACtD;cAED,KAAK,CAAC;gBACLgxD,EAAE,CAAC+V,eAAe,CAAEpB,gBAAgB,CAACC,QAAQ,EAAE5lE,OAAK,CAAE;gBACtD;cAED,KAAK,CAAC;gBACLgxD,EAAE,CAACgW,eAAe,CAAErB,gBAAgB,CAACC,QAAQ,EAAE5lE,OAAK,CAAE;gBACtD;cAED;gBACCgxD,EAAE,CAACiW,eAAe,CAAEtB,gBAAgB,CAACC,QAAQ,EAAE5lE,OAAK,CAAE;YAAC;UAI1D;QAED;MAED;IAED;IAEAomE,uBAAuB,EAAE;EAE1B;EAEA,SAASr5C,OAAOA,CAAA,EAAG;IAElBvnB,KAAK,EAAE;IAEP,KAAM,IAAM0hE,UAAU,IAAItD,aAAa,EAAG;MAEzC,IAAMqB,UAAU,GAAGrB,aAAa,CAAEsD,UAAU,CAAE;MAE9C,KAAM,IAAMC,SAAS,IAAIlC,UAAU,EAAG;QAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEkC,SAAS,CAAE;QAExC,KAAM,IAAMhuB,SAAS,IAAI+rB,QAAQ,EAAG;UAEnCJ,uBAAuB,CAAEI,QAAQ,CAAE/rB,SAAS,CAAE,CAACtyC,MAAM,CAAE;UAEvD,OAAOq+D,QAAQ,CAAE/rB,SAAS,CAAE;QAE7B;QAEA,OAAO8rB,UAAU,CAAEkC,SAAS,CAAE;MAE/B;MAEA,OAAOvD,aAAa,CAAEsD,UAAU,CAAE;IAEnC;EAED;EAEA,SAASE,uBAAuBA,CAAErrC,QAAQ,EAAG;IAE5C,IAAK6nC,aAAa,CAAE7nC,QAAQ,CAACgR,EAAE,CAAE,KAAKzoC,SAAS,EAAG;IAElD,IAAM2gE,UAAU,GAAGrB,aAAa,CAAE7nC,QAAQ,CAACgR,EAAE,CAAE;IAE/C,KAAM,IAAMo6B,SAAS,IAAIlC,UAAU,EAAG;MAErC,IAAMC,QAAQ,GAAGD,UAAU,CAAEkC,SAAS,CAAE;MAExC,KAAM,IAAMhuB,SAAS,IAAI+rB,QAAQ,EAAG;QAEnCJ,uBAAuB,CAAEI,QAAQ,CAAE/rB,SAAS,CAAE,CAACtyC,MAAM,CAAE;QAEvD,OAAOq+D,QAAQ,CAAE/rB,SAAS,CAAE;MAE7B;MAEA,OAAO8rB,UAAU,CAAEkC,SAAS,CAAE;IAE/B;IAEA,OAAOvD,aAAa,CAAE7nC,QAAQ,CAACgR,EAAE,CAAE;EAEpC;EAEA,SAASs6B,sBAAsBA,CAAEnD,OAAO,EAAG;IAE1C,KAAM,IAAMgD,UAAU,IAAItD,aAAa,EAAG;MAEzC,IAAMqB,UAAU,GAAGrB,aAAa,CAAEsD,UAAU,CAAE;MAE9C,IAAKjC,UAAU,CAAEf,OAAO,CAACn3B,EAAE,CAAE,KAAKzoC,SAAS,EAAG;MAE9C,IAAM4gE,QAAQ,GAAGD,UAAU,CAAEf,OAAO,CAACn3B,EAAE,CAAE;MAEzC,KAAM,IAAMoM,SAAS,IAAI+rB,QAAQ,EAAG;QAEnCJ,uBAAuB,CAAEI,QAAQ,CAAE/rB,SAAS,CAAE,CAACtyC,MAAM,CAAE;QAEvD,OAAOq+D,QAAQ,CAAE/rB,SAAS,CAAE;MAE7B;MAEA,OAAO8rB,UAAU,CAAEf,OAAO,CAACn3B,EAAE,CAAE;IAEhC;EAED;EAEA,SAASvnC,KAAKA,CAAA,EAAG;IAEhB8hE,iBAAiB,EAAE;IACnBtD,WAAW,GAAG,IAAI;IAElB,IAAKD,YAAY,KAAKF,YAAY,EAAG;IAErCE,YAAY,GAAGF,YAAY;IAC3BQ,qBAAqB,CAAEN,YAAY,CAACl9D,MAAM,CAAE;EAE7C;;EAEA;;EAEA,SAASygE,iBAAiBA,CAAA,EAAG;IAE5BzD,YAAY,CAAC9nC,QAAQ,GAAG,IAAI;IAC5B8nC,YAAY,CAACK,OAAO,GAAG,IAAI;IAC3BL,YAAY,CAAC1qB,SAAS,GAAG,KAAK;EAE/B;EAEA,OAAO;IAEN8qB,KAAK,EAAEA,KAAK;IACZz+D,KAAK,EAAEA,KAAK;IACZ8hE,iBAAiB,EAAEA,iBAAiB;IACpCv6C,OAAO,EAAEA,OAAO;IAChBq6C,uBAAuB,EAAEA,uBAAuB;IAChDC,sBAAsB,EAAEA,sBAAsB;IAE9CtB,cAAc,EAAEA,cAAc;IAC9BC,eAAe,EAAEA,eAAe;IAChCI,uBAAuB,EAAEA;EAE1B,CAAC;AAEF;AAEA,SAASmB,mBAAmBA,CAAEvW,EAAE,EAAE9I,UAAU,EAAEzjD,IAAI,EAAEwsD,YAAY,EAAG;EAElE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAIsW,IAAI;EAER,SAASC,OAAOA,CAAEznE,KAAK,EAAG;IAEzBwnE,IAAI,GAAGxnE,KAAK;EAEb;EAEA,SAASssD,MAAMA,CAAE7N,KAAK,EAAEhtB,KAAK,EAAG;IAE/Bu/B,EAAE,CAAC0W,UAAU,CAAEF,IAAI,EAAE/oB,KAAK,EAAEhtB,KAAK,CAAE;IAEnChtB,IAAI,CAAC+tB,MAAM,CAAEf,KAAK,EAAE+1C,IAAI,EAAE,CAAC,CAAE;EAE9B;EAEA,SAASG,eAAeA,CAAElpB,KAAK,EAAEhtB,KAAK,EAAEm2C,SAAS,EAAG;IAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;IAEvB,IAAIlE,SAAS,EAAEr/D,UAAU;IAEzB,IAAK6sD,QAAQ,EAAG;MAEfwS,SAAS,GAAG1S,EAAE;MACd3sD,UAAU,GAAG,qBAAqB;IAEnC,CAAC,MAAM;MAENq/D,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,wBAAwB,CAAE;MACtDnX,UAAU,GAAG,0BAA0B;MAEvC,IAAKq/D,SAAS,KAAK,IAAI,EAAG;QAEzBlpD,OAAO,CAACjX,KAAK,CAAE,gIAAgI,CAAE;QACjJ;MAED;IAED;IAEAmgE,SAAS,CAAEr/D,UAAU,CAAE,CAAEmjE,IAAI,EAAE/oB,KAAK,EAAEhtB,KAAK,EAAEm2C,SAAS,CAAE;IAExDnjE,IAAI,CAAC+tB,MAAM,CAAEf,KAAK,EAAE+1C,IAAI,EAAEI,SAAS,CAAE;EAEtC;;EAEA;;EAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACnb,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACqb,eAAe,GAAGA,eAAe;AAEvC;AAEA,SAASE,iBAAiBA,CAAE7W,EAAE,EAAE9I,UAAU,EAAElZ,UAAU,EAAG;EAExD,IAAI84B,aAAa;EAEjB,SAASC,gBAAgBA,CAAA,EAAG;IAE3B,IAAKD,aAAa,KAAKxjE,SAAS,EAAG,OAAOwjE,aAAa;IAEvD,IAAK5f,UAAU,CAAC8f,GAAG,CAAE,gCAAgC,CAAE,KAAK,IAAI,EAAG;MAElE,IAAMtE,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,gCAAgC,CAAE;MAEpEssD,aAAa,GAAG9W,EAAE,CAACv0B,YAAY,CAAEinC,SAAS,CAACuE,8BAA8B,CAAE;IAE5E,CAAC,MAAM;MAENH,aAAa,GAAG,CAAC;IAElB;IAEA,OAAOA,aAAa;EAErB;EAEA,SAASI,eAAeA,CAAE3zB,SAAS,EAAG;IAErC,IAAKA,SAAS,KAAK,OAAO,EAAG;MAE5B,IAAKyc,EAAE,CAACmX,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC5zB,SAAS,GAAG,CAAC,IAC7Dyc,EAAE,CAACmX,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC5zB,SAAS,GAAG,CAAC,EAAG;QAE5D,OAAO,OAAO;MAEf;MAEAA,SAAS,GAAG,SAAS;IAEtB;IAEA,IAAKA,SAAS,KAAK,SAAS,EAAG;MAE9B,IAAKyc,EAAE,CAACmX,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC5zB,SAAS,GAAG,CAAC,IAC7Dyc,EAAE,CAACmX,wBAAwB,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC5zB,SAAS,GAAG,CAAC,EAAG;QAE5D,OAAO,SAAS;MAEjB;IAED;IAEA,OAAO,MAAM;EAEd;EAEA,IAAM2c,QAAQ,GAAK,OAAOkX,sBAAsB,KAAK,WAAW,IAAIpX,EAAE,YAAYoX,sBAAsB,IACrG,OAAOC,6BAA6B,KAAK,WAAW,IAAIrX,EAAE,YAAYqX,6BAA+B;EAExG,IAAI9zB,SAAS,GAAGvF,UAAU,CAACuF,SAAS,KAAKjwC,SAAS,GAAG0qC,UAAU,CAACuF,SAAS,GAAG,OAAO;EACnF,IAAM+zB,YAAY,GAAGJ,eAAe,CAAE3zB,SAAS,CAAE;EAEjD,IAAK+zB,YAAY,KAAK/zB,SAAS,EAAG;IAEjC/5B,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAE85B,SAAS,EAAE,sBAAsB,EAAE+zB,YAAY,EAAE,UAAU,CAAE;IACnG/zB,SAAS,GAAG+zB,YAAY;EAEzB;EAEA,IAAMjgB,WAAW,GAAG6I,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,oBAAoB,CAAE;EAEtE,IAAMO,sBAAsB,GAAGv5B,UAAU,CAACu5B,sBAAsB,KAAK,IAAI;EAEzE,IAAMC,WAAW,GAAGxX,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAC5C,IAAMgsC,iBAAiB,GAAGzX,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAClD,IAAMisC,cAAc,GAAG1X,EAAE,CAACv0B,YAAY,CAAE,IAAI,CAAE;EAC9C,IAAMksC,cAAc,GAAG3X,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAE/C,IAAMmsC,aAAa,GAAG5X,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAC9C,IAAMosC,iBAAiB,GAAG7X,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAClD,IAAMqsC,WAAW,GAAG9X,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAC5C,IAAMssC,mBAAmB,GAAG/X,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAEpD,IAAMusC,cAAc,GAAGP,iBAAiB,GAAG,CAAC;EAC5C,IAAMQ,qBAAqB,GAAG/X,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,mBAAmB,CAAE;EAC/E,IAAMkB,mBAAmB,GAAGF,cAAc,IAAIC,qBAAqB;EAEnE,IAAME,UAAU,GAAGjY,QAAQ,GAAGF,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE,GAAG,CAAC;EAE1D,OAAO;IAENy0B,QAAQ,EAAEA,QAAQ;IAElB7I,WAAW,EAAEA,WAAW;IAExB0f,gBAAgB,EAAEA,gBAAgB;IAClCG,eAAe,EAAEA,eAAe;IAEhC3zB,SAAS,EAAEA,SAAS;IACpBg0B,sBAAsB,EAAEA,sBAAsB;IAE9CC,WAAW,EAAEA,WAAW;IACxBC,iBAAiB,EAAEA,iBAAiB;IACpCC,cAAc,EAAEA,cAAc;IAC9BC,cAAc,EAAEA,cAAc;IAE9BC,aAAa,EAAEA,aAAa;IAC5BC,iBAAiB,EAAEA,iBAAiB;IACpCC,WAAW,EAAEA,WAAW;IACxBC,mBAAmB,EAAEA,mBAAmB;IAExCC,cAAc,EAAEA,cAAc;IAC9BC,qBAAqB,EAAEA,qBAAqB;IAC5CC,mBAAmB,EAAEA,mBAAmB;IAExCC,UAAU,EAAEA;EAEb,CAAC;AAEF;AAEA,SAASC,aAAaA,CAAEvK,UAAU,EAAG;EAEpC,IAAMnZ,KAAK,GAAG,IAAI;EAElB,IAAI2jB,WAAW,GAAG,IAAI;IACrBC,eAAe,GAAG,CAAC;IACnBC,oBAAoB,GAAG,KAAK;IAC5BC,gBAAgB,GAAG,KAAK;EAEzB,IAAMzsC,KAAK,GAAG,IAAI0wB,KAAK,EAAE;IACxBgc,gBAAgB,GAAG,IAAItqD,OAAO,EAAE;IAEhCwpC,OAAO,GAAG;MAAE3oD,KAAK,EAAE,IAAI;MAAE4sB,WAAW,EAAE;IAAM,CAAC;EAE9C,IAAI,CAAC+7B,OAAO,GAAGA,OAAO;EACtB,IAAI,CAAC+gB,SAAS,GAAG,CAAC;EAClB,IAAI,CAACC,eAAe,GAAG,CAAC;EAExB,IAAI,CAACC,IAAI,GAAG,UAAW/a,MAAM,EAAEgb,mBAAmB,EAAEhyC,MAAM,EAAG;IAE5D,IAAM4yB,OAAO,GACZoE,MAAM,CAACjpD,MAAM,KAAK,CAAC,IACnBikE,mBAAmB;IACnB;IACA;IACAP,eAAe,KAAK,CAAC,IACrBC,oBAAoB;IAErBA,oBAAoB,GAAGM,mBAAmB;IAE1CR,WAAW,GAAGS,aAAa,CAAEjb,MAAM,EAAEh3B,MAAM,EAAE,CAAC,CAAE;IAChDyxC,eAAe,GAAGza,MAAM,CAACjpD,MAAM;IAE/B,OAAO6kD,OAAO;EAEf,CAAC;EAED,IAAI,CAACsf,YAAY,GAAG,YAAY;IAE/BP,gBAAgB,GAAG,IAAI;IACvBM,aAAa,CAAE,IAAI,CAAE;EAEtB,CAAC;EAED,IAAI,CAACE,UAAU,GAAG,YAAY;IAE7BR,gBAAgB,GAAG,KAAK;IACxBS,gBAAgB,EAAE;EAEnB,CAAC;EAED,IAAI,CAACC,QAAQ,GAAG,UAAW56B,QAAQ,EAAEzX,MAAM,EAAEsyC,QAAQ,EAAG;IAEvD,IAAMtb,MAAM,GAAGvf,QAAQ,CAAC4E,cAAc;MACrCC,gBAAgB,GAAG7E,QAAQ,CAAC6E,gBAAgB;MAC5CC,WAAW,GAAG9E,QAAQ,CAAC8E,WAAW;IAEnC,IAAMg2B,kBAAkB,GAAGvL,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE;IAErD,IAAK,CAAEi6B,oBAAoB,IAAI1a,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACjpD,MAAM,KAAK,CAAC,IAAI4jE,gBAAgB,IAAI,CAAEp1B,WAAW,EAAG;MAE5G;;MAEA,IAAKo1B,gBAAgB,EAAG;QAEvB;;QAEAM,aAAa,CAAE,IAAI,CAAE;MAEtB,CAAC,MAAM;QAENG,gBAAgB,EAAE;MAEnB;IAED,CAAC,MAAM;MAEN,IAAMI,OAAO,GAAGb,gBAAgB,GAAG,CAAC,GAAGF,eAAe;QACrDgB,OAAO,GAAGD,OAAO,GAAG,CAAC;MAEtB,IAAIE,QAAQ,GAAGH,kBAAkB,CAACI,aAAa,IAAI,IAAI;MAEvD7hB,OAAO,CAAC3oD,KAAK,GAAGuqE,QAAQ,CAAC,CAAC;;MAE1BA,QAAQ,GAAGT,aAAa,CAAEjb,MAAM,EAAEh3B,MAAM,EAAEyyC,OAAO,EAAEH,QAAQ,CAAE;MAE7D,KAAM,IAAItkE,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKykE,OAAO,EAAE,EAAGzkE,CAAC,EAAG;QAEtC0kE,QAAQ,CAAE1kE,CAAC,CAAE,GAAGwjE,WAAW,CAAExjE,CAAC,CAAE;MAEjC;MAEAukE,kBAAkB,CAACI,aAAa,GAAGD,QAAQ;MAC3C,IAAI,CAACZ,eAAe,GAAGx1B,gBAAgB,GAAG,IAAI,CAACu1B,SAAS,GAAG,CAAC;MAC5D,IAAI,CAACA,SAAS,IAAIW,OAAO;IAE1B;EAGD,CAAC;EAED,SAASJ,gBAAgBA,CAAA,EAAG;IAE3B,IAAKthB,OAAO,CAAC3oD,KAAK,KAAKqpE,WAAW,EAAG;MAEpC1gB,OAAO,CAAC3oD,KAAK,GAAGqpE,WAAW;MAC3B1gB,OAAO,CAAC/7B,WAAW,GAAG08C,eAAe,GAAG,CAAC;IAE1C;IAEA5jB,KAAK,CAACgkB,SAAS,GAAGJ,eAAe;IACjC5jB,KAAK,CAACikB,eAAe,GAAG,CAAC;EAE1B;EAEA,SAASG,aAAaA,CAAEjb,MAAM,EAAEh3B,MAAM,EAAEpC,SAAS,EAAEg1C,aAAa,EAAG;IAElE,IAAMC,OAAO,GAAG7b,MAAM,KAAK,IAAI,GAAGA,MAAM,CAACjpD,MAAM,GAAG,CAAC;IACnD,IAAI2kE,QAAQ,GAAG,IAAI;IAEnB,IAAKG,OAAO,KAAK,CAAC,EAAG;MAEpBH,QAAQ,GAAG5hB,OAAO,CAAC3oD,KAAK;MAExB,IAAKyqE,aAAa,KAAK,IAAI,IAAIF,QAAQ,KAAK,IAAI,EAAG;QAElD,IAAMI,QAAQ,GAAGl1C,SAAS,GAAGi1C,OAAO,GAAG,CAAC;UACvCE,UAAU,GAAG/yC,MAAM,CAACC,kBAAkB;QAEvC2xC,gBAAgB,CAAC/mD,eAAe,CAAEkoD,UAAU,CAAE;QAE9C,IAAKL,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAAC3kE,MAAM,GAAG+kE,QAAQ,EAAG;UAEtDJ,QAAQ,GAAG,IAAI5vD,YAAY,CAAEgwD,QAAQ,CAAE;QAExC;QAEA,KAAM,IAAI9kE,CAAC,GAAG,CAAC,EAAEglE,EAAE,GAAGp1C,SAAS,EAAE5vB,CAAC,KAAK6kE,OAAO,EAAE,EAAG7kE,CAAC,EAAEglE,EAAE,IAAI,CAAC,EAAG;UAE/D9tC,KAAK,CAAC/gB,IAAI,CAAE6yC,MAAM,CAAEhpD,CAAC,CAAE,CAAE,CAAC4nB,YAAY,CAAEm9C,UAAU,EAAEnB,gBAAgB,CAAE;UAEtE1sC,KAAK,CAAC9D,MAAM,CAACva,OAAO,CAAE6rD,QAAQ,EAAEM,EAAE,CAAE;UACpCN,QAAQ,CAAEM,EAAE,GAAG,CAAC,CAAE,GAAG9tC,KAAK,CAACC,QAAQ;QAEpC;MAED;MAEA2rB,OAAO,CAAC3oD,KAAK,GAAGuqE,QAAQ;MACxB5hB,OAAO,CAAC/7B,WAAW,GAAG,IAAI;IAE3B;IAEA84B,KAAK,CAACgkB,SAAS,GAAGgB,OAAO;IACzBhlB,KAAK,CAACikB,eAAe,GAAG,CAAC;IAEzB,OAAOY,QAAQ;EAEhB;AAED;AAEA,SAASO,aAAaA,CAAEnf,QAAQ,EAAG;EAElC,IAAIqW,QAAQ,GAAG,IAAI5Q,OAAO,EAAE;EAE5B,SAAS2Z,iBAAiBA,CAAEr7C,OAAO,EAAE1E,OAAO,EAAG;IAE9C,IAAKA,OAAO,KAAKvd,gCAAgC,EAAG;MAEnDiiB,OAAO,CAAC1E,OAAO,GAAGzd,qBAAqB;IAExC,CAAC,MAAM,IAAKyd,OAAO,KAAKtd,gCAAgC,EAAG;MAE1DgiB,OAAO,CAAC1E,OAAO,GAAGxd,qBAAqB;IAExC;IAEA,OAAOkiB,OAAO;EAEf;EAEA,SAASlU,GAAGA,CAAEkU,OAAO,EAAG;IAEvB,IAAKA,OAAO,IAAIA,OAAO,CAAChE,SAAS,IAAIgE,OAAO,CAACpD,qBAAqB,KAAK,KAAK,EAAG;MAE9E,IAAMtB,OAAO,GAAG0E,OAAO,CAAC1E,OAAO;MAE/B,IAAKA,OAAO,KAAKvd,gCAAgC,IAAIud,OAAO,KAAKtd,gCAAgC,EAAG;QAEnG,IAAKs0D,QAAQ,CAACgG,GAAG,CAAEt4C,OAAO,CAAE,EAAG;UAE9B,IAAMs7C,OAAO,GAAGhJ,QAAQ,CAACxmD,GAAG,CAAEkU,OAAO,CAAE,CAACA,OAAO;UAC/C,OAAOq7C,iBAAiB,CAAEC,OAAO,EAAEt7C,OAAO,CAAC1E,OAAO,CAAE;QAErD,CAAC,MAAM;UAEN,IAAMtC,KAAK,GAAGgH,OAAO,CAAChH,KAAK;UAE3B,IAAKA,KAAK,IAAIA,KAAK,CAACM,MAAM,GAAG,CAAC,EAAG;YAEhC,IAAMiiC,YAAY,GAAG,IAAI2B,qBAAqB,CAAElkC,KAAK,CAACM,MAAM,GAAG,CAAC,CAAE;YAClEiiC,YAAY,CAAC+B,0BAA0B,CAAErB,QAAQ,EAAEj8B,OAAO,CAAE;YAC5DsyC,QAAQ,CAACznD,GAAG,CAAEmV,OAAO,EAAEu7B,YAAY,CAAE;YAErCv7B,OAAO,CAAC5a,gBAAgB,CAAE,SAAS,EAAEm2D,gBAAgB,CAAE;YAEvD,OAAOF,iBAAiB,CAAE9f,YAAY,CAACv7B,OAAO,EAAEA,OAAO,CAAC1E,OAAO,CAAE;UAElE,CAAC,MAAM;YAEN;;YAEA,OAAO,IAAI;UAEZ;QAED;MAED;IAED;IAEA,OAAO0E,OAAO;EAEf;EAEA,SAASu7C,gBAAgBA,CAAEx1D,KAAK,EAAG;IAElC,IAAMia,OAAO,GAAGja,KAAK,CAACjN,MAAM;IAE5BknB,OAAO,CAACta,mBAAmB,CAAE,SAAS,EAAE61D,gBAAgB,CAAE;IAE1D,IAAMD,OAAO,GAAGhJ,QAAQ,CAACxmD,GAAG,CAAEkU,OAAO,CAAE;IAEvC,IAAKs7C,OAAO,KAAK1mE,SAAS,EAAG;MAE5B09D,QAAQ,CAACjQ,MAAM,CAAEriC,OAAO,CAAE;MAC1Bs7C,OAAO,CAACj+C,OAAO,EAAE;IAElB;EAED;EAEA,SAASA,OAAOA,CAAA,EAAG;IAElBi1C,QAAQ,GAAG,IAAI5Q,OAAO,EAAE;EAEzB;EAEA,OAAO;IACN51C,GAAG,EAAEA,GAAG;IACRuR,OAAO,EAAEA;EACV,CAAC;AAEF;AAAC,IAEKm+C,kBAAkB,0BAAAC,QAAA;EAAAvgD,SAAA,CAAAsgD,kBAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAAtgD,YAAA,CAAAogD,kBAAA;EAEvB,SAAAA,mBAAa5jC,IAAI,GAAG,CAAE,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAE,CAAC,EAAEC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAA,IAAA0jC,OAAA;IAAAjjE,eAAA,OAAA8iE,kBAAA;IAEnFG,OAAA,GAAAD,QAAA,CAAAtpE,IAAA;IAEAupE,OAAA,CAAKC,oBAAoB,GAAG,IAAI;IAEhCD,OAAA,CAAKxpE,IAAI,GAAG,oBAAoB;IAEhCwpE,OAAA,CAAK9hB,IAAI,GAAG,CAAC;IACb8hB,OAAA,CAAK5hB,IAAI,GAAG,IAAI;IAEhB4hB,OAAA,CAAK/jC,IAAI,GAAGA,IAAI;IAChB+jC,OAAA,CAAK9jC,KAAK,GAAGA,KAAK;IAClB8jC,OAAA,CAAK7jC,GAAG,GAAGA,GAAG;IACd6jC,OAAA,CAAK5jC,MAAM,GAAGA,MAAM;IAEpB4jC,OAAA,CAAK3jC,IAAI,GAAGA,IAAI;IAChB2jC,OAAA,CAAK1jC,GAAG,GAAGA,GAAG;IAEd0jC,OAAA,CAAKzhB,sBAAsB,EAAE;IAAC,OAAAyhB,OAAA;EAE/B;EAACziE,YAAA,CAAAsiE,kBAAA;IAAAprE,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAkxB,kBAAA,CAAAzrE,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACrI,IAAI,GAAG3hB,MAAM,CAAC2hB,IAAI;MACvB,IAAI,CAACC,KAAK,GAAG5hB,MAAM,CAAC4hB,KAAK;MACzB,IAAI,CAACC,GAAG,GAAG7hB,MAAM,CAAC6hB,GAAG;MACrB,IAAI,CAACC,MAAM,GAAG9hB,MAAM,CAAC8hB,MAAM;MAC3B,IAAI,CAACC,IAAI,GAAG/hB,MAAM,CAAC+hB,IAAI;MACvB,IAAI,CAACC,GAAG,GAAGhiB,MAAM,CAACgiB,GAAG;MAErB,IAAI,CAAC4hB,IAAI,GAAG5jC,MAAM,CAAC4jC,IAAI;MACvB,IAAI,CAACE,IAAI,GAAG9jC,MAAM,CAAC8jC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGjqD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErK,MAAM,CAAC8jC,IAAI,CAAE;MAE1E,OAAO,IAAI;IAEZ;EAAC;IAAA3pD,GAAA;IAAAE,KAAA,EAED,SAAAsqD,cAAeC,SAAS,EAAEC,UAAU,EAAEvzC,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAG;MAE3D,IAAK,IAAI,CAACygC,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,GAAG;UACXgB,OAAO,EAAE,IAAI;UACbF,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,CAAC;UACbE,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACV5hC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE;QACT,CAAC;MAEF;MAEA,IAAI,CAACygC,IAAI,CAACgB,OAAO,GAAG,IAAI;MACxB,IAAI,CAAChB,IAAI,CAACc,SAAS,GAAGA,SAAS;MAC/B,IAAI,CAACd,IAAI,CAACe,UAAU,GAAGA,UAAU;MACjC,IAAI,CAACf,IAAI,CAACiB,OAAO,GAAGzzC,CAAC;MACrB,IAAI,CAACwyC,IAAI,CAACkB,OAAO,GAAGpzC,CAAC;MACrB,IAAI,CAACkyC,IAAI,CAAC1gC,KAAK,GAAGA,KAAK;MACvB,IAAI,CAAC0gC,IAAI,CAACzgC,MAAM,GAAGA,MAAM;MAEzB,IAAI,CAAC4gC,sBAAsB,EAAE;IAE9B;EAAC;IAAA9pD,GAAA;IAAAE,KAAA,EAED,SAAA4qD,gBAAA,EAAkB;MAEjB,IAAK,IAAI,CAACnB,IAAI,KAAK,IAAI,EAAG;QAEzB,IAAI,CAACA,IAAI,CAACgB,OAAO,GAAG,KAAK;MAE1B;MAEA,IAAI,CAACb,sBAAsB,EAAE;IAE9B;EAAC;IAAA9pD,GAAA;IAAAE,KAAA,EAED,SAAA4pD,uBAAA,EAAyB;MAExB,IAAM7rC,EAAE,GAAG,CAAE,IAAI,CAACwpB,KAAK,GAAG,IAAI,CAACD,IAAI,KAAO,CAAC,GAAG,IAAI,CAACiiB,IAAI,CAAE;MACzD,IAAMvrC,EAAE,GAAG,CAAE,IAAI,CAACwpB,GAAG,GAAG,IAAI,CAACC,MAAM,KAAO,CAAC,GAAG,IAAI,CAAC8hB,IAAI,CAAE;MACzD,IAAMnmC,EAAE,GAAG,CAAE,IAAI,CAACmkB,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,CAAC;MACzC,IAAMjkB,EAAE,GAAG,CAAE,IAAI,CAACmkB,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,CAAC;MAEzC,IAAIH,IAAI,GAAGlkB,EAAE,GAAGrF,EAAE;MAClB,IAAIwpB,KAAK,GAAGnkB,EAAE,GAAGrF,EAAE;MACnB,IAAIypB,GAAG,GAAGnkB,EAAE,GAAGrF,EAAE;MACjB,IAAIypB,MAAM,GAAGpkB,EAAE,GAAGrF,EAAE;MAEpB,IAAK,IAAI,CAACyrC,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,CAACgB,OAAO,EAAG;QAE9C,IAAM8gB,MAAM,GAAG,CAAE,IAAI,CAAChkC,KAAK,GAAG,IAAI,CAACD,IAAI,IAAK,IAAI,CAACmiB,IAAI,CAACc,SAAS,GAAG,IAAI,CAAChB,IAAI;QAC3E,IAAMiiB,MAAM,GAAG,CAAE,IAAI,CAAChkC,GAAG,GAAG,IAAI,CAACC,MAAM,IAAK,IAAI,CAACgiB,IAAI,CAACe,UAAU,GAAG,IAAI,CAACjB,IAAI;QAE5EjiB,IAAI,IAAIikC,MAAM,GAAG,IAAI,CAAC9hB,IAAI,CAACiB,OAAO;QAClCnjB,KAAK,GAAGD,IAAI,GAAGikC,MAAM,GAAG,IAAI,CAAC9hB,IAAI,CAAC1gC,KAAK;QACvCye,GAAG,IAAIgkC,MAAM,GAAG,IAAI,CAAC/hB,IAAI,CAACkB,OAAO;QACjCljB,MAAM,GAAGD,GAAG,GAAGgkC,MAAM,GAAG,IAAI,CAAC/hB,IAAI,CAACzgC,MAAM;MAEzC;MAEA,IAAI,CAAC+O,gBAAgB,CAAC6P,gBAAgB,CAAEN,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,MAAM,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,GAAG,CAAE;MAEvF,IAAI,CAAC1P,uBAAuB,CAACjc,IAAI,CAAE,IAAI,CAAC+b,gBAAgB,CAAE,CAAC7V,MAAM,EAAE;IAEpE;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAkxB,kBAAA,CAAAzrE,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjCJ,IAAI,CAAC9iB,MAAM,CAAC0iD,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B5/B,IAAI,CAAC9iB,MAAM,CAACygC,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B3d,IAAI,CAAC9iB,MAAM,CAAC0gC,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9B5d,IAAI,CAAC9iB,MAAM,CAAC2gC,GAAG,GAAG,IAAI,CAACA,GAAG;MAC1B7d,IAAI,CAAC9iB,MAAM,CAAC4gC,MAAM,GAAG,IAAI,CAACA,MAAM;MAChC9d,IAAI,CAAC9iB,MAAM,CAAC6gC,IAAI,GAAG,IAAI,CAACA,IAAI;MAC5B/d,IAAI,CAAC9iB,MAAM,CAAC8gC,GAAG,GAAG,IAAI,CAACA,GAAG;MAE1B,IAAK,IAAI,CAAC8hB,IAAI,KAAK,IAAI,EAAG9/B,IAAI,CAAC9iB,MAAM,CAAC4iD,IAAI,GAAGjqD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAE,IAAI,CAACy5B,IAAI,CAAE;MAE3E,OAAO9/B,IAAI;IAEZ;EAAC;EAAA,OAAAuhD,kBAAA;AAAA,EAjI+BtiB,MAAM;AAAAtpD,OAAA,CAAA4rE,kBAAA,GAAAA,kBAAA;AAqIvC,IAAMO,OAAO,GAAG,CAAC;;AAEjB;AACA;AACA;AACA;AACA,IAAMC,eAAe,GAAG,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAE;;AAEnE;AACA;AACA,IAAMC,WAAW,GAAG,EAAE;AAEtB,IAAMC,WAAW,GAAG,aAAc,IAAIV,kBAAkB,EAAE;AAC1D,IAAMW,WAAW,GAAG,aAAc,IAAIjmD,KAAK,EAAE;AAC7C,IAAIkmD,UAAU,GAAG,IAAI;;AAErB;AACA,IAAMC,GAAG,GAAG,CAAE,CAAC,GAAGh2D,IAAI,CAAC0H,IAAI,CAAE,CAAC,CAAE,IAAK,CAAC;AACtC,IAAMuuD,OAAO,GAAG,CAAC,GAAGD,GAAG;;AAEvB;AACA;AACA,IAAME,eAAe,GAAG,CACvB,aAAc,IAAIt1C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACpC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EACtC,aAAc,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EACxC,aAAc,IAAIA,OAAO,CAAE,CAAC,EAAEo1C,GAAG,EAAEC,OAAO,CAAE,EAC5C,aAAc,IAAIr1C,OAAO,CAAE,CAAC,EAAEo1C,GAAG,EAAE,CAAEC,OAAO,CAAE,EAC9C,aAAc,IAAIr1C,OAAO,CAAEq1C,OAAO,EAAE,CAAC,EAAED,GAAG,CAAE,EAC5C,aAAc,IAAIp1C,OAAO,CAAE,CAAEq1C,OAAO,EAAE,CAAC,EAAED,GAAG,CAAE,EAC9C,aAAc,IAAIp1C,OAAO,CAAEo1C,GAAG,EAAEC,OAAO,EAAE,CAAC,CAAE,EAC5C,aAAc,IAAIr1C,OAAO,CAAE,CAAEo1C,GAAG,EAAEC,OAAO,EAAE,CAAC,CAAE,CAAE;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA,IAeME,cAAc;EAEnB,SAAAA,eAAavgB,QAAQ,EAAG;IAAAvjD,eAAA,OAAA8jE,cAAA;IAEvB,IAAI,CAACC,SAAS,GAAGxgB,QAAQ;IACzB,IAAI,CAACygB,qBAAqB,GAAG,IAAI;IAEjC,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACC,gBAAgB,CAAE,IAAI,CAACH,aAAa,CAAE;EAE5C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC9jE,YAAA,CAAAsjE,cAAA;IAAApsE,GAAA;IAAAE,KAAA,EAOA,SAAA8sE,UAAWlhB,KAAK,EAAEmhB,KAAK,GAAG,CAAC,EAAErlC,IAAI,GAAG,GAAG,EAAEC,GAAG,GAAG,GAAG,EAAG;MAEpDmkC,UAAU,GAAG,IAAI,CAACK,SAAS,CAACngB,eAAe,EAAE;MAE7C,IAAI,CAACghB,QAAQ,CAAE,GAAG,CAAE;MAEpB,IAAMC,kBAAkB,GAAG,IAAI,CAACC,gBAAgB,EAAE;MAClDD,kBAAkB,CAACt9C,WAAW,GAAG,IAAI;MAErC,IAAI,CAACw9C,cAAc,CAAEvhB,KAAK,EAAElkB,IAAI,EAAEC,GAAG,EAAEslC,kBAAkB,CAAE;MAE3D,IAAKF,KAAK,GAAG,CAAC,EAAG;QAEhB,IAAI,CAACK,KAAK,CAAEH,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAEF,KAAK,CAAE;MAE9C;MAEA,IAAI,CAACM,WAAW,CAAEJ,kBAAkB,CAAE;MACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAkB,CAAE;MAEnC,OAAOA,kBAAkB;IAE1B;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAntE,GAAA;IAAAE,KAAA,EAKA,SAAAutE,oBAAqBC,eAAe,EAAEviB,YAAY,GAAG,IAAI,EAAG;MAE3D,OAAO,IAAI,CAACwiB,YAAY,CAAED,eAAe,EAAEviB,YAAY,CAAE;IAE1D;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAnrD,GAAA;IAAAE,KAAA,EAKA,SAAA0tE,YAAa1C,OAAO,EAAE/f,YAAY,GAAG,IAAI,EAAG;MAE3C,OAAO,IAAI,CAACwiB,YAAY,CAAEzC,OAAO,EAAE/f,YAAY,CAAE;IAElD;;IAEA;AACD;AACA;AACA;EAHC;IAAAnrD,GAAA;IAAAE,KAAA,EAIA,SAAA2tE,qBAAA,EAAuB;MAEtB,IAAK,IAAI,CAAChB,gBAAgB,KAAK,IAAI,EAAG;QAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,EAAE;QAC7C,IAAI,CAACf,gBAAgB,CAAE,IAAI,CAACF,gBAAgB,CAAE;MAE/C;IAED;;IAEA;AACD;AACA;AACA;EAHC;IAAA7sE,GAAA;IAAAE,KAAA,EAIA,SAAA6tE,6BAAA,EAA+B;MAE9B,IAAK,IAAI,CAACjB,iBAAiB,KAAK,IAAI,EAAG;QAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,EAAE;QAC/C,IAAI,CAACjB,gBAAgB,CAAE,IAAI,CAACD,iBAAiB,CAAE;MAEhD;IAED;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA9sE,GAAA;IAAAE,KAAA,EAKA,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACghD,QAAQ,EAAE;MAEf,IAAK,IAAI,CAACpB,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,CAAC5/C,OAAO,EAAE;MACrE,IAAK,IAAI,CAAC6/C,iBAAiB,KAAK,IAAI,EAAG,IAAI,CAACA,iBAAiB,CAAC7/C,OAAO,EAAE;IAExE;;IAEA;EAAA;IAAAjtB,GAAA;IAAAE,KAAA,EAEA,SAAAgtE,SAAUgB,QAAQ,EAAG;MAEpB,IAAI,CAAC3B,OAAO,GAAGt2D,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACk4D,IAAI,CAAED,QAAQ,CAAE,CAAE;MAClD,IAAI,CAAC1B,SAAS,GAAGv2D,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE,IAAI,CAACmzD,OAAO,CAAE;IAE7C;EAAC;IAAAvsE,GAAA;IAAAE,KAAA,EAED,SAAA+tE,SAAA,EAAW;MAEV,IAAK,IAAI,CAACrB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,CAAC3/C,OAAO,EAAE;MAE/D,IAAK,IAAI,CAACq/C,qBAAqB,KAAK,IAAI,EAAG,IAAI,CAACA,qBAAqB,CAACr/C,OAAO,EAAE;MAE/E,KAAM,IAAIlnB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0mE,UAAU,CAAC3mE,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnD,IAAI,CAAC0mE,UAAU,CAAE1mE,CAAC,CAAE,CAACknB,OAAO,EAAE;MAE/B;IAED;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAstE,SAAUY,YAAY,EAAG;MAExB,IAAI,CAAC/B,SAAS,CAAC9f,eAAe,CAAEyf,UAAU,CAAE;MAC5CoC,YAAY,CAAC1+C,WAAW,GAAG,KAAK;MAChC2+C,YAAY,CAAED,YAAY,EAAE,CAAC,EAAE,CAAC,EAAEA,YAAY,CAACnlD,KAAK,EAAEmlD,YAAY,CAACllD,MAAM,CAAE;IAE5E;EAAC;IAAAlpB,GAAA;IAAAE,KAAA,EAED,SAAAytE,aAAc/9C,OAAO,EAAEu7B,YAAY,EAAG;MAErC,IAAKv7B,OAAO,CAAC1E,OAAO,KAAKzd,qBAAqB,IAAImiB,OAAO,CAAC1E,OAAO,KAAKxd,qBAAqB,EAAG;QAE7F,IAAI,CAACw/D,QAAQ,CAAEt9C,OAAO,CAAChH,KAAK,CAAC9iB,MAAM,KAAK,CAAC,GAAG,EAAE,GAAK8pB,OAAO,CAAChH,KAAK,CAAE,CAAC,CAAE,CAACK,KAAK,IAAI2G,OAAO,CAAChH,KAAK,CAAE,CAAC,CAAE,CAACA,KAAK,CAACK,KAAO,CAAE;MAElH,CAAC,MAAM;QAAE;;QAER,IAAI,CAACikD,QAAQ,CAAEt9C,OAAO,CAAChH,KAAK,CAACK,KAAK,GAAG,CAAC,CAAE;MAEzC;MAEA+iD,UAAU,GAAG,IAAI,CAACK,SAAS,CAACngB,eAAe,EAAE;MAE7C,IAAMihB,kBAAkB,GAAGhiB,YAAY,IAAI,IAAI,CAACiiB,gBAAgB,EAAE;MAClE,IAAI,CAACkB,gBAAgB,CAAE1+C,OAAO,EAAEu9C,kBAAkB,CAAE;MACpD,IAAI,CAACI,WAAW,CAAEJ,kBAAkB,CAAE;MACtC,IAAI,CAACK,QAAQ,CAAEL,kBAAkB,CAAE;MAEnC,OAAOA,kBAAkB;IAE1B;EAAC;IAAAntE,GAAA;IAAAE,KAAA,EAED,SAAAktE,iBAAA,EAAmB;MAElB,IAAMnkD,KAAK,GAAG,CAAC,GAAGhT,IAAI,CAACa,GAAG,CAAE,IAAI,CAAC01D,SAAS,EAAE,EAAE,GAAG,CAAC,CAAE;MACpD,IAAMtjD,MAAM,GAAG,CAAC,GAAG,IAAI,CAACsjD,SAAS;MAEjC,IAAM+B,MAAM,GAAG;QACdjjD,SAAS,EAAEhd,YAAY;QACvBid,SAAS,EAAEjd,YAAY;QACvB4d,eAAe,EAAE,KAAK;QACtBnqB,IAAI,EAAEmN,aAAa;QACnBsc,MAAM,EAAEhc,UAAU;QAClBkc,QAAQ,EAAEhZ,cAAc;QACxBmd,WAAW,EAAE;MACd,CAAC;MAED,IAAMs9C,kBAAkB,GAAGqB,mBAAmB,CAAEvlD,KAAK,EAAEC,MAAM,EAAEqlD,MAAM,CAAE;MAEvE,IAAK,IAAI,CAACjC,qBAAqB,KAAK,IAAI,IAAI,IAAI,CAACA,qBAAqB,CAACrjD,KAAK,KAAKA,KAAK,EAAG;QAExF,IAAK,IAAI,CAACqjD,qBAAqB,KAAK,IAAI,EAAG;UAE1C,IAAI,CAAC2B,QAAQ,EAAE;QAEhB;QAEA,IAAI,CAAC3B,qBAAqB,GAAGkC,mBAAmB,CAAEvlD,KAAK,EAAEC,MAAM,EAAEqlD,MAAM,CAAE;QAEzE,IAAQhC,OAAO,GAAK,IAAI,CAAhBA,OAAO;QAAU,IAAAkC,cAAA,GAC0DC,aAAa,CAAEnC,OAAO,CAAE;QAA7F,IAAI,CAACG,SAAS,GAAA+B,cAAA,CAAxBE,QAAQ;QAA6B,IAAI,CAAClC,UAAU,GAAAgC,cAAA,CAA1BG,SAAS;QAA2B,IAAI,CAACjC,OAAO,GAAA8B,cAAA,CAApBI,MAAM;QAEhE,IAAI,CAACjC,aAAa,GAAGkC,cAAc,CAAEvC,OAAO,EAAEtjD,KAAK,EAAEC,MAAM,CAAE;MAE9D;MAEA,OAAOikD,kBAAkB;IAE1B;EAAC;IAAAntE,GAAA;IAAAE,KAAA,EAED,SAAA6sE,iBAAkBv9B,QAAQ,EAAG;MAE5B,IAAMu/B,OAAO,GAAG,IAAI/qB,IAAI,CAAE,IAAI,CAACyoB,UAAU,CAAE,CAAC,CAAE,EAAEj9B,QAAQ,CAAE;MAC1D,IAAI,CAAC68B,SAAS,CAAC2C,OAAO,CAAED,OAAO,EAAEjD,WAAW,CAAE;IAE/C;EAAC;IAAA9rE,GAAA;IAAAE,KAAA,EAED,SAAAmtE,eAAgBvhB,KAAK,EAAElkB,IAAI,EAAEC,GAAG,EAAEslC,kBAAkB,EAAG;MAEtD,IAAM9jB,GAAG,GAAG,EAAE;MACd,IAAMC,MAAM,GAAG,CAAC;MAChB,IAAM2lB,UAAU,GAAG,IAAI/lB,iBAAiB,CAAEG,GAAG,EAAEC,MAAM,EAAE1hB,IAAI,EAAEC,GAAG,CAAE;MAClE,IAAMqnC,MAAM,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACrC,IAAMC,WAAW,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAC9C,IAAMtjB,QAAQ,GAAG,IAAI,CAACwgB,SAAS;MAE/B,IAAM+C,iBAAiB,GAAGvjB,QAAQ,CAACoX,SAAS;MAC5C,IAAM7W,WAAW,GAAGP,QAAQ,CAACO,WAAW;MACxCP,QAAQ,CAACyX,aAAa,CAAEyI,WAAW,CAAE;MAErClgB,QAAQ,CAACO,WAAW,GAAGl/C,aAAa;MACpC2+C,QAAQ,CAACoX,SAAS,GAAG,KAAK;MAE1B,IAAMoM,kBAAkB,GAAG,IAAIz1B,iBAAiB,CAAE;QACjDvzC,IAAI,EAAE,kBAAkB;QACxB0sC,IAAI,EAAEloC,QAAQ;QACd8oC,UAAU,EAAE,KAAK;QACjBD,SAAS,EAAE;MACZ,CAAC,CAAE;MAEH,IAAM47B,aAAa,GAAG,IAAItrB,IAAI,CAAE,IAAIqB,WAAW,EAAE,EAAEgqB,kBAAkB,CAAE;MAEvE,IAAIE,aAAa,GAAG,KAAK;MACzB,IAAM1gC,UAAU,GAAGid,KAAK,CAACjd,UAAU;MAEnC,IAAKA,UAAU,EAAG;QAEjB,IAAKA,UAAU,CAAC7oB,OAAO,EAAG;UAEzBqpD,kBAAkB,CAACpqD,KAAK,CAAC/I,IAAI,CAAE2yB,UAAU,CAAE;UAC3Cid,KAAK,CAACjd,UAAU,GAAG,IAAI;UACvB0gC,aAAa,GAAG,IAAI;QAErB;MAED,CAAC,MAAM;QAENF,kBAAkB,CAACpqD,KAAK,CAAC/I,IAAI,CAAE6vD,WAAW,CAAE;QAC5CwD,aAAa,GAAG,IAAI;MAErB;MAEA,KAAM,IAAIxpE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAMypE,GAAG,GAAGzpE,CAAC,GAAG,CAAC;QAEjB,IAAKypE,GAAG,KAAK,CAAC,EAAG;UAEhBP,UAAU,CAACnqC,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAEy0D,MAAM,CAAEnpE,CAAC,CAAE,EAAE,CAAC,CAAE;UACtCkpE,UAAU,CAAC7uC,MAAM,CAAE+uC,WAAW,CAAEppE,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,CAAE;QAE5C,CAAC,MAAM,IAAKypE,GAAG,KAAK,CAAC,EAAG;UAEvBP,UAAU,CAACnqC,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEy0D,MAAM,CAAEnpE,CAAC,CAAE,CAAE;UACtCkpE,UAAU,CAAC7uC,MAAM,CAAE,CAAC,EAAE+uC,WAAW,CAAEppE,CAAC,CAAE,EAAE,CAAC,CAAE;QAE5C,CAAC,MAAM;UAENkpE,UAAU,CAACnqC,EAAE,CAACrqB,GAAG,CAAE,CAAC,EAAEy0D,MAAM,CAAEnpE,CAAC,CAAE,EAAE,CAAC,CAAE;UACtCkpE,UAAU,CAAC7uC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE+uC,WAAW,CAAEppE,CAAC,CAAE,CAAE;QAE5C;QAEA,IAAM8gB,IAAI,GAAG,IAAI,CAAC2lD,SAAS;QAE3B6B,YAAY,CAAElB,kBAAkB,EAAEqC,GAAG,GAAG3oD,IAAI,EAAE9gB,CAAC,GAAG,CAAC,GAAG8gB,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAI,CAAE;QAE5EglC,QAAQ,CAACU,eAAe,CAAE4gB,kBAAkB,CAAE;QAE9C,IAAKoC,aAAa,EAAG;UAEpB1jB,QAAQ,CAACW,MAAM,CAAE8iB,aAAa,EAAEL,UAAU,CAAE;QAE7C;QAEApjB,QAAQ,CAACW,MAAM,CAAEV,KAAK,EAAEmjB,UAAU,CAAE;MAErC;MAEAK,aAAa,CAACrzC,QAAQ,CAAChP,OAAO,EAAE;MAChCqiD,aAAa,CAAC9/B,QAAQ,CAACviB,OAAO,EAAE;MAEhC4+B,QAAQ,CAACO,WAAW,GAAGA,WAAW;MAClCP,QAAQ,CAACoX,SAAS,GAAGmM,iBAAiB;MACtCtjB,KAAK,CAACjd,UAAU,GAAGA,UAAU;IAE9B;EAAC;IAAA7uC,GAAA;IAAAE,KAAA,EAED,SAAAouE,iBAAkB1+C,OAAO,EAAEu9C,kBAAkB,EAAG;MAE/C,IAAMthB,QAAQ,GAAG,IAAI,CAACwgB,SAAS;MAE/B,IAAMxf,aAAa,GAAKj9B,OAAO,CAAC1E,OAAO,KAAKzd,qBAAqB,IAAImiB,OAAO,CAAC1E,OAAO,KAAKxd,qBAAuB;MAEhH,IAAKm/C,aAAa,EAAG;QAEpB,IAAK,IAAI,CAACggB,gBAAgB,KAAK,IAAI,EAAG;UAErC,IAAI,CAACA,gBAAgB,GAAGiB,mBAAmB,EAAE;QAE9C;QAEA,IAAI,CAACjB,gBAAgB,CAAC1lB,QAAQ,CAAC0W,UAAU,CAAC39D,KAAK,GAAK0vB,OAAO,CAACpD,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAExG,CAAC,MAAM;QAEN,IAAK,IAAI,CAACsgD,iBAAiB,KAAK,IAAI,EAAG;UAEtC,IAAI,CAACA,iBAAiB,GAAGkB,oBAAoB,EAAE;QAEhD;MAED;MAEA,IAAMx+B,QAAQ,GAAGqd,aAAa,GAAG,IAAI,CAACggB,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;MAC/E,IAAMzf,IAAI,GAAG,IAAIrJ,IAAI,CAAE,IAAI,CAACyoB,UAAU,CAAE,CAAC,CAAE,EAAEj9B,QAAQ,CAAE;MAEvD,IAAM2X,QAAQ,GAAG3X,QAAQ,CAAC2X,QAAQ;MAElCA,QAAQ,CAAE,QAAQ,CAAE,CAACjnD,KAAK,GAAG0vB,OAAO;MAEpC,IAAM/I,IAAI,GAAG,IAAI,CAAC2lD,SAAS;MAE3B6B,YAAY,CAAElB,kBAAkB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGtmD,IAAI,EAAE,CAAC,GAAGA,IAAI,CAAE;MAE5DglC,QAAQ,CAACU,eAAe,CAAE4gB,kBAAkB,CAAE;MAC9CthB,QAAQ,CAACW,MAAM,CAAEa,IAAI,EAAEye,WAAW,CAAE;IAErC;EAAC;IAAA9rE,GAAA;IAAAE,KAAA,EAED,SAAAqtE,YAAaJ,kBAAkB,EAAG;MAEjC,IAAMthB,QAAQ,GAAG,IAAI,CAACwgB,SAAS;MAC/B,IAAMpJ,SAAS,GAAGpX,QAAQ,CAACoX,SAAS;MACpCpX,QAAQ,CAACoX,SAAS,GAAG,KAAK;MAE1B,KAAM,IAAIl9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0mE,UAAU,CAAC3mE,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEnD,IAAMknE,KAAK,GAAGh3D,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACgvD,OAAO,CAAE5mE,CAAC,CAAE,GAAG,IAAI,CAAC4mE,OAAO,CAAE5mE,CAAC,CAAE,GAAG,IAAI,CAAC4mE,OAAO,CAAE5mE,CAAC,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC4mE,OAAO,CAAE5mE,CAAC,GAAG,CAAC,CAAE,CAAE;QAEhH,IAAM0pE,QAAQ,GAAGtD,eAAe,CAAE,CAAEpmE,CAAC,GAAG,CAAC,IAAKomE,eAAe,CAACrmE,MAAM,CAAE;QAEtE,IAAI,CAACwnE,KAAK,CAAEH,kBAAkB,EAAEpnE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAEknE,KAAK,EAAEwC,QAAQ,CAAE;MAE5D;MAEA5jB,QAAQ,CAACoX,SAAS,GAAGA,SAAS;IAE/B;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAAjjE,GAAA;IAAAE,KAAA,EAOA,SAAAotE,MAAOH,kBAAkB,EAAEuC,KAAK,EAAEC,MAAM,EAAE1C,KAAK,EAAEwC,QAAQ,EAAG;MAE3D,IAAMG,oBAAoB,GAAG,IAAI,CAACtD,qBAAqB;MAEvD,IAAI,CAACuD,SAAS,CACb1C,kBAAkB,EAClByC,oBAAoB,EACpBF,KAAK,EACLC,MAAM,EACN1C,KAAK,EACL,aAAa,EACbwC,QAAQ,CAAE;MAEX,IAAI,CAACI,SAAS,CACbD,oBAAoB,EACpBzC,kBAAkB,EAClBwC,MAAM,EACNA,MAAM,EACN1C,KAAK,EACL,cAAc,EACdwC,QAAQ,CAAE;IAEZ;EAAC;IAAAzvE,GAAA;IAAAE,KAAA,EAED,SAAA2vE,UAAWC,QAAQ,EAAEC,SAAS,EAAEL,KAAK,EAAEC,MAAM,EAAEK,YAAY,EAAE/vC,SAAS,EAAEwvC,QAAQ,EAAG;MAElF,IAAM5jB,QAAQ,GAAG,IAAI,CAACwgB,SAAS;MAC/B,IAAM4D,YAAY,GAAG,IAAI,CAACrD,aAAa;MAEvC,IAAK3sC,SAAS,KAAK,aAAa,IAAIA,SAAS,KAAK,cAAc,EAAG;QAElEvlB,OAAO,CAACjX,KAAK,CACZ,4DAA4D,CAAE;MAEhE;;MAEA;MACA,IAAMysE,mBAAmB,GAAG,CAAC;MAE7B,IAAMC,QAAQ,GAAG,IAAInsB,IAAI,CAAE,IAAI,CAACyoB,UAAU,CAAEkD,MAAM,CAAE,EAAEM,YAAY,CAAE;MACpE,IAAMG,YAAY,GAAGH,YAAY,CAAC9oB,QAAQ;MAE1C,IAAMkpB,MAAM,GAAG,IAAI,CAAC3D,SAAS,CAAEgD,KAAK,CAAE,GAAG,CAAC;MAC1C,IAAMY,eAAe,GAAGxvB,QAAQ,CAAEkvB,YAAY,CAAE,GAAG/5D,IAAI,CAACC,EAAE,IAAK,CAAC,GAAGm6D,MAAM,CAAE,GAAG,CAAC,GAAGp6D,IAAI,CAACC,EAAE,IAAK,CAAC,GAAG21D,WAAW,GAAG,CAAC,CAAE;MACnH,IAAM0E,WAAW,GAAGP,YAAY,GAAGM,eAAe;MAClD,IAAMtgD,OAAO,GAAG8wB,QAAQ,CAAEkvB,YAAY,CAAE,GAAG,CAAC,GAAG/5D,IAAI,CAACsC,KAAK,CAAE23D,mBAAmB,GAAGK,WAAW,CAAE,GAAG1E,WAAW;MAE5G,IAAK77C,OAAO,GAAG67C,WAAW,EAAG;QAE5BnxD,OAAO,CAACC,IAAI,kBAAAkN,MAAA,CACXmoD,YAAY,oDAAAnoD,MAAA,CACZmI,OAAO,0CAAAnI,MAAA,CAAuCgkD,WAAW,EAAI;MAE/D;MAEA,IAAM2E,OAAO,GAAG,EAAE;MAClB,IAAIC,GAAG,GAAG,CAAC;MAEX,KAAM,IAAI1qE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8lE,WAAW,EAAE,EAAG9lE,CAAC,EAAG;QAExC,IAAMoR,GAAC,GAAGpR,CAAC,GAAGwqE,WAAW;QACzB,IAAMG,MAAM,GAAGz6D,IAAI,CAAC8B,GAAG,CAAE,CAAEZ,GAAC,GAAGA,GAAC,GAAG,CAAC,CAAE;QACtCq5D,OAAO,CAACjrE,IAAI,CAAEmrE,MAAM,CAAE;QAEtB,IAAK3qE,CAAC,KAAK,CAAC,EAAG;UAEd0qE,GAAG,IAAIC,MAAM;QAEd,CAAC,MAAM,IAAK3qE,CAAC,GAAGiqB,OAAO,EAAG;UAEzBygD,GAAG,IAAI,CAAC,GAAGC,MAAM;QAElB;MAED;MAEA,KAAM,IAAI3qE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGyqE,OAAO,CAAC1qE,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE3CyqE,OAAO,CAAEzqE,IAAC,CAAE,GAAGyqE,OAAO,CAAEzqE,IAAC,CAAE,GAAG0qE,GAAG;MAElC;MAEAL,YAAY,CAAE,QAAQ,CAAE,CAAClwE,KAAK,GAAG4vE,QAAQ,CAAClgD,OAAO;MACjDwgD,YAAY,CAAE,SAAS,CAAE,CAAClwE,KAAK,GAAG8vB,OAAO;MACzCogD,YAAY,CAAE,SAAS,CAAE,CAAClwE,KAAK,GAAGswE,OAAO;MACzCJ,YAAY,CAAE,aAAa,CAAE,CAAClwE,KAAK,GAAG+/B,SAAS,KAAK,aAAa;MAEjE,IAAKwvC,QAAQ,EAAG;QAEfW,YAAY,CAAE,UAAU,CAAE,CAAClwE,KAAK,GAAGuvE,QAAQ;MAE5C;MAEA,IAAQlD,OAAO,GAAK,IAAI,CAAhBA,OAAO;MACf6D,YAAY,CAAE,QAAQ,CAAE,CAAClwE,KAAK,GAAGowE,eAAe;MAChDF,YAAY,CAAE,QAAQ,CAAE,CAAClwE,KAAK,GAAGqsE,OAAO,GAAGmD,KAAK;MAEhD,IAAMiB,UAAU,GAAG,IAAI,CAACjE,SAAS,CAAEiD,MAAM,CAAE;MAC3C,IAAMx4D,CAAC,GAAG,CAAC,GAAGw5D,UAAU,IAAKhB,MAAM,GAAGpD,OAAO,GAAGZ,OAAO,GAAGgE,MAAM,GAAGpD,OAAO,GAAGZ,OAAO,GAAG,CAAC,CAAE;MAC1F,IAAMl0D,CAAC,GAAG,CAAC,IAAK,IAAI,CAAC+0D,SAAS,GAAGmE,UAAU,CAAE;MAE7CtC,YAAY,CAAE0B,SAAS,EAAE54D,CAAC,EAAEM,CAAC,EAAE,CAAC,GAAGk5D,UAAU,EAAE,CAAC,GAAGA,UAAU,CAAE;MAC/D9kB,QAAQ,CAACU,eAAe,CAAEwjB,SAAS,CAAE;MACrClkB,QAAQ,CAACW,MAAM,CAAE2jB,QAAQ,EAAErE,WAAW,CAAE;IAEzC;EAAC;EAAA,OAAAM,cAAA;AAAA;AAAA5sE,OAAA,CAAA4sE,cAAA,GAAAA,cAAA;AAMF,SAASsC,aAAaA,CAAEkC,MAAM,EAAG;EAEhC,IAAMhC,SAAS,GAAG,EAAE;EACpB,IAAMD,QAAQ,GAAG,EAAE;EACnB,IAAME,MAAM,GAAG,EAAE;EAEjB,IAAIgC,GAAG,GAAGD,MAAM;EAEhB,IAAME,SAAS,GAAGF,MAAM,GAAGjF,OAAO,GAAG,CAAC,GAAGC,eAAe,CAAC9lE,MAAM;EAE/D,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+qE,SAAS,EAAE/qE,CAAC,EAAG,EAAG;IAEtC,IAAMgrE,OAAO,GAAG96D,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAEy3D,GAAG,CAAE;IAClClC,QAAQ,CAACppE,IAAI,CAAEwrE,OAAO,CAAE;IACxB,IAAI9D,KAAK,GAAG,GAAG,GAAG8D,OAAO;IAEzB,IAAKhrE,CAAC,GAAG6qE,MAAM,GAAGjF,OAAO,EAAG;MAE3BsB,KAAK,GAAGrB,eAAe,CAAE7lE,CAAC,GAAG6qE,MAAM,GAAGjF,OAAO,GAAG,CAAC,CAAE;IAEpD,CAAC,MAAM,IAAK5lE,CAAC,KAAK,CAAC,EAAG;MAErBknE,KAAK,GAAG,CAAC;IAEV;IAEA4B,MAAM,CAACtpE,IAAI,CAAE0nE,KAAK,CAAE;IAEpB,IAAM+D,SAAS,GAAG,GAAG,IAAKD,OAAO,GAAG,CAAC,CAAE;IACvC,IAAMl6D,GAAG,GAAG,CAAEm6D,SAAS;IACvB,IAAMl6D,GAAG,GAAG,CAAC,GAAGk6D,SAAS;IACzB,IAAM3/B,GAAG,GAAG,CAAEx6B,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAED,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEA,GAAG,EAAEC,GAAG,EAAEA,GAAG,EAAED,GAAG,EAAEC,GAAG,CAAE;IAE1E,IAAMm6D,SAAS,GAAG,CAAC;IACnB,IAAMprB,QAAQ,GAAG,CAAC;IAClB,IAAMqrB,YAAY,GAAG,CAAC;IACtB,IAAMC,MAAM,GAAG,CAAC;IAChB,IAAMC,aAAa,GAAG,CAAC;IAEvB,IAAMj1C,QAAQ,GAAG,IAAIthB,YAAY,CAAEq2D,YAAY,GAAGrrB,QAAQ,GAAGorB,SAAS,CAAE;IACxE,IAAM9jD,EAAE,GAAG,IAAItS,YAAY,CAAEs2D,MAAM,GAAGtrB,QAAQ,GAAGorB,SAAS,CAAE;IAC5D,IAAMlsB,SAAS,GAAG,IAAIlqC,YAAY,CAAEu2D,aAAa,GAAGvrB,QAAQ,GAAGorB,SAAS,CAAE;IAE1E,KAAM,IAAIjsB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGisB,SAAS,EAAEjsB,IAAI,EAAG,EAAG;MAE/C,IAAM7tC,CAAC,GAAK6tC,IAAI,GAAG,CAAC,GAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MAClC,IAAMvtC,CAAC,GAAGutC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC;MAC5B,IAAMqsB,WAAW,GAAG,CACnBl6D,CAAC,EAAEM,CAAC,EAAE,CAAC,EACPN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,EAAE,CAAC,EACfN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBN,CAAC,EAAEM,CAAC,EAAE,CAAC,EACPN,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,EACnBN,CAAC,EAAEM,CAAC,GAAG,CAAC,EAAE,CAAC,CACX;MACD0kB,QAAQ,CAAC1hB,GAAG,CAAE42D,WAAW,EAAEH,YAAY,GAAGrrB,QAAQ,GAAGb,IAAI,CAAE;MAC3D73B,EAAE,CAAC1S,GAAG,CAAE42B,GAAG,EAAE8/B,MAAM,GAAGtrB,QAAQ,GAAGb,IAAI,CAAE;MACvC,IAAMssB,IAAI,GAAG,CAAEtsB,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAE;MACnDD,SAAS,CAACtqC,GAAG,CAAE62D,IAAI,EAAEF,aAAa,GAAGvrB,QAAQ,GAAGb,IAAI,CAAE;IAEvD;IAEA,IAAM+J,MAAM,GAAG,IAAI9Q,cAAc,EAAE;IACnC8Q,MAAM,CAAChQ,YAAY,CAAE,UAAU,EAAE,IAAI1E,eAAe,CAAEle,QAAQ,EAAE+0C,YAAY,CAAE,CAAE;IAChFniB,MAAM,CAAChQ,YAAY,CAAE,IAAI,EAAE,IAAI1E,eAAe,CAAEltB,EAAE,EAAEgkD,MAAM,CAAE,CAAE;IAC9DpiB,MAAM,CAAChQ,YAAY,CAAE,WAAW,EAAE,IAAI1E,eAAe,CAAE0K,SAAS,EAAEqsB,aAAa,CAAE,CAAE;IACnFxC,SAAS,CAACrpE,IAAI,CAAEwpD,MAAM,CAAE;IAExB,IAAK8hB,GAAG,GAAGlF,OAAO,EAAG;MAEpBkF,GAAG,EAAG;IAEP;EAED;EAEA,OAAO;IAAEjC,SAAS,EAATA,SAAS;IAAED,QAAQ,EAARA,QAAQ;IAAEE,MAAM,EAANA;EAAO,CAAC;AAEvC;AAEA,SAASL,mBAAmBA,CAAEvlD,KAAK,EAAEC,MAAM,EAAEqlD,MAAM,EAAG;EAErD,IAAMpB,kBAAkB,GAAG,IAAIj+C,iBAAiB,CAAEjG,KAAK,EAAEC,MAAM,EAAEqlD,MAAM,CAAE;EACzEpB,kBAAkB,CAACv9C,OAAO,CAAC1E,OAAO,GAAGrd,uBAAuB;EAC5Ds/D,kBAAkB,CAACv9C,OAAO,CAACvpB,IAAI,GAAG,cAAc;EAChD8mE,kBAAkB,CAACz9C,WAAW,GAAG,IAAI;EACrC,OAAOy9C,kBAAkB;AAE1B;AAEA,SAASkB,YAAYA,CAAE3lE,MAAM,EAAEyO,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAG;EAEpDxgB,MAAM,CAACinB,QAAQ,CAAClV,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,CAAE;EAC1CxgB,MAAM,CAAC+mB,OAAO,CAAChV,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,CAAE;AAE1C;AAEA,SAAS4lD,cAAcA,CAAE8B,MAAM,EAAE3nD,KAAK,EAAEC,MAAM,EAAG;EAEhD,IAAMsnD,OAAO,GAAG,IAAI31D,YAAY,CAAEgxD,WAAW,CAAE;EAC/C,IAAM4D,QAAQ,GAAG,IAAI54C,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EACvC,IAAM06C,cAAc,GAAG,IAAI9pB,cAAc,CAAE;IAE1CphD,IAAI,EAAE,uBAAuB;IAE7ByhD,OAAO,EAAE;MACR,GAAG,EAAE+jB,WAAW;MAChB,oBAAoB,EAAE,GAAG,GAAG5iD,KAAK;MACjC,qBAAqB,EAAE,GAAG,GAAGC,MAAM;MACnC,gBAAgB,KAAArB,MAAA,CAAK+oD,MAAM;IAC5B,CAAC;IAEDzpB,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAEjnD,KAAK,EAAE;MAAK,CAAC;MACzB,SAAS,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACvB,SAAS,EAAE;QAAEA,KAAK,EAAEswE;MAAQ,CAAC;MAC7B,aAAa,EAAE;QAAEtwE,KAAK,EAAE;MAAM,CAAC;MAC/B,QAAQ,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACtB,QAAQ,EAAE;QAAEA,KAAK,EAAE;MAAE,CAAC;MACtB,UAAU,EAAE;QAAEA,KAAK,EAAEuvE;MAAS;IAC/B,CAAC;IAEDznB,YAAY,EAAEwpB,sBAAsB,EAAE;IAEtCvpB,cAAc,EAAE,4iDA4Df;IAEDnV,QAAQ,EAAE7nC,UAAU;IACpByoC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAC,CAAE;EAEH,OAAO49B,cAAc;AAEtB;AAEA,SAASvD,oBAAoBA,CAAA,EAAG;EAE/B,OAAO,IAAIvmB,cAAc,CAAE;IAE1BphD,IAAI,EAAE,yBAAyB;IAE/B8gD,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAEjnD,KAAK,EAAE;MAAK;IACzB,CAAC;IAED8nD,YAAY,EAAEwpB,sBAAsB,EAAE;IAEtCvpB,cAAc,EAAE,kZAmBf;IAEDnV,QAAQ,EAAE7nC,UAAU;IACpByoC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAC,CAAE;AAEJ;AAEA,SAASm6B,mBAAmBA,CAAA,EAAG;EAE9B,OAAO,IAAIrmB,cAAc,CAAE;IAE1BphD,IAAI,EAAE,iBAAiB;IAEvB8gD,QAAQ,EAAE;MACT,QAAQ,EAAE;QAAEjnD,KAAK,EAAE;MAAK,CAAC;MACzB,YAAY,EAAE;QAAEA,KAAK,EAAE,CAAE;MAAE;IAC5B,CAAC;IAED8nD,YAAY,EAAEwpB,sBAAsB,EAAE;IAEtCvpB,cAAc,EAAE,mVAgBf;IAEDnV,QAAQ,EAAE7nC,UAAU;IACpByoC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE;EAEb,CAAC,CAAE;AAEJ;AAEA,SAAS69B,sBAAsBA,CAAA,EAAG;EAEjC,OAAO;EAAA;AAyDR;AAEA,SAASC,eAAeA,CAAE5lB,QAAQ,EAAG;EAEpC,IAAI6lB,UAAU,GAAG,IAAIpgB,OAAO,EAAE;EAE9B,IAAIqgB,cAAc,GAAG,IAAI;EAEzB,SAASj2D,GAAGA,CAAEkU,OAAO,EAAG;IAEvB,IAAKA,OAAO,IAAIA,OAAO,CAAChE,SAAS,EAAG;MAEnC,IAAMV,OAAO,GAAG0E,OAAO,CAAC1E,OAAO;MAE/B,IAAM0mD,aAAa,GAAK1mD,OAAO,KAAKvd,gCAAgC,IAAIud,OAAO,KAAKtd,gCAAkC;MACtH,IAAMikE,SAAS,GAAK3mD,OAAO,KAAKzd,qBAAqB,IAAIyd,OAAO,KAAKxd,qBAAuB;;MAE5F;;MAEA,IAAKkkE,aAAa,IAAIC,SAAS,EAAG;QAEjC,IAAKjiD,OAAO,CAACpD,qBAAqB,IAAIoD,OAAO,CAACnD,gBAAgB,KAAK,IAAI,EAAG;UAEzEmD,OAAO,CAACnD,gBAAgB,GAAG,KAAK;UAEhC,IAAI0+B,YAAY,GAAGumB,UAAU,CAACh2D,GAAG,CAAEkU,OAAO,CAAE;UAE5C,IAAK+hD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAEvgB,QAAQ,CAAE;UAE9EV,YAAY,GAAGymB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAE79C,OAAO,EAAEu7B,YAAY,CAAE,GAAGwmB,cAAc,CAAC/D,WAAW,CAAEh+C,OAAO,EAAEu7B,YAAY,CAAE;UAChJumB,UAAU,CAACj3D,GAAG,CAAEmV,OAAO,EAAEu7B,YAAY,CAAE;UAEvC,OAAOA,YAAY,CAACv7B,OAAO;QAE5B,CAAC,MAAM;UAEN,IAAK8hD,UAAU,CAACxJ,GAAG,CAAEt4C,OAAO,CAAE,EAAG;YAEhC,OAAO8hD,UAAU,CAACh2D,GAAG,CAAEkU,OAAO,CAAE,CAACA,OAAO;UAEzC,CAAC,MAAM;YAEN,IAAMhH,KAAK,GAAGgH,OAAO,CAAChH,KAAK;YAE3B,IAAOgpD,aAAa,IAAIhpD,KAAK,IAAIA,KAAK,CAACM,MAAM,GAAG,CAAC,IAAQ2oD,SAAS,IAAIjpD,KAAK,IAAIkpD,qBAAqB,CAAElpD,KAAK,CAAI,EAAG;cAEjH,IAAK+oD,cAAc,KAAK,IAAI,EAAGA,cAAc,GAAG,IAAIvF,cAAc,CAAEvgB,QAAQ,CAAE;cAE9E,IAAMV,aAAY,GAAGymB,aAAa,GAAGD,cAAc,CAAClE,mBAAmB,CAAE79C,OAAO,CAAE,GAAG+hD,cAAc,CAAC/D,WAAW,CAAEh+C,OAAO,CAAE;cAC1H8hD,UAAU,CAACj3D,GAAG,CAAEmV,OAAO,EAAEu7B,aAAY,CAAE;cAEvCv7B,OAAO,CAAC5a,gBAAgB,CAAE,SAAS,EAAEm2D,gBAAgB,CAAE;cAEvD,OAAOhgB,aAAY,CAACv7B,OAAO;YAE5B,CAAC,MAAM;cAEN;;cAEA,OAAO,IAAI;YAEZ;UAED;QAED;MAED;IAED;IAEA,OAAOA,OAAO;EAEf;EAEA,SAASkiD,qBAAqBA,CAAElpD,KAAK,EAAG;IAEvC,IAAI+I,KAAK,GAAG,CAAC;IACb,IAAM7rB,MAAM,GAAG,CAAC;IAEhB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAG,EAAG;MAEnC,IAAK6iB,KAAK,CAAE7iB,CAAC,CAAE,KAAKvB,SAAS,EAAGmtB,KAAK,EAAG;IAEzC;IAEA,OAAOA,KAAK,KAAK7rB,MAAM;EAGxB;EAEA,SAASqlE,gBAAgBA,CAAEx1D,KAAK,EAAG;IAElC,IAAMia,OAAO,GAAGja,KAAK,CAACjN,MAAM;IAE5BknB,OAAO,CAACta,mBAAmB,CAAE,SAAS,EAAE61D,gBAAgB,CAAE;IAE1D,IAAM4G,SAAS,GAAGL,UAAU,CAACh2D,GAAG,CAAEkU,OAAO,CAAE;IAE3C,IAAKmiD,SAAS,KAAKvtE,SAAS,EAAG;MAE9BktE,UAAU,CAACzf,MAAM,CAAEriC,OAAO,CAAE;MAC5BmiD,SAAS,CAAC9kD,OAAO,EAAE;IAEpB;EAED;EAEA,SAASA,OAAOA,CAAA,EAAG;IAElBykD,UAAU,GAAG,IAAIpgB,OAAO,EAAE;IAE1B,IAAKqgB,cAAc,KAAK,IAAI,EAAG;MAE9BA,cAAc,CAAC1kD,OAAO,EAAE;MACxB0kD,cAAc,GAAG,IAAI;IAEtB;EAED;EAEA,OAAO;IACNj2D,GAAG,EAAEA,GAAG;IACRuR,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAAS+kD,eAAeA,CAAE9gB,EAAE,EAAG;EAE9B,IAAM9I,UAAU,GAAG,CAAC,CAAC;EAErB,SAAS6pB,YAAYA,CAAE5rE,IAAI,EAAG;IAE7B,IAAK+hD,UAAU,CAAE/hD,IAAI,CAAE,KAAK7B,SAAS,EAAG;MAEvC,OAAO4jD,UAAU,CAAE/hD,IAAI,CAAE;IAE1B;IAEA,IAAIu9D,SAAS;IAEb,QAASv9D,IAAI;MAEZ,KAAK,qBAAqB;QACzBu9D,SAAS,GAAG1S,EAAE,CAAC+gB,YAAY,CAAE,qBAAqB,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,yBAAyB,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,4BAA4B,CAAE;QACvJ;MAED,KAAK,gCAAgC;QACpCrO,SAAS,GAAG1S,EAAE,CAAC+gB,YAAY,CAAE,gCAAgC,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,oCAAoC,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,uCAAuC,CAAE;QACxL;MAED,KAAK,+BAA+B;QACnCrO,SAAS,GAAG1S,EAAE,CAAC+gB,YAAY,CAAE,+BAA+B,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,mCAAmC,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,sCAAsC,CAAE;QACrL;MAED,KAAK,gCAAgC;QACpCrO,SAAS,GAAG1S,EAAE,CAAC+gB,YAAY,CAAE,gCAAgC,CAAE,IAAI/gB,EAAE,CAAC+gB,YAAY,CAAE,uCAAuC,CAAE;QAC7H;MAED;QACCrO,SAAS,GAAG1S,EAAE,CAAC+gB,YAAY,CAAE5rE,IAAI,CAAE;IAAC;IAItC+hD,UAAU,CAAE/hD,IAAI,CAAE,GAAGu9D,SAAS;IAE9B,OAAOA,SAAS;EAEjB;EAEA,OAAO;IAENsE,GAAG,EAAE,SAAAA,IAAW7hE,IAAI,EAAG;MAEtB,OAAO4rE,YAAY,CAAE5rE,IAAI,CAAE,KAAK,IAAI;IAErC,CAAC;IAEDyjE,IAAI,EAAE,SAAAA,KAAW3Y,YAAY,EAAG;MAE/B,IAAKA,YAAY,CAACC,QAAQ,EAAG;QAE5B6gB,YAAY,CAAE,wBAAwB,CAAE;MAEzC,CAAC,MAAM;QAENA,YAAY,CAAE,qBAAqB,CAAE;QACrCA,YAAY,CAAE,mBAAmB,CAAE;QACnCA,YAAY,CAAE,wBAAwB,CAAE;QACxCA,YAAY,CAAE,+BAA+B,CAAE;QAC/CA,YAAY,CAAE,0BAA0B,CAAE;QAC1CA,YAAY,CAAE,wBAAwB,CAAE;QACxCA,YAAY,CAAE,yBAAyB,CAAE;QACzCA,YAAY,CAAE,wBAAwB,CAAE;MAEzC;MAEAA,YAAY,CAAE,0BAA0B,CAAE;MAC1CA,YAAY,CAAE,6BAA6B,CAAE;MAC7CA,YAAY,CAAE,sCAAsC,CAAE;IAEvD,CAAC;IAEDv2D,GAAG,EAAE,SAAAA,IAAWrV,IAAI,EAAG;MAEtB,IAAMu9D,SAAS,GAAGqO,YAAY,CAAE5rE,IAAI,CAAE;MAEtC,IAAKu9D,SAAS,KAAK,IAAI,EAAG;QAEzBlpD,OAAO,CAACC,IAAI,CAAE,uBAAuB,GAAGtU,IAAI,GAAG,2BAA2B,CAAE;MAE7E;MAEA,OAAOu9D,SAAS;IAEjB;EAED,CAAC;AAEF;AAEA,SAASsO,eAAeA,CAAEhhB,EAAE,EAAEh1B,UAAU,EAAEv3B,IAAI,EAAEm/D,aAAa,EAAG;EAE/D,IAAM71B,UAAU,GAAG,CAAC,CAAC;EACrB,IAAMkkC,mBAAmB,GAAG,IAAI7gB,OAAO,EAAE;EAEzC,SAAS8gB,iBAAiBA,CAAEz8D,KAAK,EAAG;IAEnC,IAAMsmB,QAAQ,GAAGtmB,KAAK,CAACjN,MAAM;IAE7B,IAAKuzB,QAAQ,CAACzmB,KAAK,KAAK,IAAI,EAAG;MAE9B0mB,UAAU,CAAC0Q,MAAM,CAAE3Q,QAAQ,CAACzmB,KAAK,CAAE;IAEpC;IAEA,KAAM,IAAMnP,IAAI,IAAI41B,QAAQ,CAACC,UAAU,EAAG;MAEzCA,UAAU,CAAC0Q,MAAM,CAAE3Q,QAAQ,CAACC,UAAU,CAAE71B,IAAI,CAAE,CAAE;IAEjD;IAEA41B,QAAQ,CAAC3mB,mBAAmB,CAAE,SAAS,EAAE88D,iBAAiB,CAAE;IAE5D,OAAOnkC,UAAU,CAAEhS,QAAQ,CAACgR,EAAE,CAAE;IAEhC,IAAMnuB,SAAS,GAAGqzD,mBAAmB,CAACz2D,GAAG,CAAEugB,QAAQ,CAAE;IAErD,IAAKnd,SAAS,EAAG;MAEhBod,UAAU,CAAC0Q,MAAM,CAAE9tB,SAAS,CAAE;MAC9BqzD,mBAAmB,CAAClgB,MAAM,CAAEh2B,QAAQ,CAAE;IAEvC;IAEA6nC,aAAa,CAACwD,uBAAuB,CAAErrC,QAAQ,CAAE;IAEjD,IAAKA,QAAQ,CAACyqC,yBAAyB,KAAK,IAAI,EAAG;MAElD,OAAOzqC,QAAQ,CAAC6qC,iBAAiB;IAElC;;IAEA;;IAEAniE,IAAI,CAAC0tE,MAAM,CAACpkC,UAAU,EAAG;EAE1B;EAEA,SAASvyB,GAAGA,CAAE3U,MAAM,EAAEk1B,QAAQ,EAAG;IAEhC,IAAKgS,UAAU,CAAEhS,QAAQ,CAACgR,EAAE,CAAE,KAAK,IAAI,EAAG,OAAOhR,QAAQ;IAEzDA,QAAQ,CAACjnB,gBAAgB,CAAE,SAAS,EAAEo9D,iBAAiB,CAAE;IAEzDnkC,UAAU,CAAEhS,QAAQ,CAACgR,EAAE,CAAE,GAAG,IAAI;IAEhCtoC,IAAI,CAAC0tE,MAAM,CAACpkC,UAAU,EAAG;IAEzB,OAAOhS,QAAQ;EAEhB;EAEA,SAASvJ,MAAMA,CAAEuJ,QAAQ,EAAG;IAE3B,IAAMwpC,kBAAkB,GAAGxpC,QAAQ,CAACC,UAAU;;IAE9C;;IAEA,KAAM,IAAM71B,IAAI,IAAIo/D,kBAAkB,EAAG;MAExCvpC,UAAU,CAACxJ,MAAM,CAAE+yC,kBAAkB,CAAEp/D,IAAI,CAAE,EAAE,KAAK,CAAE;IAEvD;;IAEA;;IAEA,IAAMi4C,eAAe,GAAGriB,QAAQ,CAACqiB,eAAe;IAEhD,KAAM,IAAMj4C,MAAI,IAAIi4C,eAAe,EAAG;MAErC,IAAM1oC,KAAK,GAAG0oC,eAAe,CAAEj4C,MAAI,CAAE;MAErC,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGD,KAAK,CAAC9P,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEhDm2B,UAAU,CAACxJ,MAAM,CAAE9c,KAAK,CAAE7P,CAAC,CAAE,EAAE,KAAK,CAAE;MAEvC;IAED;EAED;EAEA,SAASusE,wBAAwBA,CAAEr2C,QAAQ,EAAG;IAE7C,IAAM4jB,OAAO,GAAG,EAAE;IAElB,IAAM0yB,aAAa,GAAGt2C,QAAQ,CAACzmB,KAAK;IACpC,IAAMg9D,gBAAgB,GAAGv2C,QAAQ,CAACC,UAAU,CAACC,QAAQ;IACrD,IAAInS,OAAO,GAAG,CAAC;IAEf,IAAKuoD,aAAa,KAAK,IAAI,EAAG;MAE7B,IAAM38D,KAAK,GAAG28D,aAAa,CAAC38D,KAAK;MACjCoU,OAAO,GAAGuoD,aAAa,CAACvoD,OAAO;MAE/B,KAAM,IAAIjkB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGD,KAAK,CAAC9P,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,IAAI,CAAC,EAAG;QAElD,IAAM4T,CAAC,GAAG/D,KAAK,CAAE7P,CAAC,GAAG,CAAC,CAAE;QACxB,IAAM6T,CAAC,GAAGhE,KAAK,CAAE7P,CAAC,GAAG,CAAC,CAAE;QACxB,IAAM8T,CAAC,GAAGjE,KAAK,CAAE7P,CAAC,GAAG,CAAC,CAAE;QAExB85C,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEC,CAAC,EAAEA,CAAC,EAAEF,CAAC,CAAE;MAEjC;IAED,CAAC,MAAM;MAEN,IAAM/D,MAAK,GAAG48D,gBAAgB,CAAC58D,KAAK;MACpCoU,OAAO,GAAGwoD,gBAAgB,CAACxoD,OAAO;MAElC,KAAM,IAAIjkB,IAAC,GAAG,CAAC,EAAE8P,GAAC,GAAKD,MAAK,CAAC9P,MAAM,GAAG,CAAC,GAAK,CAAC,EAAEC,IAAC,GAAG8P,GAAC,EAAE9P,IAAC,IAAI,CAAC,EAAG;QAE9D,IAAM4T,GAAC,GAAG5T,IAAC,GAAG,CAAC;QACf,IAAM6T,GAAC,GAAG7T,IAAC,GAAG,CAAC;QACf,IAAM8T,GAAC,GAAG9T,IAAC,GAAG,CAAC;QAEf85C,OAAO,CAACt6C,IAAI,CAAEoU,GAAC,EAAEC,GAAC,EAAEA,GAAC,EAAEC,GAAC,EAAEA,GAAC,EAAEF,GAAC,CAAE;MAEjC;IAED;IAEA,IAAMmF,SAAS,GAAG,KAAM+E,gBAAgB,CAAEg8B,OAAO,CAAE,GAAGjD,qBAAqB,GAAGN,qBAAqB,EAAIuD,OAAO,EAAE,CAAC,CAAE;IACnH/gC,SAAS,CAACkL,OAAO,GAAGA,OAAO;;IAE3B;;IAEA;;IAEA,IAAMyoD,iBAAiB,GAAGN,mBAAmB,CAACz2D,GAAG,CAAEugB,QAAQ,CAAE;IAE7D,IAAKw2C,iBAAiB,EAAGv2C,UAAU,CAAC0Q,MAAM,CAAE6lC,iBAAiB,CAAE;;IAE/D;;IAEAN,mBAAmB,CAAC13D,GAAG,CAAEwhB,QAAQ,EAAEnd,SAAS,CAAE;EAE/C;EAEA,SAAS4zD,qBAAqBA,CAAEz2C,QAAQ,EAAG;IAE1C,IAAM02C,gBAAgB,GAAGR,mBAAmB,CAACz2D,GAAG,CAAEugB,QAAQ,CAAE;IAE5D,IAAK02C,gBAAgB,EAAG;MAEvB,IAAMJ,aAAa,GAAGt2C,QAAQ,CAACzmB,KAAK;MAEpC,IAAK+8D,aAAa,KAAK,IAAI,EAAG;QAE7B;;QAEA,IAAKI,gBAAgB,CAAC3oD,OAAO,GAAGuoD,aAAa,CAACvoD,OAAO,EAAG;UAEvDsoD,wBAAwB,CAAEr2C,QAAQ,CAAE;QAErC;MAED;IAED,CAAC,MAAM;MAENq2C,wBAAwB,CAAEr2C,QAAQ,CAAE;IAErC;IAEA,OAAOk2C,mBAAmB,CAACz2D,GAAG,CAAEugB,QAAQ,CAAE;EAE3C;EAEA,OAAO;IAENvgB,GAAG,EAAEA,GAAG;IACRgX,MAAM,EAAEA,MAAM;IAEdggD,qBAAqB,EAAEA;EAExB,CAAC;AAEF;AAEA,SAASE,0BAA0BA,CAAE1hB,EAAE,EAAE9I,UAAU,EAAEzjD,IAAI,EAAEwsD,YAAY,EAAG;EAEzE,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,IAAIsW,IAAI;EAER,SAASC,OAAOA,CAAEznE,KAAK,EAAG;IAEzBwnE,IAAI,GAAGxnE,KAAK;EAEb;EAEA,IAAI6B,IAAI,EAAE4vD,eAAe;EAEzB,SAAS9S,QAAQA,CAAE3+C,KAAK,EAAG;IAE1B6B,IAAI,GAAG7B,KAAK,CAAC6B,IAAI;IACjB4vD,eAAe,GAAGzxD,KAAK,CAACyxD,eAAe;EAExC;EAEA,SAASnF,MAAMA,CAAE7N,KAAK,EAAEhtB,KAAK,EAAG;IAE/Bu/B,EAAE,CAAC2hB,YAAY,CAAEnL,IAAI,EAAE/1C,KAAK,EAAE5vB,IAAI,EAAE48C,KAAK,GAAGgT,eAAe,CAAE;IAE7DhtD,IAAI,CAAC+tB,MAAM,CAAEf,KAAK,EAAE+1C,IAAI,EAAE,CAAC,CAAE;EAE9B;EAEA,SAASG,eAAeA,CAAElpB,KAAK,EAAEhtB,KAAK,EAAEm2C,SAAS,EAAG;IAEnD,IAAKA,SAAS,KAAK,CAAC,EAAG;IAEvB,IAAIlE,SAAS,EAAEr/D,UAAU;IAEzB,IAAK6sD,QAAQ,EAAG;MAEfwS,SAAS,GAAG1S,EAAE;MACd3sD,UAAU,GAAG,uBAAuB;IAErC,CAAC,MAAM;MAENq/D,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,wBAAwB,CAAE;MACtDnX,UAAU,GAAG,4BAA4B;MAEzC,IAAKq/D,SAAS,KAAK,IAAI,EAAG;QAEzBlpD,OAAO,CAACjX,KAAK,CAAE,uIAAuI,CAAE;QACxJ;MAED;IAED;IAEAmgE,SAAS,CAAEr/D,UAAU,CAAE,CAAEmjE,IAAI,EAAE/1C,KAAK,EAAE5vB,IAAI,EAAE48C,KAAK,GAAGgT,eAAe,EAAEmW,SAAS,CAAE;IAEhFnjE,IAAI,CAAC+tB,MAAM,CAAEf,KAAK,EAAE+1C,IAAI,EAAEI,SAAS,CAAE;EAEtC;;EAEA;;EAEA,IAAI,CAACH,OAAO,GAAGA,OAAO;EACtB,IAAI,CAAC9oB,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAAC2N,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACqb,eAAe,GAAGA,eAAe;AAEvC;AAEA,SAASiL,SAASA,CAAE5hB,EAAE,EAAG;EAExB,IAAMmhB,MAAM,GAAG;IACdpkC,UAAU,EAAE,CAAC;IACblhB,QAAQ,EAAE;EACX,CAAC;EAED,IAAMy/B,MAAM,GAAG;IACdoE,KAAK,EAAE,CAAC;IACRmiB,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,CAAC;IACZj4C,MAAM,EAAE,CAAC;IACTk4C,KAAK,EAAE;EACR,CAAC;EAED,SAASvgD,MAAMA,CAAEf,KAAK,EAAE+1C,IAAI,EAAEwL,aAAa,EAAG;IAE7C1mB,MAAM,CAACumB,KAAK,EAAG;IAEf,QAASrL,IAAI;MAEZ,KAAK,CAAC;QACLlb,MAAM,CAACwmB,SAAS,IAAIE,aAAa,IAAKvhD,KAAK,GAAG,CAAC,CAAE;QACjD;MAED,KAAK,CAAC;QACL66B,MAAM,CAACymB,KAAK,IAAIC,aAAa,IAAKvhD,KAAK,GAAG,CAAC,CAAE;QAC7C;MAED,KAAK,CAAC;QACL66B,MAAM,CAACymB,KAAK,IAAIC,aAAa,IAAKvhD,KAAK,GAAG,CAAC,CAAE;QAC7C;MAED,KAAK,CAAC;QACL66B,MAAM,CAACymB,KAAK,IAAIC,aAAa,GAAGvhD,KAAK;QACrC;MAED,KAAK,CAAC;QACL66B,MAAM,CAACzxB,MAAM,IAAIm4C,aAAa,GAAGvhD,KAAK;QACtC;MAED;QACCjX,OAAO,CAACjX,KAAK,CAAE,qCAAqC,EAAEikE,IAAI,CAAE;QAC5D;IAAM;EAIT;EAEA,SAAShiE,KAAKA,CAAA,EAAG;IAEhB8mD,MAAM,CAACoE,KAAK,EAAG;IACfpE,MAAM,CAACumB,KAAK,GAAG,CAAC;IAChBvmB,MAAM,CAACwmB,SAAS,GAAG,CAAC;IACpBxmB,MAAM,CAACzxB,MAAM,GAAG,CAAC;IACjByxB,MAAM,CAACymB,KAAK,GAAG,CAAC;EAEjB;EAEA,OAAO;IACNZ,MAAM,EAAEA,MAAM;IACd7lB,MAAM,EAAEA,MAAM;IACd2mB,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACf1tE,KAAK,EAAEA,KAAK;IACZgtB,MAAM,EAAEA;EACT,CAAC;AAEF;AAEA,SAAS2gD,aAAaA,CAAE15D,CAAC,EAAEC,CAAC,EAAG;EAE9B,OAAOD,CAAC,CAAE,CAAC,CAAE,GAAGC,CAAC,CAAE,CAAC,CAAE;AAEvB;AAEA,SAAS05D,gBAAgBA,CAAE35D,CAAC,EAAEC,CAAC,EAAG;EAEjC,OAAO3D,IAAI,CAACgC,GAAG,CAAE2B,CAAC,CAAE,CAAC,CAAE,CAAE,GAAG3D,IAAI,CAACgC,GAAG,CAAE0B,CAAC,CAAE,CAAC,CAAE,CAAE;AAE/C;AAEA,SAAS2B,WAAWA,CAAEi4D,KAAK,EAAEz0D,SAAS,EAAG;EAExC,IAAIga,WAAW,GAAG,CAAC;EACnB,IAAMljB,KAAK,GAAGkJ,SAAS,CAAC0jC,4BAA4B,GAAG1jC,SAAS,CAAC+K,IAAI,CAACjU,KAAK,GAAGkJ,SAAS,CAAClJ,KAAK;EAE7F,IAAKA,KAAK,YAAYqF,SAAS,EAAG6d,WAAW,GAAG,GAAG,CAAC,KAC/C,IAAKljB,KAAK,YAAYmF,UAAU,EAAG+d,WAAW,GAAG,GAAG,CAAC,KACrD,IAAKljB,KAAK,YAAYkF,WAAW,EAAGge,WAAW,GAAG,KAAK,CAAC,KACxD,IAAKljB,KAAK,YAAYoF,UAAU,EAAG8d,WAAW,GAAG,KAAK,CAAC,KACvD,IAAKljB,KAAK,YAAYoO,UAAU,EAAG8U,WAAW,GAAG,UAAU,CAAC,KAC5Dpe,OAAO,CAACjX,KAAK,CAAE,kEAAkE,EAAEmS,KAAK,CAAE;EAE/F29D,KAAK,CAACz2D,YAAY,CAAEgc,WAAW,CAAE;AAElC;AAEA,SAAS06C,iBAAiBA,CAAEtiB,EAAE,EAAEC,YAAY,EAAEpkC,QAAQ,EAAG;EAExD,IAAM0mD,cAAc,GAAG,CAAC,CAAC;EACzB,IAAMvuB,eAAe,GAAG,IAAIrqC,YAAY,CAAE,CAAC,CAAE;EAC7C,IAAM64D,aAAa,GAAG,IAAIpiB,OAAO,EAAE;EACnC,IAAMiiB,KAAK,GAAG,IAAInmD,OAAO,EAAE;EAE3B,IAAMumD,cAAc,GAAG,EAAE;EAEzB,KAAM,IAAI5tE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;IAE9B4tE,cAAc,CAAE5tE,CAAC,CAAE,GAAG,CAAEA,CAAC,EAAE,CAAC,CAAE;EAE/B;EAEA,SAAS2sB,MAAMA,CAAE3rB,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAE40B,OAAO,EAAG;IAEtD,IAAMwP,gBAAgB,GAAG7sE,MAAM,CAACs9C,qBAAqB;IAErD,IAAK8M,YAAY,CAACC,QAAQ,KAAK,IAAI,EAAG;MAErC;MACA;;MAEA,IAAM1R,cAAc,GAAGzjB,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,IAAIF,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,IAAI8C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK;MAC7H,IAAM4uD,iBAAiB,GAAKn0B,cAAc,KAAKl7C,SAAS,GAAKk7C,cAAc,CAAC55C,MAAM,GAAG,CAAC;MAEtF,IAAIb,KAAK,GAAGyuE,aAAa,CAACh4D,GAAG,CAAEugB,QAAQ,CAAE;MAEzC,IAAKh3B,KAAK,KAAKT,SAAS,IAAIS,KAAK,CAAC0sB,KAAK,KAAKkiD,iBAAiB,EAAG;QAE/D,IAAK5uE,KAAK,KAAKT,SAAS,EAAGS,KAAK,CAAC2qB,OAAO,CAAC3C,OAAO,EAAE;QAElD,IAAM6mD,gBAAgB,GAAG73C,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,KAAK33B,SAAS;QACxE,IAAMuvE,eAAe,GAAG93C,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,KAAK30B,SAAS;QACrE,IAAMwvE,cAAc,GAAG/3C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK,KAAKzgB,SAAS;QAEnE,IAAMyvE,YAAY,GAAGh4C,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,IAAI,EAAE;QAC5D,IAAM+3C,YAAY,GAAGj4C,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,IAAI,EAAE;QAC1D,IAAMg7C,WAAW,GAAGl4C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK,IAAI,EAAE;QAExD,IAAImvD,eAAe,GAAG,CAAC;QAEvB,IAAKN,gBAAgB,KAAK,IAAI,EAAGM,eAAe,GAAG,CAAC;QACpD,IAAKL,eAAe,KAAK,IAAI,EAAGK,eAAe,GAAG,CAAC;QACnD,IAAKJ,cAAc,KAAK,IAAI,EAAGI,eAAe,GAAG,CAAC;QAElD,IAAInrD,KAAK,GAAGgT,QAAQ,CAACC,UAAU,CAACC,QAAQ,CAACxK,KAAK,GAAGyiD,eAAe;QAChE,IAAIlrD,MAAM,GAAG,CAAC;QAEd,IAAKD,KAAK,GAAGkoC,YAAY,CAACyX,cAAc,EAAG;UAE1C1/C,MAAM,GAAGjT,IAAI,CAACoD,IAAI,CAAE4P,KAAK,GAAGkoC,YAAY,CAACyX,cAAc,CAAE;UACzD3/C,KAAK,GAAGkoC,YAAY,CAACyX,cAAc;QAEpC;QAEA,IAAMxkD,MAAM,GAAG,IAAIvJ,YAAY,CAAEoO,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAG2qD,iBAAiB,CAAE;QAEzE,IAAMjkD,OAAO,GAAG,IAAIO,gBAAgB,CAAE/L,MAAM,EAAE6E,KAAK,EAAEC,MAAM,EAAE2qD,iBAAiB,CAAE;QAChFjkD,OAAO,CAAC7tB,IAAI,GAAGkN,SAAS;QACxB2gB,OAAO,CAAC9C,WAAW,GAAG,IAAI;;QAE1B;;QAEA,IAAMunD,gBAAgB,GAAGD,eAAe,GAAG,CAAC;QAE5C,KAAM,IAAIruE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG8tE,iBAAiB,EAAE9tE,IAAC,EAAG,EAAG;UAE9C,IAAMuuE,WAAW,GAAGL,YAAY,CAAEluE,IAAC,CAAE;UACrC,IAAMwuE,WAAW,GAAGL,YAAY,CAAEnuE,IAAC,CAAE;UACrC,IAAMyuE,UAAU,GAAGL,WAAW,CAAEpuE,IAAC,CAAE;UAEnC,IAAM4Y,MAAM,GAAGsK,KAAK,GAAGC,MAAM,GAAG,CAAC,GAAGnjB,IAAC;UAErC,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG81C,WAAW,CAAC3iD,KAAK,EAAE6M,CAAC,EAAG,EAAG;YAE9C,IAAMikB,MAAM,GAAGjkB,CAAC,GAAG61C,gBAAgB;YAEnC,IAAKP,gBAAgB,KAAK,IAAI,EAAG;cAEhCP,KAAK,CAAC10D,mBAAmB,CAAEy1D,WAAW,EAAE91C,CAAC,CAAE;cAE3C,IAAK81C,WAAW,CAACjsD,UAAU,KAAK,IAAI,EAAG/M,WAAW,CAAEi4D,KAAK,EAAEe,WAAW,CAAE;cAExElwD,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAACp8D,CAAC;cACvCiN,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAAC97D,CAAC;cACvC2M,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAACjmD,CAAC;cACvClJ,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;YAElC;YAEA,IAAKsxB,eAAe,KAAK,IAAI,EAAG;cAE/BR,KAAK,CAAC10D,mBAAmB,CAAE01D,WAAW,EAAE/1C,CAAC,CAAE;cAE3C,IAAK+1C,WAAW,CAAClsD,UAAU,KAAK,IAAI,EAAG/M,WAAW,CAAEi4D,KAAK,EAAEgB,WAAW,CAAE;cAExEnwD,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAACp8D,CAAC;cACvCiN,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAAC97D,CAAC;cACvC2M,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAACjmD,CAAC;cACvClJ,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG,CAAC;YAElC;YAEA,IAAKuxB,cAAc,KAAK,IAAI,EAAG;cAE9BT,KAAK,CAAC10D,mBAAmB,CAAE21D,UAAU,EAAEh2C,CAAC,CAAE;cAE1C,IAAKg2C,UAAU,CAACnsD,UAAU,KAAK,IAAI,EAAG/M,WAAW,CAAEi4D,KAAK,EAAEiB,UAAU,CAAE;cAEtEpwD,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAACp8D,CAAC;cACvCiN,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,CAAC,CAAE,GAAG8wB,KAAK,CAAC97D,CAAC;cACvC2M,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,EAAE,CAAE,GAAG8wB,KAAK,CAACjmD,CAAC;cACxClJ,MAAM,CAAEzF,MAAM,GAAG8jC,MAAM,GAAG,EAAE,CAAE,GAAK+xB,UAAU,CAACl6B,QAAQ,KAAK,CAAC,GAAKi5B,KAAK,CAAChmD,CAAC,GAAG,CAAC;YAE7E;UAED;QAED;QAEAtoB,KAAK,GAAG;UACP0sB,KAAK,EAAEkiD,iBAAiB;UACxBjkD,OAAO,EAAEA,OAAO;UAChB/I,IAAI,EAAE,IAAItL,OAAO,CAAE0N,KAAK,EAAEC,MAAM;QACjC,CAAC;QAEDwqD,aAAa,CAACj5D,GAAG,CAAEwhB,QAAQ,EAAEh3B,KAAK,CAAE;QAEpC,SAASwvE,cAAcA,CAAA,EAAG;UAEzB7kD,OAAO,CAAC3C,OAAO,EAAE;UAEjBymD,aAAa,CAACzhB,MAAM,CAAEh2B,QAAQ,CAAE;UAEhCA,QAAQ,CAAC3mB,mBAAmB,CAAE,SAAS,EAAEm/D,cAAc,CAAE;QAE1D;QAEAx4C,QAAQ,CAACjnB,gBAAgB,CAAE,SAAS,EAAEy/D,cAAc,CAAE;MAEvD;;MAEA;;MAEA,IAAIC,kBAAkB,GAAG,CAAC;MAE1B,KAAM,IAAI3uE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6tE,gBAAgB,CAAC9tE,MAAM,EAAEC,IAAC,EAAG,EAAG;QAEpD2uE,kBAAkB,IAAId,gBAAgB,CAAE7tE,IAAC,CAAE;MAE5C;MAEA,IAAM4uE,kBAAkB,GAAG14C,QAAQ,CAACsiB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAGm2B,kBAAkB;MAErFtQ,OAAO,CAACwQ,WAAW,EAAE,CAACC,QAAQ,CAAE3jB,EAAE,EAAE,0BAA0B,EAAEyjB,kBAAkB,CAAE;MACpFvQ,OAAO,CAACwQ,WAAW,EAAE,CAACC,QAAQ,CAAE3jB,EAAE,EAAE,uBAAuB,EAAE0iB,gBAAgB,CAAE;MAE/ExP,OAAO,CAACwQ,WAAW,EAAE,CAACC,QAAQ,CAAE3jB,EAAE,EAAE,qBAAqB,EAAEjsD,KAAK,CAAC2qB,OAAO,EAAE7C,QAAQ,CAAE;MACpFq3C,OAAO,CAACwQ,WAAW,EAAE,CAACC,QAAQ,CAAE3jB,EAAE,EAAE,yBAAyB,EAAEjsD,KAAK,CAAC4hB,IAAI,CAAE;IAG5E,CAAC,MAAM;MAEN;MACA;;MAEA,IAAM/gB,MAAM,GAAG8tE,gBAAgB,KAAKpvE,SAAS,GAAG,CAAC,GAAGovE,gBAAgB,CAAC9tE,MAAM;MAE3E,IAAIgvE,UAAU,GAAGrB,cAAc,CAAEx3C,QAAQ,CAACgR,EAAE,CAAE;MAE9C,IAAK6nC,UAAU,KAAKtwE,SAAS,IAAIswE,UAAU,CAAChvE,MAAM,KAAKA,MAAM,EAAG;QAE/D;;QAEAgvE,UAAU,GAAG,EAAE;QAEf,KAAM,IAAI/uE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGD,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEnC+uE,UAAU,CAAE/uE,IAAC,CAAE,GAAG,CAAEA,IAAC,EAAE,CAAC,CAAE;QAE3B;QAEA0tE,cAAc,CAAEx3C,QAAQ,CAACgR,EAAE,CAAE,GAAG6nC,UAAU;MAE3C;;MAEA;;MAEA,KAAM,IAAI/uE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGD,MAAM,EAAEC,IAAC,EAAG,EAAG;QAEnC,IAAMo/C,SAAS,GAAG2vB,UAAU,CAAE/uE,IAAC,CAAE;QAEjCo/C,SAAS,CAAE,CAAC,CAAE,GAAGp/C,IAAC;QAClBo/C,SAAS,CAAE,CAAC,CAAE,GAAGyuB,gBAAgB,CAAE7tE,IAAC,CAAE;MAEvC;MAEA+uE,UAAU,CAACC,IAAI,CAAEzB,gBAAgB,CAAE;MAEnC,KAAM,IAAIvtE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAKA,IAAC,GAAGD,MAAM,IAAIgvE,UAAU,CAAE/uE,IAAC,CAAE,CAAE,CAAC,CAAE,EAAG;UAEzC4tE,cAAc,CAAE5tE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG+uE,UAAU,CAAE/uE,IAAC,CAAE,CAAE,CAAC,CAAE;UAC/C4tE,cAAc,CAAE5tE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG+uE,UAAU,CAAE/uE,IAAC,CAAE,CAAE,CAAC,CAAE;QAEhD,CAAC,MAAM;UAEN4tE,cAAc,CAAE5tE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAGyD,MAAM,CAACwrE,gBAAgB;UAClDrB,cAAc,CAAE5tE,IAAC,CAAE,CAAE,CAAC,CAAE,GAAG,CAAC;QAE7B;MAED;MAEA4tE,cAAc,CAACoB,IAAI,CAAE1B,aAAa,CAAE;MAEpC,IAAMY,aAAY,GAAGh4C,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ;MACtD,IAAM+3C,aAAY,GAAGj4C,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM;MAEpD,IAAIu7C,mBAAkB,GAAG,CAAC;MAE1B,KAAM,IAAI3uE,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9B,IAAMo/C,UAAS,GAAGwuB,cAAc,CAAE5tE,IAAC,CAAE;QACrC,IAAMyP,KAAK,GAAG2vC,UAAS,CAAE,CAAC,CAAE;QAC5B,IAAMjlD,OAAK,GAAGilD,UAAS,CAAE,CAAC,CAAE;QAE5B,IAAK3vC,KAAK,KAAKhM,MAAM,CAACwrE,gBAAgB,IAAI90E,OAAK,EAAG;UAEjD,IAAK+zE,aAAY,IAAIh4C,QAAQ,CAAC6iB,YAAY,CAAE,aAAa,GAAG/4C,IAAC,CAAE,KAAKkuE,aAAY,CAAEz+D,KAAK,CAAE,EAAG;YAE3FymB,QAAQ,CAAC8iB,YAAY,CAAE,aAAa,GAAGh5C,IAAC,EAAEkuE,aAAY,CAAEz+D,KAAK,CAAE,CAAE;UAElE;UAEA,IAAK0+D,aAAY,IAAIj4C,QAAQ,CAAC6iB,YAAY,CAAE,aAAa,GAAG/4C,IAAC,CAAE,KAAKmuE,aAAY,CAAE1+D,KAAK,CAAE,EAAG;YAE3FymB,QAAQ,CAAC8iB,YAAY,CAAE,aAAa,GAAGh5C,IAAC,EAAEmuE,aAAY,CAAE1+D,KAAK,CAAE,CAAE;UAElE;UAEA0vC,eAAe,CAAEn/C,IAAC,CAAE,GAAG7F,OAAK;UAC5Bw0E,mBAAkB,IAAIx0E,OAAK;QAE5B,CAAC,MAAM;UAEN,IAAK+zE,aAAY,IAAIh4C,QAAQ,CAACgjB,YAAY,CAAE,aAAa,GAAGl5C,IAAC,CAAE,KAAK,IAAI,EAAG;YAE1Ek2B,QAAQ,CAAC+iB,eAAe,CAAE,aAAa,GAAGj5C,IAAC,CAAE;UAE9C;UAEA,IAAKmuE,aAAY,IAAIj4C,QAAQ,CAACgjB,YAAY,CAAE,aAAa,GAAGl5C,IAAC,CAAE,KAAK,IAAI,EAAG;YAE1Ek2B,QAAQ,CAAC+iB,eAAe,CAAE,aAAa,GAAGj5C,IAAC,CAAE;UAE9C;UAEAm/C,eAAe,CAAEn/C,IAAC,CAAE,GAAG,CAAC;QAEzB;MAED;;MAEA;MACA;MACA;MACA,IAAM4uE,mBAAkB,GAAG14C,QAAQ,CAACsiB,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAGm2B,mBAAkB;MAErFtQ,OAAO,CAACwQ,WAAW,EAAE,CAACC,QAAQ,CAAE3jB,EAAE,EAAE,0BAA0B,EAAEyjB,mBAAkB,CAAE;MACpFvQ,OAAO,CAACwQ,WAAW,EAAE,CAACC,QAAQ,CAAE3jB,EAAE,EAAE,uBAAuB,EAAEhM,eAAe,CAAE;IAE/E;EAED;EAEA,OAAO;IAENxyB,MAAM,EAAEA;EAET,CAAC;AAEF;AAEA,SAASuiD,YAAYA,CAAE/jB,EAAE,EAAEjjB,UAAU,EAAE/R,UAAU,EAAEv3B,IAAI,EAAG;EAEzD,IAAIuwE,SAAS,GAAG,IAAI5jB,OAAO,EAAE;EAE7B,SAAS5+B,MAAMA,CAAE3rB,MAAM,EAAG;IAEzB,IAAM6pD,KAAK,GAAGjsD,IAAI,CAAC6nD,MAAM,CAACoE,KAAK;IAE/B,IAAM30B,QAAQ,GAAGl1B,MAAM,CAACk1B,QAAQ;IAChC,IAAMk5C,cAAc,GAAGlnC,UAAU,CAACvyB,GAAG,CAAE3U,MAAM,EAAEk1B,QAAQ,CAAE;;IAEzD;;IAEA,IAAKi5C,SAAS,CAACx5D,GAAG,CAAEy5D,cAAc,CAAE,KAAKvkB,KAAK,EAAG;MAEhD3iB,UAAU,CAACvb,MAAM,CAAEyiD,cAAc,CAAE;MAEnCD,SAAS,CAACz6D,GAAG,CAAE06D,cAAc,EAAEvkB,KAAK,CAAE;IAEvC;IAEA,IAAK7pD,MAAM,CAACunC,eAAe,EAAG;MAE7B,IAAKvnC,MAAM,CAACsO,gBAAgB,CAAE,SAAS,EAAE+/D,sBAAsB,CAAE,KAAK,KAAK,EAAG;QAE7EruE,MAAM,CAACiO,gBAAgB,CAAE,SAAS,EAAEogE,sBAAsB,CAAE;MAE7D;MAEAl5C,UAAU,CAACxJ,MAAM,CAAE3rB,MAAM,CAACwnC,cAAc,EAAE,KAAK,CAAE;MAEjD,IAAKxnC,MAAM,CAACynC,aAAa,KAAK,IAAI,EAAG;QAEpCtS,UAAU,CAACxJ,MAAM,CAAE3rB,MAAM,CAACynC,aAAa,EAAE,KAAK,CAAE;MAEjD;IAED;IAEA,OAAO2mC,cAAc;EAEtB;EAEA,SAASloD,OAAOA,CAAA,EAAG;IAElBioD,SAAS,GAAG,IAAI5jB,OAAO,EAAE;EAE1B;EAEA,SAAS8jB,sBAAsBA,CAAEz/D,KAAK,EAAG;IAExC,IAAM0/D,aAAa,GAAG1/D,KAAK,CAACjN,MAAM;IAElC2sE,aAAa,CAAC//D,mBAAmB,CAAE,SAAS,EAAE8/D,sBAAsB,CAAE;IAEtEl5C,UAAU,CAAC0Q,MAAM,CAAEyoC,aAAa,CAAC9mC,cAAc,CAAE;IAEjD,IAAK8mC,aAAa,CAAC7mC,aAAa,KAAK,IAAI,EAAGtS,UAAU,CAAC0Q,MAAM,CAAEyoC,aAAa,CAAC7mC,aAAa,CAAE;EAE7F;EAEA,OAAO;IAEN9b,MAAM,EAAEA,MAAM;IACdzF,OAAO,EAAEA;EAEV,CAAC;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMqoD,YAAY,GAAG,aAAc,IAAI1qD,OAAO,EAAE;AAChD,IAAM2qD,iBAAiB,GAAG,aAAc,IAAIplD,gBAAgB,EAAE;AAC9D,IAAMqlD,cAAc,GAAG,aAAc,IAAI1kD,aAAa,EAAE;AACxD,IAAM2kD,gBAAgB,GAAG,aAAc,IAAIhpB,WAAW,EAAE;;AAExD;;AAEA;;AAEA,IAAMipB,aAAa,GAAG,EAAE;AACxB,IAAMC,aAAa,GAAG,EAAE;;AAExB;;AAEA,IAAMC,SAAS,GAAG,IAAI/6D,YAAY,CAAE,EAAE,CAAE;AACxC,IAAMg7D,SAAS,GAAG,IAAIh7D,YAAY,CAAE,CAAC,CAAE;AACvC,IAAMi7D,SAAS,GAAG,IAAIj7D,YAAY,CAAE,CAAC,CAAE;;AAEvC;;AAEA,SAASk7D,OAAOA,CAAEngE,KAAK,EAAEogE,OAAO,EAAEC,SAAS,EAAG;EAE7C,IAAMC,SAAS,GAAGtgE,KAAK,CAAE,CAAC,CAAE;EAE5B,IAAKsgE,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAG,OAAOtgE,KAAK;EACnD;EACA;;EAEA,IAAMoB,CAAC,GAAGg/D,OAAO,GAAGC,SAAS;EAC7B,IAAIlzD,CAAC,GAAG2yD,aAAa,CAAE1+D,CAAC,CAAE;EAE1B,IAAK+L,CAAC,KAAKve,SAAS,EAAG;IAEtBue,CAAC,GAAG,IAAIlI,YAAY,CAAE7D,CAAC,CAAE;IACzB0+D,aAAa,CAAE1+D,CAAC,CAAE,GAAG+L,CAAC;EAEvB;EAEA,IAAKizD,OAAO,KAAK,CAAC,EAAG;IAEpBE,SAAS,CAACt3D,OAAO,CAAEmE,CAAC,EAAE,CAAC,CAAE;IAEzB,KAAM,IAAIhd,CAAC,GAAG,CAAC,EAAE4Y,MAAM,GAAG,CAAC,EAAE5Y,CAAC,KAAKiwE,OAAO,EAAE,EAAGjwE,CAAC,EAAG;MAElD4Y,MAAM,IAAIs3D,SAAS;MACnBrgE,KAAK,CAAE7P,CAAC,CAAE,CAAC6Y,OAAO,CAAEmE,CAAC,EAAEpE,MAAM,CAAE;IAEhC;EAED;EAEA,OAAOoE,CAAC;AAET;AAEA,SAASozD,WAAWA,CAAEx8D,CAAC,EAAEC,CAAC,EAAG;EAE5B,IAAKD,CAAC,CAAC7T,MAAM,KAAK8T,CAAC,CAAC9T,MAAM,EAAG,OAAO,KAAK;EAEzC,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG8D,CAAC,CAAC7T,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;IAE5C,IAAK4T,CAAC,CAAE5T,CAAC,CAAE,KAAK6T,CAAC,CAAE7T,CAAC,CAAE,EAAG,OAAO,KAAK;EAEtC;EAEA,OAAO,IAAI;AAEZ;AAEA,SAASg1C,SAASA,CAAEphC,CAAC,EAAEC,CAAC,EAAG;EAE1B,KAAM,IAAI7T,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG+D,CAAC,CAAC9T,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;IAE5C4T,CAAC,CAAE5T,CAAC,CAAE,GAAG6T,CAAC,CAAE7T,CAAC,CAAE;EAEhB;AAED;;AAEA;;AAEA,SAASqwE,aAAaA,CAAErpD,QAAQ,EAAE/V,CAAC,EAAG;EAErC,IAAI+L,CAAC,GAAG4yD,aAAa,CAAE3+D,CAAC,CAAE;EAE1B,IAAK+L,CAAC,KAAKve,SAAS,EAAG;IAEtBue,CAAC,GAAG,IAAIiB,UAAU,CAAEhN,CAAC,CAAE;IACvB2+D,aAAa,CAAE3+D,CAAC,CAAE,GAAG+L,CAAC;EAEvB;EAEA,KAAM,IAAIhd,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;IAEhCgd,CAAC,CAAEhd,CAAC,CAAE,GAAGgnB,QAAQ,CAACspD,mBAAmB,EAAE;EAExC;EAEA,OAAOtzD,CAAC;AAET;;AAEA;;AAEA;AACA;;AAEA;;AAEA,SAASuzD,WAAWA,CAAEplB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,EAAG;EAExB+0C,EAAE,CAACqlB,SAAS,CAAE,IAAI,CAACC,IAAI,EAAEr6D,CAAC,CAAE;EAE5ByzB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC;AAEf;;AAEA;;AAEA,SAASs6D,WAAWA,CAAEvlB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKzzB,CAAC,CAAChF,CAAC,KAAK3S,SAAS,EAAG;IAExB,IAAKorC,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAChF,CAAC,IAAIy4B,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAC1E,CAAC,EAAG;MAE/Cy5C,EAAE,CAACwlB,SAAS,CAAE,IAAI,CAACF,IAAI,EAAEr6D,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,CAAE;MAEnCm4B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAChF,CAAC;MAChBy4B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAC1E,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAK0+D,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;IAE/B+0C,EAAE,CAACylB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAEr6D,CAAC,CAAE;IAE7B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;EAEtB;AAED;AAEA,SAASy6D,WAAWA,CAAE1lB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKzzB,CAAC,CAAChF,CAAC,KAAK3S,SAAS,EAAG;IAExB,IAAKorC,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAChF,CAAC,IAAIy4B,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAC1E,CAAC,IAAIm4B,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAACmR,CAAC,EAAG;MAErE4jC,EAAE,CAAC2lB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAEr6D,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAACmR,CAAC,CAAE;MAExCsiB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAChF,CAAC;MAChBy4B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAC1E,CAAC;MAChBm4B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAACmR,CAAC;IAEjB;EAED,CAAC,MAAM,IAAKnR,CAAC,CAAC4G,CAAC,KAAKve,SAAS,EAAG;IAE/B,IAAKorC,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAC4G,CAAC,IAAI6sB,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAC+F,CAAC,IAAI0tB,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAACvC,CAAC,EAAG;MAErEs3C,EAAE,CAAC2lB,SAAS,CAAE,IAAI,CAACL,IAAI,EAAEr6D,CAAC,CAAC4G,CAAC,EAAE5G,CAAC,CAAC+F,CAAC,EAAE/F,CAAC,CAACvC,CAAC,CAAE;MAExCg2B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAC4G,CAAC;MAChB6sB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAC+F,CAAC;MAChB0tB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAACvC,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAKu8D,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;IAE/B+0C,EAAE,CAAC4lB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAEr6D,CAAC,CAAE;IAE7B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;EAEtB;AAED;AAEA,SAAS46D,WAAWA,CAAE7lB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKzzB,CAAC,CAAChF,CAAC,KAAK3S,SAAS,EAAG;IAExB,IAAKorC,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAChF,CAAC,IAAIy4B,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAAC1E,CAAC,IAAIm4B,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAACmR,CAAC,IAAIsiB,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,CAACoR,CAAC,EAAG;MAE3F2jC,EAAE,CAAC8lB,SAAS,CAAE,IAAI,CAACR,IAAI,EAAEr6D,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAACmR,CAAC,EAAEnR,CAAC,CAACoR,CAAC,CAAE;MAE7CqiB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAChF,CAAC;MAChBy4B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAAC1E,CAAC;MAChBm4B,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAACmR,CAAC;MAChBsiB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC,CAACoR,CAAC;IAEjB;EAED,CAAC,MAAM;IAEN,IAAK4oD,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;IAE/B+0C,EAAE,CAAC+lB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAEr6D,CAAC,CAAE;IAE7B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;EAEtB;AAED;;AAEA;;AAEA,SAAS+6D,UAAUA,CAAEhmB,EAAE,EAAE/0C,CAAC,EAAG;EAE5B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM3yB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;EAE3B,IAAKA,QAAQ,KAAKzY,SAAS,EAAG;IAE7B,IAAK2xE,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;IAE/B+0C,EAAE,CAACimB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEr6D,CAAC,CAAE;IAE1C4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;EAEtB,CAAC,MAAM;IAEN,IAAKg6D,WAAW,CAAEvmC,KAAK,EAAE3yB,QAAQ,CAAE,EAAG;IAEtC64D,SAAS,CAACr7D,GAAG,CAAEwC,QAAQ,CAAE;IAEzBi0C,EAAE,CAACimB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAEV,SAAS,CAAE;IAElD/6B,SAAS,CAAEnL,KAAK,EAAE3yB,QAAQ,CAAE;EAE7B;AAED;AAEA,SAASm6D,UAAUA,CAAElmB,EAAE,EAAE/0C,CAAC,EAAG;EAE5B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM3yB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;EAE3B,IAAKA,QAAQ,KAAKzY,SAAS,EAAG;IAE7B,IAAK2xE,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;IAE/B+0C,EAAE,CAACmmB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEr6D,CAAC,CAAE;IAE1C4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;EAEtB,CAAC,MAAM;IAEN,IAAKg6D,WAAW,CAAEvmC,KAAK,EAAE3yB,QAAQ,CAAE,EAAG;IAEtC44D,SAAS,CAACp7D,GAAG,CAAEwC,QAAQ,CAAE;IAEzBi0C,EAAE,CAACmmB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAEX,SAAS,CAAE;IAElD96B,SAAS,CAAEnL,KAAK,EAAE3yB,QAAQ,CAAE;EAE7B;AAED;AAEA,SAASq6D,UAAUA,CAAEpmB,EAAE,EAAE/0C,CAAC,EAAG;EAE5B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM3yB,QAAQ,GAAGd,CAAC,CAACc,QAAQ;EAE3B,IAAKA,QAAQ,KAAKzY,SAAS,EAAG;IAE7B,IAAK2xE,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;IAE/B+0C,EAAE,CAACqmB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEr6D,CAAC,CAAE;IAE1C4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;EAEtB,CAAC,MAAM;IAEN,IAAKg6D,WAAW,CAAEvmC,KAAK,EAAE3yB,QAAQ,CAAE,EAAG;IAEtC24D,SAAS,CAACn7D,GAAG,CAAEwC,QAAQ,CAAE;IAEzBi0C,EAAE,CAACqmB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAEZ,SAAS,CAAE;IAElD76B,SAAS,CAAEnL,KAAK,EAAE3yB,QAAQ,CAAE;EAE7B;AAED;;AAEA;;AAEA,SAASu6D,WAAWA,CAAEtmB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,EAAG;EAExB+0C,EAAE,CAACumB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEr6D,CAAC,CAAE;EAE5ByzB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC;AAEf;;AAEA;;AAEA,SAASu7D,WAAWA,CAAExmB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKumC,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;EAE/B+0C,EAAE,CAACymB,UAAU,CAAE,IAAI,CAACnB,IAAI,EAAEr6D,CAAC,CAAE;EAE7B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;AAEtB;AAEA,SAASy7D,WAAWA,CAAE1mB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKumC,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;EAE/B+0C,EAAE,CAAC2mB,UAAU,CAAE,IAAI,CAACrB,IAAI,EAAEr6D,CAAC,CAAE;EAE7B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;AAEtB;AAEA,SAAS27D,WAAWA,CAAE5mB,EAAE,EAAE/0C,CAAC,EAAG;EAE7B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKumC,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;EAE/B+0C,EAAE,CAAC6mB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAEr6D,CAAC,CAAE;EAE7B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;AAEtB;;AAEA;;AAEA,SAAS67D,YAAYA,CAAE9mB,EAAE,EAAE/0C,CAAC,EAAG;EAE9B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAKzzB,CAAC,EAAG;EAExB+0C,EAAE,CAAC+mB,UAAU,CAAE,IAAI,CAACzB,IAAI,EAAEr6D,CAAC,CAAE;EAE7ByzB,KAAK,CAAE,CAAC,CAAE,GAAGzzB,CAAC;AAEf;;AAEA;;AAEA,SAAS+7D,YAAYA,CAAEhnB,EAAE,EAAE/0C,CAAC,EAAG;EAE9B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKumC,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;EAE/B+0C,EAAE,CAACinB,WAAW,CAAE,IAAI,CAAC3B,IAAI,EAAEr6D,CAAC,CAAE;EAE9B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;AAEtB;AAEA,SAASi8D,YAAYA,CAAElnB,EAAE,EAAE/0C,CAAC,EAAG;EAE9B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKumC,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;EAE/B+0C,EAAE,CAACmnB,WAAW,CAAE,IAAI,CAAC7B,IAAI,EAAEr6D,CAAC,CAAE;EAE9B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;AAEtB;AAEA,SAASm8D,YAAYA,CAAEpnB,EAAE,EAAE/0C,CAAC,EAAG;EAE9B,IAAMyzB,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB,IAAKumC,WAAW,CAAEvmC,KAAK,EAAEzzB,CAAC,CAAE,EAAG;EAE/B+0C,EAAE,CAACqnB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAEr6D,CAAC,CAAE;EAE9B4+B,SAAS,CAAEnL,KAAK,EAAEzzB,CAAC,CAAE;AAEtB;;AAGA;;AAEA,SAASq8D,UAAUA,CAAEtnB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAEtC,IAAM6iB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM6oC,IAAI,GAAG1rD,QAAQ,CAACspD,mBAAmB,EAAE;EAE3C,IAAKzmC,KAAK,CAAE,CAAC,CAAE,KAAK6oC,IAAI,EAAG;IAE1BvnB,EAAE,CAACumB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEiC,IAAI,CAAE;IAC/B7oC,KAAK,CAAE,CAAC,CAAE,GAAG6oC,IAAI;EAElB;EAEA1rD,QAAQ,CAAC2rD,YAAY,CAAEv8D,CAAC,IAAIm5D,YAAY,EAAEmD,IAAI,CAAE;AAEjD;AAEA,SAASE,YAAYA,CAAEznB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAExC,IAAM6iB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM6oC,IAAI,GAAG1rD,QAAQ,CAACspD,mBAAmB,EAAE;EAE3C,IAAKzmC,KAAK,CAAE,CAAC,CAAE,KAAK6oC,IAAI,EAAG;IAE1BvnB,EAAE,CAACumB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEiC,IAAI,CAAE;IAC/B7oC,KAAK,CAAE,CAAC,CAAE,GAAG6oC,IAAI;EAElB;EAEA1rD,QAAQ,CAAC6rD,YAAY,CAAEz8D,CAAC,IAAIq5D,cAAc,EAAEiD,IAAI,CAAE;AAEnD;AAEA,SAASI,UAAUA,CAAE3nB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAEtC,IAAM6iB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM6oC,IAAI,GAAG1rD,QAAQ,CAACspD,mBAAmB,EAAE;EAE3C,IAAKzmC,KAAK,CAAE,CAAC,CAAE,KAAK6oC,IAAI,EAAG;IAE1BvnB,EAAE,CAACumB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEiC,IAAI,CAAE;IAC/B7oC,KAAK,CAAE,CAAC,CAAE,GAAG6oC,IAAI;EAElB;EAEA1rD,QAAQ,CAAC+rD,cAAc,CAAE38D,CAAC,IAAIs5D,gBAAgB,EAAEgD,IAAI,CAAE;AAEvD;AAEA,SAASM,iBAAiBA,CAAE7nB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAE7C,IAAM6iB,KAAK,GAAG,IAAI,CAACA,KAAK;EACxB,IAAM6oC,IAAI,GAAG1rD,QAAQ,CAACspD,mBAAmB,EAAE;EAE3C,IAAKzmC,KAAK,CAAE,CAAC,CAAE,KAAK6oC,IAAI,EAAG;IAE1BvnB,EAAE,CAACumB,SAAS,CAAE,IAAI,CAACjB,IAAI,EAAEiC,IAAI,CAAE;IAC/B7oC,KAAK,CAAE,CAAC,CAAE,GAAG6oC,IAAI;EAElB;EAEA1rD,QAAQ,CAACisD,iBAAiB,CAAE78D,CAAC,IAAIo5D,iBAAiB,EAAEkD,IAAI,CAAE;AAE3D;;AAEA;;AAEA,SAASQ,iBAAiBA,CAAEl3E,IAAI,EAAG;EAElC,QAASA,IAAI;IAEZ,KAAK,MAAM;MAAE,OAAOu0E,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;IACjC,KAAK,MAAM;MAAE,OAAOG,WAAW;IAAE;;IAEjC,KAAK,MAAM;MAAE,OAAOG,UAAU;IAAE;IAChC,KAAK,MAAM;MAAE,OAAOE,UAAU;IAAE;IAChC,KAAK,MAAM;MAAE,OAAOE,UAAU;IAAE;;IAEhC,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;IAC9C,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,WAAW;IAAE;;IAE9C,KAAK,MAAM;MAAE,OAAOE,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOE,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOE,YAAY;IAAE;IAClC,KAAK,MAAM;MAAE,OAAOE,YAAY;IAAE;;IAElC,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,UAAU;IAElB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOG,YAAY;IAEpB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,UAAU;IAElB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,iBAAiB;EAAC;AAI5B;;AAGA;;AAEA,SAASG,gBAAgBA,CAAEhoB,EAAE,EAAE/0C,CAAC,EAAG;EAElC+0C,EAAE,CAACioB,UAAU,CAAE,IAAI,CAAC3C,IAAI,EAAEr6D,CAAC,CAAE;AAE9B;;AAEA;;AAEA,SAASi9D,gBAAgBA,CAAEloB,EAAE,EAAE/0C,CAAC,EAAG;EAElC,IAAM0N,IAAI,GAAGksD,OAAO,CAAE55D,CAAC,EAAE,IAAI,CAAC0K,IAAI,EAAE,CAAC,CAAE;EAEvCqqC,EAAE,CAACylB,UAAU,CAAE,IAAI,CAACH,IAAI,EAAE3sD,IAAI,CAAE;AAEjC;AAEA,SAASwvD,gBAAgBA,CAAEnoB,EAAE,EAAE/0C,CAAC,EAAG;EAElC,IAAM0N,IAAI,GAAGksD,OAAO,CAAE55D,CAAC,EAAE,IAAI,CAAC0K,IAAI,EAAE,CAAC,CAAE;EAEvCqqC,EAAE,CAAC4lB,UAAU,CAAE,IAAI,CAACN,IAAI,EAAE3sD,IAAI,CAAE;AAEjC;AAEA,SAASyvD,gBAAgBA,CAAEpoB,EAAE,EAAE/0C,CAAC,EAAG;EAElC,IAAM0N,IAAI,GAAGksD,OAAO,CAAE55D,CAAC,EAAE,IAAI,CAAC0K,IAAI,EAAE,CAAC,CAAE;EAEvCqqC,EAAE,CAAC+lB,UAAU,CAAE,IAAI,CAACT,IAAI,EAAE3sD,IAAI,CAAE;AAEjC;;AAEA;;AAEA,SAAS0vD,eAAeA,CAAEroB,EAAE,EAAE/0C,CAAC,EAAG;EAEjC,IAAM0N,IAAI,GAAGksD,OAAO,CAAE55D,CAAC,EAAE,IAAI,CAAC0K,IAAI,EAAE,CAAC,CAAE;EAEvCqqC,EAAE,CAACimB,gBAAgB,CAAE,IAAI,CAACX,IAAI,EAAE,KAAK,EAAE3sD,IAAI,CAAE;AAE9C;AAEA,SAAS2vD,eAAeA,CAAEtoB,EAAE,EAAE/0C,CAAC,EAAG;EAEjC,IAAM0N,IAAI,GAAGksD,OAAO,CAAE55D,CAAC,EAAE,IAAI,CAAC0K,IAAI,EAAE,CAAC,CAAE;EAEvCqqC,EAAE,CAACmmB,gBAAgB,CAAE,IAAI,CAACb,IAAI,EAAE,KAAK,EAAE3sD,IAAI,CAAE;AAE9C;AAEA,SAAS4vD,eAAeA,CAAEvoB,EAAE,EAAE/0C,CAAC,EAAG;EAEjC,IAAM0N,IAAI,GAAGksD,OAAO,CAAE55D,CAAC,EAAE,IAAI,CAAC0K,IAAI,EAAE,EAAE,CAAE;EAExCqqC,EAAE,CAACqmB,gBAAgB,CAAE,IAAI,CAACf,IAAI,EAAE,KAAK,EAAE3sD,IAAI,CAAE;AAE9C;;AAEA;;AAEA,SAAS6vD,gBAAgBA,CAAExoB,EAAE,EAAE/0C,CAAC,EAAG;EAElC+0C,EAAE,CAACyoB,UAAU,CAAE,IAAI,CAACnD,IAAI,EAAEr6D,CAAC,CAAE;AAE9B;;AAEA;;AAEA,SAASy9D,gBAAgBA,CAAE1oB,EAAE,EAAE/0C,CAAC,EAAG;EAElC+0C,EAAE,CAACymB,UAAU,CAAE,IAAI,CAACnB,IAAI,EAAEr6D,CAAC,CAAE;AAE9B;AAEA,SAAS09D,gBAAgBA,CAAE3oB,EAAE,EAAE/0C,CAAC,EAAG;EAElC+0C,EAAE,CAAC2mB,UAAU,CAAE,IAAI,CAACrB,IAAI,EAAEr6D,CAAC,CAAE;AAE9B;AAEA,SAAS29D,gBAAgBA,CAAE5oB,EAAE,EAAE/0C,CAAC,EAAG;EAElC+0C,EAAE,CAAC6mB,UAAU,CAAE,IAAI,CAACvB,IAAI,EAAEr6D,CAAC,CAAE;AAE9B;;AAEA;;AAEA,SAAS49D,iBAAiBA,CAAE7oB,EAAE,EAAE/0C,CAAC,EAAG;EAEnC+0C,EAAE,CAAC8oB,WAAW,CAAE,IAAI,CAACxD,IAAI,EAAEr6D,CAAC,CAAE;AAE/B;;AAEA;;AAEA,SAAS89D,iBAAiBA,CAAE/oB,EAAE,EAAE/0C,CAAC,EAAG;EAEnC+0C,EAAE,CAACinB,WAAW,CAAE,IAAI,CAAC3B,IAAI,EAAEr6D,CAAC,CAAE;AAE/B;AAEA,SAAS+9D,iBAAiBA,CAAEhpB,EAAE,EAAE/0C,CAAC,EAAG;EAEnC+0C,EAAE,CAACmnB,WAAW,CAAE,IAAI,CAAC7B,IAAI,EAAEr6D,CAAC,CAAE;AAE/B;AAEA,SAASg+D,iBAAiBA,CAAEjpB,EAAE,EAAE/0C,CAAC,EAAG;EAEnC+0C,EAAE,CAACqnB,WAAW,CAAE,IAAI,CAAC/B,IAAI,EAAEr6D,CAAC,CAAE;AAE/B;;AAGA;;AAEA,SAASi+D,eAAeA,CAAElpB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAE3C,IAAM/V,CAAC,GAAGmF,CAAC,CAACrW,MAAM;EAElB,IAAMu0E,KAAK,GAAGjE,aAAa,CAAErpD,QAAQ,EAAE/V,CAAC,CAAE;EAE1Ck6C,EAAE,CAACyoB,UAAU,CAAE,IAAI,CAACnD,IAAI,EAAE6D,KAAK,CAAE;EAEjC,KAAM,IAAIt0E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;IAEhCgnB,QAAQ,CAAC2rD,YAAY,CAAEv8D,CAAC,CAAEpW,CAAC,CAAE,IAAIuvE,YAAY,EAAE+E,KAAK,CAAEt0E,CAAC,CAAE,CAAE;EAE5D;AAED;AAEA,SAASu0E,gBAAgBA,CAAEppB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAE5C,IAAM/V,CAAC,GAAGmF,CAAC,CAACrW,MAAM;EAElB,IAAMu0E,KAAK,GAAGjE,aAAa,CAAErpD,QAAQ,EAAE/V,CAAC,CAAE;EAE1Ck6C,EAAE,CAACyoB,UAAU,CAAE,IAAI,CAACnD,IAAI,EAAE6D,KAAK,CAAE;EAEjC,KAAM,IAAIt0E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;IAEhCgnB,QAAQ,CAAC6rD,YAAY,CAAEz8D,CAAC,CAAEpW,CAAC,CAAE,IAAIyvE,cAAc,EAAE6E,KAAK,CAAEt0E,CAAC,CAAE,CAAE;EAE9D;AAED;AAEA,SAASw0E,eAAeA,CAAErpB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAE3C,IAAM/V,CAAC,GAAGmF,CAAC,CAACrW,MAAM;EAElB,IAAMu0E,KAAK,GAAGjE,aAAa,CAAErpD,QAAQ,EAAE/V,CAAC,CAAE;EAE1Ck6C,EAAE,CAACyoB,UAAU,CAAE,IAAI,CAACnD,IAAI,EAAE6D,KAAK,CAAE;EAEjC,KAAM,IAAIt0E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;IAEhCgnB,QAAQ,CAAC+rD,cAAc,CAAE38D,CAAC,CAAEpW,CAAC,CAAE,IAAI0vE,gBAAgB,EAAE4E,KAAK,CAAEt0E,CAAC,CAAE,CAAE;EAElE;AAED;AAEA,SAASy0E,qBAAqBA,CAAEtpB,EAAE,EAAE/0C,CAAC,EAAE4Q,QAAQ,EAAG;EAEjD,IAAM/V,CAAC,GAAGmF,CAAC,CAACrW,MAAM;EAElB,IAAMu0E,KAAK,GAAGjE,aAAa,CAAErpD,QAAQ,EAAE/V,CAAC,CAAE;EAE1Ck6C,EAAE,CAACyoB,UAAU,CAAE,IAAI,CAACnD,IAAI,EAAE6D,KAAK,CAAE;EAEjC,KAAM,IAAIt0E,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;IAEhCgnB,QAAQ,CAACisD,iBAAiB,CAAE78D,CAAC,CAAEpW,CAAC,CAAE,IAAIwvE,iBAAiB,EAAE8E,KAAK,CAAEt0E,CAAC,CAAE,CAAE;EAEtE;AAED;;AAGA;;AAEA,SAAS00E,kBAAkBA,CAAE14E,IAAI,EAAG;EAEnC,QAASA,IAAI;IAEZ,KAAK,MAAM;MAAE,OAAOm3E,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOE,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACtC,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;;IAEtC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;IACrC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;IACrC,KAAK,MAAM;MAAE,OAAOC,eAAe;IAAE;;IAErC,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOE,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;IACnD,KAAK,MAAM;IAAE,KAAK,MAAM;MAAE,OAAOC,gBAAgB;IAAE;;IAEnD,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOE,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;IACvC,KAAK,MAAM;MAAE,OAAOC,iBAAiB;IAAE;;IAEvC,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,eAAe;IAEvB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOE,gBAAgB;IAExB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,eAAe;IAEvB,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM,CAAC,CAAC;IACb,KAAK,MAAM;MAAE;MACZ,OAAOC,qBAAqB;EAAC;AAIhC;;AAEA;AAAA,IAEME,aAAa,gBAAA5xE,YAAA,CAElB,SAAA4xE,cAAaztC,EAAE,EAAE0tC,UAAU,EAAEnE,IAAI,EAAG;EAAAluE,eAAA,OAAAoyE,aAAA;EAEnC,IAAI,CAACztC,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACupC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAAC5mC,KAAK,GAAG,EAAE;EACf,IAAI,CAACilC,QAAQ,GAAGoE,iBAAiB,CAAE0B,UAAU,CAAC54E,IAAI,CAAE;;EAEpD;AAED,CAAC;AAAA,IAII64E,gBAAgB,gBAAA9xE,YAAA,CAErB,SAAA8xE,iBAAa3tC,EAAE,EAAE0tC,UAAU,EAAEnE,IAAI,EAAG;EAAAluE,eAAA,OAAAsyE,gBAAA;EAEnC,IAAI,CAAC3tC,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACupC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAAC5mC,KAAK,GAAG,EAAE;EACf,IAAI,CAAC/oB,IAAI,GAAG8zD,UAAU,CAAC9zD,IAAI;EAC3B,IAAI,CAACguD,QAAQ,GAAG4F,kBAAkB,CAAEE,UAAU,CAAC54E,IAAI,CAAE;;EAErD;AAED,CAAC;AAAA,IAII84E,iBAAiB;EAEtB,SAAAA,kBAAa5tC,EAAE,EAAG;IAAA3kC,eAAA,OAAAuyE,iBAAA;IAEjB,IAAI,CAAC5tC,EAAE,GAAGA,EAAE;IAEZ,IAAI,CAAC6tC,GAAG,GAAG,EAAE;IACb,IAAI,CAAC/jC,GAAG,GAAG,CAAC,CAAC;EAEd;EAACjuC,YAAA,CAAA+xE,iBAAA;IAAA76E,GAAA;IAAAE,KAAA,EAED,SAAA20E,SAAU3jB,EAAE,EAAEhxD,KAAK,EAAE6sB,QAAQ,EAAG;MAE/B,IAAM+tD,GAAG,GAAG,IAAI,CAACA,GAAG;MAEpB,KAAM,IAAI/0E,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG8jE,GAAG,CAACh1E,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEhD,IAAMk0B,CAAC,GAAG6gD,GAAG,CAAE/0E,CAAC,CAAE;QAClBk0B,CAAC,CAAC46C,QAAQ,CAAE3jB,EAAE,EAAEhxD,KAAK,CAAE+5B,CAAC,CAACgT,EAAE,CAAE,EAAElgB,QAAQ,CAAE;MAE1C;IAED;EAAC;EAAA,OAAA8tD,iBAAA;AAAA,KAIF;AAEA;AAEA,IAAME,UAAU,GAAG,qBAAqB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAUA,CAAEC,SAAS,EAAEC,aAAa,EAAG;EAE/CD,SAAS,CAACH,GAAG,CAACv1E,IAAI,CAAE21E,aAAa,CAAE;EACnCD,SAAS,CAAClkC,GAAG,CAAEmkC,aAAa,CAACjuC,EAAE,CAAE,GAAGiuC,aAAa;AAElD;AAEA,SAASC,YAAYA,CAAER,UAAU,EAAEnE,IAAI,EAAEyE,SAAS,EAAG;EAEpD,IAAMG,IAAI,GAAGT,UAAU,CAACt0E,IAAI;IAC3Bg1E,UAAU,GAAGD,IAAI,CAACt1E,MAAM;;EAEzB;EACAi1E,UAAU,CAACO,SAAS,GAAG,CAAC;EAExB,OAAQ,IAAI,EAAG;IAEd,IAAMC,KAAK,GAAGR,UAAU,CAACr0D,IAAI,CAAE00D,IAAI,CAAE;MACpCI,QAAQ,GAAGT,UAAU,CAACO,SAAS;IAEhC,IAAIruC,IAAE,GAAGsuC,KAAK,CAAE,CAAC,CAAE;IACnB,IAAME,SAAS,GAAGF,KAAK,CAAE,CAAC,CAAE,KAAK,GAAG;MACnCG,SAAS,GAAGH,KAAK,CAAE,CAAC,CAAE;IAEvB,IAAKE,SAAS,EAAGxuC,IAAE,GAAGA,IAAE,GAAG,CAAC,CAAC,CAAC;;IAE9B,IAAKyuC,SAAS,KAAKl3E,SAAS,IAAIk3E,SAAS,KAAK,GAAG,IAAIF,QAAQ,GAAG,CAAC,KAAKH,UAAU,EAAG;MAElF;;MAEAL,UAAU,CAAEC,SAAS,EAAES,SAAS,KAAKl3E,SAAS,GAC7C,IAAIk2E,aAAa,CAAEztC,IAAE,EAAE0tC,UAAU,EAAEnE,IAAI,CAAE,GACzC,IAAIoE,gBAAgB,CAAE3tC,IAAE,EAAE0tC,UAAU,EAAEnE,IAAI,CAAE,CAAE;MAE/C;IAED,CAAC,MAAM;MAEN;;MAEA,IAAMz/B,GAAG,GAAGkkC,SAAS,CAAClkC,GAAG;MACzB,IAAIlyC,IAAI,GAAGkyC,GAAG,CAAE9J,IAAE,CAAE;MAEpB,IAAKpoC,IAAI,KAAKL,SAAS,EAAG;QAEzBK,IAAI,GAAG,IAAIg2E,iBAAiB,CAAE5tC,IAAE,CAAE;QAClC+tC,UAAU,CAAEC,SAAS,EAAEp2E,IAAI,CAAE;MAE9B;MAEAo2E,SAAS,GAAGp2E,IAAI;IAEjB;EAED;AAED;;AAEA;AAAA,IAEM82E,aAAa;EAElB,SAAAA,cAAazqB,EAAE,EAAEkT,OAAO,EAAG;IAAA97D,eAAA,OAAAqzE,aAAA;IAE1B,IAAI,CAACb,GAAG,GAAG,EAAE;IACb,IAAI,CAAC/jC,GAAG,GAAG,CAAC,CAAC;IAEb,IAAM//B,CAAC,GAAGk6C,EAAE,CAAC0qB,mBAAmB,CAAExX,OAAO,EAAE,KAAK,CAAE;IAElD,KAAM,IAAIr+D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;MAE9B,IAAMpB,IAAI,GAAGusD,EAAE,CAAC2qB,gBAAgB,CAAEzX,OAAO,EAAEr+D,CAAC,CAAE;QAC7CywE,IAAI,GAAGtlB,EAAE,CAAC4qB,kBAAkB,CAAE1X,OAAO,EAAEz/D,IAAI,CAAC0B,IAAI,CAAE;MAEnD80E,YAAY,CAAEx2E,IAAI,EAAE6xE,IAAI,EAAE,IAAI,CAAE;IAEjC;EAED;EAAC1tE,YAAA,CAAA6yE,aAAA;IAAA37E,GAAA;IAAAE,KAAA,EAED,SAAA20E,SAAU3jB,EAAE,EAAE7qD,IAAI,EAAEnG,KAAK,EAAE6sB,QAAQ,EAAG;MAErC,IAAMkN,CAAC,GAAG,IAAI,CAAC8c,GAAG,CAAE1wC,IAAI,CAAE;MAE1B,IAAK4zB,CAAC,KAAKz1B,SAAS,EAAGy1B,CAAC,CAAC46C,QAAQ,CAAE3jB,EAAE,EAAEhxD,KAAK,EAAE6sB,QAAQ,CAAE;IAEzD;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA67E,YAAa7qB,EAAE,EAAEnqD,MAAM,EAAEV,IAAI,EAAG;MAE/B,IAAM8V,CAAC,GAAGpV,MAAM,CAAEV,IAAI,CAAE;MAExB,IAAK8V,CAAC,KAAK3X,SAAS,EAAG,IAAI,CAACqwE,QAAQ,CAAE3jB,EAAE,EAAE7qD,IAAI,EAAE8V,CAAC,CAAE;IAEpD;EAAC;IAAAnc,GAAA;IAAAE,KAAA,EAED,SAAA87E,OAAe9qB,EAAE,EAAE4pB,GAAG,EAAEt4E,MAAM,EAAEuqB,QAAQ,EAAG;MAE1C,KAAM,IAAIhnB,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG8jE,GAAG,CAACh1E,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEhD,IAAMk0B,CAAC,GAAG6gD,GAAG,CAAE/0E,CAAC,CAAE;UACjBoW,CAAC,GAAG3Z,MAAM,CAAEy3B,CAAC,CAACgT,EAAE,CAAE;QAEnB,IAAK9wB,CAAC,CAAC2Q,WAAW,KAAK,KAAK,EAAG;UAE9B;UACAmN,CAAC,CAAC46C,QAAQ,CAAE3jB,EAAE,EAAE/0C,CAAC,CAACjc,KAAK,EAAE6sB,QAAQ,CAAE;QAEpC;MAED;IAED;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAA+7E,aAAqBnB,GAAG,EAAEt4E,MAAM,EAAG;MAElC,IAAMugB,CAAC,GAAG,EAAE;MAEZ,KAAM,IAAIhd,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG8jE,GAAG,CAACh1E,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEhD,IAAMk0B,CAAC,GAAG6gD,GAAG,CAAE/0E,CAAC,CAAE;QAClB,IAAKk0B,CAAC,CAACgT,EAAE,IAAIzqC,MAAM,EAAGugB,CAAC,CAACxd,IAAI,CAAE00B,CAAC,CAAE;MAElC;MAEA,OAAOlX,CAAC;IAET;EAAC;EAAA,OAAA44D,aAAA;AAAA;AAIF,SAASO,WAAWA,CAAEhrB,EAAE,EAAEnvD,IAAI,EAAEykB,MAAM,EAAG;EAExC,IAAM2mC,MAAM,GAAG+D,EAAE,CAACirB,YAAY,CAAEp6E,IAAI,CAAE;EAEtCmvD,EAAE,CAACkrB,YAAY,CAAEjvB,MAAM,EAAE3mC,MAAM,CAAE;EACjC0qC,EAAE,CAACmrB,aAAa,CAAElvB,MAAM,CAAE;EAE1B,OAAOA,MAAM;AAEd;AAEA,IAAImvB,cAAc,GAAG,CAAC;AAEtB,SAASC,YAAYA,CAAE/1D,MAAM,EAAEg2D,SAAS,EAAG;EAE1C,IAAMvJ,KAAK,GAAGzsD,MAAM,CAACi2D,KAAK,CAAE,IAAI,CAAE;EAClC,IAAMC,MAAM,GAAG,EAAE;EAEjB,IAAMhyD,IAAI,GAAGzU,IAAI,CAACa,GAAG,CAAE0lE,SAAS,GAAG,CAAC,EAAE,CAAC,CAAE;EACzC,IAAMG,EAAE,GAAG1mE,IAAI,CAACY,GAAG,CAAE2lE,SAAS,GAAG,CAAC,EAAEvJ,KAAK,CAACntE,MAAM,CAAE;EAElD,KAAM,IAAIC,CAAC,GAAG2kB,IAAI,EAAE3kB,CAAC,GAAG42E,EAAE,EAAE52E,CAAC,EAAG,EAAG;IAElC,IAAMooD,IAAI,GAAGpoD,CAAC,GAAG,CAAC;IAClB22E,MAAM,CAACn3E,IAAI,IAAAsiB,MAAA,CAAKsmC,IAAI,KAAKquB,SAAS,GAAG,GAAG,GAAG,GAAG,OAAA30D,MAAA,CAAIsmC,IAAI,QAAAtmC,MAAA,CAAKorD,KAAK,CAAEltE,CAAC,CAAE,EAAI;EAE1E;EAEA,OAAO22E,MAAM,CAACE,IAAI,CAAE,IAAI,CAAE;AAE3B;AAEA,SAASC,qBAAqBA,CAAEnxD,QAAQ,EAAG;EAE1C,QAASA,QAAQ;IAEhB,KAAKhZ,cAAc;MAClB,OAAO,CAAE,QAAQ,EAAE,WAAW,CAAE;IACjC,KAAKC,YAAY;MAChB,OAAO,CAAE,MAAM,EAAE,WAAW,CAAE;IAC/B;MACC+H,OAAO,CAACC,IAAI,CAAE,2CAA2C,EAAE+Q,QAAQ,CAAE;MACrE,OAAO,CAAE,QAAQ,EAAE,WAAW,CAAE;EAAC;AAIpC;AAEA,SAASoxD,eAAeA,CAAE5rB,EAAE,EAAE/D,MAAM,EAAEprD,IAAI,EAAG;EAE5C,IAAMg7E,MAAM,GAAG7rB,EAAE,CAAC8rB,kBAAkB,CAAE7vB,MAAM,EAAE,KAAK,CAAE;EACrD,IAAM8vB,MAAM,GAAG/rB,EAAE,CAACgsB,gBAAgB,CAAE/vB,MAAM,CAAE,CAACgwB,IAAI,EAAE;EAEnD,IAAKJ,MAAM,IAAIE,MAAM,KAAK,EAAE,EAAG,OAAO,EAAE;EAExC,IAAMG,YAAY,GAAG,gBAAgB,CAAC12D,IAAI,CAAEu2D,MAAM,CAAE;EACpD,IAAKG,YAAY,EAAG;IAEnB;IACA;;IAEA,IAAMZ,SAAS,GAAG51D,QAAQ,CAAEw2D,YAAY,CAAE,CAAC,CAAE,CAAE;IAC/C,OAAOr7E,IAAI,CAACs7E,WAAW,EAAE,GAAG,MAAM,GAAGJ,MAAM,GAAG,MAAM,GAAGV,YAAY,CAAErrB,EAAE,CAACosB,eAAe,CAAEnwB,MAAM,CAAE,EAAEqvB,SAAS,CAAE;EAE/G,CAAC,MAAM;IAEN,OAAOS,MAAM;EAEd;AAED;AAEA,SAASM,wBAAwBA,CAAEC,YAAY,EAAE9xD,QAAQ,EAAG;EAE3D,IAAM/E,UAAU,GAAGk2D,qBAAqB,CAAEnxD,QAAQ,CAAE;EACpD,OAAO,OAAO,GAAG8xD,YAAY,GAAG,kCAAkC,GAAG72D,UAAU,CAAE,CAAC,CAAE,GAAGA,UAAU,CAAE,CAAC,CAAE,GAAG,KAAK;AAE/G;AAEA,SAAS82D,sBAAsBA,CAAED,YAAY,EAAEpxB,WAAW,EAAG;EAE5D,IAAIsxB,eAAe;EAEnB,QAAStxB,WAAW;IAEnB,KAAKj/C,iBAAiB;MACrBuwE,eAAe,GAAG,QAAQ;MAC1B;IAED,KAAKtwE,mBAAmB;MACvBswE,eAAe,GAAG,UAAU;MAC5B;IAED,KAAKrwE,iBAAiB;MACrBqwE,eAAe,GAAG,iBAAiB;MACnC;IAED,KAAKpwE,qBAAqB;MACzBowE,eAAe,GAAG,YAAY;MAC9B;IAED,KAAKnwE,iBAAiB;MACrBmwE,eAAe,GAAG,QAAQ;MAC1B;IAED;MACChjE,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEyxC,WAAW,CAAE;MAC3EsxB,eAAe,GAAG,QAAQ;EAAC;EAI7B,OAAO,OAAO,GAAGF,YAAY,GAAG,0BAA0B,GAAGE,eAAe,GAAG,yBAAyB;AAEzG;AAEA,SAASC,kBAAkBA,CAAEzuC,UAAU,EAAG;EAEzC,IAAM0uC,MAAM,GAAG,CACZ1uC,UAAU,CAAC2uC,oBAAoB,IAAI,CAAC,CAAE3uC,UAAU,CAAC4uC,kBAAkB,IAAI5uC,UAAU,CAACoI,OAAO,IAAIpI,UAAU,CAAC6uC,qBAAqB,IAAI7uC,UAAU,CAACsH,kBAAkB,IAAItH,UAAU,CAACqG,WAAW,IAAIrG,UAAU,CAAC8uC,QAAQ,KAAK,UAAU,GAAK,iDAAiD,GAAG,EAAE,EAC3R,CAAE9uC,UAAU,CAAC+uC,kBAAkB,IAAI/uC,UAAU,CAACu5B,sBAAsB,KAAMv5B,UAAU,CAACgvC,0BAA0B,GAAG,uCAAuC,GAAG,EAAE,EAC5JhvC,UAAU,CAACivC,oBAAoB,IAAIjvC,UAAU,CAACkvC,4BAA4B,GAAK,0CAA0C,GAAG,EAAE,EAChI,CAAElvC,UAAU,CAACmvC,yBAAyB,IAAInvC,UAAU,CAACkJ,MAAM,IAAIlJ,UAAU,CAACwJ,YAAY,KAAMxJ,UAAU,CAACovC,iCAAiC,GAAG,+CAA+C,GAAG,EAAE,CAC/L;EAED,OAAOV,MAAM,CAACW,MAAM,CAAEC,eAAe,CAAE,CAAC5B,IAAI,CAAE,IAAI,CAAE;AAErD;AAEA,SAAS6B,eAAeA,CAAE32B,OAAO,EAAG;EAEnC,IAAM81B,MAAM,GAAG,EAAE;EAEjB,KAAM,IAAMv3E,IAAI,IAAIyhD,OAAO,EAAG;IAE7B,IAAM5nD,OAAK,GAAG4nD,OAAO,CAAEzhD,IAAI,CAAE;IAE7B,IAAKnG,OAAK,KAAK,KAAK,EAAG;IAEvB09E,MAAM,CAACr4E,IAAI,CAAE,UAAU,GAAGc,IAAI,GAAG,GAAG,GAAGnG,OAAK,CAAE;EAE/C;EAEA,OAAO09E,MAAM,CAAChB,IAAI,CAAE,IAAI,CAAE;AAE3B;AAEA,SAAS8B,uBAAuBA,CAAExtB,EAAE,EAAEkT,OAAO,EAAG;EAE/C,IAAMloC,UAAU,GAAG,CAAC,CAAC;EAErB,IAAMllB,CAAC,GAAGk6C,EAAE,CAAC0qB,mBAAmB,CAAExX,OAAO,EAAE,KAAK,CAAE;EAElD,KAAM,IAAIr+D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiR,CAAC,EAAEjR,CAAC,EAAG,EAAG;IAE9B,IAAMpB,IAAI,GAAGusD,EAAE,CAACytB,eAAe,CAAEva,OAAO,EAAEr+D,CAAC,CAAE;IAC7C,IAAMM,IAAI,GAAG1B,IAAI,CAAC0B,IAAI;IAEtB,IAAIwgE,YAAY,GAAG,CAAC;IACpB,IAAKliE,IAAI,CAAC5C,IAAI,KAAK,KAAK,EAAG8kE,YAAY,GAAG,CAAC;IAC3C,IAAKliE,IAAI,CAAC5C,IAAI,KAAK,KAAK,EAAG8kE,YAAY,GAAG,CAAC;IAC3C,IAAKliE,IAAI,CAAC5C,IAAI,KAAK,KAAK,EAAG8kE,YAAY,GAAG,CAAC;;IAE3C;;IAEA3qC,UAAU,CAAE71B,IAAI,CAAE,GAAG;MACpBtE,IAAI,EAAE4C,IAAI,CAAC5C,IAAI;MACf+jE,QAAQ,EAAE5U,EAAE,CAAC0tB,iBAAiB,CAAExa,OAAO,EAAE/9D,IAAI,CAAE;MAC/CwgE,YAAY,EAAEA;IACf,CAAC;EAEF;EAEA,OAAO3qC,UAAU;AAElB;AAEA,SAASsiD,eAAeA,CAAEh4D,MAAM,EAAG;EAElC,OAAOA,MAAM,KAAK,EAAE;AAErB;AAEA,SAASq4D,gBAAgBA,CAAEr4D,MAAM,EAAE0oB,UAAU,EAAG;EAE/C,OAAO1oB,MAAM,CACXs4D,OAAO,CAAE,iBAAiB,EAAE5vC,UAAU,CAAC6vC,YAAY,CAAE,CACrDD,OAAO,CAAE,kBAAkB,EAAE5vC,UAAU,CAAC8vC,aAAa,CAAE,CACvDF,OAAO,CAAE,uBAAuB,EAAE5vC,UAAU,CAAC+vC,iBAAiB,CAAE,CAChEH,OAAO,CAAE,mBAAmB,EAAE5vC,UAAU,CAACgwC,cAAc,CAAE,CACzDJ,OAAO,CAAE,kBAAkB,EAAE5vC,UAAU,CAACiwC,aAAa,CAAE,CACvDL,OAAO,CAAE,wBAAwB,EAAE5vC,UAAU,CAACkwC,kBAAkB,CAAE,CAClEN,OAAO,CAAE,yBAAyB,EAAE5vC,UAAU,CAACmwC,mBAAmB,CAAE,CACpEP,OAAO,CAAE,0BAA0B,EAAE5vC,UAAU,CAACowC,oBAAoB,CAAE;AAEzE;AAEA,SAASC,wBAAwBA,CAAE/4D,MAAM,EAAE0oB,UAAU,EAAG;EAEvD,OAAO1oB,MAAM,CACXs4D,OAAO,CAAE,sBAAsB,EAAE5vC,UAAU,CAACswC,iBAAiB,CAAE,CAC/DV,OAAO,CAAE,wBAAwB,EAAI5vC,UAAU,CAACswC,iBAAiB,GAAGtwC,UAAU,CAACuwC,mBAAmB,CAAI;AAEzG;;AAEA;;AAEA,IAAMC,cAAc,GAAG,kCAAkC;AAEzD,SAASC,eAAeA,CAAEn5D,MAAM,EAAG;EAElC,OAAOA,MAAM,CAACs4D,OAAO,CAAEY,cAAc,EAAEE,eAAe,CAAE;AAEzD;AAEA,SAASA,eAAeA,CAAErE,KAAK,EAAEsE,OAAO,EAAG;EAE1C,IAAMr5D,MAAM,GAAG80C,WAAW,CAAEukB,OAAO,CAAE;EAErC,IAAKr5D,MAAM,KAAKhiB,SAAS,EAAG;IAE3B,MAAM,IAAIX,KAAK,CAAE,4BAA4B,GAAGg8E,OAAO,GAAG,GAAG,CAAE;EAEhE;EAEA,OAAOF,eAAe,CAAEn5D,MAAM,CAAE;AAEjC;;AAEA;;AAEA,IAAMs5D,2BAA2B,GAAG,8FAA8F;AAClI,IAAMC,iBAAiB,GAAG,8IAA8I;AAExK,SAASC,WAAWA,CAAEx5D,MAAM,EAAG;EAE9B,OAAOA,MAAM,CACXs4D,OAAO,CAAEiB,iBAAiB,EAAEE,YAAY,CAAE,CAC1CnB,OAAO,CAAEgB,2BAA2B,EAAEI,sBAAsB,CAAE;AAEjE;AAEA,SAASA,sBAAsBA,CAAE3E,KAAK,EAAE58B,KAAK,EAAEkG,GAAG,EAAEs7B,OAAO,EAAG;EAE7DzlE,OAAO,CAACC,IAAI,CAAE,qHAAqH,CAAE;EACrI,OAAOslE,YAAY,CAAE1E,KAAK,EAAE58B,KAAK,EAAEkG,GAAG,EAAEs7B,OAAO,CAAE;AAElD;AAEA,SAASF,YAAYA,CAAE1E,KAAK,EAAE58B,KAAK,EAAEkG,GAAG,EAAEs7B,OAAO,EAAG;EAEnD,IAAI35D,MAAM,GAAG,EAAE;EAEf,KAAM,IAAIzgB,CAAC,GAAG6gB,QAAQ,CAAE+3B,KAAK,CAAE,EAAE54C,CAAC,GAAG6gB,QAAQ,CAAEi+B,GAAG,CAAE,EAAE9+C,CAAC,EAAG,EAAG;IAE5DygB,MAAM,IAAI25D,OAAO,CACfrB,OAAO,CAAE,cAAc,EAAE,IAAI,GAAG/4E,CAAC,GAAG,IAAI,CAAE,CAC1C+4E,OAAO,CAAE,sBAAsB,EAAE/4E,CAAC,CAAE;EAEvC;EAEA,OAAOygB,MAAM;AAEd;;AAEA;;AAEA,SAAS45D,iBAAiBA,CAAElxC,UAAU,EAAG;EAExC,IAAImxC,eAAe,GAAG,YAAY,GAAGnxC,UAAU,CAACuF,SAAS,GAAG,qBAAqB,GAAGvF,UAAU,CAACuF,SAAS,GAAG,OAAO;EAElH,IAAKvF,UAAU,CAACuF,SAAS,KAAK,OAAO,EAAG;IAEvC4rC,eAAe,IAAI,0BAA0B;EAE9C,CAAC,MAAM,IAAKnxC,UAAU,CAACuF,SAAS,KAAK,SAAS,EAAG;IAEhD4rC,eAAe,IAAI,4BAA4B;EAEhD,CAAC,MAAM,IAAKnxC,UAAU,CAACuF,SAAS,KAAK,MAAM,EAAG;IAE7C4rC,eAAe,IAAI,yBAAyB;EAE7C;EAEA,OAAOA,eAAe;AAEvB;AAEA,SAASC,2BAA2BA,CAAEpxC,UAAU,EAAG;EAElD,IAAIqxC,mBAAmB,GAAG,sBAAsB;EAEhD,IAAKrxC,UAAU,CAACsxC,aAAa,KAAK/1E,YAAY,EAAG;IAEhD81E,mBAAmB,GAAG,oBAAoB;EAE3C,CAAC,MAAM,IAAKrxC,UAAU,CAACsxC,aAAa,KAAK91E,gBAAgB,EAAG;IAE3D61E,mBAAmB,GAAG,yBAAyB;EAEhD,CAAC,MAAM,IAAKrxC,UAAU,CAACsxC,aAAa,KAAK71E,YAAY,EAAG;IAEvD41E,mBAAmB,GAAG,oBAAoB;EAE3C;EAEA,OAAOA,mBAAmB;AAE3B;AAEA,SAASE,wBAAwBA,CAAEvxC,UAAU,EAAG;EAE/C,IAAIwxC,gBAAgB,GAAG,kBAAkB;EAEzC,IAAKxxC,UAAU,CAACkJ,MAAM,EAAG;IAExB,QAASlJ,UAAU,CAACyxC,UAAU;MAE7B,KAAKlzE,qBAAqB;MAC1B,KAAKC,qBAAqB;QACzBgzE,gBAAgB,GAAG,kBAAkB;QACrC;MAED,KAAK7yE,uBAAuB;QAC3B6yE,gBAAgB,GAAG,qBAAqB;QACxC;IAAM;EAIT;EAEA,OAAOA,gBAAgB;AAExB;AAEA,SAASE,wBAAwBA,CAAE1xC,UAAU,EAAG;EAE/C,IAAI2xC,gBAAgB,GAAG,wBAAwB;EAE/C,IAAK3xC,UAAU,CAACkJ,MAAM,EAAG;IAExB,QAASlJ,UAAU,CAACyxC,UAAU;MAE7B,KAAKjzE,qBAAqB;QAEzBmzE,gBAAgB,GAAG,wBAAwB;QAC3C;IAAM;EAIT;EAEA,OAAOA,gBAAgB;AAExB;AAEA,SAASC,4BAA4BA,CAAE5xC,UAAU,EAAG;EAEnD,IAAI6xC,oBAAoB,GAAG,sBAAsB;EAEjD,IAAK7xC,UAAU,CAACkJ,MAAM,EAAG;IAExB,QAASlJ,UAAU,CAACmJ,OAAO;MAE1B,KAAKtrC,iBAAiB;QACrBg0E,oBAAoB,GAAG,0BAA0B;QACjD;MAED,KAAK/zE,YAAY;QAChB+zE,oBAAoB,GAAG,qBAAqB;QAC5C;MAED,KAAK9zE,YAAY;QAChB8zE,oBAAoB,GAAG,qBAAqB;QAC5C;IAAM;EAIT;EAEA,OAAOA,oBAAoB;AAE5B;AAEA,SAASC,kBAAkBA,CAAE9xC,UAAU,EAAG;EAEzC,IAAM+xC,WAAW,GAAG/xC,UAAU,CAAC4uC,kBAAkB;EAEjD,IAAKmD,WAAW,KAAK,IAAI,EAAG,OAAO,IAAI;EAEvC,IAAMC,MAAM,GAAGjrE,IAAI,CAACk4D,IAAI,CAAE8S,WAAW,CAAE,GAAG,CAAC;EAE3C,IAAME,WAAW,GAAG,GAAG,GAAGF,WAAW;EAErC,IAAMG,UAAU,GAAG,GAAG,IAAK,CAAC,GAAGnrE,IAAI,CAACa,GAAG,CAAEb,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE8nE,MAAM,CAAE,EAAE,CAAC,GAAG,EAAE,CAAE,CAAE;EAE1E,OAAO;IAAEE,UAAU,EAAVA,UAAU;IAAED,WAAW,EAAXA,WAAW;IAAED,MAAM,EAANA;EAAO,CAAC;AAE3C;AAEA,SAASG,YAAYA,CAAEx1B,QAAQ,EAAEy1B,QAAQ,EAAEpyC,UAAU,EAAE40B,aAAa,EAAG;EAEtE;EACA;;EAEA,IAAM5S,EAAE,GAAGrF,QAAQ,CAAC1iC,UAAU,EAAE;EAEhC,IAAM2+B,OAAO,GAAG5Y,UAAU,CAAC4Y,OAAO;EAElC,IAAIE,YAAY,GAAG9Y,UAAU,CAAC8Y,YAAY;EAC1C,IAAIC,cAAc,GAAG/Y,UAAU,CAAC+Y,cAAc;EAE9C,IAAMs4B,mBAAmB,GAAGD,2BAA2B,CAAEpxC,UAAU,CAAE;EACrE,IAAMwxC,gBAAgB,GAAGD,wBAAwB,CAAEvxC,UAAU,CAAE;EAC/D,IAAM2xC,gBAAgB,GAAGD,wBAAwB,CAAE1xC,UAAU,CAAE;EAC/D,IAAM6xC,oBAAoB,GAAGD,4BAA4B,CAAE5xC,UAAU,CAAE;EACvE,IAAMqyC,gBAAgB,GAAGP,kBAAkB,CAAE9xC,UAAU,CAAE;EAEzD,IAAMsyC,gBAAgB,GAAGtyC,UAAU,CAACkiB,QAAQ,GAAG,EAAE,GAAGusB,kBAAkB,CAAEzuC,UAAU,CAAE;EAEpF,IAAMuyC,aAAa,GAAGhD,eAAe,CAAE32B,OAAO,CAAE;EAEhD,IAAMsc,OAAO,GAAGlT,EAAE,CAACwwB,aAAa,EAAE;EAElC,IAAIC,YAAY,EAAEC,cAAc;EAChC,IAAIC,aAAa,GAAG3yC,UAAU,CAAC0Z,WAAW,GAAG,WAAW,GAAG1Z,UAAU,CAAC0Z,WAAW,GAAG,IAAI,GAAG,EAAE;EAE7F,IAAK1Z,UAAU,CAAC4yC,mBAAmB,EAAG;IAErCH,YAAY,GAAG,CAEdF,aAAa,CAEb,CAAClD,MAAM,CAAEC,eAAe,CAAE,CAAC5B,IAAI,CAAE,IAAI,CAAE;IAExC,IAAK+E,YAAY,CAAC77E,MAAM,GAAG,CAAC,EAAG;MAE9B67E,YAAY,IAAI,IAAI;IAErB;IAEAC,cAAc,GAAG,CAEhBJ,gBAAgB,EAChBC,aAAa,CAEb,CAAClD,MAAM,CAAEC,eAAe,CAAE,CAAC5B,IAAI,CAAE,IAAI,CAAE;IAExC,IAAKgF,cAAc,CAAC97E,MAAM,GAAG,CAAC,EAAG;MAEhC87E,cAAc,IAAI,IAAI;IAEvB;EAED,CAAC,MAAM;IAEND,YAAY,GAAG,CAEdvB,iBAAiB,CAAElxC,UAAU,CAAE,EAE/B,sBAAsB,GAAGA,UAAU,CAAC6yC,UAAU,EAE9CN,aAAa,EAEbvyC,UAAU,CAAC8yC,UAAU,GAAG,wBAAwB,GAAG,EAAE,EACrD9yC,UAAU,CAAC+yC,eAAe,GAAG,8BAA8B,GAAG,EAAE,EAEhE/yC,UAAU,CAACgzC,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAEhEhzC,UAAU,CAACizC,MAAM,IAAIjzC,UAAU,CAACuK,GAAG,GAAK,iBAAiB,GAAG,EAAE,EAC9DvK,UAAU,CAACizC,MAAM,IAAIjzC,UAAU,CAACkzC,OAAO,GAAK,kBAAkB,GAAG,EAAE,EAErElzC,UAAU,CAAC6H,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvC7H,UAAU,CAACkJ,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7ClJ,UAAU,CAACkJ,MAAM,GAAG,UAAU,GAAGyoC,gBAAgB,GAAG,EAAE,EACtD3xC,UAAU,CAACgI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDhI,UAAU,CAACkI,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3ClI,UAAU,CAAC8I,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD9I,UAAU,CAACoI,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/CpI,UAAU,CAACsI,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACjDtI,UAAU,CAACsI,SAAS,IAAItI,UAAU,CAACmzC,oBAAoB,GAAK,+BAA+B,GAAG,EAAE,EAChGnzC,UAAU,CAACsI,SAAS,IAAItI,UAAU,CAAC6uC,qBAAqB,GAAK,gCAAgC,GAAG,EAAE,EAEpG7uC,UAAU,CAACoH,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDpH,UAAU,CAACqH,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5ErH,UAAU,CAACsH,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtEtH,UAAU,CAAC2H,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7D3H,UAAU,CAAC4H,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhF5H,UAAU,CAACyI,eAAe,IAAIzI,UAAU,CAACgzC,sBAAsB,GAAG,6BAA6B,GAAG,EAAE,EAEpGhzC,UAAU,CAAC+I,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD/I,UAAU,CAACgJ,oBAAoB,GAAG,kCAAkC,GAAG,EAAE,EACzEhJ,UAAU,CAACiJ,gBAAgB,GAAG,8BAA8B,GAAG,EAAE,EAEjEjJ,UAAU,CAAC4I,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD5I,UAAU,CAAC6I,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD7I,UAAU,CAAC+H,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjD/H,UAAU,CAACwJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDxJ,UAAU,CAACyJ,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DzJ,UAAU,CAAC2J,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzD3J,UAAU,CAAC2yB,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAC3D3yB,UAAU,CAAC4yB,iBAAiB,GAAG,+BAA+B,GAAG,EAAE,EAEnE5yB,UAAU,CAACozC,cAAc,GAAG,qBAAqB,GAAG,EAAE,EACtDpzC,UAAU,CAAC8D,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAClD9D,UAAU,CAACqzC,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDrzC,UAAU,CAACszC,SAAS,GAAG,gBAAgB,GAAG,EAAE,EAC5CtzC,UAAU,CAACuzC,aAAa,GAAG,yBAAyB,GAAG,EAAE,EAEzDvzC,UAAU,CAACqG,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnDrG,UAAU,CAACwzC,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EAEjDxzC,UAAU,CAAC+kC,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD/kC,UAAU,CAACglC,YAAY,IAAIhlC,UAAU,CAACqG,WAAW,KAAK,KAAK,GAAG,0BAA0B,GAAG,EAAE,EAC3FrG,UAAU,CAACilC,WAAW,IAAIjlC,UAAU,CAACkiB,QAAQ,GAAK,yBAAyB,GAAG,EAAE,EAChFliB,UAAU,CAAC2kC,iBAAiB,GAAG,CAAC,IAAI3kC,UAAU,CAACkiB,QAAQ,GAAK,8BAA8B,GAAG,EAAE,EAC/FliB,UAAU,CAAC2kC,iBAAiB,GAAG,CAAC,IAAI3kC,UAAU,CAACkiB,QAAQ,GAAK,sCAAsC,GAAGliB,UAAU,CAACyzC,kBAAkB,GAAG,EAAE,EACvIzzC,UAAU,CAAC2kC,iBAAiB,GAAG,CAAC,IAAI3kC,UAAU,CAACkiB,QAAQ,GAAK,6BAA6B,GAAGliB,UAAU,CAAC2kC,iBAAiB,GAAG,EAAE,EAC/H3kC,UAAU,CAAC0zC,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpD1zC,UAAU,CAAC2zC,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD3zC,UAAU,CAAC4zC,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D5zC,UAAU,CAAC4zC,gBAAgB,GAAG,UAAU,GAAGvC,mBAAmB,GAAG,EAAE,EAEnErxC,UAAU,CAAC8J,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAE/D9J,UAAU,CAACu5B,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChEv5B,UAAU,CAACu5B,sBAAsB,IAAIv5B,UAAU,CAACgvC,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,2BAA2B,EAC3B,+BAA+B,EAC/B,gCAAgC,EAChC,0BAA0B,EAC1B,4BAA4B,EAC5B,8BAA8B,EAC9B,8BAA8B,EAE9B,uBAAuB,EAEvB,iCAAiC,EAEjC,QAAQ,EAER,6BAA6B,EAE7B,gCAAgC,EAEhC,QAAQ,EAER,0BAA0B,EAC1B,wBAAwB,EACxB,oBAAoB,EAEpB,oBAAoB,EAEpB,0BAA0B,EAE1B,QAAQ,EAER,gCAAgC,EAEhC,wBAAwB,EAExB,4BAA4B,EAE5B,wBAAwB,EAExB,QAAQ,EAER,0EAA0E,EAE1E,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAE/B,0BAA0B,EAE1B,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,QAAQ,EAER,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAChC,gCAAgC,EAEhC,SAAS,EAET,QAAQ,EAER,qBAAqB,EAErB,4BAA4B,EAC5B,6BAA6B,EAE7B,QAAQ,EAER,IAAI,CAEJ,CAACK,MAAM,CAAEC,eAAe,CAAE,CAAC5B,IAAI,CAAE,IAAI,CAAE;IAExCgF,cAAc,GAAG,CAEhBJ,gBAAgB,EAEhBpB,iBAAiB,CAAElxC,UAAU,CAAE,EAE/B,sBAAsB,GAAGA,UAAU,CAAC6yC,UAAU,EAE9CN,aAAa,EAEXvyC,UAAU,CAACizC,MAAM,IAAIjzC,UAAU,CAACuK,GAAG,GAAK,iBAAiB,GAAG,EAAE,EAC9DvK,UAAU,CAACizC,MAAM,IAAIjzC,UAAU,CAACkzC,OAAO,GAAK,kBAAkB,GAAG,EAAE,EAErElzC,UAAU,CAAC6H,GAAG,GAAG,iBAAiB,GAAG,EAAE,EACvC7H,UAAU,CAAC8H,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7C9H,UAAU,CAACkJ,MAAM,GAAG,oBAAoB,GAAG,EAAE,EAC7ClJ,UAAU,CAACkJ,MAAM,GAAG,UAAU,GAAGsoC,gBAAgB,GAAG,EAAE,EACtDxxC,UAAU,CAACkJ,MAAM,GAAG,UAAU,GAAGyoC,gBAAgB,GAAG,EAAE,EACtD3xC,UAAU,CAACkJ,MAAM,GAAG,UAAU,GAAG2oC,oBAAoB,GAAG,EAAE,EAC1DQ,gBAAgB,GAAG,6BAA6B,GAAGA,gBAAgB,CAACH,UAAU,GAAG,EAAE,EACnFG,gBAAgB,GAAG,8BAA8B,GAAGA,gBAAgB,CAACJ,WAAW,GAAG,EAAE,EACrFI,gBAAgB,GAAG,yBAAyB,GAAGA,gBAAgB,CAACL,MAAM,GAAG,IAAI,GAAG,EAAE,EAClFhyC,UAAU,CAACgI,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjDhI,UAAU,CAACkI,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3ClI,UAAU,CAAC8I,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD9I,UAAU,CAACoI,OAAO,GAAG,qBAAqB,GAAG,EAAE,EAC/CpI,UAAU,CAACsI,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACjDtI,UAAU,CAACsI,SAAS,IAAItI,UAAU,CAACmzC,oBAAoB,GAAK,+BAA+B,GAAG,EAAE,EAChGnzC,UAAU,CAACsI,SAAS,IAAItI,UAAU,CAAC6uC,qBAAqB,GAAK,gCAAgC,GAAG,EAAE,EAEpG7uC,UAAU,CAACkH,SAAS,GAAG,uBAAuB,GAAG,EAAE,EACnDlH,UAAU,CAACoH,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDpH,UAAU,CAACqH,qBAAqB,GAAG,oCAAoC,GAAG,EAAE,EAC5ErH,UAAU,CAACsH,kBAAkB,GAAG,iCAAiC,GAAG,EAAE,EAEtEtH,UAAU,CAACwH,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvDxH,UAAU,CAAC2H,cAAc,GAAG,4BAA4B,GAAG,EAAE,EAC7D3H,UAAU,CAAC4H,uBAAuB,GAAG,sCAAsC,GAAG,EAAE,EAEhF5H,UAAU,CAAC+I,WAAW,GAAG,yBAAyB,GAAG,EAAE,EACvD/I,UAAU,CAACgJ,oBAAoB,GAAG,kCAAkC,GAAG,EAAE,EACzEhJ,UAAU,CAACiJ,gBAAgB,GAAG,8BAA8B,GAAG,EAAE,EACjEjJ,UAAU,CAAC4I,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzD5I,UAAU,CAAC6I,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzD7I,UAAU,CAAC+H,QAAQ,GAAG,sBAAsB,GAAG,EAAE,EACjD/H,UAAU,CAACkK,SAAS,GAAG,uBAAuB,GAAG,EAAE,EAEnDlK,UAAU,CAACyG,KAAK,GAAG,mBAAmB,GAAG,EAAE,EAC3CzG,UAAU,CAAC2yB,aAAa,GAAG,2BAA2B,GAAG,EAAE,EAC3D3yB,UAAU,CAAC4yB,iBAAiB,GAAG,+BAA+B,GAAG,EAAE,EAEnE5yB,UAAU,CAACwJ,YAAY,GAAG,0BAA0B,GAAG,EAAE,EACzDxJ,UAAU,CAACyJ,eAAe,GAAG,6BAA6B,GAAG,EAAE,EAC/DzJ,UAAU,CAAC2J,YAAY,GAAG,0BAA0B,GAAG,EAAE,EAEzD3J,UAAU,CAAC6zC,kBAAkB,GAAG,8BAA8B,GAAG,EAAE,EAEnE7zC,UAAU,CAACozC,cAAc,GAAG,qBAAqB,GAAG,EAAE,EACtDpzC,UAAU,CAAC8D,YAAY,IAAI9D,UAAU,CAAC+yC,eAAe,GAAG,mBAAmB,GAAG,EAAE,EAChF/yC,UAAU,CAACqzC,YAAY,GAAG,yBAAyB,GAAG,EAAE,EACxDrzC,UAAU,CAACszC,SAAS,GAAG,gBAAgB,GAAG,EAAE,EAC5CtzC,UAAU,CAACuzC,aAAa,GAAG,yBAAyB,GAAG,EAAE,EAEzDvzC,UAAU,CAACuJ,WAAW,GAAG,yBAAyB,GAAG,EAAE,EAEvDvJ,UAAU,CAACqG,WAAW,GAAG,qBAAqB,GAAG,EAAE,EAEnDrG,UAAU,CAAC0zC,WAAW,GAAG,sBAAsB,GAAG,EAAE,EACpD1zC,UAAU,CAAC2zC,SAAS,GAAG,oBAAoB,GAAG,EAAE,EAEhD3zC,UAAU,CAAC4zC,gBAAgB,GAAG,uBAAuB,GAAG,EAAE,EAC1D5zC,UAAU,CAAC4zC,gBAAgB,GAAG,UAAU,GAAGvC,mBAAmB,GAAG,EAAE,EAEnErxC,UAAU,CAAC6F,kBAAkB,GAAG,6BAA6B,GAAG,EAAE,EAElE7F,UAAU,CAAC8zC,uBAAuB,GAAG,mCAAmC,GAAG,EAAE,EAE7E9zC,UAAU,CAACu5B,sBAAsB,GAAG,yBAAyB,GAAG,EAAE,EAChEv5B,UAAU,CAACu5B,sBAAsB,IAAIv5B,UAAU,CAACgvC,0BAA0B,GAAK,6BAA6B,GAAG,EAAE,EAEnH,0BAA0B,EAC1B,8BAA8B,EAC9B,8BAA8B,EAE5BhvC,UAAU,CAACkd,WAAW,KAAKl/C,aAAa,GAAK,sBAAsB,GAAG,EAAE,EACxEgiC,UAAU,CAACkd,WAAW,KAAKl/C,aAAa,GAAKouD,WAAW,CAAE,2BAA2B,CAAE,GAAG,EAAE;IAAE;IAC9FpsB,UAAU,CAACkd,WAAW,KAAKl/C,aAAa,GAAKuwE,sBAAsB,CAAE,aAAa,EAAEvuC,UAAU,CAACkd,WAAW,CAAE,GAAG,EAAE,EAEnHld,UAAU,CAAC2F,SAAS,GAAG,mBAAmB,GAAG,EAAE,EAC/C3F,UAAU,CAAC+zC,MAAM,GAAG,gBAAgB,GAAG,EAAE,EAEzC3nB,WAAW,CAAE,yBAAyB,CAAE;IAAE;IAC1CiiB,wBAAwB,CAAE,qBAAqB,EAAEruC,UAAU,CAACg0C,cAAc,CAAE,EAE5Eh0C,UAAU,CAACi0C,eAAe,GAAG,wBAAwB,GAAGj0C,UAAU,CAACk0C,YAAY,GAAG,EAAE,EAEpF,IAAI,CAEJ,CAAC7E,MAAM,CAAEC,eAAe,CAAE,CAAC5B,IAAI,CAAE,IAAI,CAAE;EAEzC;EAEA50B,YAAY,GAAG23B,eAAe,CAAE33B,YAAY,CAAE;EAC9CA,YAAY,GAAG62B,gBAAgB,CAAE72B,YAAY,EAAE9Y,UAAU,CAAE;EAC3D8Y,YAAY,GAAGu3B,wBAAwB,CAAEv3B,YAAY,EAAE9Y,UAAU,CAAE;EAEnE+Y,cAAc,GAAG03B,eAAe,CAAE13B,cAAc,CAAE;EAClDA,cAAc,GAAG42B,gBAAgB,CAAE52B,cAAc,EAAE/Y,UAAU,CAAE;EAC/D+Y,cAAc,GAAGs3B,wBAAwB,CAAEt3B,cAAc,EAAE/Y,UAAU,CAAE;EAEvE8Y,YAAY,GAAGg4B,WAAW,CAAEh4B,YAAY,CAAE;EAC1CC,cAAc,GAAG+3B,WAAW,CAAE/3B,cAAc,CAAE;EAE9C,IAAK/Y,UAAU,CAACkiB,QAAQ,IAAIliB,UAAU,CAAC4yC,mBAAmB,KAAK,IAAI,EAAG;IAErE;;IAEAD,aAAa,GAAG,mBAAmB;IAEnCF,YAAY,GAAG,CACd,mCAAmC,EACnC,sBAAsB,EACtB,qBAAqB,EACrB,2BAA2B,CAC3B,CAAC/E,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI,GAAG+E,YAAY;IAEpCC,cAAc,GAAG,CAChB,oBAAoB,EAClB1yC,UAAU,CAAC0Z,WAAW,KAAK/zC,KAAK,GAAK,EAAE,GAAG,mDAAmD,EAC7Fq6B,UAAU,CAAC0Z,WAAW,KAAK/zC,KAAK,GAAK,EAAE,GAAG,mCAAmC,EAC/E,sCAAsC,EACtC,2BAA2B,EAC3B,6BAA6B,EAC7B,mCAAmC,EACnC,oCAAoC,EACpC,4CAA4C,EAC5C,sCAAsC,EACtC,sCAAsC,EACtC,8CAA8C,EAC9C,wCAAwC,CACxC,CAAC+nE,IAAI,CAAE,IAAI,CAAE,GAAG,IAAI,GAAGgF,cAAc;EAEvC;EAEA,IAAMyB,UAAU,GAAGxB,aAAa,GAAGF,YAAY,GAAG35B,YAAY;EAC9D,IAAMs7B,YAAY,GAAGzB,aAAa,GAAGD,cAAc,GAAG35B,cAAc;;EAEpE;EACA;;EAEA,IAAMs7B,cAAc,GAAGrH,WAAW,CAAEhrB,EAAE,EAAE,KAAK,EAAEmyB,UAAU,CAAE;EAC3D,IAAMG,gBAAgB,GAAGtH,WAAW,CAAEhrB,EAAE,EAAE,KAAK,EAAEoyB,YAAY,CAAE;EAE/DpyB,EAAE,CAACuyB,YAAY,CAAErf,OAAO,EAAEmf,cAAc,CAAE;EAC1CryB,EAAE,CAACuyB,YAAY,CAAErf,OAAO,EAAEof,gBAAgB,CAAE;;EAE5C;;EAEA,IAAKt0C,UAAU,CAACwZ,mBAAmB,KAAKlkD,SAAS,EAAG;IAEnD0sD,EAAE,CAACwyB,kBAAkB,CAAEtf,OAAO,EAAE,CAAC,EAAEl1B,UAAU,CAACwZ,mBAAmB,CAAE;EAEpE,CAAC,MAAM,IAAKxZ,UAAU,CAAC+kC,YAAY,KAAK,IAAI,EAAG;IAE9C;IACA/iB,EAAE,CAACwyB,kBAAkB,CAAEtf,OAAO,EAAE,CAAC,EAAE,UAAU,CAAE;EAEhD;EAEAlT,EAAE,CAACyyB,WAAW,CAAEvf,OAAO,CAAE;;EAEzB;EACA,IAAKvY,QAAQ,CAAC+3B,KAAK,CAACC,iBAAiB,EAAG;IAEvC,IAAMC,UAAU,GAAG5yB,EAAE,CAAC6yB,iBAAiB,CAAE3f,OAAO,CAAE,CAAC+Y,IAAI,EAAE;IACzD,IAAM6G,SAAS,GAAG9yB,EAAE,CAACgsB,gBAAgB,CAAEqG,cAAc,CAAE,CAACpG,IAAI,EAAE;IAC9D,IAAM8G,WAAW,GAAG/yB,EAAE,CAACgsB,gBAAgB,CAAEsG,gBAAgB,CAAE,CAACrG,IAAI,EAAE;IAElE,IAAI+G,QAAQ,GAAG,IAAI;IACnB,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAKjzB,EAAE,CAAC0qB,mBAAmB,CAAExX,OAAO,EAAE,KAAK,CAAE,KAAK,KAAK,EAAG;MAEzD8f,QAAQ,GAAG,KAAK;MAEhB,IAAME,YAAY,GAAGtH,eAAe,CAAE5rB,EAAE,EAAEqyB,cAAc,EAAE,QAAQ,CAAE;MACpE,IAAMc,cAAc,GAAGvH,eAAe,CAAE5rB,EAAE,EAAEsyB,gBAAgB,EAAE,UAAU,CAAE;MAE1E9oE,OAAO,CAACjX,KAAK,CACZ,mCAAmC,GAAGytD,EAAE,CAACozB,QAAQ,EAAE,GAAG,KAAK,GAC3D,kBAAkB,GAAGpzB,EAAE,CAAC0qB,mBAAmB,CAAExX,OAAO,EAAE,KAAK,CAAE,GAAG,MAAM,GACtE,oBAAoB,GAAG0f,UAAU,GAAG,IAAI,GACxCM,YAAY,GAAG,IAAI,GACnBC,cAAc,CACd;IAEF,CAAC,MAAM,IAAKP,UAAU,KAAK,EAAE,EAAG;MAE/BppE,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAEmpE,UAAU,CAAE;IAEpE,CAAC,MAAM,IAAKE,SAAS,KAAK,EAAE,IAAIC,WAAW,KAAK,EAAE,EAAG;MAEpDE,eAAe,GAAG,KAAK;IAExB;IAEA,IAAKA,eAAe,EAAG;MAEtB,IAAI,CAACI,WAAW,GAAG;QAElBL,QAAQ,EAAEA,QAAQ;QAElBJ,UAAU,EAAEA,UAAU;QAEtB97B,YAAY,EAAE;UAEb1uC,GAAG,EAAE0qE,SAAS;UACdQ,MAAM,EAAE7C;QAET,CAAC;QAED15B,cAAc,EAAE;UAEf3uC,GAAG,EAAE2qE,WAAW;UAChBO,MAAM,EAAE5C;QAET;MAED,CAAC;IAEF;EAED;;EAEA;;EAEA;EACA;EACA;;EAEA1wB,EAAE,CAACuzB,YAAY,CAAElB,cAAc,CAAE;EACjCryB,EAAE,CAACuzB,YAAY,CAAEjB,gBAAgB,CAAE;;EAEnC;;EAEA,IAAIkB,cAAc;EAElB,IAAI,CAAC9P,WAAW,GAAG,YAAY;IAE9B,IAAK8P,cAAc,KAAKlgF,SAAS,EAAG;MAEnCkgF,cAAc,GAAG,IAAI/I,aAAa,CAAEzqB,EAAE,EAAEkT,OAAO,CAAE;IAElD;IAEA,OAAOsgB,cAAc;EAEtB,CAAC;;EAED;;EAEA,IAAIlf,gBAAgB;EAEpB,IAAI,CAACI,aAAa,GAAG,YAAY;IAEhC,IAAKJ,gBAAgB,KAAKhhE,SAAS,EAAG;MAErCghE,gBAAgB,GAAGkZ,uBAAuB,CAAExtB,EAAE,EAAEkT,OAAO,CAAE;IAE1D;IAEA,OAAOoB,gBAAgB;EAExB,CAAC;;EAED;;EAEA,IAAI,CAACmf,OAAO,GAAG,YAAY;IAE1B7gB,aAAa,CAACyD,sBAAsB,CAAE,IAAI,CAAE;IAE5CrW,EAAE,CAAC0zB,aAAa,CAAExgB,OAAO,CAAE;IAC3B,IAAI,CAACA,OAAO,GAAG5/D,SAAS;EAEzB,CAAC;;EAED;;EAEA,IAAI,CAAC6B,IAAI,GAAG6oC,UAAU,CAAC6yC,UAAU;EACjC,IAAI,CAAC90C,EAAE,GAAGqvC,cAAc,EAAG;EAC3B,IAAI,CAACgF,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACuD,SAAS,GAAG,CAAC;EAClB,IAAI,CAACzgB,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACpc,YAAY,GAAGu7B,cAAc;EAClC,IAAI,CAACt7B,cAAc,GAAGu7B,gBAAgB;EAEtC,OAAO,IAAI;AAEZ;AAEA,IAAIsB,GAAG,GAAG,CAAC;AAAC,IAENC,gBAAgB;EAErB,SAAAA,iBAAA,EAAc;IAAAz8E,eAAA,OAAAy8E,gBAAA;IAEb,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,EAAE;IAC5B,IAAI,CAACC,aAAa,GAAG,IAAID,GAAG,EAAE;EAE/B;EAACn8E,YAAA,CAAAi8E,gBAAA;IAAA/kF,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAQ8c,QAAQ,EAAG;MAElB,IAAMwY,YAAY,GAAGxY,QAAQ,CAACwY,YAAY;MAC1C,IAAMC,cAAc,GAAGzY,QAAQ,CAACyY,cAAc;MAE9C,IAAMk9B,iBAAiB,GAAG,IAAI,CAACC,eAAe,CAAEp9B,YAAY,CAAE;MAC9D,IAAMq9B,mBAAmB,GAAG,IAAI,CAACD,eAAe,CAAEn9B,cAAc,CAAE;MAElE,IAAMq9B,eAAe,GAAG,IAAI,CAACC,0BAA0B,CAAE/1C,QAAQ,CAAE;MAEnE,IAAK81C,eAAe,CAACpd,GAAG,CAAEid,iBAAiB,CAAE,KAAK,KAAK,EAAG;QAEzDG,eAAe,CAAClpE,GAAG,CAAE+oE,iBAAiB,CAAE;QACxCA,iBAAiB,CAACN,SAAS,EAAG;MAE/B;MAEA,IAAKS,eAAe,CAACpd,GAAG,CAAEmd,mBAAmB,CAAE,KAAK,KAAK,EAAG;QAE3DC,eAAe,CAAClpE,GAAG,CAAEipE,mBAAmB,CAAE;QAC1CA,mBAAmB,CAACR,SAAS,EAAG;MAEjC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA7kF,GAAA;IAAAE,KAAA,EAED,SAAA0sC,OAAQ4C,QAAQ,EAAG;MAElB,IAAM81C,eAAe,GAAG,IAAI,CAACJ,aAAa,CAACxpE,GAAG,CAAE8zB,QAAQ,CAAE;MAAC,IAAAg2C,SAAA,GAAAC,0BAAA,CAEhCH,eAAe;QAAAI,KAAA;MAAA;QAA1C,KAAAF,SAAA,CAAA5sE,CAAA,MAAA8sE,KAAA,GAAAF,SAAA,CAAAxuE,CAAA,IAAA1S,IAAA,GAA6C;UAAA,IAAjCqhF,WAAW,GAAAD,KAAA,CAAAxlF,KAAA;UAEtBylF,WAAW,CAACd,SAAS,EAAG;UAExB,IAAKc,WAAW,CAACd,SAAS,KAAK,CAAC,EAAG,IAAI,CAACG,WAAW,CAAC/yB,MAAM,CAAE0zB,WAAW,CAACC,IAAI,CAAE;QAE/E;MAAC,SAAA7kF,GAAA;QAAAykF,SAAA,CAAAxoE,CAAA,CAAAjc,GAAA;MAAA;QAAAykF,SAAA,CAAAvjE,CAAA;MAAA;MAED,IAAI,CAACijE,aAAa,CAACjzB,MAAM,CAAEziB,QAAQ,CAAE;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAAxvC,GAAA;IAAAE,KAAA,EAED,SAAA2lF,kBAAmBr2C,QAAQ,EAAG;MAE7B,OAAO,IAAI,CAAC41C,eAAe,CAAE51C,QAAQ,CAACwY,YAAY,CAAE,CAAC/a,EAAE;IAExD;EAAC;IAAAjtC,GAAA;IAAAE,KAAA,EAED,SAAA4lF,oBAAqBt2C,QAAQ,EAAG;MAE/B,OAAO,IAAI,CAAC41C,eAAe,CAAE51C,QAAQ,CAACyY,cAAc,CAAE,CAAChb,EAAE;IAE1D;EAAC;IAAAjtC,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAAC+3D,WAAW,CAACl4C,KAAK,EAAE;MACxB,IAAI,CAACo4C,aAAa,CAACp4C,KAAK,EAAE;IAE3B;EAAC;IAAA9sC,GAAA;IAAAE,KAAA,EAED,SAAAqlF,2BAA4B/1C,QAAQ,EAAG;MAEtC,IAAMI,KAAK,GAAG,IAAI,CAACs1C,aAAa;MAEhC,IAAKt1C,KAAK,CAACs4B,GAAG,CAAE14B,QAAQ,CAAE,KAAK,KAAK,EAAG;QAEtCI,KAAK,CAACn1B,GAAG,CAAE+0B,QAAQ,EAAE,IAAIu2C,GAAG,EAAE,CAAE;MAEjC;MAEA,OAAOn2C,KAAK,CAACl0B,GAAG,CAAE8zB,QAAQ,CAAE;IAE7B;EAAC;IAAAxvC,GAAA;IAAAE,KAAA,EAED,SAAAklF,gBAAiBQ,IAAI,EAAG;MAEvB,IAAMh2C,KAAK,GAAG,IAAI,CAACo1C,WAAW;MAE9B,IAAKp1C,KAAK,CAACs4B,GAAG,CAAE0d,IAAI,CAAE,KAAK,KAAK,EAAG;QAElC,IAAMI,KAAK,GAAG,IAAIC,gBAAgB,CAAEL,IAAI,CAAE;QAC1Ch2C,KAAK,CAACn1B,GAAG,CAAEmrE,IAAI,EAAEI,KAAK,CAAE;MAEzB;MAEA,OAAOp2C,KAAK,CAACl0B,GAAG,CAAEkqE,IAAI,CAAE;IAEzB;EAAC;EAAA,OAAAb,gBAAA;AAAA;AAAA,IAIIkB,gBAAgB,gBAAAn9E,YAAA,CAErB,SAAAm9E,iBAAaL,IAAI,EAAG;EAAAt9E,eAAA,OAAA29E,gBAAA;EAEnB,IAAI,CAACh5C,EAAE,GAAG63C,GAAG,EAAG;EAEhB,IAAI,CAACc,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACf,SAAS,GAAG,CAAC;AAEnB,CAAC;AAIF,SAASqB,aAAaA,CAAEr6B,QAAQ,EAAEqW,QAAQ,EAAEikB,UAAU,EAAE/9B,UAAU,EAAE+I,YAAY,EAAE2S,aAAa,EAAE3b,QAAQ,EAAG;EAE3G,IAAMi+B,cAAc,GAAG,IAAIx9C,MAAM,EAAE;EACnC,IAAMy9C,cAAc,GAAG,IAAItB,gBAAgB,EAAE;EAC7C,IAAM5R,QAAQ,GAAG,EAAE;EAEnB,IAAM/hB,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EACtC,IAAMqX,sBAAsB,GAAGtX,YAAY,CAACsX,sBAAsB;EAClE,IAAMS,cAAc,GAAG/X,YAAY,CAAC+X,cAAc;EAClD,IAAIz0B,SAAS,GAAG0c,YAAY,CAAC1c,SAAS;EAEtC,IAAM6xC,SAAS,GAAG;IACjBC,iBAAiB,EAAE,OAAO;IAC1BC,oBAAoB,EAAE,cAAc;IACpCC,kBAAkB,EAAE,QAAQ;IAC5B7sC,iBAAiB,EAAE,OAAO;IAC1B8sC,mBAAmB,EAAE,SAAS;IAC9BC,iBAAiB,EAAE,OAAO;IAC1BC,gBAAgB,EAAE,MAAM;IACxBC,oBAAoB,EAAE,UAAU;IAChCC,oBAAoB,EAAE,UAAU;IAChCC,kBAAkB,EAAE,QAAQ;IAC5BC,iBAAiB,EAAE,OAAO;IAC1BC,kBAAkB,EAAE,QAAQ;IAC5BC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE,QAAQ;IACxBC,cAAc,EAAE;EACjB,CAAC;EAED,SAASC,aAAaA,CAAE73C,QAAQ,EAAE0Y,MAAM,EAAEo/B,OAAO,EAAEx7B,KAAK,EAAE/kD,MAAM,EAAG;IAElE,IAAM0yC,GAAG,GAAGqS,KAAK,CAACrS,GAAG;IACrB,IAAMxd,QAAQ,GAAGl1B,MAAM,CAACk1B,QAAQ;IAChC,IAAM6S,WAAW,GAAGU,QAAQ,CAAC+3C,sBAAsB,GAAGz7B,KAAK,CAAChd,WAAW,GAAG,IAAI;IAE9E,IAAMsJ,MAAM,GAAG,CAAE5I,QAAQ,CAAC+3C,sBAAsB,GAAGpB,UAAU,GAAGjkB,QAAQ,EAAGxmD,GAAG,CAAE8zB,QAAQ,CAAC4I,MAAM,IAAItJ,WAAW,CAAE;IAChH,IAAMgvC,kBAAkB,GAAK,CAAC,CAAE1lC,MAAM,IAAQA,MAAM,CAACltB,OAAO,KAAKrd,uBAAyB,GAAGuqC,MAAM,CAACxvB,KAAK,CAACM,MAAM,GAAG,IAAI;IAEvH,IAAM80D,QAAQ,GAAGsI,SAAS,CAAE92C,QAAQ,CAACztC,IAAI,CAAE;;IAE3C;IACA;;IAEA,IAAKytC,QAAQ,CAACiF,SAAS,KAAK,IAAI,EAAG;MAElCA,SAAS,GAAG0c,YAAY,CAACiX,eAAe,CAAE54B,QAAQ,CAACiF,SAAS,CAAE;MAE9D,IAAKA,SAAS,KAAKjF,QAAQ,CAACiF,SAAS,EAAG;QAEvC/5B,OAAO,CAACC,IAAI,CAAE,mCAAmC,EAAE60B,QAAQ,CAACiF,SAAS,EAAE,sBAAsB,EAAEA,SAAS,EAAE,UAAU,CAAE;MAEvH;IAED;;IAEA;;IAEA,IAAMiL,cAAc,GAAGzjB,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,IAAIF,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,IAAI8C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK;IAC7H,IAAM4uD,iBAAiB,GAAKn0B,cAAc,KAAKl7C,SAAS,GAAKk7C,cAAc,CAAC55C,MAAM,GAAG,CAAC;IAEtF,IAAI68E,kBAAkB,GAAG,CAAC;IAE1B,IAAK1mD,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,KAAK33B,SAAS,EAAGm+E,kBAAkB,GAAG,CAAC;IAC7E,IAAK1mD,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,KAAK30B,SAAS,EAAGm+E,kBAAkB,GAAG,CAAC;IAC3E,IAAK1mD,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK,KAAKzgB,SAAS,EAAGm+E,kBAAkB,GAAG,CAAC;;IAE1E;;IAEA,IAAI36B,YAAY,EAAEC,cAAc;IAChC,IAAIu/B,oBAAoB,EAAEC,sBAAsB;IAEhD,IAAKzJ,QAAQ,EAAG;MAEf,IAAM7wB,MAAM,GAAGuT,SAAS,CAAEsd,QAAQ,CAAE;MAEpCh2B,YAAY,GAAGmF,MAAM,CAACnF,YAAY;MAClCC,cAAc,GAAGkF,MAAM,CAAClF,cAAc;IAEvC,CAAC,MAAM;MAEND,YAAY,GAAGxY,QAAQ,CAACwY,YAAY;MACpCC,cAAc,GAAGzY,QAAQ,CAACyY,cAAc;MAExCo+B,cAAc,CAAC3zD,MAAM,CAAE8c,QAAQ,CAAE;MAEjCg4C,oBAAoB,GAAGnB,cAAc,CAACR,iBAAiB,CAAEr2C,QAAQ,CAAE;MACnEi4C,sBAAsB,GAAGpB,cAAc,CAACP,mBAAmB,CAAEt2C,QAAQ,CAAE;IAExE;IAEA,IAAMyc,mBAAmB,GAAGJ,QAAQ,CAACK,eAAe,EAAE;IAEtD,IAAMw7B,YAAY,GAAGl4C,QAAQ,CAAC4J,SAAS,GAAG,CAAC;IAC3C,IAAMuuC,YAAY,GAAGn4C,QAAQ,CAAC4G,SAAS,GAAG,CAAC;IAC3C,IAAMwxC,cAAc,GAAGp4C,QAAQ,CAACkH,WAAW,GAAG,CAAC;IAE/C,IAAMxH,UAAU,GAAG;MAElBkiB,QAAQ,EAAEA,QAAQ;MAElB4sB,QAAQ,EAAEA,QAAQ;MAClB+D,UAAU,EAAEvyC,QAAQ,CAACztC,IAAI;MAEzBimD,YAAY,EAAEA,YAAY;MAC1BC,cAAc,EAAEA,cAAc;MAC9BH,OAAO,EAAEtY,QAAQ,CAACsY,OAAO;MAEzB0/B,oBAAoB,EAAEA,oBAAoB;MAC1CC,sBAAsB,EAAEA,sBAAsB;MAE9C3F,mBAAmB,EAAEtyC,QAAQ,CAACsyC,mBAAmB,KAAK,IAAI;MAC1Dl5B,WAAW,EAAEpZ,QAAQ,CAACoZ,WAAW;MAEjCnU,SAAS,EAAEA,SAAS;MAEpButC,UAAU,EAAEj7E,MAAM,CAACunC,eAAe,KAAK,IAAI;MAC3C2zC,eAAe,EAAEl7E,MAAM,CAACunC,eAAe,KAAK,IAAI,IAAIvnC,MAAM,CAACynC,aAAa,KAAK,IAAI;MAEjF0zC,sBAAsB,EAAEhZ,cAAc;MACtCga,cAAc,EAAIj3B,mBAAmB,KAAK,IAAI,GAAKJ,QAAQ,CAACq3B,cAAc,GAAKj3B,mBAAmB,CAAC47B,gBAAgB,KAAK,IAAI,GAAG57B,mBAAmB,CAACr8B,OAAO,CAAClE,QAAQ,GAAGhZ,cAAgB;MACtLqkC,GAAG,EAAE,CAAC,CAAEvH,QAAQ,CAACuH,GAAG;MACpBC,MAAM,EAAE,CAAC,CAAExH,QAAQ,CAACwH,MAAM;MAC1BoB,MAAM,EAAE,CAAC,CAAEA,MAAM;MACjBuoC,UAAU,EAAEvoC,MAAM,IAAIA,MAAM,CAACltB,OAAO;MACpC4yD,kBAAkB,EAAEA,kBAAkB;MACtC5mC,QAAQ,EAAE,CAAC,CAAE1H,QAAQ,CAAC0H,QAAQ;MAC9BE,KAAK,EAAE,CAAC,CAAE5H,QAAQ,CAAC4H,KAAK;MACxBY,WAAW,EAAE,CAAC,CAAExI,QAAQ,CAACwI,WAAW;MACpCV,OAAO,EAAE,CAAC,CAAE9H,QAAQ,CAAC8H,OAAO;MAC5BE,SAAS,EAAE,CAAC,CAAEhI,QAAQ,CAACgI,SAAS;MAChC6qC,oBAAoB,EAAE7yC,QAAQ,CAACiI,aAAa,KAAK1kC,oBAAoB;MACrEgrE,qBAAqB,EAAEvuC,QAAQ,CAACiI,aAAa,KAAK3kC,qBAAqB;MAEvEiwE,kBAAkB,EAAE,CAAC,CAAEvzC,QAAQ,CAACuH,GAAG,IAAMvH,QAAQ,CAACuH,GAAG,CAAC+wC,cAAc,KAAK,IAAM,IAAMt4C,QAAQ,CAACuH,GAAG,CAACrrB,QAAQ,KAAK/Y,YAAc;MAE7HyjC,SAAS,EAAEuxC,YAAY;MACvBrxC,YAAY,EAAEqxC,YAAY,IAAI,CAAC,CAAEn4C,QAAQ,CAAC8G,YAAY;MACtDC,qBAAqB,EAAEoxC,YAAY,IAAI,CAAC,CAAEn4C,QAAQ,CAAC+G,qBAAqB;MACxEC,kBAAkB,EAAEmxC,YAAY,IAAI,CAAC,CAAEn4C,QAAQ,CAACgH,kBAAkB;MAElEE,WAAW,EAAEkxC,cAAc;MAC3B/wC,cAAc,EAAE+wC,cAAc,IAAI,CAAC,CAAEp4C,QAAQ,CAACqH,cAAc;MAC5DC,uBAAuB,EAAE8wC,cAAc,IAAI,CAAC,CAAEp4C,QAAQ,CAACsH,uBAAuB;MAE9Ea,eAAe,EAAE,CAAC,CAAEnI,QAAQ,CAACmI,eAAe;MAC5CG,YAAY,EAAE,CAAC,CAAEtI,QAAQ,CAACsI,YAAY;MACtCC,YAAY,EAAE,CAAC,CAAEvI,QAAQ,CAACuI,YAAY;MACtCE,WAAW,EAAE,CAAC,CAAEzI,QAAQ,CAACyI,WAAW;MACpCC,oBAAoB,EAAE,CAAC,CAAE1I,QAAQ,CAAC0I,oBAAoB;MACtDC,gBAAgB,EAAE,CAAC,CAAE3I,QAAQ,CAAC2I,gBAAgB;MAE9C8qC,MAAM,EAAEzzC,QAAQ,CAAC0D,WAAW,KAAK,KAAK,IAAI1D,QAAQ,CAACsD,QAAQ,KAAK5nC,cAAc;MAE9E+rC,QAAQ,EAAE,CAAC,CAAEzH,QAAQ,CAACyH,QAAQ;MAC9BmC,SAAS,EAAEsuC,YAAY;MAEvBjvC,WAAW,EAAE,CAAC,CAAEjJ,QAAQ,CAACiJ,WAAW;MAEpC9C,KAAK,EAAEnG,QAAQ,CAACmG,KAAK,GAAG,CAAC;MACzBksB,aAAa,EAAE,CAAC,CAAEryB,QAAQ,CAACqyB,aAAa;MACxCC,iBAAiB,EAAE,CAAC,CAAEtyB,QAAQ,CAACsyB,iBAAiB;MAEhDppB,YAAY,EAAElJ,QAAQ,CAACkJ,YAAY,GAAG,CAAC;MACvCC,eAAe,EAAE,CAAC,CAAEnJ,QAAQ,CAACmJ,eAAe;MAC5CE,YAAY,EAAE,CAAC,CAAErJ,QAAQ,CAACqJ,YAAY;MAEtCR,OAAO,EAAE7I,QAAQ,CAAC6I,OAAO;MAEzBiqC,cAAc,EAAI,CAAC,CAAE9yC,QAAQ,CAACgI,SAAS,IAAI,CAAC,CAAEvb,QAAQ,CAACC,UAAU,CAACojB,OAAS;MAC3EtM,YAAY,EAAExD,QAAQ,CAACwD,YAAY;MACnCuvC,YAAY,EAAE/yC,QAAQ,CAACwD,YAAY,KAAK,IAAI,IAAI,CAAC,CAAE/W,QAAQ,CAACC,UAAU,CAACjX,KAAK,IAAIgX,QAAQ,CAACC,UAAU,CAACjX,KAAK,CAACq1B,QAAQ,KAAK,CAAC;MACxHkoC,SAAS,EAAE,CAAC,CAAEhzC,QAAQ,CAACuH,GAAG,IAAI,CAAC,CAAEvH,QAAQ,CAAC8H,OAAO,IAAI,CAAC,CAAE9H,QAAQ,CAACgI,SAAS,IAAI,CAAC,CAAEhI,QAAQ,CAACyI,WAAW,IAAI,CAAC,CAAEzI,QAAQ,CAACyH,QAAQ,IAAI,CAAC,CAAEzH,QAAQ,CAACwI,WAAW,IAAI,CAAC,CAAExI,QAAQ,CAACsI,YAAY,IAAI,CAAC,CAAEtI,QAAQ,CAACuI,YAAY,IAAI,CAAC,CAAEvI,QAAQ,CAAC8G,YAAY,IAAI,CAAC,CAAE9G,QAAQ,CAAC+G,qBAAqB,IAAI,CAAC,CAAE/G,QAAQ,CAACgH,kBAAkB,IAAI,CAAC,CAAEhH,QAAQ,CAACqH,cAAc,IAAI,CAAC,CAAErH,QAAQ,CAACsH,uBAAuB,IAAI,CAAC,CAAEtH,QAAQ,CAACmI,eAAe,IAAI,CAAC,CAAEnI,QAAQ,CAACmJ,eAAe,IAAI,CAAC,CAAEnJ,QAAQ,CAACqJ,YAAY,IAAI,CAAC,CAAErJ,QAAQ,CAAC0I,oBAAoB,IAAI,CAAC,CAAE1I,QAAQ,CAAC2I,gBAAgB,IAAI,CAAC,CAAE3I,QAAQ,CAACqyB,aAAa,IAAI,CAAC,CAAEryB,QAAQ,CAACsyB,iBAAiB;MACplB2gB,aAAa,EAAE,EAAI,CAAC,CAAEjzC,QAAQ,CAACuH,GAAG,IAAI,CAAC,CAAEvH,QAAQ,CAAC8H,OAAO,IAAI,CAAC,CAAE9H,QAAQ,CAACgI,SAAS,IAAI,CAAC,CAAEhI,QAAQ,CAACyI,WAAW,IAAI,CAAC,CAAEzI,QAAQ,CAACyH,QAAQ,IAAI,CAAC,CAAEzH,QAAQ,CAACwI,WAAW,IAAI,CAAC,CAAExI,QAAQ,CAACsI,YAAY,IAAI,CAAC,CAAEtI,QAAQ,CAACuI,YAAY,IAAI,CAAC,CAAEvI,QAAQ,CAACgH,kBAAkB,IAAI,CAAC,CAAEhH,QAAQ,CAACqH,cAAc,IAAI,CAAC,CAAErH,QAAQ,CAACsH,uBAAuB,IAAItH,QAAQ,CAACkJ,YAAY,GAAG,CAAC,IAAI,CAAC,CAAElJ,QAAQ,CAACmJ,eAAe,IAAI,CAAC,CAAEnJ,QAAQ,CAACqJ,YAAY,IAAI,CAAC,CAAErJ,QAAQ,CAAC0I,oBAAoB,IAAI,CAAC,CAAE1I,QAAQ,CAAC2I,gBAAgB,IAAI3I,QAAQ,CAACmG,KAAK,GAAG,CAAC,IAAI,CAAC,CAAEnG,QAAQ,CAACqyB,aAAa,IAAI,CAAC,CAAEryB,QAAQ,CAACsyB,iBAAiB,CAAE,IAAI,CAAC,CAAEtyB,QAAQ,CAACmI,eAAe;MAEhlB8B,GAAG,EAAE,CAAC,CAAEA,GAAG;MACX0oC,MAAM,EAAE3yC,QAAQ,CAACiK,GAAG,KAAK,IAAI;MAC7B2oC,OAAO,EAAI3oC,GAAG,IAAIA,GAAG,CAACsuC,SAAW;MAEjCxyC,WAAW,EAAE,CAAC,CAAE/F,QAAQ,CAAC+F,WAAW;MAEpCyD,eAAe,EAAExJ,QAAQ,CAACwJ,eAAe;MACzCyvB,sBAAsB,EAAEA,sBAAsB;MAE9Cia,QAAQ,EAAE37E,MAAM,CAACqoC,aAAa,KAAK,IAAI;MAEvC6kC,YAAY,EAAEh4C,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,KAAK33B,SAAS;MAC7D0vE,YAAY,EAAEj4C,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,KAAK30B,SAAS;MAC3D2vE,WAAW,EAAEl4C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK,KAAKzgB,SAAS;MACzDqvE,iBAAiB,EAAEA,iBAAiB;MACpC8O,kBAAkB,EAAEA,kBAAkB;MAEtC5D,YAAY,EAAE72B,MAAM,CAAC8/B,WAAW,CAACliF,MAAM;MACvCo5E,cAAc,EAAEh3B,MAAM,CAACtsB,KAAK,CAAC91B,MAAM;MACnCk5E,aAAa,EAAE92B,MAAM,CAAC+/B,IAAI,CAACniF,MAAM;MACjCm5E,iBAAiB,EAAE/2B,MAAM,CAACggC,QAAQ,CAACpiF,MAAM;MACzCq5E,aAAa,EAAEj3B,MAAM,CAACigC,IAAI,CAACriF,MAAM;MAEjCs5E,kBAAkB,EAAEl3B,MAAM,CAACmX,oBAAoB,CAACv5D,MAAM;MACtDw5E,oBAAoB,EAAEp3B,MAAM,CAACgY,cAAc,CAACp6D,MAAM;MAClDu5E,mBAAmB,EAAEn3B,MAAM,CAAC0X,aAAa,CAAC95D,MAAM;MAEhD05E,iBAAiB,EAAEr3B,QAAQ,CAACyhB,SAAS;MACrC6V,mBAAmB,EAAEt3B,QAAQ,CAAC0hB,eAAe;MAE7Ch1B,SAAS,EAAErF,QAAQ,CAACqF,SAAS;MAE7BiuC,gBAAgB,EAAEj3B,QAAQ,CAACu8B,SAAS,CAACz9B,OAAO,IAAI28B,OAAO,CAACxhF,MAAM,GAAG,CAAC;MAClE06E,aAAa,EAAE30B,QAAQ,CAACu8B,SAAS,CAACrmF,IAAI;MAEtCqqD,WAAW,EAAE5c,QAAQ,CAACwF,UAAU,GAAG6W,QAAQ,CAACO,WAAW,GAAGl/C,aAAa;MACvE81E,uBAAuB,EAAEn3B,QAAQ,CAACm3B,uBAAuB;MAEzDjuC,kBAAkB,EAAEvF,QAAQ,CAACuF,kBAAkB;MAE/C6tC,WAAW,EAAEpzC,QAAQ,CAACuD,IAAI,KAAKjoC,UAAU;MACzC+3E,SAAS,EAAErzC,QAAQ,CAACuD,IAAI,KAAKloC,QAAQ;MAErCs4E,eAAe,EAAE,CAAC,CAAE3zC,QAAQ,CAAC4zC,YAAY;MACzCA,YAAY,EAAE5zC,QAAQ,CAAC4zC,YAAY,IAAI,CAAC;MAExC16B,mBAAmB,EAAElZ,QAAQ,CAACkZ,mBAAmB;MAEjDm1B,oBAAoB,EAAEruC,QAAQ,CAAC4Y,UAAU,IAAI5Y,QAAQ,CAAC4Y,UAAU,CAACC,WAAW;MAC5E41B,kBAAkB,EAAEzuC,QAAQ,CAAC4Y,UAAU,IAAI5Y,QAAQ,CAAC4Y,UAAU,CAACE,SAAS;MACxE61B,oBAAoB,EAAE3uC,QAAQ,CAAC4Y,UAAU,IAAI5Y,QAAQ,CAAC4Y,UAAU,CAACG,WAAW;MAC5E81B,yBAAyB,EAAE7uC,QAAQ,CAAC4Y,UAAU,IAAI5Y,QAAQ,CAAC4Y,UAAU,CAACI,gBAAgB;MAEtF01B,0BAA0B,EAAE9sB,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,gBAAgB,CAAE;MAC1EkW,4BAA4B,EAAEhtB,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,oBAAoB,CAAE;MAChFoW,iCAAiC,EAAEltB,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,wBAAwB,CAAE;MAEzF9yB,qBAAqB,EAAE5F,QAAQ,CAAC4F,qBAAqB;IAEtD,CAAC;IAED,OAAOlG,UAAU;EAElB;EAEA,SAASm5C,kBAAkBA,CAAEn5C,UAAU,EAAG;IAEzC,IAAMt5B,KAAK,GAAG,EAAE;IAEhB,IAAKs5B,UAAU,CAAC8uC,QAAQ,EAAG;MAE1BpoE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC8uC,QAAQ,CAAE;IAElC,CAAC,MAAM;MAENpoE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACs4C,oBAAoB,CAAE;MAC7C5xE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACu4C,sBAAsB,CAAE;IAEhD;IAEA,IAAKv4C,UAAU,CAAC4Y,OAAO,KAAKtjD,SAAS,EAAG;MAEvC,KAAM,IAAM6B,IAAI,IAAI6oC,UAAU,CAAC4Y,OAAO,EAAG;QAExClyC,KAAK,CAACrQ,IAAI,CAAEc,IAAI,CAAE;QAClBuP,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC4Y,OAAO,CAAEzhD,IAAI,CAAE,CAAE;MAEzC;IAED;IAEA,IAAK6oC,UAAU,CAAC4yC,mBAAmB,KAAK,KAAK,EAAG;MAE/CwG,4BAA4B,CAAE1yE,KAAK,EAAEs5B,UAAU,CAAE;MACjDq5C,0BAA0B,CAAE3yE,KAAK,EAAEs5B,UAAU,CAAE;MAC/Ct5B,KAAK,CAACrQ,IAAI,CAAEsmD,QAAQ,CAACq3B,cAAc,CAAE;IAEtC;IAEAttE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACkG,qBAAqB,CAAE;IAE9C,OAAOx/B,KAAK,CAACgnE,IAAI,EAAE;EAEpB;EAEA,SAAS0L,4BAA4BA,CAAE1yE,KAAK,EAAEs5B,UAAU,EAAG;IAE1Dt5B,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACuF,SAAS,CAAE;IAClC7+B,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACg0C,cAAc,CAAE;IACvCttE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACyxC,UAAU,CAAE;IACnC/qE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC4uC,kBAAkB,CAAE;IAC3CloE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACmJ,OAAO,CAAE;IAChCziC,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACszC,SAAS,CAAE;IAClC5sE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACkzC,OAAO,CAAE;IAChCxsE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC8J,eAAe,CAAE;IACxCpjC,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC2kC,iBAAiB,CAAE;IAC1Cj+D,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACs5C,mBAAmB,CAAE;IAC5C5yE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC6vC,YAAY,CAAE;IACrCnpE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACgwC,cAAc,CAAE;IACvCtpE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC8vC,aAAa,CAAE;IACtCppE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACiwC,aAAa,CAAE;IACtCvpE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAAC+vC,iBAAiB,CAAE;IAC1CrpE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACkwC,kBAAkB,CAAE;IAC3CxpE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACowC,oBAAoB,CAAE;IAC7C1pE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACmwC,mBAAmB,CAAE;IAC5CzpE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACsxC,aAAa,CAAE;IACtC5qE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACkd,WAAW,CAAE;IACpCx2C,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACswC,iBAAiB,CAAE;IAC1C5pE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACuwC,mBAAmB,CAAE;IAC5C7pE,KAAK,CAACrQ,IAAI,CAAE2pC,UAAU,CAACk0C,YAAY,CAAE;EAEtC;EAEA,SAASmF,0BAA0BA,CAAE3yE,KAAK,EAAEs5B,UAAU,EAAG;IAExDk3C,cAAc,CAACj9C,UAAU,EAAE;IAE3B,IAAK+F,UAAU,CAACkiB,QAAQ,EACvBg1B,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACgzC,sBAAsB,EACrCkE,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC8yC,UAAU,EACzBoE,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC+yC,eAAe,EAC9BmE,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC6H,GAAG,EAClBqvC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC8H,MAAM,EACrBovC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACkJ,MAAM,EACrBguC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACgI,QAAQ,EACvBkvC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACkI,KAAK,EACpBgvC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC8I,WAAW,EAC1BouC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACoI,OAAO,EACtB8uC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACsI,SAAS,EACxB4uC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACmzC,oBAAoB,EACnC+D,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC6uC,qBAAqB,EACpCqI,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACkH,SAAS,EACxBgwC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACoH,YAAY,EAC3B8vC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACqH,qBAAqB,EACpC6vC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACsH,kBAAkB,EACjC4vC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACwH,WAAW,EAC1B0vC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC2H,cAAc,EAC7BuvC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC4H,uBAAuB,EACtCsvC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACyI,eAAe,EAC9ByuC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC+I,WAAW,EAC1BmuC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC4I,YAAY,EAC3BsuC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC6I,YAAY,EAC3BquC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACuJ,WAAW,EAC1B2tC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC+H,QAAQ,EACvBmvC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACkK,SAAS,EACxBgtC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC8D,YAAY,EAC3BozC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACqzC,YAAY,EAC3B6D,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACszC,SAAS,EACxB4D,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACozC,cAAc,EAC7B8D,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACuzC,aAAa,EAC5B2D,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACuK,GAAG,EAClB2sC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAE5BnzB,KAAK,CAACrQ,IAAI,CAAE6gF,cAAc,CAACv9C,IAAI,CAAE;IACjCu9C,cAAc,CAACj9C,UAAU,EAAE;IAE3B,IAAK+F,UAAU,CAACizC,MAAM,EACrBiE,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACqG,WAAW,EAC1B6wC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACu5B,sBAAsB,EACrC2d,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACwzC,QAAQ,EACvB0D,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC+kC,YAAY,EAC3BmS,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACglC,YAAY,EAC3BkS,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAACilC,WAAW,EAC1BiS,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC6F,kBAAkB,EACjCqxC,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC4zC,gBAAgB,EAC/BsD,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC8zC,uBAAuB,EACtCoD,cAAc,CAACr9C,MAAM,CAAE,CAAC,CAAE;IAC3B,IAAKmG,UAAU,CAAC0zC,WAAW,EAC1BwD,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC2zC,SAAS,EACxBuD,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACi0C,eAAe,EAC9BiD,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC2F,SAAS,EACxBuxC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACgJ,oBAAoB,EACnCkuC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACiJ,gBAAgB,EAC/BiuC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACwJ,YAAY,EAC3B0tC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACyJ,eAAe,EAC9BytC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC2J,YAAY,EAC3ButC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAACyG,KAAK,EACpBywC,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC2yB,aAAa,EAC5BukB,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC4yB,iBAAiB,EAChCskB,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC6zC,kBAAkB,EACjCqD,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAC5B,IAAKmG,UAAU,CAAC+zC,MAAM,EACrBmD,cAAc,CAACr9C,MAAM,CAAE,EAAE,CAAE;IAE5BnzB,KAAK,CAACrQ,IAAI,CAAE6gF,cAAc,CAACv9C,IAAI,CAAE;EAElC;EAEA,SAAS+rC,WAAWA,CAAEplC,QAAQ,EAAG;IAEhC,IAAMwuC,QAAQ,GAAGsI,SAAS,CAAE92C,QAAQ,CAACztC,IAAI,CAAE;IAC3C,IAAIolD,QAAQ;IAEZ,IAAK62B,QAAQ,EAAG;MAEf,IAAM7wB,MAAM,GAAGuT,SAAS,CAAEsd,QAAQ,CAAE;MACpC72B,QAAQ,GAAGG,aAAa,CAACrrC,KAAK,CAAEkxC,MAAM,CAAChG,QAAQ,CAAE;IAElD,CAAC,MAAM;MAENA,QAAQ,GAAG3X,QAAQ,CAAC2X,QAAQ;IAE7B;IAEA,OAAOA,QAAQ;EAEhB;EAEA,SAASshC,cAAcA,CAAEv5C,UAAU,EAAEoyC,QAAQ,EAAG;IAE/C,IAAIld,OAAO;;IAEX;IACA,KAAM,IAAIz+C,CAAC,GAAG,CAAC,EAAE+iE,EAAE,GAAGvV,QAAQ,CAACrtE,MAAM,EAAE6f,CAAC,GAAG+iE,EAAE,EAAE/iE,CAAC,EAAG,EAAG;MAErD,IAAMgjE,kBAAkB,GAAGxV,QAAQ,CAAExtD,CAAC,CAAE;MAExC,IAAKgjE,kBAAkB,CAACrH,QAAQ,KAAKA,QAAQ,EAAG;QAE/Cld,OAAO,GAAGukB,kBAAkB;QAC5B,EAAGvkB,OAAO,CAACygB,SAAS;QAEpB;MAED;IAED;IAEA,IAAKzgB,OAAO,KAAK5/D,SAAS,EAAG;MAE5B4/D,OAAO,GAAG,IAAIid,YAAY,CAAEx1B,QAAQ,EAAEy1B,QAAQ,EAAEpyC,UAAU,EAAE40B,aAAa,CAAE;MAC3EqP,QAAQ,CAAC5tE,IAAI,CAAE6+D,OAAO,CAAE;IAEzB;IAEA,OAAOA,OAAO;EAEf;EAEA,SAASwkB,cAAcA,CAAExkB,OAAO,EAAG;IAElC,IAAK,EAAGA,OAAO,CAACygB,SAAS,KAAK,CAAC,EAAG;MAEjC;MACA,IAAM9+E,CAAC,GAAGotE,QAAQ,CAAC/9D,OAAO,CAAEgvD,OAAO,CAAE;MACrC+O,QAAQ,CAAEptE,CAAC,CAAE,GAAGotE,QAAQ,CAAEA,QAAQ,CAACrtE,MAAM,GAAG,CAAC,CAAE;MAC/CqtE,QAAQ,CAAClsE,GAAG,EAAE;;MAEd;MACAm9D,OAAO,CAACugB,OAAO,EAAE;IAElB;EAED;EAEA,SAASkE,kBAAkBA,CAAEr5C,QAAQ,EAAG;IAEvC62C,cAAc,CAACz5C,MAAM,CAAE4C,QAAQ,CAAE;EAElC;EAEA,SAASviB,OAAOA,CAAA,EAAG;IAElBo5D,cAAc,CAACp5D,OAAO,EAAE;EAEzB;EAEA,OAAO;IACNo6D,aAAa,EAAEA,aAAa;IAC5BgB,kBAAkB,EAAEA,kBAAkB;IACtCzT,WAAW,EAAEA,WAAW;IACxB6T,cAAc,EAAEA,cAAc;IAC9BG,cAAc,EAAEA,cAAc;IAC9BC,kBAAkB,EAAEA,kBAAkB;IACtC;IACA1V,QAAQ,EAAEA,QAAQ;IAClBlmD,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAAS67D,eAAeA,CAAA,EAAG;EAE1B,IAAI/pB,UAAU,GAAG,IAAIzN,OAAO,EAAE;EAE9B,SAAS51C,GAAGA,CAAE3U,MAAM,EAAG;IAEtB,IAAIgwC,GAAG,GAAGgoB,UAAU,CAACrjD,GAAG,CAAE3U,MAAM,CAAE;IAElC,IAAKgwC,GAAG,KAAKvyC,SAAS,EAAG;MAExBuyC,GAAG,GAAG,CAAC,CAAC;MACRgoB,UAAU,CAACtkD,GAAG,CAAE1T,MAAM,EAAEgwC,GAAG,CAAE;IAE9B;IAEA,OAAOA,GAAG;EAEX;EAEA,SAASnK,MAAMA,CAAE7lC,MAAM,EAAG;IAEzBg4D,UAAU,CAAC9M,MAAM,CAAElrD,MAAM,CAAE;EAE5B;EAEA,SAAS2rB,MAAMA,CAAE3rB,MAAM,EAAE/G,GAAG,EAAEE,KAAK,EAAG;IAErC6+D,UAAU,CAACrjD,GAAG,CAAE3U,MAAM,CAAE,CAAE/G,GAAG,CAAE,GAAGE,KAAK;EAExC;EAEA,SAAS+sB,OAAOA,CAAA,EAAG;IAElB8xC,UAAU,GAAG,IAAIzN,OAAO,EAAE;EAE3B;EAEA,OAAO;IACN51C,GAAG,EAAEA,GAAG;IACRkxB,MAAM,EAAEA,MAAM;IACdla,MAAM,EAAEA,MAAM;IACdzF,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAAS87D,iBAAiBA,CAAEpvE,CAAC,EAAEC,CAAC,EAAG;EAElC,IAAKD,CAAC,CAACqvE,UAAU,KAAKpvE,CAAC,CAACovE,UAAU,EAAG;IAEpC,OAAOrvE,CAAC,CAACqvE,UAAU,GAAGpvE,CAAC,CAACovE,UAAU;EAEnC,CAAC,MAAM,IAAKrvE,CAAC,CAAC0xB,WAAW,KAAKzxB,CAAC,CAACyxB,WAAW,EAAG;IAE7C,OAAO1xB,CAAC,CAAC0xB,WAAW,GAAGzxB,CAAC,CAACyxB,WAAW;EAErC,CAAC,MAAM,IAAK1xB,CAAC,CAAC61B,QAAQ,CAACvC,EAAE,KAAKrzB,CAAC,CAAC41B,QAAQ,CAACvC,EAAE,EAAG;IAE7C,OAAOtzB,CAAC,CAAC61B,QAAQ,CAACvC,EAAE,GAAGrzB,CAAC,CAAC41B,QAAQ,CAACvC,EAAE;EAErC,CAAC,MAAM,IAAKtzB,CAAC,CAAC2T,CAAC,KAAK1T,CAAC,CAAC0T,CAAC,EAAG;IAEzB,OAAO3T,CAAC,CAAC2T,CAAC,GAAG1T,CAAC,CAAC0T,CAAC;EAEjB,CAAC,MAAM;IAEN,OAAO3T,CAAC,CAACszB,EAAE,GAAGrzB,CAAC,CAACqzB,EAAE;EAEnB;AAED;AAEA,SAASg8C,wBAAwBA,CAAEtvE,CAAC,EAAEC,CAAC,EAAG;EAEzC,IAAKD,CAAC,CAACqvE,UAAU,KAAKpvE,CAAC,CAACovE,UAAU,EAAG;IAEpC,OAAOrvE,CAAC,CAACqvE,UAAU,GAAGpvE,CAAC,CAACovE,UAAU;EAEnC,CAAC,MAAM,IAAKrvE,CAAC,CAAC0xB,WAAW,KAAKzxB,CAAC,CAACyxB,WAAW,EAAG;IAE7C,OAAO1xB,CAAC,CAAC0xB,WAAW,GAAGzxB,CAAC,CAACyxB,WAAW;EAErC,CAAC,MAAM,IAAK1xB,CAAC,CAAC2T,CAAC,KAAK1T,CAAC,CAAC0T,CAAC,EAAG;IAEzB,OAAO1T,CAAC,CAAC0T,CAAC,GAAG3T,CAAC,CAAC2T,CAAC;EAEjB,CAAC,MAAM;IAEN,OAAO3T,CAAC,CAACszB,EAAE,GAAGrzB,CAAC,CAACqzB,EAAE;EAEnB;AAED;AAGA,SAASi8C,eAAeA,CAAA,EAAG;EAE1B,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAIC,gBAAgB,GAAG,CAAC;EAExB,IAAMnG,MAAM,GAAG,EAAE;EACjB,IAAMoG,YAAY,GAAG,EAAE;EACvB,IAAMn2C,WAAW,GAAG,EAAE;EAEtB,SAAS42B,IAAIA,CAAA,EAAG;IAEfsf,gBAAgB,GAAG,CAAC;IAEpBnG,MAAM,CAACn9E,MAAM,GAAG,CAAC;IACjBujF,YAAY,CAACvjF,MAAM,GAAG,CAAC;IACvBotC,WAAW,CAACptC,MAAM,GAAG,CAAC;EAEvB;EAEA,SAASwjF,iBAAiBA,CAAEviF,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAEw5C,UAAU,EAAE17D,CAAC,EAAEyzB,KAAK,EAAG;IAE9E,IAAIwoC,UAAU,GAAGJ,WAAW,CAAEC,gBAAgB,CAAE;IAEhD,IAAKG,UAAU,KAAK/kF,SAAS,EAAG;MAE/B+kF,UAAU,GAAG;QACZt8C,EAAE,EAAElmC,MAAM,CAACkmC,EAAE;QACblmC,MAAM,EAAEA,MAAM;QACdk1B,QAAQ,EAAEA,QAAQ;QAClBuT,QAAQ,EAAEA,QAAQ;QAClBw5C,UAAU,EAAEA,UAAU;QACtB39C,WAAW,EAAEtkC,MAAM,CAACskC,WAAW;QAC/B/d,CAAC,EAAEA,CAAC;QACJyzB,KAAK,EAAEA;MACR,CAAC;MAEDooC,WAAW,CAAEC,gBAAgB,CAAE,GAAGG,UAAU;IAE7C,CAAC,MAAM;MAENA,UAAU,CAACt8C,EAAE,GAAGlmC,MAAM,CAACkmC,EAAE;MACzBs8C,UAAU,CAACxiF,MAAM,GAAGA,MAAM;MAC1BwiF,UAAU,CAACttD,QAAQ,GAAGA,QAAQ;MAC9BstD,UAAU,CAAC/5C,QAAQ,GAAGA,QAAQ;MAC9B+5C,UAAU,CAACP,UAAU,GAAGA,UAAU;MAClCO,UAAU,CAACl+C,WAAW,GAAGtkC,MAAM,CAACskC,WAAW;MAC3Ck+C,UAAU,CAACj8D,CAAC,GAAGA,CAAC;MAChBi8D,UAAU,CAACxoC,KAAK,GAAGA,KAAK;IAEzB;IAEAqoC,gBAAgB,EAAG;IAEnB,OAAOG,UAAU;EAElB;EAEA,SAAShkF,IAAIA,CAAEwB,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAEw5C,UAAU,EAAE17D,CAAC,EAAEyzB,KAAK,EAAG;IAEjE,IAAMwoC,UAAU,GAAGD,iBAAiB,CAAEviF,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAEw5C,UAAU,EAAE17D,CAAC,EAAEyzB,KAAK,CAAE;IAExF,IAAKvR,QAAQ,CAACkJ,YAAY,GAAG,GAAG,EAAG;MAElC2wC,YAAY,CAAC9jF,IAAI,CAAEgkF,UAAU,CAAE;IAEhC,CAAC,MAAM,IAAK/5C,QAAQ,CAAC0D,WAAW,KAAK,IAAI,EAAG;MAE3CA,WAAW,CAAC3tC,IAAI,CAAEgkF,UAAU,CAAE;IAE/B,CAAC,MAAM;MAENtG,MAAM,CAAC19E,IAAI,CAAEgkF,UAAU,CAAE;IAE1B;EAED;EAEA,SAASlmB,OAAOA,CAAEt8D,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAEw5C,UAAU,EAAE17D,CAAC,EAAEyzB,KAAK,EAAG;IAEpE,IAAMwoC,UAAU,GAAGD,iBAAiB,CAAEviF,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAEw5C,UAAU,EAAE17D,CAAC,EAAEyzB,KAAK,CAAE;IAExF,IAAKvR,QAAQ,CAACkJ,YAAY,GAAG,GAAG,EAAG;MAElC2wC,YAAY,CAAChmB,OAAO,CAAEkmB,UAAU,CAAE;IAEnC,CAAC,MAAM,IAAK/5C,QAAQ,CAAC0D,WAAW,KAAK,IAAI,EAAG;MAE3CA,WAAW,CAACmwB,OAAO,CAAEkmB,UAAU,CAAE;IAElC,CAAC,MAAM;MAENtG,MAAM,CAAC5f,OAAO,CAAEkmB,UAAU,CAAE;IAE7B;EAED;EAEA,SAASxU,IAAIA,CAAEyU,gBAAgB,EAAEC,qBAAqB,EAAG;IAExD,IAAKxG,MAAM,CAACn9E,MAAM,GAAG,CAAC,EAAGm9E,MAAM,CAAClO,IAAI,CAAEyU,gBAAgB,IAAIT,iBAAiB,CAAE;IAC7E,IAAKM,YAAY,CAACvjF,MAAM,GAAG,CAAC,EAAGujF,YAAY,CAACtU,IAAI,CAAE0U,qBAAqB,IAAIR,wBAAwB,CAAE;IACrG,IAAK/1C,WAAW,CAACptC,MAAM,GAAG,CAAC,EAAGotC,WAAW,CAAC6hC,IAAI,CAAE0U,qBAAqB,IAAIR,wBAAwB,CAAE;EAEpG;EAEA,SAAShhF,MAAMA,CAAA,EAAG;IAEjB;;IAEA,KAAM,IAAIlC,CAAC,GAAGqjF,gBAAgB,EAAEt3D,EAAE,GAAGq3D,WAAW,CAACrjF,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAEvE,IAAMwjF,UAAU,GAAGJ,WAAW,CAAEpjF,CAAC,CAAE;MAEnC,IAAKwjF,UAAU,CAACt8C,EAAE,KAAK,IAAI,EAAG;MAE9Bs8C,UAAU,CAACt8C,EAAE,GAAG,IAAI;MACpBs8C,UAAU,CAACxiF,MAAM,GAAG,IAAI;MACxBwiF,UAAU,CAACttD,QAAQ,GAAG,IAAI;MAC1BstD,UAAU,CAAC/5C,QAAQ,GAAG,IAAI;MAC1B+5C,UAAU,CAACxoC,KAAK,GAAG,IAAI;IAExB;EAED;EAEA,OAAO;IAENkiC,MAAM,EAAEA,MAAM;IACdoG,YAAY,EAAEA,YAAY;IAC1Bn2C,WAAW,EAAEA,WAAW;IAExB42B,IAAI,EAAEA,IAAI;IACVvkE,IAAI,EAAEA,IAAI;IACV89D,OAAO,EAAEA,OAAO;IAChBp7D,MAAM,EAAEA,MAAM;IAEd8sE,IAAI,EAAEA;EACP,CAAC;AAEF;AAEA,SAAS2U,gBAAgBA,CAAA,EAAG;EAE3B,IAAIC,KAAK,GAAG,IAAIr4B,OAAO,EAAE;EAEzB,SAAS51C,GAAGA,CAAEowC,KAAK,EAAE89B,eAAe,EAAG;IAEtC,IAAIC,IAAI;IAER,IAAKF,KAAK,CAACzhB,GAAG,CAAEpc,KAAK,CAAE,KAAK,KAAK,EAAG;MAEnC+9B,IAAI,GAAG,IAAIX,eAAe,EAAE;MAC5BS,KAAK,CAAClvE,GAAG,CAAEqxC,KAAK,EAAE,CAAE+9B,IAAI,CAAE,CAAE;IAE7B,CAAC,MAAM;MAEN,IAAKD,eAAe,IAAID,KAAK,CAACjuE,GAAG,CAAEowC,KAAK,CAAE,CAAChmD,MAAM,EAAG;QAEnD+jF,IAAI,GAAG,IAAIX,eAAe,EAAE;QAC5BS,KAAK,CAACjuE,GAAG,CAAEowC,KAAK,CAAE,CAACvmD,IAAI,CAAEskF,IAAI,CAAE;MAEhC,CAAC,MAAM;QAENA,IAAI,GAAGF,KAAK,CAACjuE,GAAG,CAAEowC,KAAK,CAAE,CAAE89B,eAAe,CAAE;MAE7C;IAED;IAEA,OAAOC,IAAI;EAEZ;EAEA,SAAS58D,OAAOA,CAAA,EAAG;IAElB08D,KAAK,GAAG,IAAIr4B,OAAO,EAAE;EAEtB;EAEA,OAAO;IACN51C,GAAG,EAAEA,GAAG;IACRuR,OAAO,EAAEA;EACV,CAAC;AAEF;AAEA,SAAS68D,aAAaA,CAAA,EAAG;EAExB,IAAM5hC,MAAM,GAAG,CAAC,CAAC;EAEjB,OAAO;IAENxsC,GAAG,EAAE,SAAAA,IAAWquE,KAAK,EAAG;MAEvB,IAAK7hC,MAAM,CAAE6hC,KAAK,CAAC98C,EAAE,CAAE,KAAKzoC,SAAS,EAAG;QAEvC,OAAO0jD,MAAM,CAAE6hC,KAAK,CAAC98C,EAAE,CAAE;MAE1B;MAEA,IAAIka,QAAQ;MAEZ,QAAS4iC,KAAK,CAAChoF,IAAI;QAElB,KAAK,kBAAkB;UACtBolD,QAAQ,GAAG;YACVlnB,SAAS,EAAE,IAAIpJ,OAAO,EAAE;YACxB5R,KAAK,EAAE,IAAIa,KAAK;UACjB,CAAC;UACD;QAED,KAAK,WAAW;UACfqhC,QAAQ,GAAG;YACVhrB,QAAQ,EAAE,IAAItF,OAAO,EAAE;YACvBoJ,SAAS,EAAE,IAAIpJ,OAAO,EAAE;YACxB5R,KAAK,EAAE,IAAIa,KAAK,EAAE;YAClBqmB,QAAQ,EAAE,CAAC;YACXqzB,OAAO,EAAE,CAAC;YACVC,WAAW,EAAE,CAAC;YACdC,KAAK,EAAE;UACR,CAAC;UACD;QAED,KAAK,YAAY;UAChBvY,QAAQ,GAAG;YACVhrB,QAAQ,EAAE,IAAItF,OAAO,EAAE;YACvB5R,KAAK,EAAE,IAAIa,KAAK,EAAE;YAClBqmB,QAAQ,EAAE,CAAC;YACXuzB,KAAK,EAAE;UACR,CAAC;UACD;QAED,KAAK,iBAAiB;UACrBvY,QAAQ,GAAG;YACVlnB,SAAS,EAAE,IAAIpJ,OAAO,EAAE;YACxBwpC,QAAQ,EAAE,IAAIv6C,KAAK,EAAE;YACrBw6C,WAAW,EAAE,IAAIx6C,KAAK;UACvB,CAAC;UACD;QAED,KAAK,eAAe;UACnBqhC,QAAQ,GAAG;YACVliC,KAAK,EAAE,IAAIa,KAAK,EAAE;YAClBqW,QAAQ,EAAE,IAAItF,OAAO,EAAE;YACvBmzD,SAAS,EAAE,IAAInzD,OAAO,EAAE;YACxBozD,UAAU,EAAE,IAAIpzD,OAAO;UACxB,CAAC;UACD;MAAM;MAIRqxB,MAAM,CAAE6hC,KAAK,CAAC98C,EAAE,CAAE,GAAGka,QAAQ;MAE7B,OAAOA,QAAQ;IAEhB;EAED,CAAC;AAEF;AAEA,SAAS+iC,mBAAmBA,CAAA,EAAG;EAE9B,IAAMhiC,MAAM,GAAG,CAAC,CAAC;EAEjB,OAAO;IAENxsC,GAAG,EAAE,SAAAA,IAAWquE,KAAK,EAAG;MAEvB,IAAK7hC,MAAM,CAAE6hC,KAAK,CAAC98C,EAAE,CAAE,KAAKzoC,SAAS,EAAG;QAEvC,OAAO0jD,MAAM,CAAE6hC,KAAK,CAAC98C,EAAE,CAAE;MAE1B;MAEA,IAAIka,QAAQ;MAEZ,QAAS4iC,KAAK,CAAChoF,IAAI;QAElB,KAAK,kBAAkB;UACtBolD,QAAQ,GAAG;YACV8X,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAI7jD,OAAO;UAC3B,CAAC;UACD;QAED,KAAK,WAAW;UACf4rC,QAAQ,GAAG;YACV8X,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAI7jD,OAAO;UAC3B,CAAC;UACD;QAED,KAAK,YAAY;UAChB4rC,QAAQ,GAAG;YACV8X,UAAU,EAAE,CAAC;YACbC,gBAAgB,EAAE,CAAC;YACnBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,IAAI7jD,OAAO,EAAE;YAC5BykD,gBAAgB,EAAE,CAAC;YACnBC,eAAe,EAAE;UAClB,CAAC;UACD;;QAED;MAAA;;MAID/X,MAAM,CAAE6hC,KAAK,CAAC98C,EAAE,CAAE,GAAGka,QAAQ;MAE7B,OAAOA,QAAQ;IAEhB;EAED,CAAC;AAEF;AAIA,IAAIgjC,WAAW,GAAG,CAAC;AAEnB,SAASC,wBAAwBA,CAAEC,MAAM,EAAEC,MAAM,EAAG;EAEnD,OAAO,CAAEA,MAAM,CAACp/C,UAAU,GAAG,CAAC,GAAG,CAAC,KAAOm/C,MAAM,CAACn/C,UAAU,GAAG,CAAC,GAAG,CAAC,CAAE;AAErE;AAEA,SAASq/C,WAAWA,CAAEniC,UAAU,EAAE+I,YAAY,EAAG;EAEhD,IAAMvhB,KAAK,GAAG,IAAIk6C,aAAa,EAAE;EAEjC,IAAMU,WAAW,GAAGN,mBAAmB,EAAE;EAEzC,IAAMtmF,KAAK,GAAG;IAEbomB,OAAO,EAAE,CAAC;IAEVygE,IAAI,EAAE;MACLC,iBAAiB,EAAE,CAAE,CAAC;MACtBC,WAAW,EAAE,CAAE,CAAC;MAChBC,UAAU,EAAE,CAAE,CAAC;MACfC,cAAc,EAAE,CAAE,CAAC;MACnBC,UAAU,EAAE,CAAE,CAAC;MAEfC,qBAAqB,EAAE,CAAE,CAAC;MAC1BC,eAAe,EAAE,CAAE,CAAC;MACpBC,cAAc,EAAE,CAAE;IACnB,CAAC;IAEDC,OAAO,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACpBC,KAAK,EAAE,EAAE;IACTnD,WAAW,EAAE,EAAE;IACfoD,iBAAiB,EAAE,EAAE;IACrB/rB,oBAAoB,EAAE,EAAE;IACxBC,uBAAuB,EAAE,EAAE;IAC3B2oB,IAAI,EAAE,EAAE;IACRoD,UAAU,EAAE,EAAE;IACdzrB,aAAa,EAAE,EAAE;IACjBC,gBAAgB,EAAE,EAAE;IACpBqoB,QAAQ,EAAE,EAAE;IACZoD,YAAY,EAAE,IAAI;IAClBC,YAAY,EAAE,IAAI;IAClB3vD,KAAK,EAAE,EAAE;IACT4vD,WAAW,EAAE,EAAE;IACftrB,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrBgoB,IAAI,EAAE;EAEP,CAAC;EAED,KAAM,IAAIpiF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAGnC,KAAK,CAACunF,KAAK,CAAC5lF,IAAI,CAAE,IAAIsxB,OAAO,EAAE,CAAE;EAEhE,IAAM40D,OAAO,GAAG,IAAI50D,OAAO,EAAE;EAC7B,IAAMhU,OAAO,GAAG,IAAIggB,OAAO,EAAE;EAC7B,IAAM6oD,QAAQ,GAAG,IAAI7oD,OAAO,EAAE;EAE9B,SAASshC,KAAKA,CAAEjc,MAAM,EAAE86B,uBAAuB,EAAG;IAEjD,IAAIjgE,CAAC,GAAG,CAAC;MAAEb,CAAC,GAAG,CAAC;MAAEtI,CAAC,GAAG,CAAC;IAEvB,KAAM,IAAI7T,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAGnC,KAAK,CAACunF,KAAK,CAAEplF,IAAC,CAAE,CAAC0U,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE9D,IAAIiwE,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAIC,qBAAqB,GAAG,CAAC;IAC7B,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,cAAc,GAAG,CAAC;IAEtB/iC,MAAM,CAAC6sB,IAAI,CAAEqV,wBAAwB,CAAE;;IAEvC;IACA,IAAMuB,WAAW,GAAK3I,uBAAuB,KAAK,IAAI,GAAK/sE,IAAI,CAACC,EAAE,GAAG,CAAC;IAEtE,KAAM,IAAInQ,IAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGqyC,MAAM,CAACpiD,MAAM,EAAEC,IAAC,GAAG8P,CAAC,EAAE9P,IAAC,EAAG,EAAG;MAEjD,IAAMgkF,KAAK,GAAG7hC,MAAM,CAAEniD,IAAC,CAAE;MAEzB,IAAMkf,KAAK,GAAG8kE,KAAK,CAAC9kE,KAAK;MACzB,IAAM2mE,SAAS,GAAG7B,KAAK,CAAC6B,SAAS;MACjC,IAAMz/C,QAAQ,GAAG49C,KAAK,CAAC59C,QAAQ;MAE/B,IAAMi8C,SAAS,GAAK2B,KAAK,CAACtoB,MAAM,IAAIsoB,KAAK,CAACtoB,MAAM,CAAC1qB,GAAG,GAAKgzC,KAAK,CAACtoB,MAAM,CAAC1qB,GAAG,CAACnnB,OAAO,GAAG,IAAI;MAExF,IAAKm6D,KAAK,CAAC8B,cAAc,EAAG;QAE3B9oE,CAAC,IAAIkC,KAAK,CAAClC,CAAC,GAAG6oE,SAAS,GAAGD,WAAW;QACtCzpE,CAAC,IAAI+C,KAAK,CAAC/C,CAAC,GAAG0pE,SAAS,GAAGD,WAAW;QACtC/xE,CAAC,IAAIqL,KAAK,CAACrL,CAAC,GAAGgyE,SAAS,GAAGD,WAAW;MAEvC,CAAC,MAAM,IAAK5B,KAAK,CAAC+B,YAAY,EAAG;QAEhC,KAAM,IAAIttD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B56B,KAAK,CAACunF,KAAK,CAAE3sD,CAAC,CAAE,CAACjiB,eAAe,CAAEwtE,KAAK,CAACgC,EAAE,CAACC,YAAY,CAAExtD,CAAC,CAAE,EAAEotD,SAAS,CAAE;QAE1E;MAED,CAAC,MAAM,IAAK7B,KAAK,CAACkC,kBAAkB,EAAG;QAEtC,IAAM9kC,QAAQ,GAAGvX,KAAK,CAACl0B,GAAG,CAAEquE,KAAK,CAAE;QAEnC5iC,QAAQ,CAACliC,KAAK,CAAC/I,IAAI,CAAE6tE,KAAK,CAAC9kE,KAAK,CAAE,CAACrI,cAAc,CAAEmtE,KAAK,CAAC6B,SAAS,GAAGD,WAAW,CAAE;QAElF,IAAK5B,KAAK,CAAC7+C,UAAU,EAAG;UAEvB,IAAMu2B,MAAM,GAAGsoB,KAAK,CAACtoB,MAAM;UAE3B,IAAMyqB,cAAc,GAAG1B,WAAW,CAAC9uE,GAAG,CAAEquE,KAAK,CAAE;UAE/CmC,cAAc,CAACjtB,UAAU,GAAGwC,MAAM,CAAC0qB,IAAI;UACvCD,cAAc,CAAChtB,gBAAgB,GAAGuC,MAAM,CAAC2qB,UAAU;UACnDF,cAAc,CAAC/sB,YAAY,GAAGsC,MAAM,CAACloC,MAAM;UAC3C2yD,cAAc,CAAC9sB,aAAa,GAAGqC,MAAM,CAAC4qB,OAAO;UAE7CzoF,KAAK,CAACwnF,iBAAiB,CAAEV,iBAAiB,CAAE,GAAGwB,cAAc;UAC7DtoF,KAAK,CAACy7D,oBAAoB,CAAEqrB,iBAAiB,CAAE,GAAGtC,SAAS;UAC3DxkF,KAAK,CAAC07D,uBAAuB,CAAEorB,iBAAiB,CAAE,GAAGX,KAAK,CAACtoB,MAAM,CAAC79C,MAAM;UAExEmnE,qBAAqB,EAAG;QAEzB;QAEAnnF,KAAK,CAACokF,WAAW,CAAE0C,iBAAiB,CAAE,GAAGvjC,QAAQ;QAEjDujC,iBAAiB,EAAG;MAErB,CAAC,MAAM,IAAKX,KAAK,CAACuC,WAAW,EAAG;QAE/B,IAAMnlC,SAAQ,GAAGvX,KAAK,CAACl0B,GAAG,CAAEquE,KAAK,CAAE;QAEnC5iC,SAAQ,CAAChrB,QAAQ,CAACvC,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAE5D+uB,SAAQ,CAACliC,KAAK,CAAC/I,IAAI,CAAE+I,KAAK,CAAE,CAACrI,cAAc,CAAEgvE,SAAS,GAAGD,WAAW,CAAE;QACtExkC,SAAQ,CAAChb,QAAQ,GAAGA,QAAQ;QAE5Bgb,SAAQ,CAACqY,OAAO,GAAGvpD,IAAI,CAAC8D,GAAG,CAAEgwE,KAAK,CAAClsE,KAAK,CAAE;QAC1CspC,SAAQ,CAACsY,WAAW,GAAGxpD,IAAI,CAAC8D,GAAG,CAAEgwE,KAAK,CAAClsE,KAAK,IAAK,CAAC,GAAGksE,KAAK,CAACwC,QAAQ,CAAE,CAAE;QACvEplC,SAAQ,CAACuY,KAAK,GAAGqqB,KAAK,CAACrqB,KAAK;QAE5B,IAAKqqB,KAAK,CAAC7+C,UAAU,EAAG;UAEvB,IAAMu2B,OAAM,GAAGsoB,KAAK,CAACtoB,MAAM;UAE3B,IAAMyqB,eAAc,GAAG1B,WAAW,CAAC9uE,GAAG,CAAEquE,KAAK,CAAE;UAE/CmC,eAAc,CAACjtB,UAAU,GAAGwC,OAAM,CAAC0qB,IAAI;UACvCD,eAAc,CAAChtB,gBAAgB,GAAGuC,OAAM,CAAC2qB,UAAU;UACnDF,eAAc,CAAC/sB,YAAY,GAAGsC,OAAM,CAACloC,MAAM;UAC3C2yD,eAAc,CAAC9sB,aAAa,GAAGqC,OAAM,CAAC4qB,OAAO;UAE7CzoF,KAAK,CAACynF,UAAU,CAAET,UAAU,CAAE,GAAGsB,eAAc;UAC/CtoF,KAAK,CAACg8D,aAAa,CAAEgrB,UAAU,CAAE,GAAGxC,SAAS;UAC7CxkF,KAAK,CAACi8D,gBAAgB,CAAE+qB,UAAU,CAAE,GAAGb,KAAK,CAACtoB,MAAM,CAAC79C,MAAM;UAE1DqnE,cAAc,EAAG;QAElB;QAEArnF,KAAK,CAACqkF,IAAI,CAAE2C,UAAU,CAAE,GAAGzjC,SAAQ;QAEnCyjC,UAAU,EAAG;MAEd,CAAC,MAAM,IAAKb,KAAK,CAACyC,eAAe,EAAG;QAEnC,IAAMrlC,UAAQ,GAAGvX,KAAK,CAACl0B,GAAG,CAAEquE,KAAK,CAAE;;QAEnC;QACA;;QAEA;QACA5iC,UAAQ,CAACliC,KAAK,CAAC/I,IAAI,CAAE+I,KAAK,CAAE,CAACrI,cAAc,CAAEgvE,SAAS,CAAE;QAExDzkC,UAAQ,CAAC6iC,SAAS,CAACvvE,GAAG,CAAEsvE,KAAK,CAAC9gE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;QACrDk+B,UAAQ,CAAC8iC,UAAU,CAACxvE,GAAG,CAAE,GAAG,EAAEsvE,KAAK,CAAC7gE,MAAM,GAAG,GAAG,EAAE,GAAG,CAAE;QAEvDtlB,KAAK,CAACskF,QAAQ,CAAE2C,cAAc,CAAE,GAAG1jC,UAAQ;QAE3C0jC,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKd,KAAK,CAAC0C,YAAY,EAAG;QAEhC,IAAMtlC,UAAQ,GAAGvX,KAAK,CAACl0B,GAAG,CAAEquE,KAAK,CAAE;QAEnC5iC,UAAQ,CAACliC,KAAK,CAAC/I,IAAI,CAAE6tE,KAAK,CAAC9kE,KAAK,CAAE,CAACrI,cAAc,CAAEmtE,KAAK,CAAC6B,SAAS,GAAGD,WAAW,CAAE;QAClFxkC,UAAQ,CAAChb,QAAQ,GAAG49C,KAAK,CAAC59C,QAAQ;QAClCgb,UAAQ,CAACuY,KAAK,GAAGqqB,KAAK,CAACrqB,KAAK;QAE5B,IAAKqqB,KAAK,CAAC7+C,UAAU,EAAG;UAEvB,IAAMu2B,QAAM,GAAGsoB,KAAK,CAACtoB,MAAM;UAE3B,IAAMyqB,gBAAc,GAAG1B,WAAW,CAAC9uE,GAAG,CAAEquE,KAAK,CAAE;UAE/CmC,gBAAc,CAACjtB,UAAU,GAAGwC,QAAM,CAAC0qB,IAAI;UACvCD,gBAAc,CAAChtB,gBAAgB,GAAGuC,QAAM,CAAC2qB,UAAU;UACnDF,gBAAc,CAAC/sB,YAAY,GAAGsC,QAAM,CAACloC,MAAM;UAC3C2yD,gBAAc,CAAC9sB,aAAa,GAAGqC,QAAM,CAAC4qB,OAAO;UAC7CH,gBAAc,CAAClsB,gBAAgB,GAAGyB,QAAM,CAAC1pC,MAAM,CAAC6P,IAAI;UACpDskD,gBAAc,CAACjsB,eAAe,GAAGwB,QAAM,CAAC1pC,MAAM,CAAC8P,GAAG;UAElDjkC,KAAK,CAAC4nF,WAAW,CAAEb,WAAW,CAAE,GAAGuB,gBAAc;UACjDtoF,KAAK,CAACs8D,cAAc,CAAEyqB,WAAW,CAAE,GAAGvC,SAAS;UAC/CxkF,KAAK,CAACu8D,iBAAiB,CAAEwqB,WAAW,CAAE,GAAGZ,KAAK,CAACtoB,MAAM,CAAC79C,MAAM;UAE5DonE,eAAe,EAAG;QAEnB;QAEApnF,KAAK,CAACg4B,KAAK,CAAE+uD,WAAW,CAAE,GAAGxjC,UAAQ;QAErCwjC,WAAW,EAAG;MAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC2C,iBAAiB,EAAG;QAErC,IAAMvlC,UAAQ,GAAGvX,KAAK,CAACl0B,GAAG,CAAEquE,KAAK,CAAE;QAEnC5iC,UAAQ,CAACkZ,QAAQ,CAACnkD,IAAI,CAAE6tE,KAAK,CAAC9kE,KAAK,CAAE,CAACrI,cAAc,CAAEgvE,SAAS,GAAGD,WAAW,CAAE;QAC/ExkC,UAAQ,CAACmZ,WAAW,CAACpkD,IAAI,CAAE6tE,KAAK,CAACzpB,WAAW,CAAE,CAAC1jD,cAAc,CAAEgvE,SAAS,GAAGD,WAAW,CAAE;QAExF/nF,KAAK,CAACukF,IAAI,CAAE2C,UAAU,CAAE,GAAG3jC,UAAQ;QAEnC2jC,UAAU,EAAG;MAEd;IAED;IAEA,IAAKD,cAAc,GAAG,CAAC,EAAG;MAEzB,IAAK15B,YAAY,CAACC,QAAQ,EAAG;QAE5B;;QAEAxtD,KAAK,CAAC0nF,YAAY,GAAG/tB,WAAW,CAACovB,WAAW;QAC5C/oF,KAAK,CAAC2nF,YAAY,GAAGhuB,WAAW,CAACqvB,WAAW;MAE7C,CAAC,MAAM;QAEN;;QAEA,IAAKxkC,UAAU,CAAC8f,GAAG,CAAE,0BAA0B,CAAE,KAAK,IAAI,EAAG;UAE5DtkE,KAAK,CAAC0nF,YAAY,GAAG/tB,WAAW,CAACovB,WAAW;UAC5C/oF,KAAK,CAAC2nF,YAAY,GAAGhuB,WAAW,CAACqvB,WAAW;QAE7C,CAAC,MAAM,IAAKxkC,UAAU,CAAC8f,GAAG,CAAE,+BAA+B,CAAE,KAAK,IAAI,EAAG;UAExEtkE,KAAK,CAAC0nF,YAAY,GAAG/tB,WAAW,CAACsvB,UAAU;UAC3CjpF,KAAK,CAAC2nF,YAAY,GAAGhuB,WAAW,CAACuvB,UAAU;QAE5C,CAAC,MAAM;UAENpyE,OAAO,CAACjX,KAAK,CAAE,6EAA6E,CAAE;QAE/F;MAED;IAED;IAEAG,KAAK,CAACsnF,OAAO,CAAE,CAAC,CAAE,GAAGnoE,CAAC;IACtBnf,KAAK,CAACsnF,OAAO,CAAE,CAAC,CAAE,GAAGhpE,CAAC;IACtBte,KAAK,CAACsnF,OAAO,CAAE,CAAC,CAAE,GAAGtxE,CAAC;IAEtB,IAAM6wE,IAAI,GAAG7mF,KAAK,CAAC6mF,IAAI;IAEvB,IAAKA,IAAI,CAACC,iBAAiB,KAAKA,iBAAiB,IAChDD,IAAI,CAACE,WAAW,KAAKA,WAAW,IAChCF,IAAI,CAACG,UAAU,KAAKA,UAAU,IAC9BH,IAAI,CAACI,cAAc,KAAKA,cAAc,IACtCJ,IAAI,CAACK,UAAU,KAAKA,UAAU,IAC9BL,IAAI,CAACM,qBAAqB,KAAKA,qBAAqB,IACpDN,IAAI,CAACO,eAAe,KAAKA,eAAe,IACxCP,IAAI,CAACQ,cAAc,KAAKA,cAAc,EAAG;MAEzCrnF,KAAK,CAACokF,WAAW,CAACliF,MAAM,GAAG4kF,iBAAiB;MAC5C9mF,KAAK,CAACqkF,IAAI,CAACniF,MAAM,GAAG8kF,UAAU;MAC9BhnF,KAAK,CAACskF,QAAQ,CAACpiF,MAAM,GAAG+kF,cAAc;MACtCjnF,KAAK,CAACg4B,KAAK,CAAC91B,MAAM,GAAG6kF,WAAW;MAChC/mF,KAAK,CAACukF,IAAI,CAACriF,MAAM,GAAGglF,UAAU;MAE9BlnF,KAAK,CAACwnF,iBAAiB,CAACtlF,MAAM,GAAGilF,qBAAqB;MACtDnnF,KAAK,CAACy7D,oBAAoB,CAACv5D,MAAM,GAAGilF,qBAAqB;MACzDnnF,KAAK,CAAC4nF,WAAW,CAAC1lF,MAAM,GAAGklF,eAAe;MAC1CpnF,KAAK,CAACs8D,cAAc,CAACp6D,MAAM,GAAGklF,eAAe;MAC7CpnF,KAAK,CAACynF,UAAU,CAACvlF,MAAM,GAAGmlF,cAAc;MACxCrnF,KAAK,CAACg8D,aAAa,CAAC95D,MAAM,GAAGmlF,cAAc;MAC3CrnF,KAAK,CAAC07D,uBAAuB,CAACx5D,MAAM,GAAGilF,qBAAqB;MAC5DnnF,KAAK,CAACu8D,iBAAiB,CAACr6D,MAAM,GAAGklF,eAAe;MAChDpnF,KAAK,CAACi8D,gBAAgB,CAAC/5D,MAAM,GAAGmlF,cAAc;MAE9CR,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;MAC1CD,IAAI,CAACE,WAAW,GAAGA,WAAW;MAC9BF,IAAI,CAACG,UAAU,GAAGA,UAAU;MAC5BH,IAAI,CAACI,cAAc,GAAGA,cAAc;MACpCJ,IAAI,CAACK,UAAU,GAAGA,UAAU;MAE5BL,IAAI,CAACM,qBAAqB,GAAGA,qBAAqB;MAClDN,IAAI,CAACO,eAAe,GAAGA,eAAe;MACtCP,IAAI,CAACQ,cAAc,GAAGA,cAAc;MAEpCrnF,KAAK,CAAComB,OAAO,GAAGmgE,WAAW,EAAG;IAE/B;EAED;EAEA,SAAS4C,SAASA,CAAE7kC,MAAM,EAAEnwB,MAAM,EAAG;IAEpC,IAAI2yD,iBAAiB,GAAG,CAAC;IACzB,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAIC,UAAU,GAAG,CAAC;IAElB,IAAMhgB,UAAU,GAAG/yC,MAAM,CAACC,kBAAkB;IAE5C,KAAM,IAAIjyB,IAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGqyC,MAAM,CAACpiD,MAAM,EAAEC,IAAC,GAAG8P,CAAC,EAAE9P,IAAC,EAAG,EAAG;MAEjD,IAAMgkF,KAAK,GAAG7hC,MAAM,CAAEniD,IAAC,CAAE;MAEzB,IAAKgkF,KAAK,CAACkC,kBAAkB,EAAG;QAE/B,IAAM9kC,QAAQ,GAAGvjD,KAAK,CAACokF,WAAW,CAAE0C,iBAAiB,CAAE;QAEvDvjC,QAAQ,CAAClnB,SAAS,CAACrG,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAC7DqzD,OAAO,CAAC7xD,qBAAqB,CAAEmwD,KAAK,CAACrhF,MAAM,CAAC0vB,WAAW,CAAE;QACzD+uB,QAAQ,CAAClnB,SAAS,CAACzjB,GAAG,CAAEivE,OAAO,CAAE;QACjCtkC,QAAQ,CAAClnB,SAAS,CAAC5H,kBAAkB,CAAEyyC,UAAU,CAAE;QAEnD4f,iBAAiB,EAAG;MAErB,CAAC,MAAM,IAAKX,KAAK,CAACuC,WAAW,EAAG;QAE/B,IAAMnlC,UAAQ,GAAGvjD,KAAK,CAACqkF,IAAI,CAAE2C,UAAU,CAAE;QAEzCzjC,UAAQ,CAAChrB,QAAQ,CAACvC,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAC5D+uB,UAAQ,CAAChrB,QAAQ,CAACxO,YAAY,CAAEm9C,UAAU,CAAE;QAE5C3jB,UAAQ,CAAClnB,SAAS,CAACrG,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAC7DqzD,OAAO,CAAC7xD,qBAAqB,CAAEmwD,KAAK,CAACrhF,MAAM,CAAC0vB,WAAW,CAAE;QACzD+uB,UAAQ,CAAClnB,SAAS,CAACzjB,GAAG,CAAEivE,OAAO,CAAE;QACjCtkC,UAAQ,CAAClnB,SAAS,CAAC5H,kBAAkB,CAAEyyC,UAAU,CAAE;QAEnD8f,UAAU,EAAG;MAEd,CAAC,MAAM,IAAKb,KAAK,CAACyC,eAAe,EAAG;QAEnC,IAAMrlC,UAAQ,GAAGvjD,KAAK,CAACskF,QAAQ,CAAE2C,cAAc,CAAE;QAEjD1jC,UAAQ,CAAChrB,QAAQ,CAACvC,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAC5D+uB,UAAQ,CAAChrB,QAAQ,CAACxO,YAAY,CAAEm9C,UAAU,CAAE;;QAE5C;QACA4gB,QAAQ,CAACzrE,QAAQ,EAAE;QACnB4C,OAAO,CAAC3G,IAAI,CAAE6tE,KAAK,CAAC3xD,WAAW,CAAE;QACjCvV,OAAO,CAACnC,WAAW,CAAEoqD,UAAU,CAAE;QACjC4gB,QAAQ,CAACjoD,eAAe,CAAE5gB,OAAO,CAAE;QAEnCskC,UAAQ,CAAC6iC,SAAS,CAACvvE,GAAG,CAAEsvE,KAAK,CAAC9gE,KAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;QACrDk+B,UAAQ,CAAC8iC,UAAU,CAACxvE,GAAG,CAAE,GAAG,EAAEsvE,KAAK,CAAC7gE,MAAM,GAAG,GAAG,EAAE,GAAG,CAAE;QAEvDi+B,UAAQ,CAAC6iC,SAAS,CAACr8D,YAAY,CAAE+9D,QAAQ,CAAE;QAC3CvkC,UAAQ,CAAC8iC,UAAU,CAACt8D,YAAY,CAAE+9D,QAAQ,CAAE;QAE5Cb,cAAc,EAAG;MAElB,CAAC,MAAM,IAAKd,KAAK,CAAC0C,YAAY,EAAG;QAEhC,IAAMtlC,UAAQ,GAAGvjD,KAAK,CAACg4B,KAAK,CAAE+uD,WAAW,CAAE;QAE3CxjC,UAAQ,CAAChrB,QAAQ,CAACvC,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAC5D+uB,UAAQ,CAAChrB,QAAQ,CAACxO,YAAY,CAAEm9C,UAAU,CAAE;QAE5C6f,WAAW,EAAG;MAEf,CAAC,MAAM,IAAKZ,KAAK,CAAC2C,iBAAiB,EAAG;QAErC,IAAMvlC,UAAQ,GAAGvjD,KAAK,CAACukF,IAAI,CAAE2C,UAAU,CAAE;QAEzC3jC,UAAQ,CAAClnB,SAAS,CAACrG,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;QAC7D+uB,UAAQ,CAAClnB,SAAS,CAAC5H,kBAAkB,CAAEyyC,UAAU,CAAE;QAEnDggB,UAAU,EAAG;MAEd;IAED;EAED;EAEA,OAAO;IACN3mB,KAAK,EAAEA,KAAK;IACZ4oB,SAAS,EAAEA,SAAS;IACpBnpF,KAAK,EAAEA;EACR,CAAC;AAEF;AAEA,SAASopF,gBAAgBA,CAAE5kC,UAAU,EAAE+I,YAAY,EAAG;EAErD,IAAMjJ,MAAM,GAAG,IAAIqiC,WAAW,CAAEniC,UAAU,EAAE+I,YAAY,CAAE;EAE1D,IAAM87B,WAAW,GAAG,EAAE;EACtB,IAAMC,YAAY,GAAG,EAAE;EAEvB,SAASpjB,IAAIA,CAAA,EAAG;IAEfmjB,WAAW,CAACnnF,MAAM,GAAG,CAAC;IACtBonF,YAAY,CAACpnF,MAAM,GAAG,CAAC;EAExB;EAEA,SAASqnF,SAASA,CAAEpD,KAAK,EAAG;IAE3BkD,WAAW,CAAC1nF,IAAI,CAAEwkF,KAAK,CAAE;EAE1B;EAEA,SAASqD,UAAUA,CAAEC,WAAW,EAAG;IAElCH,YAAY,CAAC3nF,IAAI,CAAE8nF,WAAW,CAAE;EAEjC;EAEA,SAASC,WAAWA,CAAEtK,uBAAuB,EAAG;IAE/C96B,MAAM,CAACic,KAAK,CAAE8oB,WAAW,EAAEjK,uBAAuB,CAAE;EAErD;EAEA,SAASuK,eAAeA,CAAEx1D,MAAM,EAAG;IAElCmwB,MAAM,CAAC6kC,SAAS,CAAEE,WAAW,EAAEl1D,MAAM,CAAE;EAExC;EAEA,IAAMn0B,KAAK,GAAG;IACbqpF,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAE1BhlC,MAAM,EAAEA;EACT,CAAC;EAED,OAAO;IACN4hB,IAAI,EAAEA,IAAI;IACVlmE,KAAK,EAAEA,KAAK;IACZ0pF,WAAW,EAAEA,WAAW;IACxBC,eAAe,EAAEA,eAAe;IAEhCJ,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA;EACb,CAAC;AAEF;AAEA,SAASI,iBAAiBA,CAAEplC,UAAU,EAAE+I,YAAY,EAAG;EAEtD,IAAIs8B,YAAY,GAAG,IAAIn8B,OAAO,EAAE;EAEhC,SAAS51C,GAAGA,CAAEowC,KAAK,EAAE89B,eAAe,GAAG,CAAC,EAAG;IAE1C,IAAI8D,WAAW;IAEf,IAAKD,YAAY,CAACvlB,GAAG,CAAEpc,KAAK,CAAE,KAAK,KAAK,EAAG;MAE1C4hC,WAAW,GAAG,IAAIV,gBAAgB,CAAE5kC,UAAU,EAAE+I,YAAY,CAAE;MAC9Ds8B,YAAY,CAAChzE,GAAG,CAAEqxC,KAAK,EAAE,CAAE4hC,WAAW,CAAE,CAAE;IAE3C,CAAC,MAAM;MAEN,IAAK9D,eAAe,IAAI6D,YAAY,CAAC/xE,GAAG,CAAEowC,KAAK,CAAE,CAAChmD,MAAM,EAAG;QAE1D4nF,WAAW,GAAG,IAAIV,gBAAgB,CAAE5kC,UAAU,EAAE+I,YAAY,CAAE;QAC9Ds8B,YAAY,CAAC/xE,GAAG,CAAEowC,KAAK,CAAE,CAACvmD,IAAI,CAAEmoF,WAAW,CAAE;MAE9C,CAAC,MAAM;QAENA,WAAW,GAAGD,YAAY,CAAC/xE,GAAG,CAAEowC,KAAK,CAAE,CAAE89B,eAAe,CAAE;MAE3D;IAED;IAEA,OAAO8D,WAAW;EAEnB;EAEA,SAASzgE,OAAOA,CAAA,EAAG;IAElBwgE,YAAY,GAAG,IAAIn8B,OAAO,EAAE;EAE7B;EAEA,OAAO;IACN51C,GAAG,EAAEA,GAAG;IACRuR,OAAO,EAAEA;EACV,CAAC;AAEF;AAAC,IAEKs5D,iBAAiB,0BAAAoH,UAAA;EAAA7iE,SAAA,CAAAy7D,iBAAA,EAAAoH,UAAA;EAAA,IAAAC,QAAA,GAAA5iE,YAAA,CAAAu7D,iBAAA;EAEtB,SAAAA,kBAAar3C,UAAU,EAAG;IAAA,IAAA2+C,OAAA;IAAAvlF,eAAA,OAAAi+E,iBAAA;IAEzBsH,OAAA,GAAAD,QAAA,CAAA5rF,IAAA;IAEA6rF,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAK9rF,IAAI,GAAG,mBAAmB;IAE/B8rF,OAAA,CAAKzK,YAAY,GAAGxwE,iBAAiB;IAErCi7E,OAAA,CAAK92C,GAAG,GAAG,IAAI;IAEf82C,OAAA,CAAK52C,QAAQ,GAAG,IAAI;IAEpB42C,OAAA,CAAKl2C,eAAe,GAAG,IAAI;IAC3Bk2C,OAAA,CAAKj2C,iBAAiB,GAAG,CAAC;IAC1Bi2C,OAAA,CAAKh2C,gBAAgB,GAAG,CAAC;IAEzBg2C,OAAA,CAAKx0C,SAAS,GAAG,KAAK;IACtBw0C,OAAA,CAAKv0C,kBAAkB,GAAG,CAAC;IAE3Bu0C,OAAA,CAAKx4C,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA2+C,OAAA;EAE9B;EAAC/kF,YAAA,CAAAy9E,iBAAA;IAAAvmF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAqsC,iBAAA,CAAA5mF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACu9D,YAAY,GAAGv9D,MAAM,CAACu9D,YAAY;MAEvC,IAAI,CAACrsC,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACU,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,IAAI,CAACwB,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MAEnD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAitC,iBAAA;AAAA,EA9C8B9zC,QAAQ;AAAAjzC,OAAA,CAAA+mF,iBAAA,GAAAA,iBAAA;AAAA,IAkDlCC,oBAAoB,0BAAAuH,UAAA;EAAAjjE,SAAA,CAAA07D,oBAAA,EAAAuH,UAAA;EAAA,IAAAC,QAAA,GAAAhjE,YAAA,CAAAw7D,oBAAA;EAEzB,SAAAA,qBAAat3C,UAAU,EAAG;IAAA,IAAA++C,OAAA;IAAA3lF,eAAA,OAAAk+E,oBAAA;IAEzByH,OAAA,GAAAD,QAAA,CAAAhsF,IAAA;IAEAisF,OAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElCD,OAAA,CAAKlsF,IAAI,GAAG,sBAAsB;IAElCksF,OAAA,CAAK3sB,iBAAiB,GAAG,IAAIzqC,OAAO,EAAE;IACtCo3D,OAAA,CAAK1sB,YAAY,GAAG,CAAC;IACrB0sB,OAAA,CAAKzsB,WAAW,GAAG,IAAI;IAEvBysB,OAAA,CAAKl3C,GAAG,GAAG,IAAI;IAEfk3C,OAAA,CAAKh3C,QAAQ,GAAG,IAAI;IAEpBg3C,OAAA,CAAKt2C,eAAe,GAAG,IAAI;IAC3Bs2C,OAAA,CAAKr2C,iBAAiB,GAAG,CAAC;IAC1Bq2C,OAAA,CAAKp2C,gBAAgB,GAAG,CAAC;IAEzBo2C,OAAA,CAAK54C,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA++C,OAAA;EAE9B;EAACnlF,YAAA,CAAA09E,oBAAA;IAAAxmF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAssC,oBAAA,CAAA7mF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACy7C,iBAAiB,CAACplD,IAAI,CAAE2J,MAAM,CAACy7C,iBAAiB,CAAE;MACvD,IAAI,CAACC,YAAY,GAAG17C,MAAM,CAAC07C,YAAY;MACvC,IAAI,CAACC,WAAW,GAAG37C,MAAM,CAAC27C,WAAW;MAErC,IAAI,CAACzqB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACU,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA2uC,oBAAA;AAAA,EA5CiC/zC,QAAQ;AAAAjzC,OAAA,CAAAgnF,oBAAA,GAAAA,oBAAA;AAgD3C,IAAM2H,MAAM,GAAG,0DAA0D;AAEzE,IAAMC,QAAQ,GAAG,imCAAimC;AAElnC,SAASC,cAAcA,CAAEhiB,SAAS,EAAEiiB,QAAQ,EAAEC,aAAa,EAAG;EAE7D,IAAIC,QAAQ,GAAG,IAAI5/B,OAAO,EAAE;EAE5B,IAAM6/B,cAAc,GAAG,IAAIlzE,OAAO,EAAE;IACnCmzE,aAAa,GAAG,IAAInzE,OAAO,EAAE;IAE7BozE,SAAS,GAAG,IAAIvhE,OAAO,EAAE;IAEzBwhE,cAAc,GAAG,IAAIrI,iBAAiB,CAAE;MAAEnD,YAAY,EAAEvwE;IAAiB,CAAC,CAAE;IAC5Eg8E,iBAAiB,GAAG,IAAIrI,oBAAoB,EAAE;IAE9CsI,cAAc,GAAG,CAAC,CAAC;IAEnBC,eAAe,GAAGR,aAAa,CAAC3lB,cAAc;EAE/C,IAAMr0B,UAAU,GAAG;IAAE,CAAC,EAAE1pC,QAAQ;IAAE,CAAC,EAAED,SAAS;IAAE,CAAC,EAAEE;EAAW,CAAC;EAE/D,IAAMkkF,sBAAsB,GAAG,IAAIvnC,cAAc,CAAE;IAClDK,OAAO,EAAE;MACRmnC,WAAW,EAAE;IACd,CAAC;IACD9nC,QAAQ,EAAE;MACT+nC,WAAW,EAAE;QAAEhvF,KAAK,EAAE;MAAK,CAAC;MAC5BivF,UAAU,EAAE;QAAEjvF,KAAK,EAAE,IAAIqb,OAAO;MAAG,CAAC;MACpCge,MAAM,EAAE;QAAEr5B,KAAK,EAAE;MAAI;IACtB,CAAC;IAED8nD,YAAY,EAAEmmC,MAAM;IACpBlmC,cAAc,EAAEmmC;EAEjB,CAAC,CAAE;EAEH,IAAMgB,wBAAwB,GAAGJ,sBAAsB,CAAC/yE,KAAK,EAAE;EAC/DmzE,wBAAwB,CAACtnC,OAAO,CAACunC,eAAe,GAAG,CAAC;EAEpD,IAAMC,aAAa,GAAG,IAAIrxC,cAAc,EAAE;EAC1CqxC,aAAa,CAACvwC,YAAY,CACzB,UAAU,EACV,IAAI1E,eAAe,CAClB,IAAIx/B,YAAY,CAAE,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE,CAAE,EAC/D,CAAC,CACD,CACD;EAED,IAAM00E,cAAc,GAAG,IAAIvrC,IAAI,CAAEsrC,aAAa,EAAEN,sBAAsB,CAAE;EAExE,IAAMppC,KAAK,GAAG,IAAI;EAElB,IAAI,CAAC+E,OAAO,GAAG,KAAK;EAEpB,IAAI,CAAC6kC,UAAU,GAAG,IAAI;EACtB,IAAI,CAAC1iE,WAAW,GAAG,KAAK;EAExB,IAAI,CAAC/qB,IAAI,GAAG0I,YAAY;EAExB,IAAI,CAAC+hD,MAAM,GAAG,UAAWtE,MAAM,EAAE4D,KAAK,EAAE/zB,MAAM,EAAG;IAEhD,IAAK6tB,KAAK,CAAC+E,OAAO,KAAK,KAAK,EAAG;IAC/B,IAAK/E,KAAK,CAAC4pC,UAAU,KAAK,KAAK,IAAI5pC,KAAK,CAAC94B,WAAW,KAAK,KAAK,EAAG;IAEjE,IAAKo7B,MAAM,CAACpiD,MAAM,KAAK,CAAC,EAAG;IAE3B,IAAMmmD,mBAAmB,GAAGogB,SAAS,CAACngB,eAAe,EAAE;IACvD,IAAMujC,cAAc,GAAGpjB,SAAS,CAACqjB,iBAAiB,EAAE;IACpD,IAAMC,iBAAiB,GAAGtjB,SAAS,CAACujB,oBAAoB,EAAE;IAE1D,IAAMC,MAAM,GAAGxjB,SAAS,CAACzoE,KAAK;;IAE9B;IACAisF,MAAM,CAACC,WAAW,CAAE7kF,UAAU,CAAE;IAChC4kF,MAAM,CAACx+B,OAAO,CAACpsC,KAAK,CAAC+9C,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAC3C6sB,MAAM,CAACx+B,OAAO,CAAC7hC,KAAK,CAACugE,OAAO,CAAE,IAAI,CAAE;IACpCF,MAAM,CAACG,cAAc,CAAE,KAAK,CAAE;;IAE9B;;IAEA,KAAM,IAAIjqF,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGo2B,MAAM,CAACpiD,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAEnD,IAAMgkF,KAAK,GAAG7hC,MAAM,CAAEniD,CAAC,CAAE;MACzB,IAAM07D,MAAM,GAAGsoB,KAAK,CAACtoB,MAAM;MAE3B,IAAKA,MAAM,KAAKj9D,SAAS,EAAG;QAE3BkW,OAAO,CAACC,IAAI,CAAE,uBAAuB,EAAEovE,KAAK,EAAE,gBAAgB,CAAE;QAChE;MAED;MAEA,IAAKtoB,MAAM,CAAC+tB,UAAU,KAAK,KAAK,IAAI/tB,MAAM,CAAC30C,WAAW,KAAK,KAAK,EAAG;MAEnE2hE,cAAc,CAACvyE,IAAI,CAAEulD,MAAM,CAAC4qB,OAAO,CAAE;MAErC,IAAM4D,kBAAkB,GAAGxuB,MAAM,CAACyuB,eAAe,EAAE;MAEnDzB,cAAc,CAAC9xE,QAAQ,CAAEszE,kBAAkB,CAAE;MAE7CvB,aAAa,CAACxyE,IAAI,CAAEulD,MAAM,CAAC4qB,OAAO,CAAE;MAEpC,IAAKoC,cAAc,CAACt3E,CAAC,GAAG43E,eAAe,IAAIN,cAAc,CAACh3E,CAAC,GAAGs3E,eAAe,EAAG;QAE/E,IAAKN,cAAc,CAACt3E,CAAC,GAAG43E,eAAe,EAAG;UAEzCL,aAAa,CAACv3E,CAAC,GAAGlB,IAAI,CAACsC,KAAK,CAAEw2E,eAAe,GAAGkB,kBAAkB,CAAC94E,CAAC,CAAE;UACtEs3E,cAAc,CAACt3E,CAAC,GAAGu3E,aAAa,CAACv3E,CAAC,GAAG84E,kBAAkB,CAAC94E,CAAC;UACzDsqD,MAAM,CAAC4qB,OAAO,CAACl1E,CAAC,GAAGu3E,aAAa,CAACv3E,CAAC;QAEnC;QAEA,IAAKs3E,cAAc,CAACh3E,CAAC,GAAGs3E,eAAe,EAAG;UAEzCL,aAAa,CAACj3E,CAAC,GAAGxB,IAAI,CAACsC,KAAK,CAAEw2E,eAAe,GAAGkB,kBAAkB,CAACx4E,CAAC,CAAE;UACtEg3E,cAAc,CAACh3E,CAAC,GAAGi3E,aAAa,CAACj3E,CAAC,GAAGw4E,kBAAkB,CAACx4E,CAAC;UACzDgqD,MAAM,CAAC4qB,OAAO,CAAC50E,CAAC,GAAGi3E,aAAa,CAACj3E,CAAC;QAEnC;MAED;MAEA,IAAKgqD,MAAM,CAAC1qB,GAAG,KAAK,IAAI,EAAG;QAE1B,IAAMo5C,IAAI,GAAK,IAAI,CAACpuF,IAAI,KAAK4I,YAAY,GAAK;UAAE4gB,SAAS,EAAEtd,aAAa;UAAEqd,SAAS,EAAErd;QAAc,CAAC,GAAG,CAAC,CAAC;QAEzGwzD,MAAM,CAAC1qB,GAAG,GAAG,IAAI7nB,iBAAiB,CAAEu/D,cAAc,CAACt3E,CAAC,EAAEs3E,cAAc,CAACh3E,CAAC,EAAE04E,IAAI,CAAE;QAC9E1uB,MAAM,CAAC1qB,GAAG,CAACnnB,OAAO,CAACvpB,IAAI,GAAG0jF,KAAK,CAAC1jF,IAAI,GAAG,YAAY;QAEnDo7D,MAAM,CAAC1pC,MAAM,CAAC+xB,sBAAsB,EAAE;MAEvC;MAEAuiB,SAAS,CAAC9f,eAAe,CAAEkV,MAAM,CAAC1qB,GAAG,CAAE;MACvCs1B,SAAS,CAACv/B,KAAK,EAAE;MAEjB,IAAMsjD,aAAa,GAAG3uB,MAAM,CAAC4uB,gBAAgB,EAAE;MAE/C,KAAM,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGF,aAAa,EAAEE,EAAE,EAAG,EAAG;QAE7C,IAAM3gE,QAAQ,GAAG8xC,MAAM,CAAC8uB,WAAW,CAAED,EAAE,CAAE;QAEzC3B,SAAS,CAACl0E,GAAG,CACZi0E,aAAa,CAACv3E,CAAC,GAAGwY,QAAQ,CAACxY,CAAC,EAC5Bu3E,aAAa,CAACj3E,CAAC,GAAGkY,QAAQ,CAAClY,CAAC,EAC5Bi3E,aAAa,CAACv3E,CAAC,GAAGwY,QAAQ,CAACrC,CAAC,EAC5BohE,aAAa,CAACj3E,CAAC,GAAGkY,QAAQ,CAACpC,CAAC,CAC5B;QAEDsiE,MAAM,CAAClgE,QAAQ,CAAEg/D,SAAS,CAAE;QAE5BltB,MAAM,CAAC+uB,cAAc,CAAEzG,KAAK,EAAEuG,EAAE,CAAE;QAElC9B,QAAQ,GAAG/sB,MAAM,CAACgvB,UAAU,EAAE;QAE9BC,YAAY,CAAE5kC,KAAK,EAAE/zB,MAAM,EAAE0pC,MAAM,CAAC1pC,MAAM,EAAEgyD,KAAK,EAAE,IAAI,CAAChoF,IAAI,CAAE;MAE/D;;MAEA;;MAEA,IAAK0/D,MAAM,CAACkvB,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAAC5uF,IAAI,KAAK4I,YAAY,EAAG;QAEvEimF,OAAO,CAAEnvB,MAAM,EAAE1pC,MAAM,CAAE;MAE1B;MAEA0pC,MAAM,CAAC30C,WAAW,GAAG,KAAK;IAE3B;IAEA84B,KAAK,CAAC94B,WAAW,GAAG,KAAK;IAEzBu/C,SAAS,CAAC9f,eAAe,CAAEN,mBAAmB,EAAEwjC,cAAc,EAAEE,iBAAiB,CAAE;EAEpF,CAAC;EAED,SAASiB,OAAOA,CAAEnvB,MAAM,EAAE1pC,MAAM,EAAG;IAElC,IAAMkE,QAAQ,GAAGqyD,QAAQ,CAAC57D,MAAM,CAAE68D,cAAc,CAAE;IAElD,IAAKP,sBAAsB,CAAClnC,OAAO,CAACmnC,WAAW,KAAKxtB,MAAM,CAACovB,WAAW,EAAG;MAExE7B,sBAAsB,CAAClnC,OAAO,CAACmnC,WAAW,GAAGxtB,MAAM,CAACovB,WAAW;MAC/DzB,wBAAwB,CAACtnC,OAAO,CAACmnC,WAAW,GAAGxtB,MAAM,CAACovB,WAAW;MAEjE7B,sBAAsB,CAACliE,WAAW,GAAG,IAAI;MACzCsiE,wBAAwB,CAACtiE,WAAW,GAAG,IAAI;IAE5C;IAEA,IAAK20C,MAAM,CAACqvB,OAAO,KAAK,IAAI,EAAG;MAE9BrvB,MAAM,CAACqvB,OAAO,GAAG,IAAI5hE,iBAAiB,CAAEu/D,cAAc,CAACt3E,CAAC,EAAEs3E,cAAc,CAACh3E,CAAC,CAAE;IAE7E;;IAEA;;IAEAu3E,sBAAsB,CAAC7nC,QAAQ,CAAC+nC,WAAW,CAAChvF,KAAK,GAAGuhE,MAAM,CAAC1qB,GAAG,CAACnnB,OAAO;IACtEo/D,sBAAsB,CAAC7nC,QAAQ,CAACgoC,UAAU,CAACjvF,KAAK,GAAGuhE,MAAM,CAAC4qB,OAAO;IACjE2C,sBAAsB,CAAC7nC,QAAQ,CAAC5tB,MAAM,CAACr5B,KAAK,GAAGuhE,MAAM,CAACloC,MAAM;IAC5D8yC,SAAS,CAAC9f,eAAe,CAAEkV,MAAM,CAACqvB,OAAO,CAAE;IAC3CzkB,SAAS,CAACv/B,KAAK,EAAE;IACjBu/B,SAAS,CAAC0kB,kBAAkB,CAAEh5D,MAAM,EAAE,IAAI,EAAEkE,QAAQ,EAAE+yD,sBAAsB,EAAEO,cAAc,EAAE,IAAI,CAAE;;IAEpG;;IAEAH,wBAAwB,CAACjoC,QAAQ,CAAC+nC,WAAW,CAAChvF,KAAK,GAAGuhE,MAAM,CAACqvB,OAAO,CAAClhE,OAAO;IAC5Ew/D,wBAAwB,CAACjoC,QAAQ,CAACgoC,UAAU,CAACjvF,KAAK,GAAGuhE,MAAM,CAAC4qB,OAAO;IACnE+C,wBAAwB,CAACjoC,QAAQ,CAAC5tB,MAAM,CAACr5B,KAAK,GAAGuhE,MAAM,CAACloC,MAAM;IAC9D8yC,SAAS,CAAC9f,eAAe,CAAEkV,MAAM,CAAC1qB,GAAG,CAAE;IACvCs1B,SAAS,CAACv/B,KAAK,EAAE;IACjBu/B,SAAS,CAAC0kB,kBAAkB,CAAEh5D,MAAM,EAAE,IAAI,EAAEkE,QAAQ,EAAEmzD,wBAAwB,EAAEG,cAAc,EAAE,IAAI,CAAE;EAEvG;EAEA,SAASyB,gBAAgBA,CAAEjqF,MAAM,EAAEyoC,QAAQ,EAAEu6C,KAAK,EAAE/pB,gBAAgB,EAAEC,eAAe,EAAEl+D,IAAI,EAAG;IAE7F,IAAIqB,MAAM,GAAG,IAAI;IAEjB,IAAM6tF,cAAc,GAAKlH,KAAK,CAAC0C,YAAY,KAAK,IAAI,GAAK1lF,MAAM,CAACmqF,sBAAsB,GAAGnqF,MAAM,CAACoqF,mBAAmB;IAEnH,IAAKF,cAAc,KAAKzsF,SAAS,EAAG;MAEnCpB,MAAM,GAAG6tF,cAAc;IAExB,CAAC,MAAM;MAEN7tF,MAAM,GAAK2mF,KAAK,CAAC0C,YAAY,KAAK,IAAI,GAAKoC,iBAAiB,GAAGD,cAAc;IAE9E;IAEA,IAAOviB,SAAS,CAAC5C,oBAAoB,IAAIj6B,QAAQ,CAAC8E,WAAW,KAAK,IAAI,IAAIhqB,KAAK,CAACC,OAAO,CAAEilB,QAAQ,CAAC4E,cAAc,CAAE,IAAI5E,QAAQ,CAAC4E,cAAc,CAACtuC,MAAM,KAAK,CAAC,IACvJ0pC,QAAQ,CAACmI,eAAe,IAAInI,QAAQ,CAACoI,iBAAiB,KAAK,CAAG,IAC9DpI,QAAQ,CAACyH,QAAQ,IAAIzH,QAAQ,CAAC4J,SAAS,GAAG,CAAG,EAAG;MAElD;MACA;;MAEA,IAAMg4C,IAAI,GAAGhuF,MAAM,CAACsT,IAAI;QAAE26E,IAAI,GAAG7hD,QAAQ,CAAC94B,IAAI;MAE9C,IAAI46E,mBAAmB,GAAGxC,cAAc,CAAEsC,IAAI,CAAE;MAEhD,IAAKE,mBAAmB,KAAK9sF,SAAS,EAAG;QAExC8sF,mBAAmB,GAAG,CAAC,CAAC;QACxBxC,cAAc,CAAEsC,IAAI,CAAE,GAAGE,mBAAmB;MAE7C;MAEA,IAAIC,cAAc,GAAGD,mBAAmB,CAAED,IAAI,CAAE;MAEhD,IAAKE,cAAc,KAAK/sF,SAAS,EAAG;QAEnC+sF,cAAc,GAAGnuF,MAAM,CAAC6Y,KAAK,EAAE;QAC/Bq1E,mBAAmB,CAAED,IAAI,CAAE,GAAGE,cAAc;MAE7C;MAEAnuF,MAAM,GAAGmuF,cAAc;IAExB;IAEAnuF,MAAM,CAAC6nC,OAAO,GAAGuE,QAAQ,CAACvE,OAAO;IACjC7nC,MAAM,CAACi2C,SAAS,GAAG7J,QAAQ,CAAC6J,SAAS;IAErC,IAAKt3C,IAAI,KAAK4I,YAAY,EAAG;MAE5BvH,MAAM,CAAC2vC,IAAI,GAAKvD,QAAQ,CAAC+E,UAAU,KAAK,IAAI,GAAK/E,QAAQ,CAAC+E,UAAU,GAAG/E,QAAQ,CAACuD,IAAI;IAErF,CAAC,MAAM;MAEN3vC,MAAM,CAAC2vC,IAAI,GAAKvD,QAAQ,CAAC+E,UAAU,KAAK,IAAI,GAAK/E,QAAQ,CAAC+E,UAAU,GAAGA,UAAU,CAAE/E,QAAQ,CAACuD,IAAI,CAAE;IAEnG;IAEA3vC,MAAM,CAAC6zC,QAAQ,GAAGzH,QAAQ,CAACyH,QAAQ;IACnC7zC,MAAM,CAACg2C,SAAS,GAAG5J,QAAQ,CAAC4J,SAAS;IAErCh2C,MAAM,CAACkxC,WAAW,GAAG9E,QAAQ,CAAC8E,WAAW;IACzClxC,MAAM,CAACgxC,cAAc,GAAG5E,QAAQ,CAAC4E,cAAc;IAC/ChxC,MAAM,CAACixC,gBAAgB,GAAG7E,QAAQ,CAAC6E,gBAAgB;IAEnDjxC,MAAM,CAACu0C,eAAe,GAAGnI,QAAQ,CAACmI,eAAe;IACjDv0C,MAAM,CAACw0C,iBAAiB,GAAGpI,QAAQ,CAACoI,iBAAiB;IACrDx0C,MAAM,CAACy0C,gBAAgB,GAAGrI,QAAQ,CAACqI,gBAAgB;IAEnDz0C,MAAM,CAACk2C,kBAAkB,GAAG9J,QAAQ,CAAC8J,kBAAkB;IACvDl2C,MAAM,CAAC61C,SAAS,GAAGzJ,QAAQ,CAACyJ,SAAS;IAErC,IAAK8wC,KAAK,CAAC0C,YAAY,KAAK,IAAI,IAAIrpF,MAAM,CAAC8qF,sBAAsB,KAAK,IAAI,EAAG;MAE5E9qF,MAAM,CAACk+D,iBAAiB,CAAC1nC,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;MACnEh1B,MAAM,CAACm+D,YAAY,GAAGvB,gBAAgB;MACtC58D,MAAM,CAACo+D,WAAW,GAAGvB,eAAe;IAErC;IAEA,OAAO78D,MAAM;EAEd;EAEA,SAASstF,YAAYA,CAAE3pF,MAAM,EAAEgxB,MAAM,EAAEy5D,YAAY,EAAEzH,KAAK,EAAEhoF,IAAI,EAAG;IAElE,IAAKgF,MAAM,CAACkkC,OAAO,KAAK,KAAK,EAAG;IAEhC,IAAMA,OAAO,GAAGlkC,MAAM,CAACqiC,MAAM,CAACvgB,IAAI,CAAEkP,MAAM,CAACqR,MAAM,CAAE;IAEnD,IAAK6B,OAAO,KAAMlkC,MAAM,CAACgoC,MAAM,IAAIhoC,MAAM,CAACioC,MAAM,IAAIjoC,MAAM,CAACkoC,QAAQ,CAAE,EAAG;MAEvE,IAAK,CAAEloC,MAAM,CAACmkC,UAAU,IAAMnkC,MAAM,CAACokC,aAAa,IAAIppC,IAAI,KAAK4I,YAAc,MAAQ,CAAE5D,MAAM,CAACqkC,aAAa,IAAIojD,QAAQ,CAACt+B,gBAAgB,CAAEnpD,MAAM,CAAE,CAAE,EAAG;QAEtJA,MAAM,CAAC8jC,eAAe,CAACpqB,gBAAgB,CAAE+wE,YAAY,CAACx5D,kBAAkB,EAAEjxB,MAAM,CAACqxB,WAAW,CAAE;QAE9F,IAAM6D,QAAQ,GAAGqyD,QAAQ,CAAC57D,MAAM,CAAE3rB,MAAM,CAAE;QAC1C,IAAMyoC,QAAQ,GAAGzoC,MAAM,CAACyoC,QAAQ;QAEhC,IAAKllB,KAAK,CAACC,OAAO,CAAEilB,QAAQ,CAAE,EAAG;UAEhC,IAAMgP,MAAM,GAAGviB,QAAQ,CAACuiB,MAAM;UAE9B,KAAM,IAAIizC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGlzC,MAAM,CAAC14C,MAAM,EAAE2rF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;YAEnD,IAAM1wC,KAAK,GAAGvC,MAAM,CAAEizC,CAAC,CAAE;YACzB,IAAM7sC,aAAa,GAAGpV,QAAQ,CAAEuR,KAAK,CAAC5B,aAAa,CAAE;YAErD,IAAKyF,aAAa,IAAIA,aAAa,CAAC3Z,OAAO,EAAG;cAE7C,IAAM0mD,aAAa,GAAGX,gBAAgB,CAAEjqF,MAAM,EAAE69C,aAAa,EAAEmlC,KAAK,EAAEyH,YAAY,CAAC5pD,IAAI,EAAE4pD,YAAY,CAAC3pD,GAAG,EAAE9lC,IAAI,CAAE;cAEjHsqE,SAAS,CAAC0kB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAEv1D,QAAQ,EAAE01D,aAAa,EAAE5qF,MAAM,EAAEg6C,KAAK,CAAE;YAE3F;UAED;QAED,CAAC,MAAM,IAAKvR,QAAQ,CAACvE,OAAO,EAAG;UAE9B,IAAM0mD,eAAa,GAAGX,gBAAgB,CAAEjqF,MAAM,EAAEyoC,QAAQ,EAAEu6C,KAAK,EAAEyH,YAAY,CAAC5pD,IAAI,EAAE4pD,YAAY,CAAC3pD,GAAG,EAAE9lC,IAAI,CAAE;UAE5GsqE,SAAS,CAAC0kB,kBAAkB,CAAES,YAAY,EAAE,IAAI,EAAEv1D,QAAQ,EAAE01D,eAAa,EAAE5qF,MAAM,EAAE,IAAI,CAAE;QAE1F;MAED;IAED;IAEA,IAAMy1B,QAAQ,GAAGz1B,MAAM,CAACy1B,QAAQ;IAEhC,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEnD2qF,YAAY,CAAEl0D,QAAQ,CAAEz2B,CAAC,CAAE,EAAEgyB,MAAM,EAAEy5D,YAAY,EAAEzH,KAAK,EAAEhoF,IAAI,CAAE;IAEjE;EAED;AAED;AAEA,SAAS6vF,UAAUA,CAAE1gC,EAAE,EAAE9I,UAAU,EAAE+I,YAAY,EAAG;EAAA,IAAA0gC,aAAA,EAAAC,WAAA;EAEnD,IAAM1gC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,SAAS2gC,WAAWA,CAAA,EAAG;IAEtB,IAAIC,MAAM,GAAG,KAAK;IAElB,IAAM/sE,KAAK,GAAG,IAAImI,OAAO,EAAE;IAC3B,IAAI6kE,gBAAgB,GAAG,IAAI;IAC3B,IAAMC,iBAAiB,GAAG,IAAI9kE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAEnD,OAAO;MAEN+kE,OAAO,EAAE,SAAAA,QAAWC,SAAS,EAAG;QAE/B,IAAKH,gBAAgB,KAAKG,SAAS,IAAI,CAAEJ,MAAM,EAAG;UAEjD9gC,EAAE,CAACkhC,SAAS,CAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAE;UAC1DH,gBAAgB,GAAGG,SAAS;QAE7B;MAED,CAAC;MAEDC,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDtvB,QAAQ,EAAE,SAAAA,SAAWjgD,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAED,CAAC,EAAEo7B,kBAAkB,EAAG;QAErD,IAAKA,kBAAkB,KAAK,IAAI,EAAG;UAElChyB,CAAC,IAAIpJ,CAAC;UAAEuI,CAAC,IAAIvI,CAAC;UAAEC,CAAC,IAAID,CAAC;QAEvB;QAEAsL,KAAK,CAACxK,GAAG,CAAEsI,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAED,CAAC,CAAE;QAEvB,IAAKu4E,iBAAiB,CAACzzE,MAAM,CAAEwG,KAAK,CAAE,KAAK,KAAK,EAAG;UAElDisC,EAAE,CAACkR,UAAU,CAAEr/C,CAAC,EAAEb,CAAC,EAAEtI,CAAC,EAAED,CAAC,CAAE;UAC3Bu4E,iBAAiB,CAACh2E,IAAI,CAAE+I,KAAK,CAAE;QAEhC;MAED,CAAC;MAEDvf,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElBssF,MAAM,GAAG,KAAK;QAEdC,gBAAgB,GAAG,IAAI;QACvBC,iBAAiB,CAACz3E,GAAG,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC;MAExC;IAED,CAAC;EAEF;;EAEA,SAAS83E,WAAWA,CAAA,EAAG;IAEtB,IAAIP,MAAM,GAAG,KAAK;IAElB,IAAIQ,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,iBAAiB,GAAG,IAAI;IAE5B,OAAO;MAEN3C,OAAO,EAAE,SAAAA,QAAWr8C,SAAS,EAAG;QAE/B,IAAKA,SAAS,EAAG;UAEhB3K,MAAM,CAAE,IAAI,CAAE;QAEf,CAAC,MAAM;UAENG,OAAO,CAAE,IAAI,CAAE;QAEhB;MAED,CAAC;MAEDipD,OAAO,EAAE,SAAAA,QAAWQ,SAAS,EAAG;QAE/B,IAAKH,gBAAgB,KAAKG,SAAS,IAAI,CAAEX,MAAM,EAAG;UAEjD9gC,EAAE,CAACyhC,SAAS,CAAEA,SAAS,CAAE;UACzBH,gBAAgB,GAAGG,SAAS;QAE7B;MAED,CAAC;MAEDC,OAAO,EAAE,SAAAA,QAAWn/C,SAAS,EAAG;QAE/B,IAAKg/C,gBAAgB,KAAKh/C,SAAS,EAAG;UAErC,IAAKA,SAAS,EAAG;YAEhB,QAASA,SAAS;cAEjB,KAAKlnC,UAAU;gBAEd2kD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAKjnC,WAAW;gBAEf0kD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAKhnC,SAAS;gBAEbykD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAK/mC,cAAc;gBAElBwkD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAK9mC,UAAU;gBAEdukD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAK7mC,iBAAiB;gBAErBskD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAK5mC,YAAY;gBAEhBqkD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED,KAAK3mC,aAAa;gBAEjBokD,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;gBACnB;cAED;gBAECyd,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;YAAC;UAIvB,CAAC,MAAM;YAENyd,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;UAEpB;UAEAg/C,gBAAgB,GAAGh/C,SAAS;QAE7B;MAED,CAAC;MAED4+C,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDtvB,QAAQ,EAAE,SAAAA,SAAWxzC,KAAK,EAAG;QAE5B,IAAKkjE,iBAAiB,KAAKljE,KAAK,EAAG;UAElC0hC,EAAE,CAAC2hC,UAAU,CAAErjE,KAAK,CAAE;UACtBkjE,iBAAiB,GAAGljE,KAAK;QAE1B;MAED,CAAC;MAED9pB,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElBssF,MAAM,GAAG,KAAK;QAEdQ,gBAAgB,GAAG,IAAI;QACvBC,gBAAgB,GAAG,IAAI;QACvBC,iBAAiB,GAAG,IAAI;MAEzB;IAED,CAAC;EAEF;EAEA,SAASI,aAAaA,CAAA,EAAG;IAExB,IAAId,MAAM,GAAG,KAAK;IAElB,IAAIe,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,sBAAsB,GAAG,IAAI;IACjC,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,mBAAmB,GAAG,IAAI;IAE9B,OAAO;MAENvD,OAAO,EAAE,SAAAA,QAAWwD,WAAW,EAAG;QAEjC,IAAK,CAAEvB,MAAM,EAAG;UAEf,IAAKuB,WAAW,EAAG;YAElBxqD,MAAM,CAAE,IAAI,CAAE;UAEf,CAAC,MAAM;YAENG,OAAO,CAAE,IAAI,CAAE;UAEhB;QAED;MAED,CAAC;MAEDipD,OAAO,EAAE,SAAAA,QAAWqB,WAAW,EAAG;QAEjC,IAAKT,kBAAkB,KAAKS,WAAW,IAAI,CAAExB,MAAM,EAAG;UAErD9gC,EAAE,CAACsiC,WAAW,CAAEA,WAAW,CAAE;UAC7BT,kBAAkB,GAAGS,WAAW;QAEjC;MAED,CAAC;MAEDZ,OAAO,EAAE,SAAAA,QAAW/+C,WAAW,EAAEC,UAAU,EAAE0/C,WAAW,EAAG;QAE1D,IAAKR,kBAAkB,KAAKn/C,WAAW,IAClCo/C,iBAAiB,KAAKn/C,UAAU,IAChCo/C,sBAAsB,KAAKM,WAAW,EAAG;UAE7CtiC,EAAE,CAACrd,WAAW,CAAEA,WAAW,EAAEC,UAAU,EAAE0/C,WAAW,CAAE;UAEtDR,kBAAkB,GAAGn/C,WAAW;UAChCo/C,iBAAiB,GAAGn/C,UAAU;UAC9Bo/C,sBAAsB,GAAGM,WAAW;QAErC;MAED,CAAC;MAEDC,KAAK,EAAE,SAAAA,MAAWz/C,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAG;QAE3D,IAAKi/C,kBAAkB,KAAKn/C,WAAW,IAClCo/C,mBAAmB,KAAKn/C,YAAY,IACpCo/C,mBAAmB,KAAKn/C,YAAY,EAAG;UAE3Cgd,EAAE,CAACwiC,SAAS,CAAE1/C,WAAW,EAAEC,YAAY,EAAEC,YAAY,CAAE;UAEvDi/C,kBAAkB,GAAGn/C,WAAW;UAChCo/C,mBAAmB,GAAGn/C,YAAY;UAClCo/C,mBAAmB,GAAGn/C,YAAY;QAEnC;MAED,CAAC;MAEDm+C,SAAS,EAAE,SAAAA,UAAWC,IAAI,EAAG;QAE5BN,MAAM,GAAGM,IAAI;MAEd,CAAC;MAEDtvB,QAAQ,EAAE,SAAAA,SAAWzV,OAAO,EAAG;QAE9B,IAAK+lC,mBAAmB,KAAK/lC,OAAO,EAAG;UAEtC2D,EAAE,CAACyiC,YAAY,CAAEpmC,OAAO,CAAE;UAC1B+lC,mBAAmB,GAAG/lC,OAAO;QAE9B;MAED,CAAC;MAED7nD,KAAK,EAAE,SAAAA,MAAA,EAAY;QAElBssF,MAAM,GAAG,KAAK;QAEde,kBAAkB,GAAG,IAAI;QACzBC,kBAAkB,GAAG,IAAI;QACzBC,iBAAiB,GAAG,IAAI;QACxBC,sBAAsB,GAAG,IAAI;QAC7BC,kBAAkB,GAAG,IAAI;QACzBC,mBAAmB,GAAG,IAAI;QAC1BC,mBAAmB,GAAG,IAAI;QAC1BC,mBAAmB,GAAG,IAAI;MAE3B;IAED,CAAC;EAEF;;EAEA;;EAEA,IAAMM,WAAW,GAAG,IAAI7B,WAAW,EAAE;EACrC,IAAMliE,WAAW,GAAG,IAAI0iE,WAAW,EAAE;EACrC,IAAMziE,aAAa,GAAG,IAAIgjE,aAAa,EAAE;EAEzC,IAAMe,WAAW,GAAG,IAAIviC,OAAO,EAAE;EACjC,IAAMwiC,YAAY,GAAG,IAAIxiC,OAAO,EAAE;EAElC,IAAIyiC,mBAAmB,GAAG,CAAC,CAAC;EAE5B,IAAIC,wBAAwB,GAAG,CAAC,CAAC;EACjC,IAAIC,kBAAkB,GAAG,IAAI3iC,OAAO,EAAE;EACtC,IAAI4iC,kBAAkB,GAAG,EAAE;EAE3B,IAAIC,cAAc,GAAG,IAAI;EAEzB,IAAIC,sBAAsB,GAAG,KAAK;EAClC,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,eAAe,GAAG,IAAI;EAC1B,IAAIC,yBAAyB,GAAG,IAAI;EACpC,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,wBAAwB,GAAG,KAAK;EAEpC,IAAIC,gBAAgB,GAAG,IAAI;EAC3B,IAAIC,eAAe,GAAG,IAAI;EAE1B,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,IAAIC,0BAA0B,GAAG,IAAI;EACrC,IAAIC,yBAAyB,GAAG,IAAI;EAEpC,IAAMvsB,WAAW,GAAGxX,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE;EAE5C,IAAIu4D,kBAAkB,GAAG,KAAK;EAC9B,IAAIlrE,OAAO,GAAG,CAAC;EACf,IAAMmrE,SAAS,GAAGjkC,EAAE,CAACv0B,YAAY,CAAE,IAAI,CAAE;EAEzC,IAAKw4D,SAAS,CAAC//E,OAAO,CAAE,OAAO,CAAE,KAAK,CAAE,CAAC,EAAG;IAE3C4U,OAAO,GAAGvD,UAAU,CAAE,aAAa,CAACC,IAAI,CAAEyuE,SAAS,CAAE,CAAE,CAAC,CAAE,CAAE;IAC5DD,kBAAkB,GAAKlrE,OAAO,IAAI,GAAK;EAExC,CAAC,MAAM,IAAKmrE,SAAS,CAAC//E,OAAO,CAAE,WAAW,CAAE,KAAK,CAAE,CAAC,EAAG;IAEtD4U,OAAO,GAAGvD,UAAU,CAAE,iBAAiB,CAACC,IAAI,CAAEyuE,SAAS,CAAE,CAAE,CAAC,CAAE,CAAE;IAChED,kBAAkB,GAAKlrE,OAAO,IAAI,GAAK;EAExC;EAEA,IAAIorE,kBAAkB,GAAG,IAAI;EAC7B,IAAIC,oBAAoB,GAAG,CAAC,CAAC;EAE7B,IAAMC,YAAY,GAAGpkC,EAAE,CAACv0B,YAAY,CAAE,IAAI,CAAE;EAC5C,IAAM44D,aAAa,GAAGrkC,EAAE,CAACv0B,YAAY,CAAE,IAAI,CAAE;EAE7C,IAAM64D,cAAc,GAAG,IAAIpoE,OAAO,EAAE,CAAC1O,SAAS,CAAE42E,YAAY,CAAE;EAC9D,IAAMG,eAAe,GAAG,IAAIroE,OAAO,EAAE,CAAC1O,SAAS,CAAE62E,aAAa,CAAE;EAEhE,SAASG,aAAaA,CAAE3zF,IAAI,EAAE2G,MAAM,EAAEipB,KAAK,EAAG;IAE7C,IAAM9H,IAAI,GAAG,IAAI9O,UAAU,CAAE,CAAC,CAAE,CAAC,CAAC;IAClC,IAAM6U,OAAO,GAAGshC,EAAE,CAACwkC,aAAa,EAAE;IAElCxkC,EAAE,CAACykC,WAAW,CAAE5zF,IAAI,EAAE6tB,OAAO,CAAE;IAC/BshC,EAAE,CAAC0kC,aAAa,CAAE7zF,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE;IACrCmvD,EAAE,CAAC0kC,aAAa,CAAE7zF,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE;IAErC,KAAM,IAAIgE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4rB,KAAK,EAAE5rB,CAAC,EAAG,EAAG;MAElCmrD,EAAE,CAAC2kC,UAAU,CAAEntF,MAAM,GAAG3C,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE8jB,IAAI,CAAE;IAEhE;IAEA,OAAO+F,OAAO;EAEf;EAEA,IAAMkmE,aAAa,GAAG,CAAC,CAAC;EACxBA,aAAa,CAAE,IAAI,CAAE,GAAGJ,aAAa,CAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE;EACtDI,aAAa,CAAE,KAAK,CAAE,GAAGJ,aAAa,CAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAE;;EAEzD;;EAEA9B,WAAW,CAAC5wB,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;EAClCnzC,WAAW,CAACmzC,QAAQ,CAAE,CAAC,CAAE;EACzBlzC,aAAa,CAACkzC,QAAQ,CAAE,CAAC,CAAE;EAE3Bj6B,MAAM,CAAE,IAAI,CAAE;EACdlZ,WAAW,CAAC+iE,OAAO,CAAElmF,cAAc,CAAE;EAErCqpF,YAAY,CAAE,KAAK,CAAE;EACrBC,WAAW,CAAE3rF,YAAY,CAAE;EAC3B0+B,MAAM,CAAE,IAAI,CAAE;EAEd+mD,WAAW,CAAE7kF,UAAU,CAAE;;EAEzB;;EAEA,SAAS89B,MAAMA,CAAEkE,EAAE,EAAG;IAErB,IAAK8mD,mBAAmB,CAAE9mD,EAAE,CAAE,KAAK,IAAI,EAAG;MAEzCikB,EAAE,CAACnoB,MAAM,CAAEkE,EAAE,CAAE;MACf8mD,mBAAmB,CAAE9mD,EAAE,CAAE,GAAG,IAAI;IAEjC;EAED;EAEA,SAAS/D,OAAOA,CAAE+D,EAAE,EAAG;IAEtB,IAAK8mD,mBAAmB,CAAE9mD,EAAE,CAAE,KAAK,KAAK,EAAG;MAE1CikB,EAAE,CAAChoB,OAAO,CAAE+D,EAAE,CAAE;MAChB8mD,mBAAmB,CAAE9mD,EAAE,CAAE,GAAG,KAAK;IAElC;EAED;EAEA,SAASgpD,eAAeA,CAAEvtF,MAAM,EAAEwtF,WAAW,EAAG;IAE/C,IAAKlC,wBAAwB,CAAEtrF,MAAM,CAAE,KAAKwtF,WAAW,EAAG;MAEzDhlC,EAAE,CAAC+kC,eAAe,CAAEvtF,MAAM,EAAEwtF,WAAW,CAAE;MAEzClC,wBAAwB,CAAEtrF,MAAM,CAAE,GAAGwtF,WAAW;MAEhD,IAAK9kC,QAAQ,EAAG;QAEf;;QAEA,IAAK1oD,MAAM,KAAK,KAAK,EAAG;UAEvBsrF,wBAAwB,CAAE,KAAK,CAAE,GAAGkC,WAAW;QAEhD;QAEA,IAAKxtF,MAAM,KAAK,KAAK,EAAG;UAEvBsrF,wBAAwB,CAAE,KAAK,CAAE,GAAGkC,WAAW;QAEhD;MAED;MAEA,OAAO,IAAI;IAEZ;IAEA,OAAO,KAAK;EAEb;EAEA,SAAS3tC,WAAWA,CAAE4C,YAAY,EAAE+qC,WAAW,EAAG;IAEjD,IAAI3tC,WAAW,GAAG2rC,kBAAkB;IAEpC,IAAIpnE,WAAW,GAAG,KAAK;IAEvB,IAAKq+B,YAAY,EAAG;MAEnB5C,WAAW,GAAG0rC,kBAAkB,CAACv4E,GAAG,CAAEw6E,WAAW,CAAE;MAEnD,IAAK3tC,WAAW,KAAK/jD,SAAS,EAAG;QAEhC+jD,WAAW,GAAG,EAAE;QAChB0rC,kBAAkB,CAACx5E,GAAG,CAAEy7E,WAAW,EAAE3tC,WAAW,CAAE;MAEnD;MAEA,IAAK4C,YAAY,CAACt5B,4BAA4B,EAAG;QAEhD,IAAM9E,QAAQ,GAAGo+B,YAAY,CAACv7B,OAAO;QAErC,IAAK24B,WAAW,CAACziD,MAAM,KAAKinB,QAAQ,CAACjnB,MAAM,IAAIyiD,WAAW,CAAE,CAAC,CAAE,KAAK,KAAK,EAAG;UAE3E,KAAM,IAAIxiD,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG/E,QAAQ,CAACjnB,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAErDwiD,WAAW,CAAExiD,CAAC,CAAE,GAAG,KAAK,GAAGA,CAAC;UAE7B;UAEAwiD,WAAW,CAACziD,MAAM,GAAGinB,QAAQ,CAACjnB,MAAM;UAEpCgnB,WAAW,GAAG,IAAI;QAEnB;MAED,CAAC,MAAM;QAEN,IAAKy7B,WAAW,CAAE,CAAC,CAAE,KAAK,KAAK,EAAG;UAEjCA,WAAW,CAAE,CAAC,CAAE,GAAG,KAAK;UAExBz7B,WAAW,GAAG,IAAI;QAEnB;MAED;IAED,CAAC,MAAM;MAEN,IAAKy7B,WAAW,CAAE,CAAC,CAAE,KAAK,IAAI,EAAG;QAEhCA,WAAW,CAAE,CAAC,CAAE,GAAG,IAAI;QAEvBz7B,WAAW,GAAG,IAAI;MAEnB;IAED;IAEA,IAAKA,WAAW,EAAG;MAElB,IAAKqkC,YAAY,CAACC,QAAQ,EAAG;QAE5BF,EAAE,CAAC3I,WAAW,CAAEA,WAAW,CAAE;MAE9B,CAAC,MAAM;QAENH,UAAU,CAAC1sC,GAAG,CAAE,oBAAoB,CAAE,CAACy6E,gBAAgB,CAAE5tC,WAAW,CAAE;MAEvE;IAED;EAGD;EAEA,SAAS6tC,UAAUA,CAAEhyB,OAAO,EAAG;IAE9B,IAAK+vB,cAAc,KAAK/vB,OAAO,EAAG;MAEjClT,EAAE,CAACklC,UAAU,CAAEhyB,OAAO,CAAE;MAExB+vB,cAAc,GAAG/vB,OAAO;MAExB,OAAO,IAAI;IAEZ;IAEA,OAAO,KAAK;EAEb;EAEA,IAAMiyB,YAAY,IAAAxE,aAAA,OAAAltE,eAAA,CAAAktE,aAAA,EACftmF,WAAW,EAAI,KAAK,GAAAoZ,eAAA,CAAAktE,aAAA,EACpBrmF,gBAAgB,EAAI,KAAK,GAAAmZ,eAAA,CAAAktE,aAAA,EACzBpmF,uBAAuB,EAAI,KAAK,GAAAomF,aAAA,CAClC;EAED,IAAKzgC,QAAQ,EAAG;IAEfilC,YAAY,CAAE3qF,WAAW,CAAE,GAAG,KAAK;IACnC2qF,YAAY,CAAE1qF,WAAW,CAAE,GAAG,KAAK;EAEpC,CAAC,MAAM;IAEN,IAAMi4D,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,kBAAkB,CAAE;IAEtD,IAAKkoD,SAAS,KAAK,IAAI,EAAG;MAEzByyB,YAAY,CAAE3qF,WAAW,CAAE,GAAGk4D,SAAS,CAAC0yB,OAAO;MAC/CD,YAAY,CAAE1qF,WAAW,CAAE,GAAGi4D,SAAS,CAAC2yB,OAAO;IAEhD;EAED;EAEA,IAAMC,UAAU,IAAA1E,WAAA,OAAAntE,eAAA,CAAAmtE,WAAA,EACblmF,UAAU,EAAI,CAAC,GAAA+Y,eAAA,CAAAmtE,WAAA,EACfjmF,SAAS,EAAI,CAAC,GAAA8Y,eAAA,CAAAmtE,WAAA,EACdhmF,cAAc,EAAI,GAAG,GAAA6Y,eAAA,CAAAmtE,WAAA,EACrB9lF,cAAc,EAAI,GAAG,GAAA2Y,eAAA,CAAAmtE,WAAA,EACrBxlF,sBAAsB,EAAI,GAAG,GAAAqY,eAAA,CAAAmtE,WAAA,EAC7B1lF,cAAc,EAAI,GAAG,GAAAuY,eAAA,CAAAmtE,WAAA,EACrB5lF,cAAc,EAAI,GAAG,GAAAyY,eAAA,CAAAmtE,WAAA,EACrB/lF,sBAAsB,EAAI,GAAG,GAAA4Y,eAAA,CAAAmtE,WAAA,EAC7B7lF,sBAAsB,EAAI,GAAG,GAAA0Y,eAAA,CAAAmtE,WAAA,EAC7BzlF,sBAAsB,EAAI,GAAG,GAAAsY,eAAA,CAAAmtE,WAAA,EAC7B3lF,sBAAsB,EAAI,GAAG,GAAA2lF,WAAA,CAC/B;EAED,SAAShC,WAAWA,CAAEh9C,QAAQ,EAAEO,aAAa,EAAEF,QAAQ,EAAEC,QAAQ,EAAEI,kBAAkB,EAAEF,aAAa,EAAEC,aAAa,EAAEwB,kBAAkB,EAAG;IAEzI,IAAKjC,QAAQ,KAAK7nC,UAAU,EAAG;MAE9B,IAAKmpF,sBAAsB,KAAK,IAAI,EAAG;QAEtClrD,OAAO,CAAE,IAAI,CAAE;QACfkrD,sBAAsB,GAAG,KAAK;MAE/B;MAEA;IAED;IAEA,IAAKA,sBAAsB,KAAK,KAAK,EAAG;MAEvCrrD,MAAM,CAAE,IAAI,CAAE;MACdqrD,sBAAsB,GAAG,IAAI;IAE9B;IAEA,IAAKthD,QAAQ,KAAKxnC,cAAc,EAAG;MAElC,IAAKwnC,QAAQ,KAAKuhD,eAAe,IAAIt/C,kBAAkB,KAAK6/C,wBAAwB,EAAG;QAEtF,IAAKN,oBAAoB,KAAK/oF,WAAW,IAAIkpF,yBAAyB,KAAKlpF,WAAW,EAAG;UAExF2lD,EAAE,CAAC7d,aAAa,CAAE,KAAK,CAAE;UAEzBihD,oBAAoB,GAAG/oF,WAAW;UAClCkpF,yBAAyB,GAAGlpF,WAAW;QAExC;QAEA,IAAKwpC,kBAAkB,EAAG;UAEzB,QAASjC,QAAQ;YAEhB,KAAK5nC,cAAc;cAClBgmD,EAAE,CAACulC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE;cACtC;YAED,KAAKtrF,gBAAgB;cACpB+lD,EAAE,CAACwlC,SAAS,CAAE,CAAC,EAAE,CAAC,CAAE;cACpB;YAED,KAAKtrF,mBAAmB;cACvB8lD,EAAE,CAACulC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAE;cACpC;YAED,KAAKprF,gBAAgB;cACpB6lD,EAAE,CAACulC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE;cACtC;YAED;cACC/7E,OAAO,CAACjX,KAAK,CAAE,sCAAsC,EAAEqvC,QAAQ,CAAE;cACjE;UAAM;QAIT,CAAC,MAAM;UAEN,QAASA,QAAQ;YAEhB,KAAK5nC,cAAc;cAClBgmD,EAAE,CAACulC,iBAAiB,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAE;cACxC;YAED,KAAKtrF,gBAAgB;cACpB+lD,EAAE,CAACwlC,SAAS,CAAE,GAAG,EAAE,CAAC,CAAE;cACtB;YAED,KAAKtrF,mBAAmB;cACvB8lD,EAAE,CAACulC,iBAAiB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAE;cACpC;YAED,KAAKprF,gBAAgB;cACpB6lD,EAAE,CAACwlC,SAAS,CAAE,CAAC,EAAE,GAAG,CAAE;cACtB;YAED;cACCh8E,OAAO,CAACjX,KAAK,CAAE,sCAAsC,EAAEqvC,QAAQ,CAAE;cACjE;UAAM;QAIT;QAEAyhD,eAAe,GAAG,IAAI;QACtBC,eAAe,GAAG,IAAI;QACtBE,oBAAoB,GAAG,IAAI;QAC3BC,oBAAoB,GAAG,IAAI;QAE3BN,eAAe,GAAGvhD,QAAQ;QAC1B8hD,wBAAwB,GAAG7/C,kBAAkB;MAE9C;MAEA;IAED;;IAEA;;IAEAvB,kBAAkB,GAAGA,kBAAkB,IAAIH,aAAa;IACxDC,aAAa,GAAGA,aAAa,IAAIH,QAAQ;IACzCI,aAAa,GAAGA,aAAa,IAAIH,QAAQ;IAEzC,IAAKC,aAAa,KAAKihD,oBAAoB,IAAI9gD,kBAAkB,KAAKihD,yBAAyB,EAAG;MAEjGvjC,EAAE,CAACylC,qBAAqB,CAAEN,YAAY,CAAEhjD,aAAa,CAAE,EAAEgjD,YAAY,CAAE7iD,kBAAkB,CAAE,CAAE;MAE7F8gD,oBAAoB,GAAGjhD,aAAa;MACpCohD,yBAAyB,GAAGjhD,kBAAkB;IAE/C;IAEA,IAAKL,QAAQ,KAAKohD,eAAe,IAAInhD,QAAQ,KAAKohD,eAAe,IAAIlhD,aAAa,KAAKohD,oBAAoB,IAAInhD,aAAa,KAAKohD,oBAAoB,EAAG;MAEvJzjC,EAAE,CAACulC,iBAAiB,CAAED,UAAU,CAAErjD,QAAQ,CAAE,EAAEqjD,UAAU,CAAEpjD,QAAQ,CAAE,EAAEojD,UAAU,CAAEljD,aAAa,CAAE,EAAEkjD,UAAU,CAAEjjD,aAAa,CAAE,CAAE;MAEhIghD,eAAe,GAAGphD,QAAQ;MAC1BqhD,eAAe,GAAGphD,QAAQ;MAC1BshD,oBAAoB,GAAGphD,aAAa;MACpCqhD,oBAAoB,GAAGphD,aAAa;IAErC;IAEA8gD,eAAe,GAAGvhD,QAAQ;IAC1B8hD,wBAAwB,GAAG,IAAI;EAEhC;EAEA,SAASgC,WAAWA,CAAEpnD,QAAQ,EAAEqnD,WAAW,EAAG;IAE7CrnD,QAAQ,CAACuD,IAAI,KAAKjoC,UAAU,GACzBo+B,OAAO,CAAE,IAAI,CAAE,GACfH,MAAM,CAAE,IAAI,CAAE;IAEjB,IAAI85C,SAAS,GAAKrzC,QAAQ,CAACuD,IAAI,KAAKloC,QAAU;IAC9C,IAAKgsF,WAAW,EAAGhU,SAAS,GAAG,CAAEA,SAAS;IAE1CkT,YAAY,CAAElT,SAAS,CAAE;IAEvBrzC,QAAQ,CAACsD,QAAQ,KAAK5nC,cAAc,IAAIskC,QAAQ,CAAC0D,WAAW,KAAK,KAAK,GACrE48C,WAAW,CAAE7kF,UAAU,CAAE,GACzB6kF,WAAW,CAAEtgD,QAAQ,CAACsD,QAAQ,EAAEtD,QAAQ,CAAC6D,aAAa,EAAE7D,QAAQ,CAAC2D,QAAQ,EAAE3D,QAAQ,CAAC4D,QAAQ,EAAE5D,QAAQ,CAACgE,kBAAkB,EAAEhE,QAAQ,CAAC8D,aAAa,EAAE9D,QAAQ,CAAC+D,aAAa,EAAE/D,QAAQ,CAACuF,kBAAkB,CAAE;IAE3MllB,WAAW,CAAC+iE,OAAO,CAAEpjD,QAAQ,CAACiE,SAAS,CAAE;IACzC5jB,WAAW,CAACkgE,OAAO,CAAEvgD,QAAQ,CAACkE,SAAS,CAAE;IACzC7jB,WAAW,CAACsiE,OAAO,CAAE3iD,QAAQ,CAACmE,UAAU,CAAE;IAC1CigD,WAAW,CAACzB,OAAO,CAAE3iD,QAAQ,CAACgF,UAAU,CAAE;IAE1C,IAAML,YAAY,GAAG3E,QAAQ,CAAC2E,YAAY;IAC1CrkB,aAAa,CAACigE,OAAO,CAAE57C,YAAY,CAAE;IACrC,IAAKA,YAAY,EAAG;MAEnBrkB,aAAa,CAACqiE,OAAO,CAAE3iD,QAAQ,CAACoE,gBAAgB,CAAE;MAClD9jB,aAAa,CAAC8iE,OAAO,CAAEpjD,QAAQ,CAACqE,WAAW,EAAErE,QAAQ,CAACsE,UAAU,EAAEtE,QAAQ,CAACuE,eAAe,CAAE;MAC5FjkB,aAAa,CAAC2jE,KAAK,CAAEjkD,QAAQ,CAACwE,WAAW,EAAExE,QAAQ,CAACyE,YAAY,EAAEzE,QAAQ,CAAC0E,YAAY,CAAE;IAE1F;IAEA4iD,gBAAgB,CAAEtnD,QAAQ,CAACkF,aAAa,EAAElF,QAAQ,CAACmF,mBAAmB,EAAEnF,QAAQ,CAACoF,kBAAkB,CAAE;IAErGpF,QAAQ,CAACsF,eAAe,KAAK,IAAI,GAC9B/L,MAAM,CAAE,KAAK,CAAE,GACfG,OAAO,CAAE,KAAK,CAAE;EAEpB;;EAEA;;EAEA,SAAS6sD,YAAYA,CAAElT,SAAS,EAAG;IAElC,IAAKgS,gBAAgB,KAAKhS,SAAS,EAAG;MAErC,IAAKA,SAAS,EAAG;QAEhB3xB,EAAE,CAAC6lC,SAAS,CAAE,IAAI,CAAE;MAErB,CAAC,MAAM;QAEN7lC,EAAE,CAAC6lC,SAAS,CAAE,IAAI,CAAE;MAErB;MAEAlC,gBAAgB,GAAGhS,SAAS;IAE7B;EAED;EAEA,SAASmT,WAAWA,CAAEgB,QAAQ,EAAG;IAEhC,IAAKA,QAAQ,KAAK5sF,YAAY,EAAG;MAEhC2+B,MAAM,CAAE,IAAI,CAAE;MAEd,IAAKiuD,QAAQ,KAAKlC,eAAe,EAAG;QAEnC,IAAKkC,QAAQ,KAAK3sF,YAAY,EAAG;UAEhC6mD,EAAE,CAAC8lC,QAAQ,CAAE,IAAI,CAAE;QAEpB,CAAC,MAAM,IAAKA,QAAQ,KAAK1sF,aAAa,EAAG;UAExC4mD,EAAE,CAAC8lC,QAAQ,CAAE,IAAI,CAAE;QAEpB,CAAC,MAAM;UAEN9lC,EAAE,CAAC8lC,QAAQ,CAAE,IAAI,CAAE;QAEpB;MAED;IAED,CAAC,MAAM;MAEN9tD,OAAO,CAAE,IAAI,CAAE;IAEhB;IAEA4rD,eAAe,GAAGkC,QAAQ;EAE3B;EAEA,SAASC,YAAYA,CAAEhuE,KAAK,EAAG;IAE9B,IAAKA,KAAK,KAAK8rE,gBAAgB,EAAG;MAEjC,IAAKG,kBAAkB,EAAGhkC,EAAE,CAACgmC,SAAS,CAAEjuE,KAAK,CAAE;MAE/C8rE,gBAAgB,GAAG9rE,KAAK;IAEzB;EAED;EAEA,SAAS6tE,gBAAgBA,CAAEpiD,aAAa,EAAEyiD,MAAM,EAAE9c,KAAK,EAAG;IAEzD,IAAK3lC,aAAa,EAAG;MAEpB3L,MAAM,CAAE,KAAK,CAAE;MAEf,IAAKisD,0BAA0B,KAAKmC,MAAM,IAAIlC,yBAAyB,KAAK5a,KAAK,EAAG;QAEnFnpB,EAAE,CAACxc,aAAa,CAAEyiD,MAAM,EAAE9c,KAAK,CAAE;QAEjC2a,0BAA0B,GAAGmC,MAAM;QACnClC,yBAAyB,GAAG5a,KAAK;MAElC;IAED,CAAC,MAAM;MAENnxC,OAAO,CAAE,KAAK,CAAE;IAEjB;EAED;EAEA,SAAS8mD,cAAcA,CAAEtgE,WAAW,EAAG;IAEtC,IAAKA,WAAW,EAAG;MAElBqZ,MAAM,CAAE,IAAI,CAAE;IAEf,CAAC,MAAM;MAENG,OAAO,CAAE,IAAI,CAAE;IAEhB;EAED;;EAEA;;EAEA,SAASkuD,aAAaA,CAAEC,SAAS,EAAG;IAEnC,IAAKA,SAAS,KAAK7yF,SAAS,EAAG6yF,SAAS,GAAG,KAAK,GAAG3uB,WAAW,GAAG,CAAC;IAElE,IAAK0sB,kBAAkB,KAAKiC,SAAS,EAAG;MAEvCnmC,EAAE,CAACkmC,aAAa,CAAEC,SAAS,CAAE;MAC7BjC,kBAAkB,GAAGiC,SAAS;IAE/B;EAED;EAEA,SAAS1B,WAAWA,CAAE2B,SAAS,EAAEC,YAAY,EAAG;IAE/C,IAAKnC,kBAAkB,KAAK,IAAI,EAAG;MAElCgC,aAAa,EAAE;IAEhB;IAEA,IAAII,YAAY,GAAGnC,oBAAoB,CAAED,kBAAkB,CAAE;IAE7D,IAAKoC,YAAY,KAAKhzF,SAAS,EAAG;MAEjCgzF,YAAY,GAAG;QAAEz1F,IAAI,EAAEyC,SAAS;QAAEorB,OAAO,EAAEprB;MAAU,CAAC;MACtD6wF,oBAAoB,CAAED,kBAAkB,CAAE,GAAGoC,YAAY;IAE1D;IAEA,IAAKA,YAAY,CAACz1F,IAAI,KAAKu1F,SAAS,IAAIE,YAAY,CAAC5nE,OAAO,KAAK2nE,YAAY,EAAG;MAE/ErmC,EAAE,CAACykC,WAAW,CAAE2B,SAAS,EAAEC,YAAY,IAAIzB,aAAa,CAAEwB,SAAS,CAAE,CAAE;MAEvEE,YAAY,CAACz1F,IAAI,GAAGu1F,SAAS;MAC7BE,YAAY,CAAC5nE,OAAO,GAAG2nE,YAAY;IAEpC;EAED;EAEA,SAASE,aAAaA,CAAA,EAAG;IAExB,IAAMD,YAAY,GAAGnC,oBAAoB,CAAED,kBAAkB,CAAE;IAE/D,IAAKoC,YAAY,KAAKhzF,SAAS,IAAIgzF,YAAY,CAACz1F,IAAI,KAAKyC,SAAS,EAAG;MAEpE0sD,EAAE,CAACykC,WAAW,CAAE6B,YAAY,CAACz1F,IAAI,EAAE,IAAI,CAAE;MAEzCy1F,YAAY,CAACz1F,IAAI,GAAGyC,SAAS;MAC7BgzF,YAAY,CAAC5nE,OAAO,GAAGprB,SAAS;IAEjC;EAED;EAEA,SAASkzF,oBAAoBA,CAAA,EAAG;IAE/B,IAAI;MAEHxmC,EAAE,CAACwmC,oBAAoB,CAACC,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAE/C,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASm0F,aAAaA,CAAA,EAAG;IAExB,IAAI;MAEH1mC,EAAE,CAAC0mC,aAAa,CAACD,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAExC,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASo0F,aAAaA,CAAA,EAAG;IAExB,IAAI;MAEH3mC,EAAE,CAAC2mC,aAAa,CAACF,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAExC,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASq0F,uBAAuBA,CAAA,EAAG;IAElC,IAAI;MAEH5mC,EAAE,CAAC4mC,uBAAuB,CAACH,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAElD,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASs0F,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEH7mC,EAAE,CAAC6mC,YAAY,CAACJ,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAEvC,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASu0F,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEH9mC,EAAE,CAAC8mC,YAAY,CAACL,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAEvC,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASoyF,UAAUA,CAAA,EAAG;IAErB,IAAI;MAEH3kC,EAAE,CAAC2kC,UAAU,CAAC8B,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAErC,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;EAEA,SAASw0F,UAAUA,CAAA,EAAG;IAErB,IAAI;MAEH/mC,EAAE,CAAC+mC,UAAU,CAACN,KAAK,CAAEzmC,EAAE,EAAEvkB,SAAS,CAAE;IAErC,CAAC,CAAC,OAAQlpC,KAAK,EAAG;MAEjBiX,OAAO,CAACjX,KAAK,CAAE,mBAAmB,EAAEA,KAAK,CAAE;IAE5C;EAED;;EAEA;;EAEA,SAASgsB,OAAOA,CAAEA,OAAO,EAAG;IAE3B,IAAK+lE,cAAc,CAAC/2E,MAAM,CAAEgR,OAAO,CAAE,KAAK,KAAK,EAAG;MAEjDyhC,EAAE,CAACzhC,OAAO,CAAEA,OAAO,CAACtY,CAAC,EAAEsY,OAAO,CAAChY,CAAC,EAAEgY,OAAO,CAACnC,CAAC,EAAEmC,OAAO,CAAClC,CAAC,CAAE;MACxDioE,cAAc,CAACt5E,IAAI,CAAEuT,OAAO,CAAE;IAE/B;EAED;EAEA,SAASE,QAAQA,CAAEA,QAAQ,EAAG;IAE7B,IAAK8lE,eAAe,CAACh3E,MAAM,CAAEkR,QAAQ,CAAE,KAAK,KAAK,EAAG;MAEnDuhC,EAAE,CAACvhC,QAAQ,CAAEA,QAAQ,CAACxY,CAAC,EAAEwY,QAAQ,CAAClY,CAAC,EAAEkY,QAAQ,CAACrC,CAAC,EAAEqC,QAAQ,CAACpC,CAAC,CAAE;MAC7DkoE,eAAe,CAACv5E,IAAI,CAAEyT,QAAQ,CAAE;IAEjC;EAED;EAEA,SAASuoE,gBAAgBA,CAAEC,aAAa,EAAE/zB,OAAO,EAAG;IAEnD,IAAIl5C,OAAO,GAAG4oE,YAAY,CAACp4E,GAAG,CAAE0oD,OAAO,CAAE;IAEzC,IAAKl5C,OAAO,KAAK1mB,SAAS,EAAG;MAE5B0mB,OAAO,GAAG,IAAIomC,OAAO,EAAE;MAEvBwiC,YAAY,CAACr5E,GAAG,CAAE2pD,OAAO,EAAEl5C,OAAO,CAAE;IAErC;IAEA,IAAIktE,UAAU,GAAGltE,OAAO,CAACxP,GAAG,CAAEy8E,aAAa,CAAE;IAE7C,IAAKC,UAAU,KAAK5zF,SAAS,EAAG;MAE/B4zF,UAAU,GAAGlnC,EAAE,CAACmnC,oBAAoB,CAAEj0B,OAAO,EAAE+zB,aAAa,CAAC9xF,IAAI,CAAE;MAEnE6kB,OAAO,CAACzQ,GAAG,CAAE09E,aAAa,EAAEC,UAAU,CAAE;IAEzC;EAED;EAEA,SAASE,mBAAmBA,CAAEH,aAAa,EAAE/zB,OAAO,EAAG;IAEtD,IAAMl5C,OAAO,GAAG4oE,YAAY,CAACp4E,GAAG,CAAE0oD,OAAO,CAAE;IAC3C,IAAMg0B,UAAU,GAAGltE,OAAO,CAACxP,GAAG,CAAEy8E,aAAa,CAAE;IAE/C,IAAKtE,WAAW,CAACn4E,GAAG,CAAEy8E,aAAa,CAAE,KAAKC,UAAU,EAAG;MAEtD;;MAEAlnC,EAAE,CAAConC,mBAAmB,CAAEl0B,OAAO,EAAEg0B,UAAU,EAAED,aAAa,CAACI,mBAAmB,CAAE;MAEhF1E,WAAW,CAACp5E,GAAG,CAAE09E,aAAa,EAAEC,UAAU,CAAE;IAE7C;EAED;;EAEA;;EAEA,SAAS1yF,KAAKA,CAAA,EAAG;IAEhB;;IAEAwrD,EAAE,CAAChoB,OAAO,CAAE,IAAI,CAAE;IAClBgoB,EAAE,CAAChoB,OAAO,CAAE,IAAI,CAAE;IAClBgoB,EAAE,CAAChoB,OAAO,CAAE,IAAI,CAAE;IAClBgoB,EAAE,CAAChoB,OAAO,CAAE,KAAK,CAAE;IACnBgoB,EAAE,CAAChoB,OAAO,CAAE,IAAI,CAAE;IAClBgoB,EAAE,CAAChoB,OAAO,CAAE,IAAI,CAAE;IAClBgoB,EAAE,CAAChoB,OAAO,CAAE,KAAK,CAAE;IAEnBgoB,EAAE,CAAC7d,aAAa,CAAE,KAAK,CAAE;IACzB6d,EAAE,CAACwlC,SAAS,CAAE,CAAC,EAAE,CAAC,CAAE;IACpBxlC,EAAE,CAACulC,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAElCvlC,EAAE,CAACkhC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;IACtClhC,EAAE,CAACkR,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE3BlR,EAAE,CAACyhC,SAAS,CAAE,IAAI,CAAE;IACpBzhC,EAAE,CAACzd,SAAS,CAAE,GAAG,CAAE;IACnByd,EAAE,CAAC2hC,UAAU,CAAE,CAAC,CAAE;IAElB3hC,EAAE,CAACsiC,WAAW,CAAE,UAAU,CAAE;IAC5BtiC,EAAE,CAACrd,WAAW,CAAE,GAAG,EAAE,CAAC,EAAE,UAAU,CAAE;IACpCqd,EAAE,CAACwiC,SAAS,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;IAChCxiC,EAAE,CAACyiC,YAAY,CAAE,CAAC,CAAE;IAEpBziC,EAAE,CAAC8lC,QAAQ,CAAE,IAAI,CAAE;IACnB9lC,EAAE,CAAC6lC,SAAS,CAAE,IAAI,CAAE;IAEpB7lC,EAAE,CAACxc,aAAa,CAAE,CAAC,EAAE,CAAC,CAAE;IAExBwc,EAAE,CAACkmC,aAAa,CAAE,KAAK,CAAE;IAEzBlmC,EAAE,CAAC+kC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;IAEjC,IAAK7kC,QAAQ,KAAK,IAAI,EAAG;MAExBF,EAAE,CAAC+kC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;MACjC/kC,EAAE,CAAC+kC,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;IAElC;IAEA/kC,EAAE,CAACklC,UAAU,CAAE,IAAI,CAAE;IAErBllC,EAAE,CAACgmC,SAAS,CAAE,CAAC,CAAE;IAEjBhmC,EAAE,CAACzhC,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEyhC,EAAE,CAACloC,MAAM,CAACC,KAAK,EAAEioC,EAAE,CAACloC,MAAM,CAACE,MAAM,CAAE;IACrDgoC,EAAE,CAACvhC,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAEuhC,EAAE,CAACloC,MAAM,CAACC,KAAK,EAAEioC,EAAE,CAACloC,MAAM,CAACE,MAAM,CAAE;;IAEtD;;IAEA6qE,mBAAmB,GAAG,CAAC,CAAC;IAExBqB,kBAAkB,GAAG,IAAI;IACzBC,oBAAoB,GAAG,CAAC,CAAC;IAEzBrB,wBAAwB,GAAG,CAAC,CAAC;IAC7BC,kBAAkB,GAAG,IAAI3iC,OAAO,EAAE;IAClC4iC,kBAAkB,GAAG,EAAE;IAEvBC,cAAc,GAAG,IAAI;IAErBC,sBAAsB,GAAG,KAAK;IAC9BC,eAAe,GAAG,IAAI;IACtBC,oBAAoB,GAAG,IAAI;IAC3BC,eAAe,GAAG,IAAI;IACtBC,eAAe,GAAG,IAAI;IACtBC,yBAAyB,GAAG,IAAI;IAChCC,oBAAoB,GAAG,IAAI;IAC3BC,oBAAoB,GAAG,IAAI;IAC3BC,wBAAwB,GAAG,KAAK;IAEhCC,gBAAgB,GAAG,IAAI;IACvBC,eAAe,GAAG,IAAI;IAEtBC,gBAAgB,GAAG,IAAI;IAEvBC,0BAA0B,GAAG,IAAI;IACjCC,yBAAyB,GAAG,IAAI;IAEhCO,cAAc,CAAC/6E,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEy2C,EAAE,CAACloC,MAAM,CAACC,KAAK,EAAEioC,EAAE,CAACloC,MAAM,CAACE,MAAM,CAAE;IAC7DusE,eAAe,CAACh7E,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEy2C,EAAE,CAACloC,MAAM,CAACC,KAAK,EAAEioC,EAAE,CAACloC,MAAM,CAACE,MAAM,CAAE;IAE9D0qE,WAAW,CAACluF,KAAK,EAAE;IACnBmqB,WAAW,CAACnqB,KAAK,EAAE;IACnBoqB,aAAa,CAACpqB,KAAK,EAAE;EAEtB;EAEA,OAAO;IAEN2rD,OAAO,EAAE;MACRpsC,KAAK,EAAE2uE,WAAW;MAClBpkE,KAAK,EAAEK,WAAW;MAClB09B,OAAO,EAAEz9B;IACV,CAAC;IAEDiZ,MAAM,EAAEA,MAAM;IACdG,OAAO,EAAEA,OAAO;IAEhB+sD,eAAe,EAAEA,eAAe;IAChC1tC,WAAW,EAAEA,WAAW;IAExB6tC,UAAU,EAAEA,UAAU;IAEtBtG,WAAW,EAAEA,WAAW;IACxB8G,WAAW,EAAEA,WAAW;IAExBb,YAAY,EAAEA,YAAY;IAC1BC,WAAW,EAAEA,WAAW;IAExBiB,YAAY,EAAEA,YAAY;IAC1BH,gBAAgB,EAAEA,gBAAgB;IAElC9G,cAAc,EAAEA,cAAc;IAE9BoH,aAAa,EAAEA,aAAa;IAC5BzB,WAAW,EAAEA,WAAW;IACxB8B,aAAa,EAAEA,aAAa;IAC5BC,oBAAoB,EAAEA,oBAAoB;IAC1C7B,UAAU,EAAEA,UAAU;IACtBoC,UAAU,EAAEA,UAAU;IAEtBC,gBAAgB,EAAEA,gBAAgB;IAClCI,mBAAmB,EAAEA,mBAAmB;IAExCP,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BJ,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BC,uBAAuB,EAAEA,uBAAuB;IAEhDroE,OAAO,EAAEA,OAAO;IAChBE,QAAQ,EAAEA,QAAQ;IAElBjqB,KAAK,EAAEA;EAER,CAAC;AAEF;AAEA,SAAS8yF,aAAaA,CAAEC,GAAG,EAAErwC,UAAU,EAAExkD,KAAK,EAAEm7D,UAAU,EAAE5N,YAAY,EAAEunC,KAAK,EAAE/zF,IAAI,EAAG;EAAA,IAAAg0F,aAAA,EAAAC,WAAA;EAEvF,IAAMxnC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EACtC,IAAMsX,WAAW,GAAGvX,YAAY,CAACuX,WAAW;EAC5C,IAAMG,cAAc,GAAG1X,YAAY,CAAC0X,cAAc;EAClD,IAAMD,cAAc,GAAGzX,YAAY,CAACyX,cAAc;EAClD,IAAMS,UAAU,GAAGlY,YAAY,CAACkY,UAAU;EAC1C,IAAMwvB,kBAAkB,GAAGzwC,UAAU,CAAC8f,GAAG,CAAE,sCAAsC,CAAE,GAAG9f,UAAU,CAAC1sC,GAAG,CAAE,sCAAsC,CAAE,GAAG,IAAI;EACrJ,IAAMo9E,6BAA6B,GAAG,gBAAgB,CAACjwE,IAAI,CAAEkwE,SAAS,CAACC,SAAS,CAAE;EAElF,IAAMC,cAAc,GAAG,IAAI3nC,OAAO,EAAE;EACpC,IAAI7oC,OAAO;EAEX,IAAMywE,QAAQ,GAAG,IAAI5nC,OAAO,EAAE,CAAC,CAAC;;EAEhC;EACA;EACA;;EAEA,IAAI6nC,kBAAkB,GAAG,KAAK;EAE9B,IAAI;IAEHA,kBAAkB,GAAG,OAAOC,eAAe,KAAK;IAC/C;IAAA,GACK,IAAIA,eAAe,CAAE,CAAC,EAAE,CAAC,CAAE,CAACjwE,UAAU,CAAE,IAAI,CAAE,KAAO,IAAI;EAEhE,CAAC,CAAC,OAAQpoB,GAAG,EAAG;;IAEf;EAAA;EAID,SAASs4F,YAAYA,CAAEpwE,KAAK,EAAEC,MAAM,EAAG;IAEtC;;IAEA,OAAOiwE,kBAAkB;IACxB;IACA,IAAIC,eAAe,CAAEnwE,KAAK,EAAEC,MAAM,CAAE,GAAG7E,eAAe,CAAE,QAAQ,CAAE;EAEpE;EAEA,SAASi1E,WAAWA,CAAE1wE,KAAK,EAAE2wE,eAAe,EAAEC,cAAc,EAAEC,OAAO,EAAG;IAEvE,IAAIj2E,KAAK,GAAG,CAAC;;IAEb;;IAEA,IAAKoF,KAAK,CAACK,KAAK,GAAGwwE,OAAO,IAAI7wE,KAAK,CAACM,MAAM,GAAGuwE,OAAO,EAAG;MAEtDj2E,KAAK,GAAGi2E,OAAO,GAAGxjF,IAAI,CAACa,GAAG,CAAE8R,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;IAExD;;IAEA;;IAEA,IAAK1F,KAAK,GAAG,CAAC,IAAI+1E,eAAe,KAAK,IAAI,EAAG;MAE5C;;MAEA,IAAO,OAAO9vE,gBAAgB,KAAK,WAAW,IAAIb,KAAK,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,EAAG;QAEzE,IAAMnR,KAAK,GAAGghF,eAAe,GAAG//E,eAAe,GAAGvD,IAAI,CAACsC,KAAK;QAE5D,IAAM0Q,KAAK,GAAG1Q,KAAK,CAAEiL,KAAK,GAAGoF,KAAK,CAACK,KAAK,CAAE;QAC1C,IAAMC,MAAM,GAAG3Q,KAAK,CAAEiL,KAAK,GAAGoF,KAAK,CAACM,MAAM,CAAE;QAE5C,IAAKT,OAAO,KAAKjkB,SAAS,EAAGikB,OAAO,GAAG4wE,YAAY,CAAEpwE,KAAK,EAAEC,MAAM,CAAE;;QAEpE;;QAEA,IAAMF,MAAM,GAAGwwE,cAAc,GAAGH,YAAY,CAAEpwE,KAAK,EAAEC,MAAM,CAAE,GAAGT,OAAO;QAEvEO,MAAM,CAACC,KAAK,GAAGA,KAAK;QACpBD,MAAM,CAACE,MAAM,GAAGA,MAAM;QAEtB,IAAMznB,OAAO,GAAGunB,MAAM,CAACG,UAAU,CAAE,IAAI,CAAE;QACzC1nB,OAAO,CAAC6nB,SAAS,CAAEV,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEK,KAAK,EAAEC,MAAM,CAAE;QAE/CxO,OAAO,CAACC,IAAI,CAAE,sDAAsD,GAAGiO,KAAK,CAACK,KAAK,GAAG,GAAG,GAAGL,KAAK,CAACM,MAAM,GAAG,QAAQ,GAAGD,KAAK,GAAG,GAAG,GAAGC,MAAM,GAAG,IAAI,CAAE;QAElJ,OAAOF,MAAM;MAEd,CAAC,MAAM;QAEN,IAAK,MAAM,IAAIJ,KAAK,EAAG;UAEtBlO,OAAO,CAACC,IAAI,CAAE,wDAAwD,GAAGiO,KAAK,CAACK,KAAK,GAAG,GAAG,GAAGL,KAAK,CAACM,MAAM,GAAG,IAAI,CAAE;QAEnH;QAEA,OAAON,KAAK;MAEb;IAED;IAEA,OAAOA,KAAK;EAEb;EAEA,SAAS8wE,cAAcA,CAAE9wE,KAAK,EAAG;IAEhC,OAAO1P,YAAY,CAAE0P,KAAK,CAACK,KAAK,CAAE,IAAI/P,YAAY,CAAE0P,KAAK,CAACM,MAAM,CAAE;EAEnE;EAEA,SAASywE,sBAAsBA,CAAE/pE,OAAO,EAAG;IAE1C,IAAKwhC,QAAQ,EAAG,OAAO,KAAK;IAE5B,OAASxhC,OAAO,CAACxE,KAAK,KAAKrd,mBAAmB,IAAI6hB,OAAO,CAACvE,KAAK,KAAKtd,mBAAmB,IACpF6hB,OAAO,CAACrE,SAAS,KAAKtd,aAAa,IAAI2hB,OAAO,CAACrE,SAAS,KAAKjd,YAAc;EAE/E;EAEA,SAASsrF,2BAA2BA,CAAEhqE,OAAO,EAAEiqE,YAAY,EAAG;IAE7D,OAAOjqE,OAAO,CAAC1D,eAAe,IAAI2tE,YAAY,IAC7CjqE,OAAO,CAACrE,SAAS,KAAKtd,aAAa,IAAI2hB,OAAO,CAACrE,SAAS,KAAKjd,YAAY;EAE3E;EAEA,SAASwrF,cAAcA,CAAEpxF,MAAM,EAAG;IAEjC+vF,GAAG,CAACqB,cAAc,CAAEpxF,MAAM,CAAE;EAE7B;EAEA,SAASqxF,iBAAiBA,CAAEC,kBAAkB,EAAEC,QAAQ,EAAEC,MAAM,EAAExuE,QAAQ,EAAEo8D,cAAc,GAAG,KAAK,EAAG;IAEpG,IAAK12B,QAAQ,KAAK,KAAK,EAAG,OAAO6oC,QAAQ;IAEzC,IAAKD,kBAAkB,KAAK,IAAI,EAAG;MAElC,IAAKvB,GAAG,CAAEuB,kBAAkB,CAAE,KAAKx1F,SAAS,EAAG,OAAOi0F,GAAG,CAAEuB,kBAAkB,CAAE;MAE/Et/E,OAAO,CAACC,IAAI,CAAE,2EAA2E,GAAGq/E,kBAAkB,GAAG,IAAI,CAAE;IAExH;IAEA,IAAIjuE,cAAc,GAAGkuE,QAAQ;IAE7B,IAAKA,QAAQ,KAAK,IAAI,EAAG;MAExB,IAAKC,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;MAC7C,IAAKmuE,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;MAC7C,IAAKmuE,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;IAE9C;IAEA,IAAKkuE,QAAQ,KAAK,KAAK,EAAG;MAEzB,IAAKC,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;MAC7C,IAAKmuE,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;MAC7C,IAAKmuE,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;IAE9C;IAEA,IAAKkuE,QAAQ,KAAK,IAAI,EAAG;MAExB,IAAKC,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;MAC7C,IAAKmuE,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAG,KAAK;MAC7C,IAAKmuE,MAAM,KAAK,IAAI,EAAGnuE,cAAc,GAAKL,QAAQ,KAAK/Y,YAAY,IAAIm1E,cAAc,KAAK,KAAK,GAAK,KAAK,GAAG,KAAK;MACjH,IAAKoS,MAAM,KAAK,KAAK,EAAGnuE,cAAc,GAAG,KAAK;MAC9C,IAAKmuE,MAAM,KAAK,KAAK,EAAGnuE,cAAc,GAAG,KAAK;IAE/C;IAEA,IAAKA,cAAc,KAAK,KAAK,IAAIA,cAAc,KAAK,KAAK,IACxDA,cAAc,KAAK,KAAK,IAAIA,cAAc,KAAK,KAAK,IACpDA,cAAc,KAAK,KAAK,IAAIA,cAAc,KAAK,KAAK,EAAG;MAEvDq8B,UAAU,CAAC1sC,GAAG,CAAE,wBAAwB,CAAE;IAE3C;IAEA,OAAOqQ,cAAc;EAEtB;EAEA,SAASouE,YAAYA,CAAEvqE,OAAO,EAAEhH,KAAK,EAAEixE,YAAY,EAAG;IAErD,IAAKD,2BAA2B,CAAEhqE,OAAO,EAAEiqE,YAAY,CAAE,KAAK,IAAI,IAAMjqE,OAAO,CAACwqE,oBAAoB,IAAIxqE,OAAO,CAACrE,SAAS,KAAKtd,aAAa,IAAI2hB,OAAO,CAACrE,SAAS,KAAKjd,YAAc,EAAG;MAErL,OAAO2H,IAAI,CAACk4D,IAAI,CAAEl4D,IAAI,CAACa,GAAG,CAAE8R,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE,CAAE,GAAG,CAAC;IAE9D,CAAC,MAAM,IAAK0G,OAAO,CAAC9D,OAAO,KAAKtnB,SAAS,IAAIorB,OAAO,CAAC9D,OAAO,CAAChmB,MAAM,GAAG,CAAC,EAAG;MAEzE;;MAEA,OAAO8pB,OAAO,CAAC9D,OAAO,CAAChmB,MAAM;IAE9B,CAAC,MAAM,IAAK8pB,OAAO,CAACyqE,mBAAmB,IAAI/vE,KAAK,CAACC,OAAO,CAAEqF,OAAO,CAAChH,KAAK,CAAE,EAAG;MAE3E,OAAOA,KAAK,CAACkD,OAAO,CAAChmB,MAAM;IAE5B,CAAC,MAAM;MAEN;;MAEA,OAAO,CAAC;IAET;EAED;;EAEA;;EAEA,SAASw0F,cAAcA,CAAEr4E,CAAC,EAAG;IAE5B,IAAKA,CAAC,KAAKhU,aAAa,IAAIgU,CAAC,KAAK/T,0BAA0B,IAAI+T,CAAC,KAAK7T,yBAAyB,EAAG;MAEjG,OAAO,IAAI;IAEZ;IAEA,OAAO,IAAI;EAEZ;;EAEA;;EAEA,SAAS+8D,gBAAgBA,CAAEx1D,KAAK,EAAG;IAElC,IAAMia,OAAO,GAAGja,KAAK,CAACjN,MAAM;IAE5BknB,OAAO,CAACta,mBAAmB,CAAE,SAAS,EAAE61D,gBAAgB,CAAE;IAE1DovB,iBAAiB,CAAE3qE,OAAO,CAAE;IAE5B,IAAKA,OAAO,CAACk4D,cAAc,EAAG;MAE7BmR,cAAc,CAAChnC,MAAM,CAAEriC,OAAO,CAAE;IAEjC;EAED;EAEA,SAAS4qE,qBAAqBA,CAAE7kF,KAAK,EAAG;IAEvC,IAAMw1C,YAAY,GAAGx1C,KAAK,CAACjN,MAAM;IAEjCyiD,YAAY,CAAC71C,mBAAmB,CAAE,SAAS,EAAEklF,qBAAqB,CAAE;IAEpEC,sBAAsB,CAAEtvC,YAAY,CAAE;EAEvC;;EAEA;;EAEA,SAASovC,iBAAiBA,CAAE3qE,OAAO,EAAG;IAErC,IAAM8qE,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnD,IAAK8qE,iBAAiB,CAACC,WAAW,KAAKn2F,SAAS,EAAG;;IAEnD;;IAEA,IAAMqhB,MAAM,GAAG+J,OAAO,CAAC/J,MAAM;IAC7B,IAAM+0E,aAAa,GAAG1B,QAAQ,CAACx9E,GAAG,CAAEmK,MAAM,CAAE;IAE5C,IAAK+0E,aAAa,EAAG;MAEpB,IAAMrD,YAAY,GAAGqD,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAClEtD,YAAY,CAAC1S,SAAS,EAAG;;MAEzB;;MAEA,IAAK0S,YAAY,CAAC1S,SAAS,KAAK,CAAC,EAAG;QAEnCiW,aAAa,CAAElrE,OAAO,CAAE;MAEzB;;MAEA;;MAEA,IAAKlwB,MAAM,CAACmH,IAAI,CAAE+zF,aAAa,CAAE,CAAC90F,MAAM,KAAK,CAAC,EAAG;QAEhDozF,QAAQ,CAACjnC,MAAM,CAAEpsC,MAAM,CAAE;MAE1B;IAED;IAEAk5C,UAAU,CAACnyB,MAAM,CAAEhd,OAAO,CAAE;EAE7B;EAEA,SAASkrE,aAAaA,CAAElrE,OAAO,EAAG;IAEjC,IAAM8qE,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IACnD6oE,GAAG,CAACqC,aAAa,CAAEJ,iBAAiB,CAACK,cAAc,CAAE;IAErD,IAAMl1E,MAAM,GAAG+J,OAAO,CAAC/J,MAAM;IAC7B,IAAM+0E,aAAa,GAAG1B,QAAQ,CAACx9E,GAAG,CAAEmK,MAAM,CAAE;IAC5C,OAAO+0E,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;IAEpDl2F,IAAI,CAAC0tE,MAAM,CAACtlD,QAAQ,EAAG;EAExB;EAEA,SAAS0tE,sBAAsBA,CAAEtvC,YAAY,EAAG;IAE/C,IAAMv7B,OAAO,GAAGu7B,YAAY,CAACv7B,OAAO;IAEpC,IAAMorE,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAC7D,IAAMuvC,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnD,IAAK8qE,iBAAiB,CAACK,cAAc,KAAKv2F,SAAS,EAAG;MAErDi0F,GAAG,CAACqC,aAAa,CAAEJ,iBAAiB,CAACK,cAAc,CAAE;MAErDp2F,IAAI,CAAC0tE,MAAM,CAACtlD,QAAQ,EAAG;IAExB;IAEA,IAAKo+B,YAAY,CAACp7B,YAAY,EAAG;MAEhCo7B,YAAY,CAACp7B,YAAY,CAAC9C,OAAO,EAAE;IAEpC;IAEA,IAAKk+B,YAAY,CAACE,uBAAuB,EAAG;MAE3C,KAAM,IAAItlD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B0yF,GAAG,CAACwC,iBAAiB,CAAED,sBAAsB,CAACE,kBAAkB,CAAEn1F,CAAC,CAAE,CAAE;QACvE,IAAKi1F,sBAAsB,CAACG,kBAAkB,EAAG1C,GAAG,CAAC2C,kBAAkB,CAAEJ,sBAAsB,CAACG,kBAAkB,CAAEp1F,CAAC,CAAE,CAAE;MAE1H;IAED,CAAC,MAAM;MAEN0yF,GAAG,CAACwC,iBAAiB,CAAED,sBAAsB,CAACE,kBAAkB,CAAE;MAClE,IAAKF,sBAAsB,CAACG,kBAAkB,EAAG1C,GAAG,CAAC2C,kBAAkB,CAAEJ,sBAAsB,CAACG,kBAAkB,CAAE;MACpH,IAAKH,sBAAsB,CAACK,8BAA8B,EAAG5C,GAAG,CAACwC,iBAAiB,CAAED,sBAAsB,CAACK,8BAA8B,CAAE;MAE3I,IAAKL,sBAAsB,CAACM,wBAAwB,EAAG;QAEtD,KAAM,IAAIv1F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGi1F,sBAAsB,CAACM,wBAAwB,CAACx1F,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEnF,IAAKi1F,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,EAAG0yF,GAAG,CAAC2C,kBAAkB,CAAEJ,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,CAAE;QAE3I;MAED;MAEA,IAAKi1F,sBAAsB,CAACO,wBAAwB,EAAG9C,GAAG,CAAC2C,kBAAkB,CAAEJ,sBAAsB,CAACO,wBAAwB,CAAE;IAEjI;IAEA,IAAKpwC,YAAY,CAACt5B,4BAA4B,EAAG;MAEhD,KAAM,IAAI9rB,IAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGlC,OAAO,CAAC9pB,MAAM,EAAEC,IAAC,GAAG+rB,EAAE,EAAE/rB,IAAC,EAAG,EAAG;QAEpD,IAAMy1F,oBAAoB,GAAGz8B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE7pB,IAAC,CAAE,CAAE;QAE3D,IAAKy1F,oBAAoB,CAACT,cAAc,EAAG;UAE1CtC,GAAG,CAACqC,aAAa,CAAEU,oBAAoB,CAACT,cAAc,CAAE;UAExDp2F,IAAI,CAAC0tE,MAAM,CAACtlD,QAAQ,EAAG;QAExB;QAEAgyC,UAAU,CAACnyB,MAAM,CAAEhd,OAAO,CAAE7pB,IAAC,CAAE,CAAE;MAElC;IAED;IAEAg5D,UAAU,CAACnyB,MAAM,CAAEhd,OAAO,CAAE;IAC5BmvC,UAAU,CAACnyB,MAAM,CAAEue,YAAY,CAAE;EAElC;;EAEA;;EAEA,IAAIswC,YAAY,GAAG,CAAC;EAEpB,SAASC,iBAAiBA,CAAA,EAAG;IAE5BD,YAAY,GAAG,CAAC;EAEjB;EAEA,SAASplB,mBAAmBA,CAAA,EAAG;IAE9B,IAAMslB,WAAW,GAAGF,YAAY;IAEhC,IAAKE,WAAW,IAAIjzB,WAAW,EAAG;MAEjChuD,OAAO,CAACC,IAAI,CAAE,qCAAqC,GAAGghF,WAAW,GAAG,8CAA8C,GAAGjzB,WAAW,CAAE;IAEnI;IAEA+yB,YAAY,IAAI,CAAC;IAEjB,OAAOE,WAAW;EAEnB;EAEA,SAASC,kBAAkBA,CAAEhsE,OAAO,EAAG;IAEtC,IAAMha,KAAK,GAAG,EAAE;IAEhBA,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACxE,KAAK,CAAE;IAC3BxV,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACvE,KAAK,CAAE;IAC3BzV,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACtE,SAAS,CAAE;IAC/B1V,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACrE,SAAS,CAAE;IAC/B3V,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACnE,UAAU,CAAE;IAChC7V,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAAC7D,cAAc,CAAE;IACpCnW,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACpE,MAAM,CAAE;IAC5B5V,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAAC7tB,IAAI,CAAE;IAC1B6T,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAAC1D,eAAe,CAAE;IACrCtW,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACzD,gBAAgB,CAAE;IACtCvW,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACxD,KAAK,CAAE;IAC3BxW,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAACvD,eAAe,CAAE;IACrCzW,KAAK,CAACrQ,IAAI,CAAEqqB,OAAO,CAAClE,QAAQ,CAAE;IAE9B,OAAO9V,KAAK,CAACgnE,IAAI,EAAE;EAEpB;;EAEA;;EAEA,SAASlE,YAAYA,CAAE9oD,OAAO,EAAEisE,IAAI,EAAG;IAEtC,IAAMnB,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnD,IAAKA,OAAO,CAACk4D,cAAc,EAAGgU,kBAAkB,CAAElsE,OAAO,CAAE;IAE3D,IAAKA,OAAO,CAACpD,qBAAqB,KAAK,KAAK,IAAIoD,OAAO,CAAC5F,OAAO,GAAG,CAAC,IAAI0wE,iBAAiB,CAACqB,SAAS,KAAKnsE,OAAO,CAAC5F,OAAO,EAAG;MAExH,IAAMpB,KAAK,GAAGgH,OAAO,CAAChH,KAAK;MAE3B,IAAKA,KAAK,KAAK,IAAI,EAAG;QAErBlO,OAAO,CAACC,IAAI,CAAE,yEAAyE,CAAE;MAE1F,CAAC,MAAM,IAAKiO,KAAK,CAAC5gB,QAAQ,KAAK,KAAK,EAAG;QAEtC0S,OAAO,CAACC,IAAI,CAAE,wEAAwE,CAAE;MAEzF,CAAC,MAAM;QAENqhF,aAAa,CAAEtB,iBAAiB,EAAE9qE,OAAO,EAAEisE,IAAI,CAAE;QACjD;MAED;IAED;IAEAj4F,KAAK,CAACwzF,aAAa,CAAE,KAAK,GAAGyE,IAAI,CAAE;IACnCj4F,KAAK,CAAC+xF,WAAW,CAAE,IAAI,EAAE+E,iBAAiB,CAACK,cAAc,CAAE;EAE5D;EAEA,SAAS/hB,iBAAiBA,CAAEppD,OAAO,EAAEisE,IAAI,EAAG;IAE3C,IAAMnB,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnD,IAAKA,OAAO,CAAC5F,OAAO,GAAG,CAAC,IAAI0wE,iBAAiB,CAACqB,SAAS,KAAKnsE,OAAO,CAAC5F,OAAO,EAAG;MAE7EgyE,aAAa,CAAEtB,iBAAiB,EAAE9qE,OAAO,EAAEisE,IAAI,CAAE;MACjD;IAED;IAEAj4F,KAAK,CAACwzF,aAAa,CAAE,KAAK,GAAGyE,IAAI,CAAE;IACnCj4F,KAAK,CAAC+xF,WAAW,CAAE,KAAK,EAAE+E,iBAAiB,CAACK,cAAc,CAAE;EAE7D;EAEA,SAASniB,YAAYA,CAAEhpD,OAAO,EAAEisE,IAAI,EAAG;IAEtC,IAAMnB,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnD,IAAKA,OAAO,CAAC5F,OAAO,GAAG,CAAC,IAAI0wE,iBAAiB,CAACqB,SAAS,KAAKnsE,OAAO,CAAC5F,OAAO,EAAG;MAE7EgyE,aAAa,CAAEtB,iBAAiB,EAAE9qE,OAAO,EAAEisE,IAAI,CAAE;MACjD;IAED;IAEAj4F,KAAK,CAACwzF,aAAa,CAAE,KAAK,GAAGyE,IAAI,CAAE;IACnCj4F,KAAK,CAAC+xF,WAAW,CAAE,KAAK,EAAE+E,iBAAiB,CAACK,cAAc,CAAE;EAE7D;EAEA,SAASjiB,cAAcA,CAAElpD,OAAO,EAAEisE,IAAI,EAAG;IAExC,IAAMnB,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnD,IAAKA,OAAO,CAAC5F,OAAO,GAAG,CAAC,IAAI0wE,iBAAiB,CAACqB,SAAS,KAAKnsE,OAAO,CAAC5F,OAAO,EAAG;MAE7EiyE,iBAAiB,CAAEvB,iBAAiB,EAAE9qE,OAAO,EAAEisE,IAAI,CAAE;MACrD;IAED;IAEAj4F,KAAK,CAACwzF,aAAa,CAAE,KAAK,GAAGyE,IAAI,CAAE;IACnCj4F,KAAK,CAAC+xF,WAAW,CAAE,KAAK,EAAE+E,iBAAiB,CAACK,cAAc,CAAE;EAE7D;EAEA,IAAMmB,YAAY,IAAAvD,aAAA,OAAAh0E,eAAA,CAAAg0E,aAAA,EACf7qF,cAAc,EAAI,KAAK,GAAA6W,eAAA,CAAAg0E,aAAA,EACvB5qF,mBAAmB,EAAI,KAAK,GAAA4W,eAAA,CAAAg0E,aAAA,EAC5B3qF,sBAAsB,EAAI,KAAK,GAAA2qF,aAAA,CACjC;EAED,IAAMwD,UAAU,IAAAvD,WAAA,OAAAj0E,eAAA,CAAAi0E,WAAA,EACb3qF,aAAa,EAAI,IAAI,GAAA0W,eAAA,CAAAi0E,WAAA,EACrB1qF,0BAA0B,EAAI,IAAI,GAAAyW,eAAA,CAAAi0E,WAAA,EAClCxqF,yBAAyB,EAAI,IAAI,GAAAuW,eAAA,CAAAi0E,WAAA,EAEjCtqF,YAAY,EAAI,IAAI,GAAAqW,eAAA,CAAAi0E,WAAA,EACpBrqF,yBAAyB,EAAI,IAAI,GAAAoW,eAAA,CAAAi0E,WAAA,EACjCnqF,wBAAwB,EAAI,IAAI,GAAAmqF,WAAA,CAClC;EAED,SAASwD,oBAAoBA,CAAEC,WAAW,EAAEzsE,OAAO,EAAEiqE,YAAY,EAAG;IAEnE,IAAKA,YAAY,EAAG;MAEnBpB,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAEH,YAAY,CAAEtsE,OAAO,CAACxE,KAAK,CAAE,CAAE;MACtEqtE,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAEH,YAAY,CAAEtsE,OAAO,CAACvE,KAAK,CAAE,CAAE;MAEtE,IAAKgxE,WAAW,KAAK,KAAK,IAAIA,WAAW,KAAK,KAAK,EAAG;QAErD5D,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAEH,YAAY,CAAEtsE,OAAO,CAACY,KAAK,CAAE,CAAE;MAEvE;MAEAioE,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAEF,UAAU,CAAEvsE,OAAO,CAACtE,SAAS,CAAE,CAAE;MACxEmtE,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAEF,UAAU,CAAEvsE,OAAO,CAACrE,SAAS,CAAE,CAAE;IAEzE,CAAC,MAAM;MAENktE,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAE,KAAK,CAAE;MAC9C5D,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAE,KAAK,CAAE;MAE9C,IAAKA,WAAW,KAAK,KAAK,IAAIA,WAAW,KAAK,KAAK,EAAG;QAErD5D,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAE,KAAK,CAAE;MAE/C;MAEA,IAAKzsE,OAAO,CAACxE,KAAK,KAAKrd,mBAAmB,IAAI6hB,OAAO,CAACvE,KAAK,KAAKtd,mBAAmB,EAAG;QAErF2M,OAAO,CAACC,IAAI,CAAE,+HAA+H,CAAE;MAEhJ;MAEA89E,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAE/B,cAAc,CAAE1qE,OAAO,CAACtE,SAAS,CAAE,CAAE;MAC5EmtE,GAAG,CAAC7C,aAAa,CAAEyG,WAAW,EAAE,KAAK,EAAE/B,cAAc,CAAE1qE,OAAO,CAACrE,SAAS,CAAE,CAAE;MAE5E,IAAKqE,OAAO,CAACrE,SAAS,KAAKtd,aAAa,IAAI2hB,OAAO,CAACrE,SAAS,KAAKjd,YAAY,EAAG;QAEhFoM,OAAO,CAACC,IAAI,CAAE,iIAAiI,CAAE;MAElJ;IAED;IAEA,IAAKytC,UAAU,CAAC8f,GAAG,CAAE,gCAAgC,CAAE,KAAK,IAAI,EAAG;MAElE,IAAMtE,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,gCAAgC,CAAE;MAEpE,IAAKkU,OAAO,CAAC7tB,IAAI,KAAKkN,SAAS,IAAIm5C,UAAU,CAAC8f,GAAG,CAAE,0BAA0B,CAAE,KAAK,KAAK,EAAG,OAAO,CAAC;MACpG,IAAK9W,QAAQ,KAAK,KAAK,IAAMxhC,OAAO,CAAC7tB,IAAI,KAAKmN,aAAa,IAAIk5C,UAAU,CAAC8f,GAAG,CAAE,+BAA+B,CAAE,KAAK,KAAO,EAAG,OAAO,CAAC;;MAEvI,IAAKt4C,OAAO,CAACnE,UAAU,GAAG,CAAC,IAAIszC,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE,CAAC0sE,mBAAmB,EAAG;QAE9E7D,GAAG,CAAC8D,aAAa,CAAEF,WAAW,EAAEz4B,SAAS,CAAC44B,0BAA0B,EAAEvmF,IAAI,CAACY,GAAG,CAAE+Y,OAAO,CAACnE,UAAU,EAAE0lC,YAAY,CAAC8W,gBAAgB,EAAE,CAAE,CAAE;QACvIlJ,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE,CAAC0sE,mBAAmB,GAAG1sE,OAAO,CAACnE,UAAU;MAEnE;IAED;EAED;EAEA,SAASgxE,WAAWA,CAAE/B,iBAAiB,EAAE9qE,OAAO,EAAG;IAElD,IAAI8sE,WAAW,GAAG,KAAK;IAEvB,IAAKhC,iBAAiB,CAACC,WAAW,KAAKn2F,SAAS,EAAG;MAElDk2F,iBAAiB,CAACC,WAAW,GAAG,IAAI;MAEpC/qE,OAAO,CAAC5a,gBAAgB,CAAE,SAAS,EAAEm2D,gBAAgB,CAAE;IAExD;;IAEA;;IAEA,IAAMtlD,MAAM,GAAG+J,OAAO,CAAC/J,MAAM;IAC7B,IAAI+0E,aAAa,GAAG1B,QAAQ,CAACx9E,GAAG,CAAEmK,MAAM,CAAE;IAE1C,IAAK+0E,aAAa,KAAKp2F,SAAS,EAAG;MAElCo2F,aAAa,GAAG,CAAC,CAAC;MAClB1B,QAAQ,CAACz+E,GAAG,CAAEoL,MAAM,EAAE+0E,aAAa,CAAE;IAEtC;;IAEA;;IAEA,IAAM+B,eAAe,GAAGf,kBAAkB,CAAEhsE,OAAO,CAAE;IAErD,IAAK+sE,eAAe,KAAKjC,iBAAiB,CAACG,UAAU,EAAG;MAEvD;;MAEA,IAAKD,aAAa,CAAE+B,eAAe,CAAE,KAAKn4F,SAAS,EAAG;QAErD;;QAEAo2F,aAAa,CAAE+B,eAAe,CAAE,GAAG;UAClC/sE,OAAO,EAAE6oE,GAAG,CAAC/C,aAAa,EAAE;UAC5B7Q,SAAS,EAAE;QACZ,CAAC;QAEDlgF,IAAI,CAAC0tE,MAAM,CAACtlD,QAAQ,EAAG;;QAEvB;QACA;;QAEA2vE,WAAW,GAAG,IAAI;MAEnB;MAEA9B,aAAa,CAAE+B,eAAe,CAAE,CAAC9X,SAAS,EAAG;;MAE7C;MACA;;MAEA,IAAM0S,YAAY,GAAGqD,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MAElE,IAAKtD,YAAY,KAAK/yF,SAAS,EAAG;QAEjCo2F,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE,CAAChW,SAAS,EAAG;QAE1D,IAAK0S,YAAY,CAAC1S,SAAS,KAAK,CAAC,EAAG;UAEnCiW,aAAa,CAAElrE,OAAO,CAAE;QAEzB;MAED;;MAEA;;MAEA8qE,iBAAiB,CAACG,UAAU,GAAG8B,eAAe;MAC9CjC,iBAAiB,CAACK,cAAc,GAAGH,aAAa,CAAE+B,eAAe,CAAE,CAAC/sE,OAAO;IAE5E;IAEA,OAAO8sE,WAAW;EAEnB;EAEA,SAASV,aAAaA,CAAEtB,iBAAiB,EAAE9qE,OAAO,EAAEisE,IAAI,EAAG;IAE1D,IAAIQ,WAAW,GAAG,IAAI;IAEtB,IAAKzsE,OAAO,CAACW,kBAAkB,EAAG8rE,WAAW,GAAG,KAAK;IACrD,IAAKzsE,OAAO,CAACsB,eAAe,EAAGmrE,WAAW,GAAG,KAAK;IAElD,IAAMK,WAAW,GAAGD,WAAW,CAAE/B,iBAAiB,EAAE9qE,OAAO,CAAE;IAC7D,IAAM/J,MAAM,GAAG+J,OAAO,CAAC/J,MAAM;IAE7BjiB,KAAK,CAACwzF,aAAa,CAAE,KAAK,GAAGyE,IAAI,CAAE;IACnCj4F,KAAK,CAAC+xF,WAAW,CAAE0G,WAAW,EAAE3B,iBAAiB,CAACK,cAAc,CAAE;IAElE,IAAKl1E,MAAM,CAACmE,OAAO,KAAKnE,MAAM,CAAC+2E,gBAAgB,IAAIF,WAAW,KAAK,IAAI,EAAG;MAEzEjE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEjtE,OAAO,CAACxD,KAAK,CAAE;MACvCqsE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEjtE,OAAO,CAACzD,gBAAgB,CAAE;MAClDssE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEjtE,OAAO,CAACvD,eAAe,CAAE;MAChDosE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE;MAE3B,IAAMtD,eAAe,GAAGI,sBAAsB,CAAE/pE,OAAO,CAAE,IAAI8pE,cAAc,CAAE9pE,OAAO,CAAChH,KAAK,CAAE,KAAK,KAAK;MACtG,IAAIA,KAAK,GAAG0wE,WAAW,CAAE1pE,OAAO,CAAChH,KAAK,EAAE2wE,eAAe,EAAE,KAAK,EAAE3wB,cAAc,CAAE;MAChFhgD,KAAK,GAAGk0E,gBAAgB,CAAEltE,OAAO,EAAEhH,KAAK,CAAE;MAE1C,IAAMixE,YAAY,GAAGH,cAAc,CAAE9wE,KAAK,CAAE,IAAIwoC,QAAQ;QACvD6oC,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAACpE,MAAM,EAAEoE,OAAO,CAAClE,QAAQ,CAAE;MAE7D,IAAIwuE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAAC7tB,IAAI,CAAE;QACzCg7F,gBAAgB,GAAGhD,iBAAiB,CAAEnqE,OAAO,CAAC7D,cAAc,EAAEkuE,QAAQ,EAAEC,MAAM,EAAEtqE,OAAO,CAAClE,QAAQ,EAAEkE,OAAO,CAACk4D,cAAc,CAAE;MAE3HsU,oBAAoB,CAAEC,WAAW,EAAEzsE,OAAO,EAAEiqE,YAAY,CAAE;MAE1D,IAAImD,MAAM;MACV,IAAMlxE,OAAO,GAAG8D,OAAO,CAAC9D,OAAO;MAE/B,IAAMmxE,aAAa,GAAK7rC,QAAQ,IAAIxhC,OAAO,CAACk4D,cAAc,KAAK,IAAM;MACrE,IAAMoV,cAAc,GAAKr3E,MAAM,CAAC+2E,gBAAgB,KAAKp4F,SAAS,IAAQk4F,WAAW,KAAK,IAAM;MAC5F,IAAMS,MAAM,GAAGhD,YAAY,CAAEvqE,OAAO,EAAEhH,KAAK,EAAEixE,YAAY,CAAE;MAE3D,IAAKjqE,OAAO,CAACwtE,cAAc,EAAG;QAE7B;;QAEAL,gBAAgB,GAAG,IAAI;QAEvB,IAAK3rC,QAAQ,EAAG;UAEf,IAAKxhC,OAAO,CAAC7tB,IAAI,KAAKkN,SAAS,EAAG;YAEjC8tF,gBAAgB,GAAG,KAAK;UAEzB,CAAC,MAAM,IAAKntE,OAAO,CAAC7tB,IAAI,KAAKiN,eAAe,EAAG;YAE9C+tF,gBAAgB,GAAG,KAAK;UAEzB,CAAC,MAAM,IAAKntE,OAAO,CAAC7tB,IAAI,KAAKsN,kBAAkB,EAAG;YAEjD0tF,gBAAgB,GAAG,KAAK;UAEzB,CAAC,MAAM;YAENA,gBAAgB,GAAG,KAAK,CAAC,CAAC;UAE3B;QAED,CAAC,MAAM;UAEN,IAAKntE,OAAO,CAAC7tB,IAAI,KAAKkN,SAAS,EAAG;YAEjCyL,OAAO,CAACjX,KAAK,CAAE,8DAA8D,CAAE;UAEhF;QAED;;QAEA;;QAEA,IAAKmsB,OAAO,CAACpE,MAAM,KAAK7b,WAAW,IAAIotF,gBAAgB,KAAK,IAAI,EAAG;UAElE;UACA;UACA;UACA,IAAKntE,OAAO,CAAC7tB,IAAI,KAAK+M,iBAAiB,IAAI8gB,OAAO,CAAC7tB,IAAI,KAAKiN,eAAe,EAAG;YAE7E0L,OAAO,CAACC,IAAI,CAAE,6FAA6F,CAAE;YAE7GiV,OAAO,CAAC7tB,IAAI,GAAGiN,eAAe;YAC9BkrF,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAAC7tB,IAAI,CAAE;UAEvC;QAED;QAEA,IAAK6tB,OAAO,CAACpE,MAAM,KAAK5b,kBAAkB,IAAImtF,gBAAgB,KAAK,IAAI,EAAG;UAEzE;UACA;UACAA,gBAAgB,GAAG,KAAK;;UAExB;UACA;UACA;UACA,IAAKntE,OAAO,CAAC7tB,IAAI,KAAKsN,kBAAkB,EAAG;YAE1CqL,OAAO,CAACC,IAAI,CAAE,kFAAkF,CAAE;YAElGiV,OAAO,CAAC7tB,IAAI,GAAGsN,kBAAkB;YACjC6qF,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAAC7tB,IAAI,CAAE;UAEvC;QAED;;QAEA;;QAEA,IAAKm7F,cAAc,EAAG;UAErB,IAAKD,aAAa,EAAG;YAEpBr5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAE,CAAC,EAAEgF,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;UAE3E,CAAC,MAAM;YAENtlB,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE,CAAC,EAAEkH,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;UAEpG;QAED;MAED,CAAC,MAAM,IAAKtqE,OAAO,CAACpF,aAAa,EAAG;QAEnC;QACA;QACA;;QAEA,IAAKsB,OAAO,CAAChmB,MAAM,GAAG,CAAC,IAAI+zF,YAAY,EAAG;UAEzC,IAAKoD,aAAa,IAAIC,cAAc,EAAG;YAEtCt5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEjxE,OAAO,CAAE,CAAC,CAAE,CAAC7C,KAAK,EAAE6C,OAAO,CAAE,CAAC,CAAE,CAAC5C,MAAM,CAAE;UAE9F;UAEA,KAAM,IAAInjB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGhG,OAAO,CAAChmB,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAEpDi3F,MAAM,GAAGlxE,OAAO,CAAE/lB,CAAC,CAAE;YAErB,IAAKk3F,aAAa,EAAG;cAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,IAAI,EAAE7xF,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEi3F,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAACnzE,IAAI,CAAE;YAEjG,CAAC,MAAM;cAENjmB,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE9vF,CAAC,EAAEg3F,gBAAgB,EAAEC,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAACnzE,IAAI,CAAE;YAE7G;UAED;UAEA+F,OAAO,CAAC1D,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UAEN,IAAK+wE,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErBt5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;YAEhF;YAEAtlB,KAAK,CAACg0F,aAAa,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEhvE,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;UAE9F,CAAC,MAAM;YAENjmB,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE,CAAC,EAAEkH,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;UAE1G;QAED;MAED,CAAC,MAAM,IAAK+F,OAAO,CAACyqE,mBAAmB,EAAG;QAEzC,IAAK4C,aAAa,IAAIC,cAAc,EAAG;UAEtCt5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEjxE,OAAO,CAAE,CAAC,CAAE,CAAC7C,KAAK,EAAE6C,OAAO,CAAE,CAAC,CAAE,CAAC5C,MAAM,CAAE;QAE9F;QAEA,KAAM,IAAInjB,IAAC,GAAG,CAAC,EAAE+rB,IAAE,GAAGhG,OAAO,CAAChmB,MAAM,EAAEC,IAAC,GAAG+rB,IAAE,EAAE/rB,IAAC,EAAG,EAAG;UAEpDi3F,MAAM,GAAGlxE,OAAO,CAAE/lB,IAAC,CAAE;UAErB,IAAK6pB,OAAO,CAACpE,MAAM,KAAKhc,UAAU,EAAG;YAEpC,IAAKyqF,QAAQ,KAAK,IAAI,EAAG;cAExB,IAAKgD,aAAa,EAAG;gBAEpBr5F,KAAK,CAACk0F,uBAAuB,CAAE,IAAI,EAAE/xF,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEi3F,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE+wE,QAAQ,EAAE+C,MAAM,CAACnzE,IAAI,CAAE;cAEnG,CAAC,MAAM;gBAENjmB,KAAK,CAAC8zF,oBAAoB,CAAE,IAAI,EAAE3xF,IAAC,EAAEg3F,gBAAgB,EAAEC,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE,CAAC,EAAE8zE,MAAM,CAACnzE,IAAI,CAAE;cAErG;YAED,CAAC,MAAM;cAENnP,OAAO,CAACC,IAAI,CAAE,gGAAgG,CAAE;YAEjH;UAED,CAAC,MAAM;YAEN,IAAKsiF,aAAa,EAAG;cAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,IAAI,EAAE7xF,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEi3F,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAACnzE,IAAI,CAAE;YAEjG,CAAC,MAAM;cAENjmB,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE9vF,IAAC,EAAEg3F,gBAAgB,EAAEC,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAACnzE,IAAI,CAAE;YAE7G;UAED;QAED;MAED,CAAC,MAAM,IAAK+F,OAAO,CAACW,kBAAkB,EAAG;QAExC,IAAK0sE,aAAa,EAAG;UAEpB,IAAKC,cAAc,EAAG;YAErBt5F,KAAK,CAACo0F,YAAY,CAAE,KAAK,EAAEmF,MAAM,EAAEJ,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAAC4G,KAAK,CAAE;UAE9F;UAEA5rB,KAAK,CAACi0F,aAAa,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEjvE,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAAC4G,KAAK,EAAEyqE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;QAE/G,CAAC,MAAM;UAENjmB,KAAK,CAACq0F,UAAU,CAAE,KAAK,EAAE,CAAC,EAAE8E,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAAC4G,KAAK,EAAE,CAAC,EAAEyqE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;QAExH;MAED,CAAC,MAAM,IAAK+F,OAAO,CAACsB,eAAe,EAAG;QAErC,IAAK+rE,aAAa,EAAG;UAEpB,IAAKC,cAAc,EAAG;YAErBt5F,KAAK,CAACo0F,YAAY,CAAE,KAAK,EAAEmF,MAAM,EAAEJ,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAAC4G,KAAK,CAAE;UAE9F;UAEA5rB,KAAK,CAACi0F,aAAa,CAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEjvE,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAAC4G,KAAK,EAAEyqE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;QAE/G,CAAC,MAAM;UAENjmB,KAAK,CAACq0F,UAAU,CAAE,KAAK,EAAE,CAAC,EAAE8E,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,EAAEN,KAAK,CAAC4G,KAAK,EAAE,CAAC,EAAEyqE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;QAExH;MAED,CAAC,MAAM,IAAK+F,OAAO,CAACwqE,oBAAoB,EAAG;QAE1C,IAAK8C,cAAc,EAAG;UAErB,IAAKD,aAAa,EAAG;YAEpBr5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;UAEhF,CAAC,MAAM;YAEN,IAAID,KAAK,GAAGL,KAAK,CAACK,KAAK;cAAEC,MAAM,GAAGN,KAAK,CAACM,MAAM;YAE9C,KAAM,IAAInjB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGo3F,MAAM,EAAEp3F,IAAC,EAAG,EAAG;cAEnCnC,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE9vF,IAAC,EAAEg3F,gBAAgB,EAAE9zE,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;cAEvFjxE,KAAK,KAAK,CAAC;cACXC,MAAM,KAAK,CAAC;YAEb;UAED;QAED;MAED,CAAC,MAAM;QAEN;;QAEA;QACA;QACA;;QAEA,IAAK4C,OAAO,CAAChmB,MAAM,GAAG,CAAC,IAAI+zF,YAAY,EAAG;UAEzC,IAAKoD,aAAa,IAAIC,cAAc,EAAG;YAEtCt5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEjxE,OAAO,CAAE,CAAC,CAAE,CAAC7C,KAAK,EAAE6C,OAAO,CAAE,CAAC,CAAE,CAAC5C,MAAM,CAAE;UAE9F;UAEA,KAAM,IAAInjB,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAGhG,OAAO,CAAChmB,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;YAEpDi3F,MAAM,GAAGlxE,OAAO,CAAE/lB,IAAC,CAAE;YAErB,IAAKk3F,aAAa,EAAG;cAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,IAAI,EAAE7xF,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEk0F,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAAE;YAE/D,CAAC,MAAM;cAENp5F,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE9vF,IAAC,EAAEg3F,gBAAgB,EAAE9C,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAAE;YAExE;UAED;UAEAptE,OAAO,CAAC1D,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UAEN,IAAK+wE,aAAa,EAAG;YAEpB,IAAKC,cAAc,EAAG;cAErBt5F,KAAK,CAACm0F,YAAY,CAAE,IAAI,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;YAEhF;YAEAtlB,KAAK,CAACg0F,aAAa,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEqC,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAAE;UAE9D,CAAC,MAAM;YAENhlB,KAAK,CAACiyF,UAAU,CAAE,IAAI,EAAE,CAAC,EAAEkH,gBAAgB,EAAE9C,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAAE;UAEvE;QAED;MAED;MAEA,IAAKgxE,2BAA2B,CAAEhqE,OAAO,EAAEiqE,YAAY,CAAE,EAAG;QAE3DC,cAAc,CAAEuC,WAAW,CAAE;MAE9B;MAEAx2E,MAAM,CAAC+2E,gBAAgB,GAAG/2E,MAAM,CAACmE,OAAO;MAExC,IAAK4F,OAAO,CAACrD,QAAQ,EAAGqD,OAAO,CAACrD,QAAQ,CAAEqD,OAAO,CAAE;IAEpD;IAEA8qE,iBAAiB,CAACqB,SAAS,GAAGnsE,OAAO,CAAC5F,OAAO;EAE9C;EAEA,SAASiyE,iBAAiBA,CAAEvB,iBAAiB,EAAE9qE,OAAO,EAAEisE,IAAI,EAAG;IAE9D,IAAKjsE,OAAO,CAAChH,KAAK,CAAC9iB,MAAM,KAAK,CAAC,EAAG;IAElC,IAAM42F,WAAW,GAAGD,WAAW,CAAE/B,iBAAiB,EAAE9qE,OAAO,CAAE;IAC7D,IAAM/J,MAAM,GAAG+J,OAAO,CAAC/J,MAAM;IAE7BjiB,KAAK,CAACwzF,aAAa,CAAE,KAAK,GAAGyE,IAAI,CAAE;IACnCj4F,KAAK,CAAC+xF,WAAW,CAAE,KAAK,EAAE+E,iBAAiB,CAACK,cAAc,CAAE;IAE5D,IAAKl1E,MAAM,CAACmE,OAAO,KAAKnE,MAAM,CAAC+2E,gBAAgB,IAAIF,WAAW,KAAK,IAAI,EAAG;MAEzEjE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEjtE,OAAO,CAACxD,KAAK,CAAE;MACvCqsE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEjtE,OAAO,CAACzD,gBAAgB,CAAE;MAClDssE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEjtE,OAAO,CAACvD,eAAe,CAAE;MAChDosE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAE,CAAC,CAAE;MAE3B,IAAMQ,YAAY,GAAKztE,OAAO,CAACyqE,mBAAmB,IAAIzqE,OAAO,CAAChH,KAAK,CAAE,CAAC,CAAE,CAACyxE,mBAAqB;MAC9F,IAAM7vE,aAAa,GAAKoF,OAAO,CAAChH,KAAK,CAAE,CAAC,CAAE,IAAIgH,OAAO,CAAChH,KAAK,CAAE,CAAC,CAAE,CAAC4B,aAAe;MAEhF,IAAM8yE,SAAS,GAAG,EAAE;MAEpB,KAAM,IAAIv3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK,CAAEs3F,YAAY,IAAI,CAAE7yE,aAAa,EAAG;UAExC8yE,SAAS,CAAEv3F,CAAC,CAAE,GAAGuzF,WAAW,CAAE1pE,OAAO,CAAChH,KAAK,CAAE7iB,CAAC,CAAE,EAAE,KAAK,EAAE,IAAI,EAAE8iE,cAAc,CAAE;QAEhF,CAAC,MAAM;UAENy0B,SAAS,CAAEv3F,CAAC,CAAE,GAAGykB,aAAa,GAAGoF,OAAO,CAAChH,KAAK,CAAE7iB,CAAC,CAAE,CAAC6iB,KAAK,GAAGgH,OAAO,CAAChH,KAAK,CAAE7iB,CAAC,CAAE;QAE/E;QAEAu3F,SAAS,CAAEv3F,CAAC,CAAE,GAAG+2F,gBAAgB,CAAEltE,OAAO,EAAE0tE,SAAS,CAAEv3F,CAAC,CAAE,CAAE;MAE7D;MAEA,IAAM6iB,KAAK,GAAG00E,SAAS,CAAE,CAAC,CAAE;QAC3BzD,YAAY,GAAGH,cAAc,CAAE9wE,KAAK,CAAE,IAAIwoC,QAAQ;QAClD6oC,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAACpE,MAAM,EAAEoE,OAAO,CAAClE,QAAQ,CAAE;QAC5DwuE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAAC7tB,IAAI,CAAE;QACtCg7F,gBAAgB,GAAGhD,iBAAiB,CAAEnqE,OAAO,CAAC7D,cAAc,EAAEkuE,QAAQ,EAAEC,MAAM,EAAEtqE,OAAO,CAAClE,QAAQ,CAAE;MAEnG,IAAMuxE,aAAa,GAAK7rC,QAAQ,IAAIxhC,OAAO,CAACk4D,cAAc,KAAK,IAAM;MACrE,IAAMoV,cAAc,GAAKr3E,MAAM,CAAC+2E,gBAAgB,KAAKp4F,SAAS,IAAQk4F,WAAW,KAAK,IAAM;MAC5F,IAAIS,MAAM,GAAGhD,YAAY,CAAEvqE,OAAO,EAAEhH,KAAK,EAAEixE,YAAY,CAAE;MAEzDuC,oBAAoB,CAAE,KAAK,EAAExsE,OAAO,EAAEiqE,YAAY,CAAE;MAEpD,IAAI/tE,OAAO;MAEX,IAAKuxE,YAAY,EAAG;QAEnB,IAAKJ,aAAa,IAAIC,cAAc,EAAG;UAEtCt5F,KAAK,CAACm0F,YAAY,CAAE,KAAK,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEn0E,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,MAAM,CAAE;QAEjF;QAEA,KAAM,IAAInjB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B+lB,OAAO,GAAGwxE,SAAS,CAAEv3F,IAAC,CAAE,CAAC+lB,OAAO;UAEhC,KAAM,IAAI0S,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1S,OAAO,CAAChmB,MAAM,EAAE04B,CAAC,EAAG,EAAG;YAE3C,IAAMw+D,MAAM,GAAGlxE,OAAO,CAAE0S,CAAC,CAAE;YAE3B,IAAK5O,OAAO,CAACpE,MAAM,KAAKhc,UAAU,EAAG;cAEpC,IAAKyqF,QAAQ,KAAK,IAAI,EAAG;gBAExB,IAAKgD,aAAa,EAAG;kBAEpBr5F,KAAK,CAACk0F,uBAAuB,CAAE,KAAK,GAAG/xF,IAAC,EAAEy4B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEw+D,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE+wE,QAAQ,EAAE+C,MAAM,CAACnzE,IAAI,CAAE;gBAExG,CAAC,MAAM;kBAENjmB,KAAK,CAAC8zF,oBAAoB,CAAE,KAAK,GAAG3xF,IAAC,EAAEy4B,CAAC,EAAEu+D,gBAAgB,EAAEC,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE,CAAC,EAAE8zE,MAAM,CAACnzE,IAAI,CAAE;gBAE1G;cAED,CAAC,MAAM;gBAENnP,OAAO,CAACC,IAAI,CAAE,iGAAiG,CAAE;cAElH;YAED,CAAC,MAAM;cAEN,IAAKsiF,aAAa,EAAG;gBAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,KAAK,GAAG7xF,IAAC,EAAEy4B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEw+D,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAACnzE,IAAI,CAAE;cAEtG,CAAC,MAAM;gBAENjmB,KAAK,CAACiyF,UAAU,CAAE,KAAK,GAAG9vF,IAAC,EAAEy4B,CAAC,EAAEu+D,gBAAgB,EAAEC,MAAM,CAAC/zE,KAAK,EAAE+zE,MAAM,CAAC9zE,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE8C,MAAM,CAACnzE,IAAI,CAAE;cAElH;YAED;UAED;QAED;MAED,CAAC,MAAM;QAENiC,OAAO,GAAG8D,OAAO,CAAC9D,OAAO;QAEzB,IAAKmxE,aAAa,IAAIC,cAAc,EAAG;UAEtC;UACA;UACA;;UAEA,IAAKpxE,OAAO,CAAChmB,MAAM,GAAG,CAAC,EAAGq3F,MAAM,EAAG;UAEnCv5F,KAAK,CAACm0F,YAAY,CAAE,KAAK,EAAEoF,MAAM,EAAEJ,gBAAgB,EAAEO,SAAS,CAAE,CAAC,CAAE,CAACr0E,KAAK,EAAEq0E,SAAS,CAAE,CAAC,CAAE,CAACp0E,MAAM,CAAE;QAEnG;QAEA,KAAM,IAAInjB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;UAE9B,IAAKykB,aAAa,EAAG;YAEpB,IAAKyyE,aAAa,EAAG;cAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,KAAK,GAAG7xF,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEu3F,SAAS,CAAEv3F,IAAC,CAAE,CAACkjB,KAAK,EAAEq0E,SAAS,CAAEv3F,IAAC,CAAE,CAACmjB,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAEoD,SAAS,CAAEv3F,IAAC,CAAE,CAAC8jB,IAAI,CAAE;YAE9H,CAAC,MAAM;cAENjmB,KAAK,CAACiyF,UAAU,CAAE,KAAK,GAAG9vF,IAAC,EAAE,CAAC,EAAEg3F,gBAAgB,EAAEO,SAAS,CAAEv3F,IAAC,CAAE,CAACkjB,KAAK,EAAEq0E,SAAS,CAAEv3F,IAAC,CAAE,CAACmjB,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAEoD,SAAS,CAAEv3F,IAAC,CAAE,CAAC8jB,IAAI,CAAE;YAE1I;YAEA,KAAM,IAAI2U,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG1S,OAAO,CAAChmB,MAAM,EAAE04B,GAAC,EAAG,EAAG;cAE3C,IAAMw+D,OAAM,GAAGlxE,OAAO,CAAE0S,GAAC,CAAE;cAC3B,IAAM++D,WAAW,GAAGP,OAAM,CAACp0E,KAAK,CAAE7iB,IAAC,CAAE,CAAC6iB,KAAK;cAE3C,IAAKq0E,aAAa,EAAG;gBAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,KAAK,GAAG7xF,IAAC,EAAEy4B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE++D,WAAW,CAACt0E,KAAK,EAAEs0E,WAAW,CAACr0E,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAEqD,WAAW,CAAC1zE,IAAI,CAAE;cAEzH,CAAC,MAAM;gBAENjmB,KAAK,CAACiyF,UAAU,CAAE,KAAK,GAAG9vF,IAAC,EAAEy4B,GAAC,GAAG,CAAC,EAAEu+D,gBAAgB,EAAEQ,WAAW,CAACt0E,KAAK,EAAEs0E,WAAW,CAACr0E,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAEqD,WAAW,CAAC1zE,IAAI,CAAE;cAErI;YAED;UAED,CAAC,MAAM;YAEN,IAAKozE,aAAa,EAAG;cAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,KAAK,GAAG7xF,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEk0F,QAAQ,EAAEC,MAAM,EAAEoD,SAAS,CAAEv3F,IAAC,CAAE,CAAE;YAE5E,CAAC,MAAM;cAENnC,KAAK,CAACiyF,UAAU,CAAE,KAAK,GAAG9vF,IAAC,EAAE,CAAC,EAAEg3F,gBAAgB,EAAE9C,QAAQ,EAAEC,MAAM,EAAEoD,SAAS,CAAEv3F,IAAC,CAAE,CAAE;YAErF;YAEA,KAAM,IAAIy4B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG1S,OAAO,CAAChmB,MAAM,EAAE04B,GAAC,EAAG,EAAG;cAE3C,IAAMw+D,QAAM,GAAGlxE,OAAO,CAAE0S,GAAC,CAAE;cAE3B,IAAKy+D,aAAa,EAAG;gBAEpBr5F,KAAK,CAACg0F,aAAa,CAAE,KAAK,GAAG7xF,IAAC,EAAEy4B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEy7D,QAAQ,EAAEC,MAAM,EAAE8C,QAAM,CAACp0E,KAAK,CAAE7iB,IAAC,CAAE,CAAE;cAEnF,CAAC,MAAM;gBAENnC,KAAK,CAACiyF,UAAU,CAAE,KAAK,GAAG9vF,IAAC,EAAEy4B,GAAC,GAAG,CAAC,EAAEu+D,gBAAgB,EAAE9C,QAAQ,EAAEC,MAAM,EAAE8C,QAAM,CAACp0E,KAAK,CAAE7iB,IAAC,CAAE,CAAE;cAE5F;YAED;UAED;QAED;MAED;MAEA,IAAK6zF,2BAA2B,CAAEhqE,OAAO,EAAEiqE,YAAY,CAAE,EAAG;QAE3D;QACAC,cAAc,CAAE,KAAK,CAAE;MAExB;MAEAj0E,MAAM,CAAC+2E,gBAAgB,GAAG/2E,MAAM,CAACmE,OAAO;MAExC,IAAK4F,OAAO,CAACrD,QAAQ,EAAGqD,OAAO,CAACrD,QAAQ,CAAEqD,OAAO,CAAE;IAEpD;IAEA8qE,iBAAiB,CAACqB,SAAS,GAAGnsE,OAAO,CAAC5F,OAAO;EAE9C;;EAEA;;EAEA;EACA,SAASwzE,uBAAuBA,CAAEtH,WAAW,EAAE/qC,YAAY,EAAEv7B,OAAO,EAAE6tE,UAAU,EAAEC,aAAa,EAAG;IAEjG,IAAMzD,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAACpE,MAAM,EAAEoE,OAAO,CAAClE,QAAQ,CAAE;IAClE,IAAMwuE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAAC7tB,IAAI,CAAE;IAC5C,IAAMg7F,gBAAgB,GAAGhD,iBAAiB,CAAEnqE,OAAO,CAAC7D,cAAc,EAAEkuE,QAAQ,EAAEC,MAAM,EAAEtqE,OAAO,CAAClE,QAAQ,CAAE;IACxG,IAAMsvE,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAE7D,IAAK,CAAE6vC,sBAAsB,CAAC2C,qBAAqB,EAAG;MAErD,IAAKD,aAAa,KAAK,KAAK,IAAIA,aAAa,KAAK,KAAK,EAAG;QAEzD95F,KAAK,CAACq0F,UAAU,CAAEyF,aAAa,EAAE,CAAC,EAAEX,gBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,EAAEiiC,YAAY,CAAC37B,KAAK,EAAE,CAAC,EAAEyqE,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;MAE/I,CAAC,MAAM;QAENt2F,KAAK,CAACiyF,UAAU,CAAE6H,aAAa,EAAE,CAAC,EAAEX,gBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,EAAE,CAAC,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE,IAAI,CAAE;MAE3H;IAED;IAEAt2F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAEC,WAAW,CAAE;IAE3C,IAAK0H,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;MAEzC0tC,kBAAkB,CAACgF,kCAAkC,CAAE,KAAK,EAAEJ,UAAU,EAAEC,aAAa,EAAE3+B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE,CAACmrE,cAAc,EAAE,CAAC,EAAE+C,sBAAsB,CAAE3yC,YAAY,CAAE,CAAE;IAE/K,CAAC,MAAM;MAENstC,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAEN,UAAU,EAAEC,aAAa,EAAE3+B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE,CAACmrE,cAAc,EAAE,CAAC,CAAE;IAE1G;IAEAn3F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;EAErC;;EAGA;EACA,SAAS+H,wBAAwBA,CAAEC,YAAY,EAAE9yC,YAAY,EAAE+yC,aAAa,EAAG;IAE9EzF,GAAG,CAAC0F,gBAAgB,CAAE,KAAK,EAAEF,YAAY,CAAE;IAE3C,IAAK9yC,YAAY,CAACt7B,WAAW,IAAI,CAAEs7B,YAAY,CAACr7B,aAAa,EAAG;MAE/D,IAAIitE,gBAAgB,GAAG,KAAK;MAE5B,IAAKmB,aAAa,IAAIN,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;QAE1D,IAAMp7B,YAAY,GAAGo7B,YAAY,CAACp7B,YAAY;QAE9C,IAAKA,YAAY,IAAIA,YAAY,CAACqtE,cAAc,EAAG;UAElD,IAAKrtE,YAAY,CAAChuB,IAAI,KAAKkN,SAAS,EAAG;YAEtC8tF,gBAAgB,GAAG,KAAK;UAEzB,CAAC,MAAM,IAAKhtE,YAAY,CAAChuB,IAAI,KAAKiN,eAAe,EAAG;YAEnD+tF,gBAAgB,GAAG,KAAK;UAEzB;QAED;QAEA,IAAM/sE,OAAO,GAAG8tE,sBAAsB,CAAE3yC,YAAY,CAAE;QAEtD,IAAKyyC,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;UAEzC0tC,kBAAkB,CAACuF,iCAAiC,CAAE,KAAK,EAAEpuE,OAAO,EAAE+sE,gBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;QAElI,CAAC,MAAM;UAENuvE,GAAG,CAAC4F,8BAA8B,CAAE,KAAK,EAAEruE,OAAO,EAAE+sE,gBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;QAEhH;MAED,CAAC,MAAM;QAENuvE,GAAG,CAAC6F,mBAAmB,CAAE,KAAK,EAAEvB,gBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;MAE5F;MAEAuvE,GAAG,CAAC8F,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAEN,YAAY,CAAE;IAEjE,CAAC,MAAM,IAAK9yC,YAAY,CAACt7B,WAAW,IAAIs7B,YAAY,CAACr7B,aAAa,EAAG;MAEpE,IAAME,QAAO,GAAG8tE,sBAAsB,CAAE3yC,YAAY,CAAE;MAEtD,IAAK+yC,aAAa,IAAIN,kBAAkB,CAAEzyC,YAAY,CAAE,KAAK,KAAK,EAAG;QAEpEstC,GAAG,CAAC4F,8BAA8B,CAAE,KAAK,EAAEruE,QAAO,EAAE,KAAK,EAAEm7B,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;MAErG,CAAC,MAAM,IAAK00E,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;QAEhD0tC,kBAAkB,CAACuF,iCAAiC,CAAE,KAAK,EAAEpuE,QAAO,EAAE,KAAK,EAAEm7B,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;MAEvH,CAAC,MAAM;QAENuvE,GAAG,CAAC6F,mBAAmB,CAAE,KAAK,EAAE,KAAK,EAAEnzC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;MAEjF;MAGAuvE,GAAG,CAAC8F,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAEN,YAAY,CAAE;IAEjE,CAAC,MAAM;MAEN,IAAMlxE,QAAQ,GAAGo+B,YAAY,CAACt5B,4BAA4B,KAAK,IAAI,GAAGs5B,YAAY,CAACv7B,OAAO,GAAG,CAAEu7B,YAAY,CAACv7B,OAAO,CAAE;MAErH,KAAM,IAAI7pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgnB,QAAQ,CAACjnB,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE5C,IAAM6pB,OAAO,GAAG7C,QAAQ,CAAEhnB,CAAC,CAAE;QAE7B,IAAMk0F,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAACpE,MAAM,EAAEoE,OAAO,CAAClE,QAAQ,CAAE;QAClE,IAAMwuE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,OAAO,CAAC7tB,IAAI,CAAE;QAC5C,IAAMg7F,iBAAgB,GAAGhD,iBAAiB,CAAEnqE,OAAO,CAAC7D,cAAc,EAAEkuE,QAAQ,EAAEC,MAAM,EAAEtqE,OAAO,CAAClE,QAAQ,CAAE;QACxG,IAAMsE,SAAO,GAAG8tE,sBAAsB,CAAE3yC,YAAY,CAAE;QAEtD,IAAK+yC,aAAa,IAAIN,kBAAkB,CAAEzyC,YAAY,CAAE,KAAK,KAAK,EAAG;UAEpEstC,GAAG,CAAC4F,8BAA8B,CAAE,KAAK,EAAEruE,SAAO,EAAE+sE,iBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;QAEhH,CAAC,MAAM,IAAK00E,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;UAEhD0tC,kBAAkB,CAACuF,iCAAiC,CAAE,KAAK,EAAEpuE,SAAO,EAAE+sE,iBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;QAElI,CAAC,MAAM;UAENuvE,GAAG,CAAC6F,mBAAmB,CAAE,KAAK,EAAEvB,iBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;QAE5F;MAED;IAED;IAEAuvE,GAAG,CAAC0F,gBAAgB,CAAE,KAAK,EAAE,IAAI,CAAE;EAEpC;;EAEA;EACA,SAASK,iBAAiBA,CAAEtI,WAAW,EAAE/qC,YAAY,EAAG;IAEvD,IAAMszC,MAAM,GAAKtzC,YAAY,IAAIA,YAAY,CAACE,uBAAyB;IACvE,IAAKozC,MAAM,EAAG,MAAM,IAAI56F,KAAK,CAAE,yDAAyD,CAAE;IAE1FD,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAEC,WAAW,CAAE;IAE3C,IAAK,EAAI/qC,YAAY,CAACp7B,YAAY,IAAIo7B,YAAY,CAACp7B,YAAY,CAACqtE,cAAc,CAAE,EAAG;MAElF,MAAM,IAAIv5F,KAAK,CAAE,qEAAqE,CAAE;IAEzF;;IAEA;IACA,IAAK,CAAEk7D,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACp7B,YAAY,CAAE,CAACgrE,cAAc,IAC/D5vC,YAAY,CAACp7B,YAAY,CAACnH,KAAK,CAACK,KAAK,KAAKkiC,YAAY,CAACliC,KAAK,IAC5DkiC,YAAY,CAACp7B,YAAY,CAACnH,KAAK,CAACM,MAAM,KAAKiiC,YAAY,CAACjiC,MAAM,EAAG;MAElEiiC,YAAY,CAACp7B,YAAY,CAACnH,KAAK,CAACK,KAAK,GAAGkiC,YAAY,CAACliC,KAAK;MAC1DkiC,YAAY,CAACp7B,YAAY,CAACnH,KAAK,CAACM,MAAM,GAAGiiC,YAAY,CAACjiC,MAAM;MAC5DiiC,YAAY,CAACp7B,YAAY,CAACjD,WAAW,GAAG,IAAI;IAE7C;IAEA4rD,YAAY,CAAEvtB,YAAY,CAACp7B,YAAY,EAAE,CAAC,CAAE;IAE5C,IAAM2uE,iBAAiB,GAAG3/B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACp7B,YAAY,CAAE,CAACgrE,cAAc;IACpF,IAAM/qE,OAAO,GAAG8tE,sBAAsB,CAAE3yC,YAAY,CAAE;IAEtD,IAAKA,YAAY,CAACp7B,YAAY,CAACvE,MAAM,KAAK7b,WAAW,EAAG;MAEvD,IAAKiuF,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;QAEzC0tC,kBAAkB,CAACgF,kCAAkC,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAEa,iBAAiB,EAAE,CAAC,EAAE1uE,OAAO,CAAE;MAE3G,CAAC,MAAM;QAENyoE,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAEW,iBAAiB,EAAE,CAAC,CAAE;MAErE;IAED,CAAC,MAAM,IAAKvzC,YAAY,CAACp7B,YAAY,CAACvE,MAAM,KAAK5b,kBAAkB,EAAG;MAErE,IAAKguF,kBAAkB,CAAEzyC,YAAY,CAAE,EAAG;QAEzC0tC,kBAAkB,CAACgF,kCAAkC,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAEa,iBAAiB,EAAE,CAAC,EAAE1uE,OAAO,CAAE;MAE3G,CAAC,MAAM;QAENyoE,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAEW,iBAAiB,EAAE,CAAC,CAAE;MAErE;IAED,CAAC,MAAM;MAEN,MAAM,IAAI76F,KAAK,CAAE,6BAA6B,CAAE;IAEjD;EAED;;EAEA;EACA,SAAS86F,sBAAsBA,CAAExzC,YAAY,EAAG;IAE/C,IAAM6vC,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAC7D,IAAMszC,MAAM,GAAKtzC,YAAY,CAACE,uBAAuB,KAAK,IAAM;IAEhE,IAAKF,YAAY,CAACp7B,YAAY,IAAI,CAAEirE,sBAAsB,CAAC4D,yBAAyB,EAAG;MAEtF,IAAKH,MAAM,EAAG,MAAM,IAAI56F,KAAK,CAAE,0DAA0D,CAAE;MAE3F26F,iBAAiB,CAAExD,sBAAsB,CAACE,kBAAkB,EAAE/vC,YAAY,CAAE;IAE7E,CAAC,MAAM;MAEN,IAAKszC,MAAM,EAAG;QAEbzD,sBAAsB,CAACG,kBAAkB,GAAG,EAAE;QAE9C,KAAM,IAAIp1F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9BnC,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACE,kBAAkB,CAAEn1F,CAAC,CAAE,CAAE;UAC9Ei1F,sBAAsB,CAACG,kBAAkB,CAAEp1F,CAAC,CAAE,GAAG0yF,GAAG,CAACoG,kBAAkB,EAAE;UACzEb,wBAAwB,CAAEhD,sBAAsB,CAACG,kBAAkB,CAAEp1F,CAAC,CAAE,EAAEolD,YAAY,EAAE,KAAK,CAAE;QAEhG;MAED,CAAC,MAAM;QAENvnD,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACE,kBAAkB,CAAE;QACzEF,sBAAsB,CAACG,kBAAkB,GAAG1C,GAAG,CAACoG,kBAAkB,EAAE;QACpEb,wBAAwB,CAAEhD,sBAAsB,CAACG,kBAAkB,EAAEhwC,YAAY,EAAE,KAAK,CAAE;MAE3F;IAED;IAEAvnD,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;EAErC;;EAEA;EACA,SAAS6I,cAAcA,CAAE3zC,YAAY,EAAE4zC,YAAY,EAAEhvE,YAAY,EAAG;IAEnE,IAAMirE,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAE7D,IAAK4zC,YAAY,KAAKv6F,SAAS,EAAG;MAEjCg5F,uBAAuB,CAAExC,sBAAsB,CAACE,kBAAkB,EAAE/vC,YAAY,EAAEA,YAAY,CAACv7B,OAAO,EAAE,KAAK,EAAE,IAAI,CAAE;IAEtH;IAEA,IAAKG,YAAY,KAAKvrB,SAAS,EAAG;MAEjCm6F,sBAAsB,CAAExzC,YAAY,CAAE;IAEvC;EAED;;EAEA;EACA,SAAS6zC,iBAAiBA,CAAE7zC,YAAY,EAAG;IAE1C,IAAMv7B,OAAO,GAAGu7B,YAAY,CAACv7B,OAAO;IAEpC,IAAMorE,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAC7D,IAAMuvC,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE;IAEnDu7B,YAAY,CAACn2C,gBAAgB,CAAE,SAAS,EAAEwlF,qBAAqB,CAAE;IAEjE,IAAKrvC,YAAY,CAACt5B,4BAA4B,KAAK,IAAI,EAAG;MAEzD,IAAK6oE,iBAAiB,CAACK,cAAc,KAAKv2F,SAAS,EAAG;QAErDk2F,iBAAiB,CAACK,cAAc,GAAGtC,GAAG,CAAC/C,aAAa,EAAE;MAEvD;MAEAgF,iBAAiB,CAACqB,SAAS,GAAGnsE,OAAO,CAAC5F,OAAO;MAC7CrlB,IAAI,CAAC0tE,MAAM,CAACtlD,QAAQ,EAAG;IAExB;IAEA,IAAM0xE,MAAM,GAAKtzC,YAAY,CAACE,uBAAuB,KAAK,IAAM;IAChE,IAAM4zC,uBAAuB,GAAK9zC,YAAY,CAACt5B,4BAA4B,KAAK,IAAM;IACtF,IAAMgoE,YAAY,GAAGH,cAAc,CAAEvuC,YAAY,CAAE,IAAIiG,QAAQ;;IAE/D;;IAEA,IAAKqtC,MAAM,EAAG;MAEbzD,sBAAsB,CAACE,kBAAkB,GAAG,EAAE;MAE9C,KAAM,IAAIn1F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9Bi1F,sBAAsB,CAACE,kBAAkB,CAAEn1F,CAAC,CAAE,GAAG0yF,GAAG,CAACyG,iBAAiB,EAAE;MAEzE;IAED,CAAC,MAAM;MAENlE,sBAAsB,CAACE,kBAAkB,GAAGzC,GAAG,CAACyG,iBAAiB,EAAE;MAEnE,IAAKD,uBAAuB,EAAG;QAE9B,IAAK9tC,YAAY,CAAC5I,WAAW,EAAG;UAE/B,IAAMx7B,QAAQ,GAAGo+B,YAAY,CAACv7B,OAAO;UAErC,KAAM,IAAI7pB,IAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG/E,QAAQ,CAACjnB,MAAM,EAAEC,IAAC,GAAG+rB,EAAE,EAAE/rB,IAAC,EAAG,EAAG;YAErD,IAAMy1F,oBAAoB,GAAGz8B,UAAU,CAACrjD,GAAG,CAAEqR,QAAQ,CAAEhnB,IAAC,CAAE,CAAE;YAE5D,IAAKy1F,oBAAoB,CAACT,cAAc,KAAKv2F,SAAS,EAAG;cAExDg3F,oBAAoB,CAACT,cAAc,GAAGtC,GAAG,CAAC/C,aAAa,EAAE;cAEzD/wF,IAAI,CAAC0tE,MAAM,CAACtlD,QAAQ,EAAG;YAExB;UAED;QAED,CAAC,MAAM;UAENrS,OAAO,CAACC,IAAI,CAAE,+GAA+G,CAAE;QAEhI;MAED;MAEA,IAAOy2C,QAAQ,IAAIjG,YAAY,CAACn7B,OAAO,GAAG,CAAC,IAAM4tE,kBAAkB,CAAEzyC,YAAY,CAAE,KAAK,KAAK,EAAG;QAE/F,IAAMp+B,SAAQ,GAAGkyE,uBAAuB,GAAGrvE,OAAO,GAAG,CAAEA,OAAO,CAAE;QAEhEorE,sBAAsB,CAACK,8BAA8B,GAAG5C,GAAG,CAACyG,iBAAiB,EAAE;QAC/ElE,sBAAsB,CAACM,wBAAwB,GAAG,EAAE;QAEpD13F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACK,8BAA8B,CAAE;QAErF,KAAM,IAAIt1F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgnB,SAAQ,CAACjnB,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE5C,IAAM6pB,QAAO,GAAG7C,SAAQ,CAAEhnB,IAAC,CAAE;UAC7Bi1F,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,GAAG0yF,GAAG,CAACoG,kBAAkB,EAAE;UAE/EpG,GAAG,CAAC0F,gBAAgB,CAAE,KAAK,EAAEnD,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,CAAE;UAEnF,IAAMk0F,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE4K,QAAO,CAACpE,MAAM,EAAEoE,QAAO,CAAClE,QAAQ,CAAE;UAClE,IAAMwuE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE4K,QAAO,CAAC7tB,IAAI,CAAE;UAC5C,IAAMg7F,gBAAgB,GAAGhD,iBAAiB,CAAEnqE,QAAO,CAAC7D,cAAc,EAAEkuE,QAAQ,EAAEC,MAAM,EAAEtqE,QAAO,CAAClE,QAAQ,CAAE;UACxG,IAAMsE,OAAO,GAAG8tE,sBAAsB,CAAE3yC,YAAY,CAAE;UACtDstC,GAAG,CAAC4F,8BAA8B,CAAE,KAAK,EAAEruE,OAAO,EAAE+sE,gBAAgB,EAAE5xC,YAAY,CAACliC,KAAK,EAAEkiC,YAAY,CAACjiC,MAAM,CAAE;UAE/GuvE,GAAG,CAAC8F,uBAAuB,CAAE,KAAK,EAAE,KAAK,GAAGx4F,IAAC,EAAE,KAAK,EAAEi1F,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,CAAE;QAE7G;QAEA0yF,GAAG,CAAC0F,gBAAgB,CAAE,KAAK,EAAE,IAAI,CAAE;QAEnC,IAAKhzC,YAAY,CAACt7B,WAAW,EAAG;UAE/BmrE,sBAAsB,CAACO,wBAAwB,GAAG9C,GAAG,CAACoG,kBAAkB,EAAE;UAC1Eb,wBAAwB,CAAEhD,sBAAsB,CAACO,wBAAwB,EAAEpwC,YAAY,EAAE,IAAI,CAAE;QAEhG;QAEAvnD,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;MAErC;IAED;;IAEA;;IAEA,IAAKwI,MAAM,EAAG;MAEb76F,KAAK,CAAC+xF,WAAW,CAAE,KAAK,EAAE+E,iBAAiB,CAACK,cAAc,CAAE;MAC5DqB,oBAAoB,CAAE,KAAK,EAAExsE,OAAO,EAAEiqE,YAAY,CAAE;MAEpD,KAAM,IAAI9zF,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;QAE9By3F,uBAAuB,CAAExC,sBAAsB,CAACE,kBAAkB,CAAEn1F,IAAC,CAAE,EAAEolD,YAAY,EAAEv7B,OAAO,EAAE,KAAK,EAAE,KAAK,GAAG7pB,IAAC,CAAE;MAEnH;MAEA,IAAK6zF,2BAA2B,CAAEhqE,OAAO,EAAEiqE,YAAY,CAAE,EAAG;QAE3DC,cAAc,CAAE,KAAK,CAAE;MAExB;MAEAl2F,KAAK,CAAC6zF,aAAa,EAAE;IAEtB,CAAC,MAAM,IAAKwH,uBAAuB,EAAG;MAErC,IAAMlyE,UAAQ,GAAGo+B,YAAY,CAACv7B,OAAO;MAErC,KAAM,IAAI7pB,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG/E,UAAQ,CAACjnB,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;QAErD,IAAM03F,UAAU,GAAG1wE,UAAQ,CAAEhnB,IAAC,CAAE;QAChC,IAAMy1F,qBAAoB,GAAGz8B,UAAU,CAACrjD,GAAG,CAAE+hF,UAAU,CAAE;QAEzD75F,KAAK,CAAC+xF,WAAW,CAAE,IAAI,EAAE6F,qBAAoB,CAACT,cAAc,CAAE;QAC9DqB,oBAAoB,CAAE,IAAI,EAAEqB,UAAU,EAAE5D,YAAY,CAAE;QACtD2D,uBAAuB,CAAExC,sBAAsB,CAACE,kBAAkB,EAAE/vC,YAAY,EAAEsyC,UAAU,EAAE,KAAK,GAAG13F,IAAC,EAAE,IAAI,CAAE;QAE/G,IAAK6zF,2BAA2B,CAAE6D,UAAU,EAAE5D,YAAY,CAAE,EAAG;UAE9DC,cAAc,CAAE,IAAI,CAAE;QAEvB;MAED;MAEAl2F,KAAK,CAAC6zF,aAAa,EAAE;IAEtB,CAAC,MAAM;MAEN,IAAI0H,aAAa,GAAG,IAAI;MAExB,IAAKh0C,YAAY,CAAC55B,qBAAqB,IAAI45B,YAAY,CAACt6B,wBAAwB,EAAG;QAElF,IAAKugC,QAAQ,EAAG;UAEf+tC,aAAa,GAAGh0C,YAAY,CAAC55B,qBAAqB,GAAG,KAAK,GAAG,KAAK;QAEnE,CAAC,MAAM;UAEN7W,OAAO,CAACjX,KAAK,CAAE,iGAAiG,CAAE;QAEnH;MAED;MAEAG,KAAK,CAAC+xF,WAAW,CAAEwJ,aAAa,EAAEzE,iBAAiB,CAACK,cAAc,CAAE;MACpEqB,oBAAoB,CAAE+C,aAAa,EAAEvvE,OAAO,EAAEiqE,YAAY,CAAE;MAC5D2D,uBAAuB,CAAExC,sBAAsB,CAACE,kBAAkB,EAAE/vC,YAAY,EAAEv7B,OAAO,EAAE,KAAK,EAAEuvE,aAAa,CAAE;MAEjH,IAAKvF,2BAA2B,CAAEhqE,OAAO,EAAEiqE,YAAY,CAAE,EAAG;QAE3DC,cAAc,CAAEqF,aAAa,CAAE;MAEhC;MAEAv7F,KAAK,CAAC6zF,aAAa,EAAE;IAEtB;;IAEA;;IAEA,IAAKtsC,YAAY,CAACt7B,WAAW,EAAG;MAE/B8uE,sBAAsB,CAAExzC,YAAY,CAAE;IAEvC;EAED;EAEA,SAASi0C,wBAAwBA,CAAEj0C,YAAY,EAAG;IAEjD,IAAM0uC,YAAY,GAAGH,cAAc,CAAEvuC,YAAY,CAAE,IAAIiG,QAAQ;IAE/D,IAAMrkC,QAAQ,GAAGo+B,YAAY,CAACt5B,4BAA4B,KAAK,IAAI,GAAGs5B,YAAY,CAACv7B,OAAO,GAAG,CAAEu7B,YAAY,CAACv7B,OAAO,CAAE;IAErH,KAAM,IAAI7pB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG/E,QAAQ,CAACjnB,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAErD,IAAM6pB,OAAO,GAAG7C,QAAQ,CAAEhnB,CAAC,CAAE;MAE7B,IAAK6zF,2BAA2B,CAAEhqE,OAAO,EAAEiqE,YAAY,CAAE,EAAG;QAE3D,IAAMnxF,MAAM,GAAGyiD,YAAY,CAACE,uBAAuB,GAAG,KAAK,GAAG,IAAI;QAClE,IAAMksC,YAAY,GAAGx4B,UAAU,CAACrjD,GAAG,CAAEkU,OAAO,CAAE,CAACmrE,cAAc;QAE7Dn3F,KAAK,CAAC+xF,WAAW,CAAEjtF,MAAM,EAAE6uF,YAAY,CAAE;QACzCuC,cAAc,CAAEpxF,MAAM,CAAE;QACxB9E,KAAK,CAAC6zF,aAAa,EAAE;MAEtB;IAED;EAED;EAEA,SAAS4H,6BAA6BA,CAAEl0C,YAAY,EAAG;IAEtD,IAAOiG,QAAQ,IAAIjG,YAAY,CAACn7B,OAAO,GAAG,CAAC,IAAM4tE,kBAAkB,CAAEzyC,YAAY,CAAE,KAAK,KAAK,EAAG;MAE/F,IAAMp+B,QAAQ,GAAGo+B,YAAY,CAACt5B,4BAA4B,GAAGs5B,YAAY,CAACv7B,OAAO,GAAG,CAAEu7B,YAAY,CAACv7B,OAAO,CAAE;MAC5G,IAAM3G,KAAK,GAAGkiC,YAAY,CAACliC,KAAK;MAChC,IAAMC,MAAM,GAAGiiC,YAAY,CAACjiC,MAAM;MAClC,IAAI2f,IAAI,GAAG,KAAK;MAChB,IAAMy2D,iBAAiB,GAAG,EAAE;MAC5B,IAAMC,UAAU,GAAGp0C,YAAY,CAACr7B,aAAa,GAAG,KAAK,GAAG,KAAK;MAC7D,IAAMkrE,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;MAC7D,IAAM8zC,uBAAuB,GAAK9zC,YAAY,CAACt5B,4BAA4B,KAAK,IAAM;;MAEtF;MACA,IAAKotE,uBAAuB,EAAG;QAE9B,KAAM,IAAIl5F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgnB,QAAQ,CAACjnB,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE5CnC,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACK,8BAA8B,CAAE;UACrF5C,GAAG,CAAC8F,uBAAuB,CAAE,KAAK,EAAE,KAAK,GAAGx4F,CAAC,EAAE,KAAK,EAAE,IAAI,CAAE;UAE5DnC,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACE,kBAAkB,CAAE;UACzEzC,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAE,KAAK,GAAGh4F,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE;QAE5D;MAED;MAEAnC,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACK,8BAA8B,CAAE;MACrFz3F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACE,kBAAkB,CAAE;MAEzE,KAAM,IAAIn1F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgnB,QAAQ,CAACjnB,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE5Cu5F,iBAAiB,CAAC/5F,IAAI,CAAE,KAAK,GAAGQ,IAAC,CAAE;QAEnC,IAAKolD,YAAY,CAACt7B,WAAW,EAAG;UAE/ByvE,iBAAiB,CAAC/5F,IAAI,CAAEg6F,UAAU,CAAE;QAErC;QAEA,IAAMC,iBAAiB,GAAKxE,sBAAsB,CAACyE,mBAAmB,KAAKj7F,SAAS,GAAKw2F,sBAAsB,CAACyE,mBAAmB,GAAG,KAAK;QAE3I,IAAKD,iBAAiB,KAAK,KAAK,EAAG;UAElC,IAAKr0C,YAAY,CAACt7B,WAAW,EAAGgZ,IAAI,IAAI,GAAG;UAC3C,IAAKsiB,YAAY,CAACr7B,aAAa,EAAG+Y,IAAI,IAAI,IAAI;QAE/C;QAEA,IAAKo2D,uBAAuB,EAAG;UAE9BxG,GAAG,CAAC8F,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAEvD,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,CAAE;QAEzG;QAEA,IAAKy5F,iBAAiB,KAAK,IAAI,EAAG;UAEjC/G,GAAG,CAACiH,qBAAqB,CAAE,KAAK,EAAE,CAAEH,UAAU,CAAE,CAAE;UAClD9G,GAAG,CAACiH,qBAAqB,CAAE,KAAK,EAAE,CAAEH,UAAU,CAAE,CAAE;QAEnD;QAEA,IAAKN,uBAAuB,EAAG;UAE9B,IAAM1H,YAAY,GAAGx4B,UAAU,CAACrjD,GAAG,CAAEqR,QAAQ,CAAEhnB,IAAC,CAAE,CAAE,CAACg1F,cAAc;UACnEtC,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAExG,YAAY,EAAE,CAAC,CAAE;QAEhE;QAEAkB,GAAG,CAACkH,eAAe,CAAE,CAAC,EAAE,CAAC,EAAE12E,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAED,KAAK,EAAEC,MAAM,EAAE2f,IAAI,EAAE,IAAI,CAAE;QAE3E,IAAKiwD,6BAA6B,EAAG;UAEpCL,GAAG,CAACiH,qBAAqB,CAAE,KAAK,EAAEJ,iBAAiB,CAAE;QAEtD;MAGD;MAEA17F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;MACpCryF,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;;MAEpC;MACA,IAAKgJ,uBAAuB,EAAG;QAE9B,KAAM,IAAIl5F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGgnB,QAAQ,CAACjnB,MAAM,EAAEC,IAAC,EAAG,EAAG;UAE5CnC,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACK,8BAA8B,CAAE;UACrF5C,GAAG,CAAC8F,uBAAuB,CAAE,KAAK,EAAE,KAAK,GAAGx4F,IAAC,EAAE,KAAK,EAAEi1F,sBAAsB,CAACM,wBAAwB,CAAEv1F,IAAC,CAAE,CAAE;UAE5G,IAAMwxF,aAAY,GAAGx4B,UAAU,CAACrjD,GAAG,CAAEqR,QAAQ,CAAEhnB,IAAC,CAAE,CAAE,CAACg1F,cAAc;UAEnEn3F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACE,kBAAkB,CAAE;UACzEzC,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAE,KAAK,GAAGh4F,IAAC,EAAE,IAAI,EAAEwxF,aAAY,EAAE,CAAC,CAAE;QAEpE;MAED;MAEA3zF,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE+E,sBAAsB,CAACK,8BAA8B,CAAE;IAEtF;EAED;EAEA,SAASyC,sBAAsBA,CAAE3yC,YAAY,EAAG;IAE/C,OAAOl1C,IAAI,CAACY,GAAG,CAAEwyD,UAAU,EAAEle,YAAY,CAACn7B,OAAO,CAAE;EAEpD;EAEA,SAAS4tE,kBAAkBA,CAAEzyC,YAAY,EAAG;IAE3C,IAAM6vC,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAE7D,OAAOiG,QAAQ,IAAIjG,YAAY,CAACn7B,OAAO,GAAG,CAAC,IAAIo4B,UAAU,CAAC8f,GAAG,CAAE,sCAAsC,CAAE,KAAK,IAAI,IAAI8yB,sBAAsB,CAAC4E,oBAAoB,KAAK,KAAK;EAE1K;EAEA,SAAS9D,kBAAkBA,CAAElsE,OAAO,EAAG;IAEtC,IAAMghC,KAAK,GAAGjsD,IAAI,CAAC6nD,MAAM,CAACoE,KAAK;;IAE/B;;IAEA,IAAKqoC,cAAc,CAACv9E,GAAG,CAAEkU,OAAO,CAAE,KAAKghC,KAAK,EAAG;MAE9CqoC,cAAc,CAACx+E,GAAG,CAAEmV,OAAO,EAAEghC,KAAK,CAAE;MACpChhC,OAAO,CAAC8C,MAAM,EAAE;IAEjB;EAED;EAEA,SAASoqE,gBAAgBA,CAAEltE,OAAO,EAAEhH,KAAK,EAAG;IAE3C,IAAM8C,QAAQ,GAAGkE,OAAO,CAAClE,QAAQ;IACjC,IAAMF,MAAM,GAAGoE,OAAO,CAACpE,MAAM;IAC7B,IAAMzpB,IAAI,GAAG6tB,OAAO,CAAC7tB,IAAI;IAEzB,IAAK6tB,OAAO,CAACyqE,mBAAmB,KAAK,IAAI,IAAIzqE,OAAO,CAACk4D,cAAc,KAAK,IAAI,IAAIl4D,OAAO,CAACpE,MAAM,KAAK1W,YAAY,EAAG,OAAO8T,KAAK;IAE9H,IAAK8C,QAAQ,KAAKhZ,cAAc,EAAG;MAElC;;MAEA,IAAKgZ,QAAQ,KAAK/Y,YAAY,EAAG;QAEhC,IAAKy+C,QAAQ,KAAK,KAAK,EAAG;UAEzB;;UAEA,IAAKhJ,UAAU,CAAC8f,GAAG,CAAE,UAAU,CAAE,KAAK,IAAI,IAAI18C,MAAM,KAAKhc,UAAU,EAAG;YAErEogB,OAAO,CAACpE,MAAM,GAAG1W,YAAY;;YAE7B;;YAEA8a,OAAO,CAACrE,SAAS,GAAGjd,YAAY;YAChCshB,OAAO,CAAC1D,eAAe,GAAG,KAAK;UAEhC,CAAC,MAAM;YAEN;;YAEAtD,KAAK,GAAGF,UAAU,CAACc,YAAY,CAAEZ,KAAK,CAAE;UAEzC;QAED,CAAC,MAAM;UAEN;;UAEA,IAAK4C,MAAM,KAAKhc,UAAU,IAAIzN,IAAI,KAAK4M,gBAAgB,EAAG;YAEzD+L,OAAO,CAACC,IAAI,CAAE,yFAAyF,CAAE;UAE1G;QAED;MAED,CAAC,MAAM;QAEND,OAAO,CAACjX,KAAK,CAAE,oDAAoD,EAAEioB,QAAQ,CAAE;MAEhF;IAED;IAEA,OAAO9C,KAAK;EAEb;;EAEA;;EAEA,IAAI,CAACytD,mBAAmB,GAAGA,mBAAmB;EAC9C,IAAI,CAACqlB,iBAAiB,GAAGA,iBAAiB;EAE1C,IAAI,CAAChjB,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACM,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACJ,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACE,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACgmB,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACE,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACI,wBAAwB,GAAGA,wBAAwB;EACxD,IAAI,CAACC,6BAA6B,GAAGA,6BAA6B;EAClE,IAAI,CAACV,sBAAsB,GAAGA,sBAAsB;EACpD,IAAI,CAACnB,uBAAuB,GAAGA,uBAAuB;EACtD,IAAI,CAACI,kBAAkB,GAAGA,kBAAkB;AAE7C;AAEA,SAASiC,UAAUA,CAAE3uC,EAAE,EAAE9I,UAAU,EAAE+I,YAAY,EAAG;EAEnD,IAAMC,QAAQ,GAAGD,YAAY,CAACC,QAAQ;EAEtC,SAASpsC,OAAOA,CAAEW,CAAC,EAAE+F,QAAQ,GAAG,IAAI,EAAG;IAEtC,IAAIk4C,SAAS;IAEb,IAAKj+C,CAAC,KAAKhX,gBAAgB,EAAG,OAAO,IAAI;IACzC,IAAKgX,CAAC,KAAKxW,qBAAqB,EAAG,OAAO,KAAK;IAC/C,IAAKwW,CAAC,KAAKvW,qBAAqB,EAAG,OAAO,KAAK;IAE/C,IAAKuW,CAAC,KAAK/W,QAAQ,EAAG,OAAO,IAAI;IACjC,IAAK+W,CAAC,KAAK9W,SAAS,EAAG,OAAO,IAAI;IAClC,IAAK8W,CAAC,KAAK7W,iBAAiB,EAAG,OAAO,IAAI;IAC1C,IAAK6W,CAAC,KAAK5W,OAAO,EAAG,OAAO,IAAI;IAChC,IAAK4W,CAAC,KAAK3W,eAAe,EAAG,OAAO,IAAI;IACxC,IAAK2W,CAAC,KAAK1W,SAAS,EAAG,OAAO,IAAI;IAElC,IAAK0W,CAAC,KAAKzW,aAAa,EAAG;MAE1B,IAAKkiD,QAAQ,EAAG,OAAO,IAAI;MAE3BwS,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,wBAAwB,CAAE;MAEtD,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACk8B,cAAc;MAEhC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;IAEA,IAAKn6E,CAAC,KAAKrW,WAAW,EAAG,OAAO,IAAI;IACpC,IAAKqW,CAAC,KAAKnW,UAAU,EAAG,OAAO,IAAI;IACnC,IAAKmW,CAAC,KAAKlW,eAAe,EAAG,OAAO,IAAI;IACxC,IAAKkW,CAAC,KAAKjW,oBAAoB,EAAG,OAAO,IAAI;IAC7C,IAAKiW,CAAC,KAAKhW,WAAW,EAAG,OAAO,IAAI;IACpC,IAAKgW,CAAC,KAAK/V,kBAAkB,EAAG,OAAO,KAAK;IAC5C,IAAK+V,CAAC,KAAK9V,SAAS,EAAG,OAAO,IAAI;IAElC,IAAK8V,CAAC,KAAKpW,SAAS,EAAG;MAEtBmL,OAAO,CAACC,IAAI,CAAE,oIAAoI,CAAE;MACpJ,OAAO,IAAI;IAEZ;;IAEA;;IAEA,IAAKgL,CAAC,KAAK7Q,YAAY,EAAG;MAEzB8uD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,UAAU,CAAE;MAExC,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACm8B,cAAc;MAEhC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKp6E,CAAC,KAAK7V,gBAAgB,EAAG,OAAO,KAAK;IAC1C,IAAK6V,CAAC,KAAK5V,QAAQ,EAAG,OAAO,KAAK;IAClC,IAAK4V,CAAC,KAAK3V,eAAe,EAAG,OAAO,KAAK;IACzC,IAAK2V,CAAC,KAAK1V,iBAAiB,EAAG,OAAO,KAAK;;IAE3C;;IAEA,IAAK0V,CAAC,KAAKzV,oBAAoB,IAAIyV,CAAC,KAAKxV,qBAAqB,IAAIwV,CAAC,KAAKvV,qBAAqB,IAAIuV,CAAC,KAAKtV,qBAAqB,EAAG;MAE9H,IAAKqb,QAAQ,KAAK/Y,YAAY,EAAG;QAEhCixD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,oCAAoC,CAAE;QAElE,IAAKkoD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAKj+C,CAAC,KAAKzV,oBAAoB,EAAG,OAAO0zD,SAAS,CAACo8B,6BAA6B;UAChF,IAAKr6E,CAAC,KAAKxV,qBAAqB,EAAG,OAAOyzD,SAAS,CAACq8B,mCAAmC;UACvF,IAAKt6E,CAAC,KAAKvV,qBAAqB,EAAG,OAAOwzD,SAAS,CAACs8B,mCAAmC;UACvF,IAAKv6E,CAAC,KAAKtV,qBAAqB,EAAG,OAAOuzD,SAAS,CAACu8B,mCAAmC;QAExF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED,CAAC,MAAM;QAENv8B,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,+BAA+B,CAAE;QAE7D,IAAKkoD,SAAS,KAAK,IAAI,EAAG;UAEzB,IAAKj+C,CAAC,KAAKzV,oBAAoB,EAAG,OAAO0zD,SAAS,CAACw8B,4BAA4B;UAC/E,IAAKz6E,CAAC,KAAKxV,qBAAqB,EAAG,OAAOyzD,SAAS,CAACy8B,6BAA6B;UACjF,IAAK16E,CAAC,KAAKvV,qBAAqB,EAAG,OAAOwzD,SAAS,CAAC08B,6BAA6B;UACjF,IAAK36E,CAAC,KAAKtV,qBAAqB,EAAG,OAAOuzD,SAAS,CAAC28B,6BAA6B;QAElF,CAAC,MAAM;UAEN,OAAO,IAAI;QAEZ;MAED;IAED;;IAEA;;IAEA,IAAK56E,CAAC,KAAKrV,uBAAuB,IAAIqV,CAAC,KAAKpV,uBAAuB,IAAIoV,CAAC,KAAKnV,wBAAwB,IAAImV,CAAC,KAAKlV,wBAAwB,EAAG;MAEzImzD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,gCAAgC,CAAE;MAE9D,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKj+C,CAAC,KAAKrV,uBAAuB,EAAG,OAAOszD,SAAS,CAAC48B,+BAA+B;QACrF,IAAK76E,CAAC,KAAKpV,uBAAuB,EAAG,OAAOqzD,SAAS,CAAC68B,+BAA+B;QACrF,IAAK96E,CAAC,KAAKnV,wBAAwB,EAAG,OAAOozD,SAAS,CAAC88B,gCAAgC;QACvF,IAAK/6E,CAAC,KAAKlV,wBAAwB,EAAG,OAAOmzD,SAAS,CAAC+8B,gCAAgC;MAExF,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKh7E,CAAC,KAAKjV,eAAe,EAAG;MAE5BkzD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,+BAA+B,CAAE;MAE7D,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACg9B,yBAAyB;MAE3C,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKj7E,CAAC,KAAKhV,eAAe,IAAIgV,CAAC,KAAK/U,oBAAoB,EAAG;MAE1DgzD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,8BAA8B,CAAE;MAE5D,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKj+C,CAAC,KAAKhV,eAAe,EAAG,OAAS+a,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACi9B,qBAAqB,GAAGj9B,SAAS,CAACk9B,oBAAoB;QACpI,IAAKn7E,CAAC,KAAK/U,oBAAoB,EAAG,OAAS8a,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACm9B,gCAAgC,GAAGn9B,SAAS,CAACo9B,yBAAyB;MAE1J,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKr7E,CAAC,KAAK9U,oBAAoB,IAAI8U,CAAC,KAAK7U,oBAAoB,IAAI6U,CAAC,KAAK5U,oBAAoB,IAC1F4U,CAAC,KAAK3U,oBAAoB,IAAI2U,CAAC,KAAK1U,oBAAoB,IAAI0U,CAAC,KAAKzU,oBAAoB,IACtFyU,CAAC,KAAKxU,oBAAoB,IAAIwU,CAAC,KAAKvU,oBAAoB,IAAIuU,CAAC,KAAKtU,qBAAqB,IACvFsU,CAAC,KAAKrU,qBAAqB,IAAIqU,CAAC,KAAKpU,qBAAqB,IAAIoU,CAAC,KAAKnU,sBAAsB,IAC1FmU,CAAC,KAAKlU,sBAAsB,IAAIkU,CAAC,KAAKjU,sBAAsB,EAAG;MAE/DkyD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,+BAA+B,CAAE;MAE7D,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKj+C,CAAC,KAAK9U,oBAAoB,EAAG,OAAS6a,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACq9B,oCAAoC,GAAGr9B,SAAS,CAACs9B,4BAA4B;QAChK,IAAKv7E,CAAC,KAAK7U,oBAAoB,EAAG,OAAS4a,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACu9B,oCAAoC,GAAGv9B,SAAS,CAACw9B,4BAA4B;QAChK,IAAKz7E,CAAC,KAAK5U,oBAAoB,EAAG,OAAS2a,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACy9B,oCAAoC,GAAGz9B,SAAS,CAAC09B,4BAA4B;QAChK,IAAK37E,CAAC,KAAK3U,oBAAoB,EAAG,OAAS0a,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAAC29B,oCAAoC,GAAG39B,SAAS,CAAC49B,4BAA4B;QAChK,IAAK77E,CAAC,KAAK1U,oBAAoB,EAAG,OAASya,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAAC69B,oCAAoC,GAAG79B,SAAS,CAAC89B,4BAA4B;QAChK,IAAK/7E,CAAC,KAAKzU,oBAAoB,EAAG,OAASwa,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAAC+9B,oCAAoC,GAAG/9B,SAAS,CAACg+B,4BAA4B;QAChK,IAAKj8E,CAAC,KAAKxU,oBAAoB,EAAG,OAASua,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACi+B,oCAAoC,GAAGj+B,SAAS,CAACk+B,4BAA4B;QAChK,IAAKn8E,CAAC,KAAKvU,oBAAoB,EAAG,OAASsa,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACm+B,oCAAoC,GAAGn+B,SAAS,CAACo+B,4BAA4B;QAChK,IAAKr8E,CAAC,KAAKtU,qBAAqB,EAAG,OAASqa,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACq+B,qCAAqC,GAAGr+B,SAAS,CAACs+B,6BAA6B;QACnK,IAAKv8E,CAAC,KAAKrU,qBAAqB,EAAG,OAASoa,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACu+B,qCAAqC,GAAGv+B,SAAS,CAACw+B,6BAA6B;QACnK,IAAKz8E,CAAC,KAAKpU,qBAAqB,EAAG,OAASma,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACy+B,qCAAqC,GAAGz+B,SAAS,CAAC0+B,6BAA6B;QACnK,IAAK38E,CAAC,KAAKnU,sBAAsB,EAAG,OAASka,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAAC2+B,sCAAsC,GAAG3+B,SAAS,CAAC4+B,8BAA8B;QACtK,IAAK78E,CAAC,KAAKlU,sBAAsB,EAAG,OAASia,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAAC6+B,sCAAsC,GAAG7+B,SAAS,CAAC8+B,8BAA8B;QACtK,IAAK/8E,CAAC,KAAKjU,sBAAsB,EAAG,OAASga,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAAC++B,sCAAsC,GAAG/+B,SAAS,CAACg/B,8BAA8B;MAEvK,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKj9E,CAAC,KAAKhU,gBAAgB,EAAG;MAE7BiyD,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,8BAA8B,CAAE;MAE5D,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,IAAKj+C,CAAC,KAAKhU,gBAAgB,EAAG,OAAS+Z,QAAQ,KAAK/Y,YAAY,GAAKixD,SAAS,CAACi/B,oCAAoC,GAAGj/B,SAAS,CAACk/B,8BAA8B;MAE/J,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,IAAKn9E,CAAC,KAAKtW,kBAAkB,EAAG;MAE/B,IAAK+hD,QAAQ,EAAG,OAAO,KAAK;MAE5BwS,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,qBAAqB,CAAE;MAEnD,IAAKkoD,SAAS,KAAK,IAAI,EAAG;QAEzB,OAAOA,SAAS,CAACm/B,uBAAuB;MAEzC,CAAC,MAAM;QAEN,OAAO,IAAI;MAEZ;IAED;;IAEA;;IAEA,OAAS7xC,EAAE,CAAEvrC,CAAC,CAAE,KAAKnhB,SAAS,GAAK0sD,EAAE,CAAEvrC,CAAC,CAAE,GAAG,IAAI;EAElD;EAEA,OAAO;IAAEX,OAAO,EAAEA;EAAQ,CAAC;AAE5B;AAAC,IAEKg+E,WAAW,0BAAAC,kBAAA;EAAAn4E,SAAA,CAAAk4E,WAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAl4E,YAAA,CAAAg4E,WAAA;EAEhB,SAAAA,YAAaptF,KAAK,GAAG,EAAE,EAAG;IAAA,IAAAutF,OAAA;IAAA76F,eAAA,OAAA06F,WAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAlhG,IAAA;IAEAmhG,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAKE,OAAO,GAAGztF,KAAK;IAAC,OAAAutF,OAAA;EAEtB;EAAC,OAAAr6F,YAAA,CAAAk6F,WAAA;AAAA,EAVwB95C,iBAAiB;AAAA1pD,OAAA,CAAAwjG,WAAA,GAAAA,WAAA;AAAA,IAcrCM,KAAK,0BAAAC,UAAA;EAAAz4E,SAAA,CAAAw4E,KAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAx4E,YAAA,CAAAs4E,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAA,IAAAG,OAAA;IAAAn7F,eAAA,OAAAg7F,KAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAxhG,IAAA;IAEAyhG,OAAA,CAAKC,OAAO,GAAG,IAAI;IAEnBD,OAAA,CAAK1hG,IAAI,GAAG,OAAO;IAAC,OAAA0hG,OAAA;EAErB;EAAC,OAAA36F,YAAA,CAAAw6F,KAAA;AAAA,EAVkBn5D,QAAQ;AAAA3qC,OAAA,CAAA8jG,KAAA,GAAAA,KAAA;AAc5B,IAAMK,UAAU,GAAG;EAAE5hG,IAAI,EAAE;AAAO,CAAC;AAAC,IAE9B6hG,eAAe;EAEpB,SAAAA,gBAAA,EAAc;IAAAt7F,eAAA,OAAAs7F,eAAA;IAEb,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,KAAK,GAAG,IAAI;EAElB;EAACj7F,YAAA,CAAA86F,eAAA;IAAA5jG,GAAA;IAAAE,KAAA,EAED,SAAA8jG,aAAA,EAAe;MAEd,IAAK,IAAI,CAACD,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,GAAG,IAAIT,KAAK,EAAE;QACxB,IAAI,CAACS,KAAK,CAAC93E,gBAAgB,GAAG,KAAK;QACnC,IAAI,CAAC83E,KAAK,CAAC94D,OAAO,GAAG,KAAK;QAE1B,IAAI,CAAC84D,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;QACtB,IAAI,CAACF,KAAK,CAACG,UAAU,GAAG;UAAEC,QAAQ,EAAE;QAAM,CAAC;MAE5C;MAEA,OAAO,IAAI,CAACJ,KAAK;IAElB;EAAC;IAAA/jG,GAAA;IAAAE,KAAA,EAED,SAAAkkG,kBAAA,EAAoB;MAEnB,IAAK,IAAI,CAACP,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,GAAG,IAAIP,KAAK,EAAE;QAC7B,IAAI,CAACO,UAAU,CAAC53E,gBAAgB,GAAG,KAAK;QACxC,IAAI,CAAC43E,UAAU,CAAC54D,OAAO,GAAG,KAAK;QAC/B,IAAI,CAAC44D,UAAU,CAACQ,iBAAiB,GAAG,KAAK;QACzC,IAAI,CAACR,UAAU,CAACS,cAAc,GAAG,IAAIztE,OAAO,EAAE;QAC9C,IAAI,CAACgtE,UAAU,CAACU,kBAAkB,GAAG,KAAK;QAC1C,IAAI,CAACV,UAAU,CAACW,eAAe,GAAG,IAAI3tE,OAAO,EAAE;MAEhD;MAEA,OAAO,IAAI,CAACgtE,UAAU;IAEvB;EAAC;IAAA7jG,GAAA;IAAAE,KAAA,EAED,SAAAukG,aAAA,EAAe;MAEd,IAAK,IAAI,CAACX,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,GAAG,IAAIR,KAAK,EAAE;QACxB,IAAI,CAACQ,KAAK,CAAC73E,gBAAgB,GAAG,KAAK;QACnC,IAAI,CAAC63E,KAAK,CAAC74D,OAAO,GAAG,KAAK;QAC1B,IAAI,CAAC64D,KAAK,CAACO,iBAAiB,GAAG,KAAK;QACpC,IAAI,CAACP,KAAK,CAACQ,cAAc,GAAG,IAAIztE,OAAO,EAAE;QACzC,IAAI,CAACitE,KAAK,CAACS,kBAAkB,GAAG,KAAK;QACrC,IAAI,CAACT,KAAK,CAACU,eAAe,GAAG,IAAI3tE,OAAO,EAAE;MAE3C;MAEA,OAAO,IAAI,CAACitE,KAAK;IAElB;EAAC;IAAA9jG,GAAA;IAAAE,KAAA,EAED,SAAAwV,cAAeC,KAAK,EAAG;MAEtB,IAAK,IAAI,CAACkuF,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,CAACnuF,aAAa,CAAEC,KAAK,CAAE;MAEvC;MAEA,IAAK,IAAI,CAACmuF,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACpuF,aAAa,CAAEC,KAAK,CAAE;MAElC;MAEA,IAAK,IAAI,CAACouF,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAACruF,aAAa,CAAEC,KAAK,CAAE;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3V,GAAA;IAAAE,KAAA,EAED,SAAAwkG,WAAYC,WAAW,EAAG;MAEzB,IAAI,CAACjvF,aAAa,CAAE;QAAE3T,IAAI,EAAE,cAAc;QAAE8nB,IAAI,EAAE86E;MAAY,CAAC,CAAE;MAEjE,IAAK,IAAI,CAACd,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACA,UAAU,CAAC54D,OAAO,GAAG,KAAK;MAEhC;MAEA,IAAK,IAAI,CAAC64D,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAAC74D,OAAO,GAAG,KAAK;MAE3B;MAEA,IAAK,IAAI,CAAC84D,KAAK,KAAK,IAAI,EAAG;QAE1B,IAAI,CAACA,KAAK,CAAC94D,OAAO,GAAG,KAAK;MAE3B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjrC,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAQiyE,WAAW,EAAE/zC,KAAK,EAAEg0C,cAAc,EAAG;MAE5C,IAAIC,SAAS,GAAG,IAAI;MACpB,IAAIC,QAAQ,GAAG,IAAI;MACnB,IAAIC,QAAQ,GAAG,IAAI;MAEnB,IAAMC,SAAS,GAAG,IAAI,CAACnB,UAAU;MACjC,IAAMoB,IAAI,GAAG,IAAI,CAACnB,KAAK;MACvB,IAAMoB,IAAI,GAAG,IAAI,CAACnB,KAAK;MAEvB,IAAKY,WAAW,IAAI/zC,KAAK,CAACiS,OAAO,CAACsiC,eAAe,KAAK,iBAAiB,EAAG;QAEzE,IAAKD,IAAI,IAAIP,WAAW,CAACO,IAAI,EAAG;UAE/BH,QAAQ,GAAG,IAAI;UAAC,IAAAK,UAAA,GAAA3f,0BAAA,CAEUkf,WAAW,CAACO,IAAI,CAAC1iG,MAAM,EAAE;YAAA6iG,MAAA;UAAA;YAAnD,KAAAD,UAAA,CAAAxsF,CAAA,MAAAysF,MAAA,GAAAD,UAAA,CAAApuF,CAAA,IAAA1S,IAAA,GAAsD;cAAA,IAA1CghG,UAAU,GAAAD,MAAA,CAAAnlG,KAAA;cAErB;cACA,IAAMqlG,SAAS,GAAG30C,KAAK,CAAC40C,YAAY,CAAEF,UAAU,EAAEV,cAAc,CAAE;cAElE,IAAKM,IAAI,CAACjB,MAAM,CAAEqB,UAAU,CAACG,SAAS,CAAE,KAAKjhG,SAAS,EAAG;gBAExD;gBACA,IAAMkhG,MAAK,GAAG,IAAIpC,KAAK,EAAE;gBACzBoC,MAAK,CAACz5E,gBAAgB,GAAG,KAAK;gBAC9By5E,MAAK,CAACz6D,OAAO,GAAG,KAAK;gBACrBi6D,IAAI,CAACjB,MAAM,CAAEqB,UAAU,CAACG,SAAS,CAAE,GAAGC,MAAK;gBAC3C;gBACAR,IAAI,CAAC9oF,GAAG,CAAEspF,MAAK,CAAE;cAElB;cAEA,IAAMA,KAAK,GAAGR,IAAI,CAACjB,MAAM,CAAEqB,UAAU,CAACG,SAAS,CAAE;cAEjD,IAAKF,SAAS,KAAK,IAAI,EAAG;gBAEzBG,KAAK,CAAC9hF,MAAM,CAAClF,SAAS,CAAE6mF,SAAS,CAACI,SAAS,CAAC/hF,MAAM,CAAE;gBACpD8hF,KAAK,CAAC9hF,MAAM,CAACsjB,SAAS,CAAEw+D,KAAK,CAACvpE,QAAQ,EAAEupE,KAAK,CAACriF,QAAQ,EAAEqiF,KAAK,CAACliF,KAAK,CAAE;gBACrEkiF,KAAK,CAACE,WAAW,GAAGL,SAAS,CAAChsE,MAAM;cAErC;cAEAmsE,KAAK,CAACz6D,OAAO,GAAGs6D,SAAS,KAAK,IAAI;YAEnC;;YAEA;;YAEA;UAAA,SAAAxkG,GAAA;YAAAqkG,UAAA,CAAApoF,CAAA,CAAAjc,GAAA;UAAA;YAAAqkG,UAAA,CAAAnjF,CAAA;UAAA;UACA,IAAM4jF,QAAQ,GAAGX,IAAI,CAACjB,MAAM,CAAE,kBAAkB,CAAE;UAClD,IAAM6B,QAAQ,GAAGZ,IAAI,CAACjB,MAAM,CAAE,WAAW,CAAE;UAC3C,IAAM93D,QAAQ,GAAG05D,QAAQ,CAAC1pE,QAAQ,CAACpe,UAAU,CAAE+nF,QAAQ,CAAC3pE,QAAQ,CAAE;UAElE,IAAM4pE,eAAe,GAAG,IAAI;UAC5B,IAAMC,SAAS,GAAG,KAAK;UAEvB,IAAKd,IAAI,CAAChB,UAAU,CAACC,QAAQ,IAAIh4D,QAAQ,GAAG45D,eAAe,GAAGC,SAAS,EAAG;YAEzEd,IAAI,CAAChB,UAAU,CAACC,QAAQ,GAAG,KAAK;YAChC,IAAI,CAACzuF,aAAa,CAAE;cACnB3T,IAAI,EAAE,UAAU;cAChBkkG,UAAU,EAAEtB,WAAW,CAACsB,UAAU;cAClCv9F,MAAM,EAAE;YACT,CAAC,CAAE;UAEJ,CAAC,MAAM,IAAK,CAAEw8F,IAAI,CAAChB,UAAU,CAACC,QAAQ,IAAIh4D,QAAQ,IAAI45D,eAAe,GAAGC,SAAS,EAAG;YAEnFd,IAAI,CAAChB,UAAU,CAACC,QAAQ,GAAG,IAAI;YAC/B,IAAI,CAACzuF,aAAa,CAAE;cACnB3T,IAAI,EAAE,YAAY;cAClBkkG,UAAU,EAAEtB,WAAW,CAACsB,UAAU;cAClCv9F,MAAM,EAAE;YACT,CAAC,CAAE;UAEJ;QAED,CAAC,MAAM;UAEN,IAAKu8F,IAAI,KAAK,IAAI,IAAIN,WAAW,CAACuB,SAAS,EAAG;YAE7CpB,QAAQ,GAAGl0C,KAAK,CAACu1C,OAAO,CAAExB,WAAW,CAACuB,SAAS,EAAEtB,cAAc,CAAE;YAEjE,IAAKE,QAAQ,KAAK,IAAI,EAAG;cAExBG,IAAI,CAACrhF,MAAM,CAAClF,SAAS,CAAEomF,QAAQ,CAACa,SAAS,CAAC/hF,MAAM,CAAE;cAClDqhF,IAAI,CAACrhF,MAAM,CAACsjB,SAAS,CAAE+9D,IAAI,CAAC9oE,QAAQ,EAAE8oE,IAAI,CAAC5hF,QAAQ,EAAE4hF,IAAI,CAACzhF,KAAK,CAAE;cAEjE,IAAKshF,QAAQ,CAACR,cAAc,EAAG;gBAE9BW,IAAI,CAACZ,iBAAiB,GAAG,IAAI;gBAC7BY,IAAI,CAACX,cAAc,CAACpoF,IAAI,CAAE4oF,QAAQ,CAACR,cAAc,CAAE;cAEpD,CAAC,MAAM;gBAENW,IAAI,CAACZ,iBAAiB,GAAG,KAAK;cAE/B;cAEA,IAAKS,QAAQ,CAACN,eAAe,EAAG;gBAE/BS,IAAI,CAACV,kBAAkB,GAAG,IAAI;gBAC9BU,IAAI,CAACT,eAAe,CAACtoF,IAAI,CAAE4oF,QAAQ,CAACN,eAAe,CAAE;cAEtD,CAAC,MAAM;gBAENS,IAAI,CAACV,kBAAkB,GAAG,KAAK;cAEhC;YAED;UAED;QAED;QAEA,IAAKS,SAAS,KAAK,IAAI,EAAG;UAEzBH,SAAS,GAAGj0C,KAAK,CAACu1C,OAAO,CAAExB,WAAW,CAACyB,cAAc,EAAExB,cAAc,CAAE;;UAEvE;UACA,IAAKC,SAAS,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAG;YAE9CD,SAAS,GAAGC,QAAQ;UAErB;UAEA,IAAKD,SAAS,KAAK,IAAI,EAAG;YAEzBG,SAAS,CAACphF,MAAM,CAAClF,SAAS,CAAEmmF,SAAS,CAACc,SAAS,CAAC/hF,MAAM,CAAE;YACxDohF,SAAS,CAACphF,MAAM,CAACsjB,SAAS,CAAE89D,SAAS,CAAC7oE,QAAQ,EAAE6oE,SAAS,CAAC3hF,QAAQ,EAAE2hF,SAAS,CAACxhF,KAAK,CAAE;YAErF,IAAKqhF,SAAS,CAACP,cAAc,EAAG;cAE/BU,SAAS,CAACX,iBAAiB,GAAG,IAAI;cAClCW,SAAS,CAACV,cAAc,CAACpoF,IAAI,CAAE2oF,SAAS,CAACP,cAAc,CAAE;YAE1D,CAAC,MAAM;cAENU,SAAS,CAACX,iBAAiB,GAAG,KAAK;YAEpC;YAEA,IAAKQ,SAAS,CAACL,eAAe,EAAG;cAEhCQ,SAAS,CAACT,kBAAkB,GAAG,IAAI;cACnCS,SAAS,CAACR,eAAe,CAACtoF,IAAI,CAAE2oF,SAAS,CAACL,eAAe,CAAE;YAE5D,CAAC,MAAM;cAENQ,SAAS,CAACT,kBAAkB,GAAG,KAAK;YAErC;YAEA,IAAI,CAAC7uF,aAAa,CAAEiuF,UAAU,CAAE;UAEjC;QAED;MAGD;MAEA,IAAKqB,SAAS,KAAK,IAAI,EAAG;QAEzBA,SAAS,CAAC/5D,OAAO,GAAK45D,SAAS,KAAK,IAAM;MAE3C;MAEA,IAAKI,IAAI,KAAK,IAAI,EAAG;QAEpBA,IAAI,CAACh6D,OAAO,GAAK65D,QAAQ,KAAK,IAAM;MAErC;MAEA,IAAKI,IAAI,KAAK,IAAI,EAAG;QAEpBA,IAAI,CAACj6D,OAAO,GAAK85D,QAAQ,KAAK,IAAM;MAErC;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAnB,eAAA;AAAA;AAAA,IAIIyC,YAAY,0BAAAC,SAAA;EAAAx7E,SAAA,CAAAu7E,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAv7E,YAAA,CAAAq7E,YAAA;EAEjB,SAAAA,aAAap9E,KAAK,EAAEC,MAAM,EAAEnnB,IAAI,EAAEmpB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAED,MAAM,EAAG;IAAA,IAAAg7E,OAAA;IAAAl+F,eAAA,OAAA+9F,YAAA;IAEnG76E,MAAM,GAAGA,MAAM,KAAKhnB,SAAS,GAAGgnB,MAAM,GAAG7b,WAAW;IAEpD,IAAK6b,MAAM,KAAK7b,WAAW,IAAI6b,MAAM,KAAK5b,kBAAkB,EAAG;MAE9D,MAAM,IAAI/L,KAAK,CAAE,kFAAkF,CAAE;IAEtG;IAEA,IAAK9B,IAAI,KAAKyC,SAAS,IAAIgnB,MAAM,KAAK7b,WAAW,EAAG5N,IAAI,GAAGiN,eAAe;IAC1E,IAAKjN,IAAI,KAAKyC,SAAS,IAAIgnB,MAAM,KAAK5b,kBAAkB,EAAG7N,IAAI,GAAGsN,kBAAkB;IAEpFm3F,OAAA,GAAAD,QAAA,CAAAvkG,IAAA,OAAO,IAAI,EAAEkpB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU;IAElF+6E,OAAA,CAAKpJ,cAAc,GAAG,IAAI;IAE1BoJ,OAAA,CAAK59E,KAAK,GAAG;MAAEK,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAE7Cs9E,OAAA,CAAKl7E,SAAS,GAAGA,SAAS,KAAK9mB,SAAS,GAAG8mB,SAAS,GAAGrd,aAAa;IACpEu4F,OAAA,CAAKj7E,SAAS,GAAGA,SAAS,KAAK/mB,SAAS,GAAG+mB,SAAS,GAAGtd,aAAa;IAEpEu4F,OAAA,CAAKp6E,KAAK,GAAG,KAAK;IAClBo6E,OAAA,CAAKt6E,eAAe,GAAG,KAAK;IAAC,OAAAs6E,OAAA;EAE9B;EAAC,OAAA19F,YAAA,CAAAu9F,YAAA;AAAA,EA3ByBz7E,OAAO;AAAAprB,OAAA,CAAA6mG,YAAA,GAAAA,YAAA;AAAA,IAgC5BI,YAAY,0BAAAC,iBAAA;EAAA57E,SAAA,CAAA27E,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA37E,YAAA,CAAAy7E,YAAA;EAEjB,SAAAA,aAAa56C,QAAQ,EAAEqF,EAAE,EAAG;IAAA,IAAA01C,OAAA;IAAAt+F,eAAA,OAAAm+F,YAAA;IAE3BG,OAAA,GAAAD,QAAA,CAAA3kG,IAAA;IAEA,IAAM4jD,KAAK,GAAA/5B,sBAAA,CAAA+6E,OAAA,CAAO;IAElB,IAAI/jC,OAAO,GAAG,IAAI;IAClB,IAAIgkC,sBAAsB,GAAG,GAAG;IAEhC,IAAIjC,cAAc,GAAG,IAAI;IACzB,IAAIkC,kBAAkB,GAAG,aAAa;IACtC,IAAIC,oBAAoB,GAAG,IAAI;IAE/B,IAAIC,IAAI,GAAG,IAAI;IACf,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,OAAO,GAAG,IAAI;IAClB,IAAMlrE,UAAU,GAAGg1B,EAAE,CAACm2C,oBAAoB,EAAE;IAC5C,IAAIC,mBAAmB,GAAG,IAAI;IAC9B,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAMC,WAAW,GAAG,EAAE;IACtB,IAAMC,sBAAsB,GAAG,EAAE;;IAEjC;;IAEA,IAAMC,OAAO,GAAG,IAAIx+C,iBAAiB,EAAE;IACvCw+C,OAAO,CAACt+D,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;IAC1B2+D,OAAO,CAAC/3E,QAAQ,GAAG,IAAIvC,OAAO,EAAE;IAEhC,IAAMu6E,OAAO,GAAG,IAAIz+C,iBAAiB,EAAE;IACvCy+C,OAAO,CAACv+D,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;IAC1B4+D,OAAO,CAACh4E,QAAQ,GAAG,IAAIvC,OAAO,EAAE;IAEhC,IAAMi2E,OAAO,GAAG,CAAEqE,OAAO,EAAEC,OAAO,CAAE;IAEpC,IAAMC,QAAQ,GAAG,IAAI5E,WAAW,EAAE;IAClC4E,QAAQ,CAACx+D,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;IAC3B6+D,QAAQ,CAACx+D,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;IAE3B,IAAI8+D,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,gBAAgB,GAAG,IAAI;;IAE3B;;IAEAlB,OAAA,CAAKmB,gBAAgB,GAAG,IAAI;IAC5BnB,OAAA,CAAKj8C,OAAO,GAAG,KAAK;IAEpBi8C,OAAA,CAAKoB,YAAY,GAAG,KAAK;IAEzBpB,OAAA,CAAKqB,aAAa,GAAG,UAAWzyF,KAAK,EAAG;MAEvC,IAAI0yF,UAAU,GAAGV,WAAW,CAAEhyF,KAAK,CAAE;MAErC,IAAK0yF,UAAU,KAAK1jG,SAAS,EAAG;QAE/B0jG,UAAU,GAAG,IAAItE,eAAe,EAAE;QAClC4D,WAAW,CAAEhyF,KAAK,CAAE,GAAG0yF,UAAU;MAElC;MAEA,OAAOA,UAAU,CAAC9D,iBAAiB,EAAE;IAEtC,CAAC;IAEDwC,OAAA,CAAKuB,iBAAiB,GAAG,UAAW3yF,KAAK,EAAG;MAE3C,IAAI0yF,UAAU,GAAGV,WAAW,CAAEhyF,KAAK,CAAE;MAErC,IAAK0yF,UAAU,KAAK1jG,SAAS,EAAG;QAE/B0jG,UAAU,GAAG,IAAItE,eAAe,EAAE;QAClC4D,WAAW,CAAEhyF,KAAK,CAAE,GAAG0yF,UAAU;MAElC;MAEA,OAAOA,UAAU,CAACzD,YAAY,EAAE;IAEjC,CAAC;IAEDmC,OAAA,CAAKwB,OAAO,GAAG,UAAW5yF,KAAK,EAAG;MAEjC,IAAI0yF,UAAU,GAAGV,WAAW,CAAEhyF,KAAK,CAAE;MAErC,IAAK0yF,UAAU,KAAK1jG,SAAS,EAAG;QAE/B0jG,UAAU,GAAG,IAAItE,eAAe,EAAE;QAClC4D,WAAW,CAAEhyF,KAAK,CAAE,GAAG0yF,UAAU;MAElC;MAEA,OAAOA,UAAU,CAAClE,YAAY,EAAE;IAEjC,CAAC;;IAED;;IAEA,SAASqE,cAAcA,CAAE1yF,KAAK,EAAG;MAEhC,IAAM2yF,eAAe,GAAGb,sBAAsB,CAACryF,OAAO,CAAEO,KAAK,CAACgvF,WAAW,CAAE;MAE3E,IAAK2D,eAAe,KAAK,CAAE,CAAC,EAAG;QAE9B;MAED;MAEA,IAAMJ,UAAU,GAAGV,WAAW,CAAEc,eAAe,CAAE;MAEjD,IAAKJ,UAAU,KAAK1jG,SAAS,EAAG;QAE/B0jG,UAAU,CAACxyF,aAAa,CAAE;UAAE3T,IAAI,EAAE4T,KAAK,CAAC5T,IAAI;UAAE8nB,IAAI,EAAElU,KAAK,CAACgvF;QAAY,CAAC,CAAE;MAE1E;IAED;IAEA,SAAS4D,YAAYA,CAAA,EAAG;MAEvB1lC,OAAO,CAACvtD,mBAAmB,CAAE,QAAQ,EAAE+yF,cAAc,CAAE;MACvDxlC,OAAO,CAACvtD,mBAAmB,CAAE,aAAa,EAAE+yF,cAAc,CAAE;MAC5DxlC,OAAO,CAACvtD,mBAAmB,CAAE,WAAW,EAAE+yF,cAAc,CAAE;MAC1DxlC,OAAO,CAACvtD,mBAAmB,CAAE,SAAS,EAAE+yF,cAAc,CAAE;MACxDxlC,OAAO,CAACvtD,mBAAmB,CAAE,cAAc,EAAE+yF,cAAc,CAAE;MAC7DxlC,OAAO,CAACvtD,mBAAmB,CAAE,YAAY,EAAE+yF,cAAc,CAAE;MAC3DxlC,OAAO,CAACvtD,mBAAmB,CAAE,KAAK,EAAEizF,YAAY,CAAE;MAClD1lC,OAAO,CAACvtD,mBAAmB,CAAE,oBAAoB,EAAEkzF,oBAAoB,CAAE;MAEzE,KAAM,IAAIziG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyhG,WAAW,CAAC1hG,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C,IAAM4+F,WAAW,GAAG8C,sBAAsB,CAAE1hG,CAAC,CAAE;QAE/C,IAAK4+F,WAAW,KAAK,IAAI,EAAG;QAE5B8C,sBAAsB,CAAE1hG,CAAC,CAAE,GAAG,IAAI;QAElCyhG,WAAW,CAAEzhG,CAAC,CAAE,CAAC2+F,UAAU,CAAEC,WAAW,CAAE;MAE3C;MAEAkD,iBAAiB,GAAG,IAAI;MACxBC,gBAAgB,GAAG,IAAI;;MAEvB;;MAEAj8C,QAAQ,CAACU,eAAe,CAAE+6C,mBAAmB,CAAE;MAE/CH,WAAW,GAAG,IAAI;MAClBD,WAAW,GAAG,IAAI;MAClBD,SAAS,GAAG,IAAI;MAChBpkC,OAAO,GAAG,IAAI;MACd0kC,eAAe,GAAG,IAAI;;MAEtB;;MAEA73D,SAAS,CAACpoC,IAAI,EAAE;MAEhBs+C,KAAK,CAACoiD,YAAY,GAAG,KAAK;MAE1BpiD,KAAK,CAAClwC,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAa,CAAC,CAAE;IAE9C;IAEA6kG,OAAA,CAAK6B,yBAAyB,GAAG,UAAWvoG,KAAK,EAAG;MAEnD2mG,sBAAsB,GAAG3mG,KAAK;MAE9B,IAAK0lD,KAAK,CAACoiD,YAAY,KAAK,IAAI,EAAG;QAElCttF,OAAO,CAACC,IAAI,CAAE,uEAAuE,CAAE;MAExF;IAED,CAAC;IAEDisF,OAAA,CAAK8B,qBAAqB,GAAG,UAAWxoG,KAAK,EAAG;MAE/C4mG,kBAAkB,GAAG5mG,KAAK;MAE1B,IAAK0lD,KAAK,CAACoiD,YAAY,KAAK,IAAI,EAAG;QAElCttF,OAAO,CAACC,IAAI,CAAE,0EAA0E,CAAE;MAE3F;IAED,CAAC;IAEDisF,OAAA,CAAK+B,iBAAiB,GAAG,YAAY;MAEpC,OAAO5B,oBAAoB,IAAInC,cAAc;IAE9C,CAAC;IAEDgC,OAAA,CAAKgC,iBAAiB,GAAG,UAAWC,KAAK,EAAG;MAE3C9B,oBAAoB,GAAG8B,KAAK;IAE7B,CAAC;IAEDjC,OAAA,CAAKkC,YAAY,GAAG,YAAY;MAE/B,OAAO5B,WAAW,KAAK,IAAI,GAAGA,WAAW,GAAGC,WAAW;IAExD,CAAC;IAEDP,OAAA,CAAKmC,UAAU,GAAG,YAAY;MAE7B,OAAO9B,SAAS;IAEjB,CAAC;IAEDL,OAAA,CAAKoC,QAAQ,GAAG,YAAY;MAE3B,OAAO5B,OAAO;IAEf,CAAC;IAEDR,OAAA,CAAK9jC,UAAU,GAAG,YAAY;MAE7B,OAAOD,OAAO;IAEf,CAAC;IAED+jC,OAAA,CAAKqC,UAAU;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAA5pG,mBAAA,GAAA+G,IAAA,CAAG,SAAA8iG,QAAiBlpG,KAAK;QAAA,IAAAmpG,SAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,aAAA,EAAAC,mBAAA,EAAAzO,sBAAA;QAAA,OAAAz7F,mBAAA,GAAAyB,IAAA,UAAA0oG,SAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxiG,IAAA,GAAAwiG,SAAA,CAAA9kG,IAAA;YAAA;cAEvCg+D,OAAO,GAAG3iE,KAAK;cAAC,MAEX2iE,OAAO,KAAK,IAAI;gBAAA8mC,SAAA,CAAA9kG,IAAA;gBAAA;cAAA;cAEpByiG,mBAAmB,GAAGz7C,QAAQ,CAACK,eAAe,EAAE;cAEhD2W,OAAO,CAAC7tD,gBAAgB,CAAE,QAAQ,EAAEqzF,cAAc,CAAE;cACpDxlC,OAAO,CAAC7tD,gBAAgB,CAAE,aAAa,EAAEqzF,cAAc,CAAE;cACzDxlC,OAAO,CAAC7tD,gBAAgB,CAAE,WAAW,EAAEqzF,cAAc,CAAE;cACvDxlC,OAAO,CAAC7tD,gBAAgB,CAAE,SAAS,EAAEqzF,cAAc,CAAE;cACrDxlC,OAAO,CAAC7tD,gBAAgB,CAAE,cAAc,EAAEqzF,cAAc,CAAE;cAC1DxlC,OAAO,CAAC7tD,gBAAgB,CAAE,YAAY,EAAEqzF,cAAc,CAAE;cACxDxlC,OAAO,CAAC7tD,gBAAgB,CAAE,KAAK,EAAEuzF,YAAY,CAAE;cAC/C1lC,OAAO,CAAC7tD,gBAAgB,CAAE,oBAAoB,EAAEwzF,oBAAoB,CAAE;cAAC,MAElEtsE,UAAU,CAAC0tE,YAAY,KAAK,IAAI;gBAAAD,SAAA,CAAA9kG,IAAA;gBAAA;cAAA;cAAA8kG,SAAA,CAAA9kG,IAAA;cAAA,OAE9BqsD,EAAE,CAAC24C,gBAAgB,EAAE;YAAA;cAI5B,IAAOhnC,OAAO,CAAC6qB,WAAW,CAACtkD,MAAM,KAAK5kC,SAAS,IAAQqnD,QAAQ,CAACsF,YAAY,CAACC,QAAQ,KAAK,KAAO,EAAG;gBAE7Fi4C,SAAS,GAAG;kBACjBS,SAAS,EAAIjnC,OAAO,CAAC6qB,WAAW,CAACtkD,MAAM,KAAK5kC,SAAS,GAAK03B,UAAU,CAAC4tE,SAAS,GAAG,IAAI;kBACrFzrF,KAAK,EAAE6d,UAAU,CAAC7d,KAAK;kBACvBmR,KAAK,EAAE0M,UAAU,CAAC1M,KAAK;kBACvB+9B,OAAO,EAAErxB,UAAU,CAACqxB,OAAO;kBAC3Bs5C,sBAAsB,EAAEA;gBACzB,CAAC;gBAEDM,WAAW,GAAG,IAAI4C,YAAY,CAAElnC,OAAO,EAAE3R,EAAE,EAAEm4C,SAAS,CAAE;gBAExDxmC,OAAO,CAACmnC,iBAAiB,CAAE;kBAAEC,SAAS,EAAE9C;gBAAY,CAAC,CAAE;gBAEvDI,eAAe,GAAG,IAAIr4E,iBAAiB,CACtCi4E,WAAW,CAAC+C,gBAAgB,EAC5B/C,WAAW,CAACgD,iBAAiB,EAC7B;kBACC3+E,MAAM,EAAEhc,UAAU;kBAClBzN,IAAI,EAAE4M,gBAAgB;kBACtB+c,QAAQ,EAAEmgC,QAAQ,CAACq3B;gBACpB,CAAC,CACD;cAEF,CAAC,MAAM;gBAEFomB,WAAW,GAAG,IAAI;gBAClBC,SAAS,GAAG,IAAI;gBAChBC,aAAa,GAAG,IAAI;gBAExB,IAAKttE,UAAU,CAAC1M,KAAK,EAAG;kBAEvBg6E,aAAa,GAAGttE,UAAU,CAACqxB,OAAO,GAAG,KAAK,GAAG,KAAK;kBAClD+7C,WAAW,GAAGptE,UAAU,CAACqxB,OAAO,GAAG39C,kBAAkB,GAAGD,WAAW;kBACnE45F,SAAS,GAAGrtE,UAAU,CAACqxB,OAAO,GAAGl+C,kBAAkB,GAAGL,eAAe;gBAEtE;gBAEMy6F,mBAAmB,GAAG;kBAC3BW,WAAW,EAAE,KAAK;kBAClBd,WAAW,EAAEE,aAAa;kBAC1B7d,WAAW,EAAEkb;gBACd,CAAC;gBAEDI,SAAS,GAAG,IAAIoD,cAAc,CAAExnC,OAAO,EAAE3R,EAAE,CAAE;gBAE7Cg2C,WAAW,GAAGD,SAAS,CAACqD,qBAAqB,CAAEb,mBAAmB,CAAE;gBAEpE5mC,OAAO,CAACmnC,iBAAiB,CAAE;kBAAE5gE,MAAM,EAAE,CAAE89D,WAAW;gBAAG,CAAC,CAAE;gBAExDK,eAAe,GAAG,IAAIr4E,iBAAiB,CACtCg4E,WAAW,CAACqD,YAAY,EACxBrD,WAAW,CAACsD,aAAa,EACzB;kBACCh/E,MAAM,EAAEhc,UAAU;kBAClBzN,IAAI,EAAE4M,gBAAgB;kBACtBohB,YAAY,EAAE,IAAIs2E,YAAY,CAAEa,WAAW,CAACqD,YAAY,EAAErD,WAAW,CAACsD,aAAa,EAAEjB,SAAS,EAAE/kG,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE8kG,WAAW,CAAE;kBAC/Kx5E,aAAa,EAAEoM,UAAU,CAACqxB,OAAO;kBACjC7hC,QAAQ,EAAEmgC,QAAQ,CAACq3B,cAAc;kBACjClzD,OAAO,EAAEkM,UAAU,CAAC4tE,SAAS,GAAG,CAAC,GAAG;gBACrC,CAAC,CAAE;gBAEE9O,sBAAsB,GAAGnvC,QAAQ,CAACkT,UAAU,CAACrjD,GAAG,CAAE6rF,eAAe,CAAE;gBACzEvM,sBAAsB,CAACyE,mBAAmB,GAAGyH,WAAW,CAAC1H,iBAAiB;cAE3E;cAEA+H,eAAe,CAAC1f,gBAAgB,GAAG,IAAI,CAAC,CAAC;;cAEzC;cACA,IAAI,CAAC4iB,YAAY,CAAE,GAAG,CAAE;cAExB1D,oBAAoB,GAAG,IAAI;cAAC4C,SAAA,CAAA9kG,IAAA;cAAA,OACLg+D,OAAO,CAAC6nC,qBAAqB,CAAE5D,kBAAkB,CAAE;YAAA;cAA1ElC,cAAc,GAAA+E,SAAA,CAAAzlG,IAAA;cAEdwrC,SAAS,CAACshB,UAAU,CAAE6R,OAAO,CAAE;cAC/BnzB,SAAS,CAACiP,KAAK,EAAE;cAEjBiH,KAAK,CAACoiD,YAAY,GAAG,IAAI;cAEzBpiD,KAAK,CAAClwC,aAAa,CAAE;gBAAE3T,IAAI,EAAE;cAAe,CAAC,CAAE;YAAC;YAAA;cAAA,OAAA4nG,SAAA,CAAAriG,IAAA;UAAA;QAAA,GAAA8hG,OAAA;MAAA,CAIjD;MAAA,iBAAAuB,GAAA;QAAA,OAAAzB,IAAA,CAAAvR,KAAA,OAAAhrD,SAAA;MAAA;IAAA;IAED,SAAS67D,oBAAoBA,CAAE7yF,KAAK,EAAG;MAEtC;;MAEA,KAAM,IAAI5P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4P,KAAK,CAACi1F,OAAO,CAAC9kG,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEjD,IAAM4+F,WAAW,GAAGhvF,KAAK,CAACi1F,OAAO,CAAE7kG,CAAC,CAAE;QACtC,IAAMyP,KAAK,GAAGiyF,sBAAsB,CAACryF,OAAO,CAAEuvF,WAAW,CAAE;QAE3D,IAAKnvF,KAAK,IAAI,CAAC,EAAG;UAEjBiyF,sBAAsB,CAAEjyF,KAAK,CAAE,GAAG,IAAI;UACtCgyF,WAAW,CAAEhyF,KAAK,CAAE,CAACE,aAAa,CAAE;YAAE3T,IAAI,EAAE,cAAc;YAAE8nB,IAAI,EAAE86E;UAAY,CAAC,CAAE;QAElF;MAED;;MAEA;;MAEA,KAAM,IAAI5+F,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG4P,KAAK,CAACk1F,KAAK,CAAC/kG,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE/C,IAAM4+F,YAAW,GAAGhvF,KAAK,CAACk1F,KAAK,CAAE9kG,IAAC,CAAE;QAEpC,IAAIuiG,eAAe,GAAGb,sBAAsB,CAACryF,OAAO,CAAEuvF,YAAW,CAAE;QAEnE,IAAK2D,eAAe,KAAK,CAAE,CAAC,EAAG;UAE9B;;UAEA,KAAM,IAAIviG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGyhG,WAAW,CAAC1hG,MAAM,EAAEC,IAAC,EAAG,EAAG;YAE/C,IAAKA,IAAC,IAAI0hG,sBAAsB,CAAC3hG,MAAM,EAAG;cAEzC2hG,sBAAsB,CAACliG,IAAI,CAAEo/F,YAAW,CAAE;cAC1C2D,eAAe,GAAGviG,IAAC;cACnB;YAED,CAAC,MAAM,IAAK0hG,sBAAsB,CAAE1hG,IAAC,CAAE,KAAK,IAAI,EAAG;cAElD0hG,sBAAsB,CAAE1hG,IAAC,CAAE,GAAG4+F,YAAW;cACzC2D,eAAe,GAAGviG,IAAC;cACnB;YAED;UAED;;UAEA;;UAEA,IAAKuiG,eAAe,KAAK,CAAE,CAAC,EAAG;QAEhC;QAEA,IAAMJ,UAAU,GAAGV,WAAW,CAAEc,eAAe,CAAE;QAEjD,IAAKJ,UAAU,EAAG;UAEjBA,UAAU,CAACxyF,aAAa,CAAE;YAAE3T,IAAI,EAAE,WAAW;YAAE8nB,IAAI,EAAE86E;UAAY,CAAC,CAAE;QAErE;MAED;IAED;;IAEA;;IAEA,IAAMmG,UAAU,GAAG,IAAIj0E,OAAO,EAAE;IAChC,IAAMk0E,UAAU,GAAG,IAAIl0E,OAAO,EAAE;;IAEhC;AACF;AACA;AACA;AACA;AACA;IACE,SAASm0E,sBAAsBA,CAAEjzE,MAAM,EAAE2vE,OAAO,EAAEC,OAAO,EAAG;MAE3DmD,UAAU,CAAClxE,qBAAqB,CAAE8tE,OAAO,CAACtvE,WAAW,CAAE;MACvD2yE,UAAU,CAACnxE,qBAAqB,CAAE+tE,OAAO,CAACvvE,WAAW,CAAE;MAEvD,IAAM6yE,GAAG,GAAGH,UAAU,CAAC/sF,UAAU,CAAEgtF,UAAU,CAAE;MAE/C,IAAMG,KAAK,GAAGxD,OAAO,CAACzvE,gBAAgB,CAAChb,QAAQ;MAC/C,IAAMkuF,KAAK,GAAGxD,OAAO,CAAC1vE,gBAAgB,CAAChb,QAAQ;;MAE/C;MACA;MACA;MACA,IAAM2qB,IAAI,GAAGsjE,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;MAC9C,IAAMrjE,GAAG,GAAGqjE,KAAK,CAAE,EAAE,CAAE,IAAKA,KAAK,CAAE,EAAE,CAAE,GAAG,CAAC,CAAE;MAC7C,IAAME,MAAM,GAAG,CAAEF,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAC9C,IAAMG,SAAS,GAAG,CAAEH,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAEjD,IAAMI,OAAO,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAC/C,IAAMK,QAAQ,GAAG,CAAEJ,KAAK,CAAE,CAAC,CAAE,GAAG,CAAC,IAAKA,KAAK,CAAE,CAAC,CAAE;MAChD,IAAM3jE,IAAI,GAAGI,IAAI,GAAG0jE,OAAO;MAC3B,IAAM7jE,KAAK,GAAGG,IAAI,GAAG2jE,QAAQ;;MAE7B;MACA;MACA,IAAMC,OAAO,GAAGP,GAAG,IAAK,CAAEK,OAAO,GAAGC,QAAQ,CAAE;MAC9C,IAAME,OAAO,GAAGD,OAAO,GAAG,CAAEF,OAAO;;MAEnC;MACA5D,OAAO,CAACtvE,WAAW,CAAC8O,SAAS,CAAEnP,MAAM,CAACoE,QAAQ,EAAEpE,MAAM,CAACxF,UAAU,EAAEwF,MAAM,CAACvU,KAAK,CAAE;MACjFuU,MAAM,CAACqU,UAAU,CAAEq/D,OAAO,CAAE;MAC5B1zE,MAAM,CAACuU,UAAU,CAAEk/D,OAAO,CAAE;MAC5BzzE,MAAM,CAACK,WAAW,CAACsM,OAAO,CAAE3M,MAAM,CAACoE,QAAQ,EAAEpE,MAAM,CAACxF,UAAU,EAAEwF,MAAM,CAACvU,KAAK,CAAE;MAC9EuU,MAAM,CAACC,kBAAkB,CAAC9b,IAAI,CAAE6b,MAAM,CAACK,WAAW,CAAE,CAAChW,MAAM,EAAE;;MAE7D;MACA;MACA;MACA,IAAMspF,KAAK,GAAG9jE,IAAI,GAAG4jE,OAAO;MAC5B,IAAMG,IAAI,GAAG9jE,GAAG,GAAG2jE,OAAO;MAC1B,IAAMI,KAAK,GAAGpkE,IAAI,GAAGikE,OAAO;MAC5B,IAAMI,MAAM,GAAGpkE,KAAK,IAAKwjE,GAAG,GAAGQ,OAAO,CAAE;MACxC,IAAMK,IAAI,GAAGV,MAAM,GAAGvjE,GAAG,GAAG8jE,IAAI,GAAGD,KAAK;MACxC,IAAMK,OAAO,GAAGV,SAAS,GAAGxjE,GAAG,GAAG8jE,IAAI,GAAGD,KAAK;MAE9C3zE,MAAM,CAACE,gBAAgB,CAACsP,eAAe,CAAEqkE,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEL,KAAK,EAAEC,IAAI,CAAE;IAErF;IAEA,SAASK,YAAYA,CAAEj0E,MAAM,EAAEyS,MAAM,EAAG;MAEvC,IAAKA,MAAM,KAAK,IAAI,EAAG;QAEtBzS,MAAM,CAACK,WAAW,CAAClc,IAAI,CAAE6b,MAAM,CAACnU,MAAM,CAAE;MAEzC,CAAC,MAAM;QAENmU,MAAM,CAACK,WAAW,CAAC3X,gBAAgB,CAAE+pB,MAAM,CAACpS,WAAW,EAAEL,MAAM,CAACnU,MAAM,CAAE;MAEzE;MAEAmU,MAAM,CAACC,kBAAkB,CAAC9b,IAAI,CAAE6b,MAAM,CAACK,WAAW,CAAE,CAAChW,MAAM,EAAE;IAE9D;IAEAwkF,OAAA,CAAKoF,YAAY,GAAG,UAAWj0E,MAAM,EAAG;MAEvC,IAAK8qC,OAAO,KAAK,IAAI,EAAG;MAExB+kC,QAAQ,CAAChgE,IAAI,GAAG+/D,OAAO,CAAC//D,IAAI,GAAG8/D,OAAO,CAAC9/D,IAAI,GAAG7P,MAAM,CAAC6P,IAAI;MACzDggE,QAAQ,CAAC//D,GAAG,GAAG8/D,OAAO,CAAC9/D,GAAG,GAAG6/D,OAAO,CAAC7/D,GAAG,GAAG9P,MAAM,CAAC8P,GAAG;MAErD,IAAKggE,iBAAiB,KAAKD,QAAQ,CAAChgE,IAAI,IAAIkgE,gBAAgB,KAAKF,QAAQ,CAAC//D,GAAG,EAAG;QAE/E;;QAEAg7B,OAAO,CAACmnC,iBAAiB,CAAE;UAC1BiC,SAAS,EAAErE,QAAQ,CAAChgE,IAAI;UACxBskE,QAAQ,EAAEtE,QAAQ,CAAC//D;QACpB,CAAC,CAAE;QAEHggE,iBAAiB,GAAGD,QAAQ,CAAChgE,IAAI;QACjCkgE,gBAAgB,GAAGF,QAAQ,CAAC//D,GAAG;MAEhC;MAEA,IAAM2C,MAAM,GAAGzS,MAAM,CAACyS,MAAM;MAC5B,IAAM64D,OAAO,GAAGuE,QAAQ,CAACvE,OAAO;MAEhC2I,YAAY,CAAEpE,QAAQ,EAAEp9D,MAAM,CAAE;MAEhC,KAAM,IAAIzkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs9F,OAAO,CAACv9F,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE3CimG,YAAY,CAAE3I,OAAO,CAAEt9F,CAAC,CAAE,EAAEykC,MAAM,CAAE;MAErC;MAEAo9D,QAAQ,CAACxvE,WAAW,CAAC8O,SAAS,CAAE0gE,QAAQ,CAACzrE,QAAQ,EAAEyrE,QAAQ,CAACr1E,UAAU,EAAEq1E,QAAQ,CAACpkF,KAAK,CAAE;;MAExF;;MAEAuU,MAAM,CAACoE,QAAQ,CAACjgB,IAAI,CAAE0rF,QAAQ,CAACzrE,QAAQ,CAAE;MACzCpE,MAAM,CAACxF,UAAU,CAACrW,IAAI,CAAE0rF,QAAQ,CAACr1E,UAAU,CAAE;MAC7CwF,MAAM,CAACvU,KAAK,CAACtH,IAAI,CAAE0rF,QAAQ,CAACpkF,KAAK,CAAE;MACnCuU,MAAM,CAACnU,MAAM,CAAC1H,IAAI,CAAE0rF,QAAQ,CAAChkF,MAAM,CAAE;MACrCmU,MAAM,CAACK,WAAW,CAAClc,IAAI,CAAE0rF,QAAQ,CAACxvE,WAAW,CAAE;MAE/C,IAAMoE,QAAQ,GAAGzE,MAAM,CAACyE,QAAQ;MAEhC,KAAM,IAAIz2B,IAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,IAAC,GAAG8P,CAAC,EAAE9P,IAAC,EAAG,EAAG;QAEnDy2B,QAAQ,CAAEz2B,IAAC,CAAE,CAAC8nC,iBAAiB,CAAE,IAAI,CAAE;MAExC;;MAEA;;MAEA,IAAKw1D,OAAO,CAACv9F,MAAM,KAAK,CAAC,EAAG;QAE3BklG,sBAAsB,CAAEpD,QAAQ,EAAEF,OAAO,EAAEC,OAAO,CAAE;MAErD,CAAC,MAAM;QAEN;;QAEAC,QAAQ,CAAC3vE,gBAAgB,CAAC/b,IAAI,CAAEwrF,OAAO,CAACzvE,gBAAgB,CAAE;MAE3D;IAED,CAAC;IAED2uE,OAAA,CAAKuF,SAAS,GAAG,YAAY;MAE5B,OAAOvE,QAAQ;IAEhB,CAAC;IAEDhB,OAAA,CAAKwF,YAAY,GAAG,YAAY;MAE/B,IAAKlF,WAAW,KAAK,IAAI,EAAG;QAE3B,OAAOA,WAAW,CAACmF,cAAc;MAElC;MAEA,IAAKlF,WAAW,KAAK,IAAI,EAAG;QAE3B,OAAOA,WAAW,CAACkF,cAAc;MAElC;MAEA,OAAO7nG,SAAS;IAEjB,CAAC;IAEDoiG,OAAA,CAAK6D,YAAY,GAAG,UAAW6B,SAAS,EAAG;MAE1C;MACA;;MAEA,IAAKpF,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,CAACmF,cAAc,GAAGC,SAAS;MAEvC;MAEA,IAAKnF,WAAW,KAAK,IAAI,IAAIA,WAAW,CAACkF,cAAc,KAAK7nG,SAAS,EAAG;QAEvE2iG,WAAW,CAACkF,cAAc,GAAGC,SAAS;MAEvC;IAED,CAAC;;IAED;;IAEA,IAAIC,wBAAwB,GAAG,IAAI;IAEnC,SAAS77C,gBAAgBA,CAAEC,IAAI,EAAEC,KAAK,EAAG;MAExCo2C,IAAI,GAAGp2C,KAAK,CAAC47C,aAAa,CAAEzF,oBAAoB,IAAInC,cAAc,CAAE;MACpEwC,OAAO,GAAGx2C,KAAK;MAEf,IAAKo2C,IAAI,KAAK,IAAI,EAAG;QAEpB,IAAMyF,KAAK,GAAGzF,IAAI,CAACyF,KAAK;QAExB,IAAKtF,WAAW,KAAK,IAAI,EAAG;UAE3Bt7C,QAAQ,CAAC6gD,0BAA0B,CAAEnF,eAAe,EAAEJ,WAAW,CAACjR,WAAW,CAAE;UAC/ErqC,QAAQ,CAACU,eAAe,CAAEg7C,eAAe,CAAE;QAE5C;QAEA,IAAIoF,mBAAmB,GAAG,KAAK;;QAE/B;;QAEA,IAAKF,KAAK,CAAC3mG,MAAM,KAAK8hG,QAAQ,CAACvE,OAAO,CAACv9F,MAAM,EAAG;UAE/C8hG,QAAQ,CAACvE,OAAO,CAACv9F,MAAM,GAAG,CAAC;UAC3B6mG,mBAAmB,GAAG,IAAI;QAE3B;QAEA,KAAM,IAAI5mG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0mG,KAAK,CAAC3mG,MAAM,EAAEC,CAAC,EAAG,EAAG;UAEzC,IAAM4jD,IAAI,GAAG8iD,KAAK,CAAE1mG,CAAC,CAAE;UAEvB,IAAI4pB,QAAQ,GAAG,IAAI;UAEnB,IAAKw3E,WAAW,KAAK,IAAI,EAAG;YAE3Bx3E,QAAQ,GAAGw3E,WAAW,CAAC5W,WAAW,CAAE5mC,IAAI,CAAE;UAE3C,CAAC,MAAM;YAEN,IAAMijD,UAAU,GAAG3F,SAAS,CAAC4F,eAAe,CAAE3F,WAAW,EAAEv9C,IAAI,CAAE;YACjEh6B,QAAQ,GAAGi9E,UAAU,CAACj9E,QAAQ;;YAE9B;YACA,IAAK5pB,CAAC,KAAK,CAAC,EAAG;cAEd8lD,QAAQ,CAACihD,uBAAuB,CAC/BvF,eAAe,EACfqF,UAAU,CAAC7N,YAAY,EACvBmI,WAAW,CAAC1H,iBAAiB,GAAGh7F,SAAS,GAAGooG,UAAU,CAACG,mBAAmB,CAAE;cAE7ElhD,QAAQ,CAACU,eAAe,CAAEg7C,eAAe,CAAE;YAE5C;UAED;UAEA,IAAIxvE,MAAM,GAAGsrE,OAAO,CAAEt9F,CAAC,CAAE;UAEzB,IAAKgyB,MAAM,KAAKvzB,SAAS,EAAG;YAE3BuzB,MAAM,GAAG,IAAImxB,iBAAiB,EAAE;YAChCnxB,MAAM,CAACqR,MAAM,CAACL,MAAM,CAAEhjC,CAAC,CAAE;YACzBgyB,MAAM,CAACpI,QAAQ,GAAG,IAAIvC,OAAO,EAAE;YAC/Bi2E,OAAO,CAAEt9F,CAAC,CAAE,GAAGgyB,MAAM;UAEtB;UAEAA,MAAM,CAACnU,MAAM,CAAClF,SAAS,CAAEirC,IAAI,CAACg8C,SAAS,CAAC/hF,MAAM,CAAE;UAChDmU,MAAM,CAACE,gBAAgB,CAACvZ,SAAS,CAAEirC,IAAI,CAAC1xB,gBAAgB,CAAE;UAC1DF,MAAM,CAACpI,QAAQ,CAAClV,GAAG,CAAEkV,QAAQ,CAACxY,CAAC,EAAEwY,QAAQ,CAAClY,CAAC,EAAEkY,QAAQ,CAAC1G,KAAK,EAAE0G,QAAQ,CAACzG,MAAM,CAAE;UAE9E,IAAKnjB,CAAC,KAAK,CAAC,EAAG;YAEd6hG,QAAQ,CAAChkF,MAAM,CAAC1H,IAAI,CAAE6b,MAAM,CAACnU,MAAM,CAAE;UAEtC;UAEA,IAAK+oF,mBAAmB,KAAK,IAAI,EAAG;YAEnC/E,QAAQ,CAACvE,OAAO,CAAC99F,IAAI,CAAEwyB,MAAM,CAAE;UAEhC;QAED;MAED;;MAEA;;MAEA,KAAM,IAAIhyB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGyhG,WAAW,CAAC1hG,MAAM,EAAEC,IAAC,EAAG,EAAG;QAE/C,IAAM4+F,WAAW,GAAG8C,sBAAsB,CAAE1hG,IAAC,CAAE;QAC/C,IAAMmiG,UAAU,GAAGV,WAAW,CAAEzhG,IAAC,CAAE;QAEnC,IAAK4+F,WAAW,KAAK,IAAI,IAAIuD,UAAU,KAAK1jG,SAAS,EAAG;UAEvD0jG,UAAU,CAACx1E,MAAM,CAAEiyE,WAAW,EAAE/zC,KAAK,EAAEm2C,oBAAoB,IAAInC,cAAc,CAAE;QAEhF;MAED;MAEA,IAAK2H,wBAAwB,EAAGA,wBAAwB,CAAE57C,IAAI,EAAEC,KAAK,CAAE;MAEvEw2C,OAAO,GAAG,IAAI;IAEf;IAEA,IAAM13D,SAAS,GAAG,IAAI4gB,cAAc,EAAE;IAEtC5gB,SAAS,CAACqhB,gBAAgB,CAAEL,gBAAgB,CAAE;IAE9Ck2C,OAAA,CAAK71C,gBAAgB,GAAG,UAAWx7B,QAAQ,EAAG;MAE7Cg3E,wBAAwB,GAAGh3E,QAAQ;IAEpC,CAAC;IAEDqxE,OAAA,CAAK35E,OAAO,GAAG,YAAY,CAAC,CAAC;IAAC,OAAA25E,OAAA;EAE/B;EAAC,OAAA99F,YAAA,CAAA29F,YAAA;AAAA,EAtsByB1xF,eAAe;AA0sB1C,SAASi4F,cAAcA,CAAEnhD,QAAQ,EAAEkT,UAAU,EAAG;EAE/C,SAASkuC,kBAAkBA,CAAE9lD,QAAQ,EAAE1N,GAAG,EAAG;IAE5C0N,QAAQ,CAACwX,QAAQ,CAACz+D,KAAK,CAACgc,IAAI,CAAEu9B,GAAG,CAACx0B,KAAK,CAAE;IAEzC,IAAKw0B,GAAG,CAACyzD,KAAK,EAAG;MAEhB/lD,QAAQ,CAACsX,OAAO,CAACv+D,KAAK,GAAGu5C,GAAG,CAAC7R,IAAI;MACjCuf,QAAQ,CAACuX,MAAM,CAACx+D,KAAK,GAAGu5C,GAAG,CAAC5R,GAAG;IAEhC,CAAC,MAAM,IAAK4R,GAAG,CAACsuC,SAAS,EAAG;MAE3B5gC,QAAQ,CAACqX,UAAU,CAACt+D,KAAK,GAAGu5C,GAAG,CAAC0zD,OAAO;IAExC;EAED;EAEA,SAASC,uBAAuBA,CAAEjmD,QAAQ,EAAE3X,QAAQ,EAAE69D,UAAU,EAAEnkF,MAAM,EAAEokF,wBAAwB,EAAG;IAEpG,IAAK99D,QAAQ,CAACwK,mBAAmB,EAAG;MAEnCuzD,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACg+D,qBAAqB,EAAG;MAE5CD,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACi+D,kBAAkB,EAAG;MAEzCF,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;MAC3Ck+D,mBAAmB,CAAEvmD,QAAQ,EAAE3X,QAAQ,CAAE;IAE1C,CAAC,MAAM,IAAKA,QAAQ,CAACm+D,mBAAmB,EAAG;MAE1CJ,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;MAC3Co+D,oBAAoB,CAAEzmD,QAAQ,EAAE3X,QAAQ,CAAE;IAE3C,CAAC,MAAM,IAAKA,QAAQ,CAAC+3C,sBAAsB,EAAG;MAE7CgmB,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;MAC3Cq+D,uBAAuB,CAAE1mD,QAAQ,EAAE3X,QAAQ,CAAE;MAE7C,IAAKA,QAAQ,CAACs+D,sBAAsB,EAAG;QAEtCC,uBAAuB,CAAE5mD,QAAQ,EAAE3X,QAAQ,EAAE89D,wBAAwB,CAAE;MAExE;IAED,CAAC,MAAM,IAAK99D,QAAQ,CAACw+D,oBAAoB,EAAG;MAE3CT,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;MAC3Cy+D,qBAAqB,CAAE9mD,QAAQ,EAAE3X,QAAQ,CAAE;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAACs+C,mBAAmB,EAAG;MAE1Cyf,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC0+C,sBAAsB,EAAG;MAE7Cqf,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;MAC3C0+D,uBAAuB,CAAE/mD,QAAQ,EAAE3X,QAAQ,CAAE;IAE9C,CAAC,MAAM,IAAKA,QAAQ,CAAC2+D,oBAAoB,EAAG;MAE3CZ,qBAAqB,CAAEpmD,QAAQ,EAAE3X,QAAQ,CAAE;IAE5C,CAAC,MAAM,IAAKA,QAAQ,CAAC4+D,mBAAmB,EAAG;MAE1CC,mBAAmB,CAAElnD,QAAQ,EAAE3X,QAAQ,CAAE;MAEzC,IAAKA,QAAQ,CAAC8+D,oBAAoB,EAAG;QAEpCC,mBAAmB,CAAEpnD,QAAQ,EAAE3X,QAAQ,CAAE;MAE1C;IAED,CAAC,MAAM,IAAKA,QAAQ,CAACg/D,gBAAgB,EAAG;MAEvCC,qBAAqB,CAAEtnD,QAAQ,EAAE3X,QAAQ,EAAE69D,UAAU,EAAEnkF,MAAM,CAAE;IAEhE,CAAC,MAAM,IAAKsmB,QAAQ,CAACk/D,gBAAgB,EAAG;MAEvCC,sBAAsB,CAAExnD,QAAQ,EAAE3X,QAAQ,CAAE;IAE7C,CAAC,MAAM,IAAKA,QAAQ,CAACo/D,gBAAgB,EAAG;MAEvCznD,QAAQ,CAACliC,KAAK,CAAC/kB,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACvqB,KAAK,CAAE;MAC3CkiC,QAAQ,CAAClU,OAAO,CAAC/yC,KAAK,GAAGsvC,QAAQ,CAACyD,OAAO;IAE1C,CAAC,MAAM,IAAKzD,QAAQ,CAACqY,gBAAgB,EAAG;MAEvCrY,QAAQ,CAACmZ,kBAAkB,GAAG,KAAK,CAAC,CAAC;IAEtC;EAED;;EAEA,SAAS4kD,qBAAqBA,CAAEpmD,QAAQ,EAAE3X,QAAQ,EAAG;IAEpD2X,QAAQ,CAAClU,OAAO,CAAC/yC,KAAK,GAAGsvC,QAAQ,CAACyD,OAAO;IAEzC,IAAKzD,QAAQ,CAACvqB,KAAK,EAAG;MAErBkiC,QAAQ,CAACqW,OAAO,CAACt9D,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACvqB,KAAK,CAAE;IAE9C;IAEA,IAAKuqB,QAAQ,CAACsG,QAAQ,EAAG;MAExBqR,QAAQ,CAACrR,QAAQ,CAAC51C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACsG,QAAQ,CAAE,CAACl5B,cAAc,CAAE4yB,QAAQ,CAACuG,iBAAiB,CAAE;IAE/F;IAEA,IAAKvG,QAAQ,CAACuH,GAAG,EAAG;MAEnBoQ,QAAQ,CAACpQ,GAAG,CAAC72C,KAAK,GAAGsvC,QAAQ,CAACuH,GAAG;IAElC;IAEA,IAAKvH,QAAQ,CAACyH,QAAQ,EAAG;MAExBkQ,QAAQ,CAAClQ,QAAQ,CAAC/2C,KAAK,GAAGsvC,QAAQ,CAACyH,QAAQ;IAE5C;IAEA,IAAKzH,QAAQ,CAAC8H,OAAO,EAAG;MAEvB6P,QAAQ,CAAC7P,OAAO,CAACp3C,KAAK,GAAGsvC,QAAQ,CAAC8H,OAAO;MACzC6P,QAAQ,CAAC5P,SAAS,CAACr3C,KAAK,GAAGsvC,QAAQ,CAAC+H,SAAS;MAC7C,IAAK/H,QAAQ,CAACuD,IAAI,KAAKloC,QAAQ,EAAGs8C,QAAQ,CAAC5P,SAAS,CAACr3C,KAAK,IAAI,CAAE,CAAC;IAElE;IAEA,IAAKsvC,QAAQ,CAACmI,eAAe,EAAG;MAE/BwP,QAAQ,CAACxP,eAAe,CAACz3C,KAAK,GAAGsvC,QAAQ,CAACmI,eAAe;MACzDwP,QAAQ,CAACvP,iBAAiB,CAAC13C,KAAK,GAAGsvC,QAAQ,CAACoI,iBAAiB;MAC7DuP,QAAQ,CAACtP,gBAAgB,CAAC33C,KAAK,GAAGsvC,QAAQ,CAACqI,gBAAgB;IAE5D;IAEA,IAAKrI,QAAQ,CAACwI,WAAW,EAAG;MAE3BmP,QAAQ,CAACnP,WAAW,CAAC93C,KAAK,GAAGsvC,QAAQ,CAACwI,WAAW;IAElD;IAEA,IAAKxI,QAAQ,CAACgI,SAAS,EAAG;MAEzB2P,QAAQ,CAAC3P,SAAS,CAACt3C,KAAK,GAAGsvC,QAAQ,CAACgI,SAAS;MAC7C2P,QAAQ,CAACzP,WAAW,CAACx3C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACkI,WAAW,CAAE;MACvD,IAAKlI,QAAQ,CAACuD,IAAI,KAAKloC,QAAQ,EAAGs8C,QAAQ,CAACzP,WAAW,CAACx3C,KAAK,CAACqd,MAAM,EAAE;IAEtE;IAEA,IAAKiyB,QAAQ,CAACyI,WAAW,EAAG;MAE3BkP,QAAQ,CAAClP,WAAW,CAAC/3C,KAAK,GAAGsvC,QAAQ,CAACyI,WAAW;IAElD;IAEA,IAAKzI,QAAQ,CAAC4J,SAAS,GAAG,CAAC,EAAG;MAE7B+N,QAAQ,CAAC/N,SAAS,CAACl5C,KAAK,GAAGsvC,QAAQ,CAAC4J,SAAS;IAE9C;IAEA,IAAMhB,MAAM,GAAG2mB,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE,CAAC4I,MAAM;IAEhD,IAAKA,MAAM,EAAG;MAEb+O,QAAQ,CAAC/O,MAAM,CAACl4C,KAAK,GAAGk4C,MAAM;MAE9B+O,QAAQ,CAAC0W,UAAU,CAAC39D,KAAK,GAAKk4C,MAAM,CAACyU,aAAa,IAAIzU,MAAM,CAAC5rB,qBAAqB,KAAK,KAAK,GAAK,CAAE,CAAC,GAAG,CAAC;MAExG26B,QAAQ,CAAC5O,YAAY,CAACr4C,KAAK,GAAGsvC,QAAQ,CAAC+I,YAAY;MACnD4O,QAAQ,CAAC2W,GAAG,CAAC59D,KAAK,GAAGsvC,QAAQ,CAACsuB,GAAG;MACjC3W,QAAQ,CAAC3O,eAAe,CAACt4C,KAAK,GAAGsvC,QAAQ,CAACgJ,eAAe;IAE1D;IAEA,IAAKhJ,QAAQ,CAAC0H,QAAQ,EAAG;MAExBiQ,QAAQ,CAACjQ,QAAQ,CAACh3C,KAAK,GAAGsvC,QAAQ,CAAC0H,QAAQ;;MAE3C;MACA,IAAMy0C,WAAW,GAAK9/B,QAAQ,CAACm3B,uBAAuB,KAAK,IAAI,GAAK/sE,IAAI,CAACC,EAAE,GAAG,CAAC;MAE/EixC,QAAQ,CAAChQ,iBAAiB,CAACj3C,KAAK,GAAGsvC,QAAQ,CAAC2H,iBAAiB,GAAGw0C,WAAW;IAE5E;IAEA,IAAKn8C,QAAQ,CAAC4H,KAAK,EAAG;MAErB+P,QAAQ,CAAC/P,KAAK,CAACl3C,KAAK,GAAGsvC,QAAQ,CAAC4H,KAAK;MACrC+P,QAAQ,CAAC9P,cAAc,CAACn3C,KAAK,GAAGsvC,QAAQ,CAAC6H,cAAc;IAExD;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAIw3D,UAAU;IAEd,IAAKr/D,QAAQ,CAACuH,GAAG,EAAG;MAEnB83D,UAAU,GAAGr/D,QAAQ,CAACuH,GAAG;IAE1B,CAAC,MAAM,IAAKvH,QAAQ,CAACyI,WAAW,EAAG;MAElC42D,UAAU,GAAGr/D,QAAQ,CAACyI,WAAW;IAElC,CAAC,MAAM,IAAKzI,QAAQ,CAACmI,eAAe,EAAG;MAEtCk3D,UAAU,GAAGr/D,QAAQ,CAACmI,eAAe;IAEtC,CAAC,MAAM,IAAKnI,QAAQ,CAACgI,SAAS,EAAG;MAEhCq3D,UAAU,GAAGr/D,QAAQ,CAACgI,SAAS;IAEhC,CAAC,MAAM,IAAKhI,QAAQ,CAAC8H,OAAO,EAAG;MAE9Bu3D,UAAU,GAAGr/D,QAAQ,CAAC8H,OAAO;IAE9B,CAAC,MAAM,IAAK9H,QAAQ,CAACsI,YAAY,EAAG;MAEnC+2D,UAAU,GAAGr/D,QAAQ,CAACsI,YAAY;IAEnC,CAAC,MAAM,IAAKtI,QAAQ,CAACuI,YAAY,EAAG;MAEnC82D,UAAU,GAAGr/D,QAAQ,CAACuI,YAAY;IAEnC,CAAC,MAAM,IAAKvI,QAAQ,CAACyH,QAAQ,EAAG;MAE/B43D,UAAU,GAAGr/D,QAAQ,CAACyH,QAAQ;IAE/B,CAAC,MAAM,IAAKzH,QAAQ,CAACwI,WAAW,EAAG;MAElC62D,UAAU,GAAGr/D,QAAQ,CAACwI,WAAW;IAElC,CAAC,MAAM,IAAKxI,QAAQ,CAAC8G,YAAY,EAAG;MAEnCu4D,UAAU,GAAGr/D,QAAQ,CAAC8G,YAAY;IAEnC,CAAC,MAAM,IAAK9G,QAAQ,CAACgH,kBAAkB,EAAG;MAEzCq4D,UAAU,GAAGr/D,QAAQ,CAACgH,kBAAkB;IAEzC,CAAC,MAAM,IAAKhH,QAAQ,CAAC+G,qBAAqB,EAAG;MAE5Cs4D,UAAU,GAAGr/D,QAAQ,CAAC+G,qBAAqB;IAE5C,CAAC,MAAM,IAAK/G,QAAQ,CAACqH,cAAc,EAAG;MAErCg4D,UAAU,GAAGr/D,QAAQ,CAACqH,cAAc;IAErC,CAAC,MAAM,IAAKrH,QAAQ,CAACsH,uBAAuB,EAAG;MAE9C+3D,UAAU,GAAGr/D,QAAQ,CAACsH,uBAAuB;IAE9C,CAAC,MAAM,IAAKtH,QAAQ,CAAC0I,oBAAoB,EAAG;MAE3C22D,UAAU,GAAGr/D,QAAQ,CAAC0I,oBAAoB;IAE3C,CAAC,MAAM,IAAK1I,QAAQ,CAAC2I,gBAAgB,EAAG;MAEvC02D,UAAU,GAAGr/D,QAAQ,CAAC2I,gBAAgB;IAEvC,CAAC,MAAM,IAAK3I,QAAQ,CAACmJ,eAAe,EAAG;MAEtCk2D,UAAU,GAAGr/D,QAAQ,CAACmJ,eAAe;IAEtC,CAAC,MAAM,IAAKnJ,QAAQ,CAACqJ,YAAY,EAAG;MAEnCg2D,UAAU,GAAGr/D,QAAQ,CAACqJ,YAAY;IAEnC,CAAC,MAAM,IAAKrJ,QAAQ,CAACqyB,aAAa,EAAG;MAEpCgtC,UAAU,GAAGr/D,QAAQ,CAACqyB,aAAa;IAEpC,CAAC,MAAM,IAAKryB,QAAQ,CAACsyB,iBAAiB,EAAG;MAExC+sC,UAAU,GAAGr/D,QAAQ,CAACsyB,iBAAiB;IAExC;IAEA,IAAK+sC,UAAU,KAAKrqG,SAAS,EAAG;MAE/B;MACA,IAAKqqG,UAAU,CAACt/E,mBAAmB,EAAG;QAErCs/E,UAAU,GAAGA,UAAU,CAACj/E,OAAO;MAEhC;MAEA,IAAKi/E,UAAU,CAAC5iF,gBAAgB,KAAK,IAAI,EAAG;QAE3C4iF,UAAU,CAACniF,YAAY,EAAE;MAE1B;MAEAy6B,QAAQ,CAACsW,WAAW,CAACv9D,KAAK,CAACgc,IAAI,CAAE2yF,UAAU,CAACjrF,MAAM,CAAE;IAErD;;IAEA;IACA;IACA;;IAEA,IAAIkrF,WAAW;IAEf,IAAKt/D,QAAQ,CAAC4H,KAAK,EAAG;MAErB03D,WAAW,GAAGt/D,QAAQ,CAAC4H,KAAK;IAE7B,CAAC,MAAM,IAAK5H,QAAQ,CAAC0H,QAAQ,EAAG;MAE/B43D,WAAW,GAAGt/D,QAAQ,CAAC0H,QAAQ;IAEhC;IAEA,IAAK43D,WAAW,KAAKtqG,SAAS,EAAG;MAEhC;MACA,IAAKsqG,WAAW,CAACv/E,mBAAmB,EAAG;QAEtCu/E,WAAW,GAAGA,WAAW,CAACl/E,OAAO;MAElC;MAEA,IAAKk/E,WAAW,CAAC7iF,gBAAgB,KAAK,IAAI,EAAG;QAE5C6iF,WAAW,CAACpiF,YAAY,EAAE;MAE3B;MAEAy6B,QAAQ,CAACuW,YAAY,CAACx9D,KAAK,CAACgc,IAAI,CAAE4yF,WAAW,CAAClrF,MAAM,CAAE;IAEvD;EAED;EAEA,SAASyqF,mBAAmBA,CAAElnD,QAAQ,EAAE3X,QAAQ,EAAG;IAElD2X,QAAQ,CAACqW,OAAO,CAACt9D,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACvqB,KAAK,CAAE;IAC7CkiC,QAAQ,CAAClU,OAAO,CAAC/yC,KAAK,GAAGsvC,QAAQ,CAACyD,OAAO;EAE1C;EAEA,SAASs7D,mBAAmBA,CAAEpnD,QAAQ,EAAE3X,QAAQ,EAAG;IAElD2X,QAAQ,CAACjO,QAAQ,CAACh5C,KAAK,GAAGsvC,QAAQ,CAAC0J,QAAQ;IAC3CiO,QAAQ,CAAC8Z,SAAS,CAAC/gE,KAAK,GAAGsvC,QAAQ,CAAC0J,QAAQ,GAAG1J,QAAQ,CAAC2J,OAAO;IAC/DgO,QAAQ,CAAC3jC,KAAK,CAACtjB,KAAK,GAAGsvC,QAAQ,CAAChsB,KAAK;EAEtC;EAEA,SAASirF,qBAAqBA,CAAEtnD,QAAQ,EAAE3X,QAAQ,EAAE69D,UAAU,EAAEnkF,MAAM,EAAG;IAExEi+B,QAAQ,CAACqW,OAAO,CAACt9D,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACvqB,KAAK,CAAE;IAC7CkiC,QAAQ,CAAClU,OAAO,CAAC/yC,KAAK,GAAGsvC,QAAQ,CAACyD,OAAO;IACzCkU,QAAQ,CAACtgC,IAAI,CAAC3mB,KAAK,GAAGsvC,QAAQ,CAAC3oB,IAAI,GAAGwmF,UAAU;IAChDlmD,QAAQ,CAAC3jC,KAAK,CAACtjB,KAAK,GAAGgpB,MAAM,GAAG,GAAG;IAEnC,IAAKsmB,QAAQ,CAACuH,GAAG,EAAG;MAEnBoQ,QAAQ,CAACpQ,GAAG,CAAC72C,KAAK,GAAGsvC,QAAQ,CAACuH,GAAG;IAElC;IAEA,IAAKvH,QAAQ,CAACyH,QAAQ,EAAG;MAExBkQ,QAAQ,CAAClQ,QAAQ,CAAC/2C,KAAK,GAAGsvC,QAAQ,CAACyH,QAAQ;IAE5C;IAEA,IAAKzH,QAAQ,CAAC4J,SAAS,GAAG,CAAC,EAAG;MAE7B+N,QAAQ,CAAC/N,SAAS,CAACl5C,KAAK,GAAGsvC,QAAQ,CAAC4J,SAAS;IAE9C;;IAEA;IACA;IACA;;IAEA,IAAIy1D,UAAU;IAEd,IAAKr/D,QAAQ,CAACuH,GAAG,EAAG;MAEnB83D,UAAU,GAAGr/D,QAAQ,CAACuH,GAAG;IAE1B,CAAC,MAAM,IAAKvH,QAAQ,CAACyH,QAAQ,EAAG;MAE/B43D,UAAU,GAAGr/D,QAAQ,CAACyH,QAAQ;IAE/B;IAEA,IAAK43D,UAAU,KAAKrqG,SAAS,EAAG;MAE/B,IAAKqqG,UAAU,CAAC5iF,gBAAgB,KAAK,IAAI,EAAG;QAE3C4iF,UAAU,CAACniF,YAAY,EAAE;MAE1B;MAEAy6B,QAAQ,CAACsW,WAAW,CAACv9D,KAAK,CAACgc,IAAI,CAAE2yF,UAAU,CAACjrF,MAAM,CAAE;IAErD;EAED;EAEA,SAAS+qF,sBAAsBA,CAAExnD,QAAQ,EAAE3X,QAAQ,EAAG;IAErD2X,QAAQ,CAACqW,OAAO,CAACt9D,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACvqB,KAAK,CAAE;IAC7CkiC,QAAQ,CAAClU,OAAO,CAAC/yC,KAAK,GAAGsvC,QAAQ,CAACyD,OAAO;IACzCkU,QAAQ,CAAC9jC,QAAQ,CAACnjB,KAAK,GAAGsvC,QAAQ,CAACnsB,QAAQ;IAE3C,IAAKmsB,QAAQ,CAACuH,GAAG,EAAG;MAEnBoQ,QAAQ,CAACpQ,GAAG,CAAC72C,KAAK,GAAGsvC,QAAQ,CAACuH,GAAG;IAElC;IAEA,IAAKvH,QAAQ,CAACyH,QAAQ,EAAG;MAExBkQ,QAAQ,CAAClQ,QAAQ,CAAC/2C,KAAK,GAAGsvC,QAAQ,CAACyH,QAAQ;IAE5C;IAEA,IAAKzH,QAAQ,CAAC4J,SAAS,GAAG,CAAC,EAAG;MAE7B+N,QAAQ,CAAC/N,SAAS,CAACl5C,KAAK,GAAGsvC,QAAQ,CAAC4J,SAAS;IAE9C;;IAEA;IACA;IACA;;IAEA,IAAIy1D,UAAU;IAEd,IAAKr/D,QAAQ,CAACuH,GAAG,EAAG;MAEnB83D,UAAU,GAAGr/D,QAAQ,CAACuH,GAAG;IAE1B,CAAC,MAAM,IAAKvH,QAAQ,CAACyH,QAAQ,EAAG;MAE/B43D,UAAU,GAAGr/D,QAAQ,CAACyH,QAAQ;IAE/B;IAEA,IAAK43D,UAAU,KAAKrqG,SAAS,EAAG;MAE/B,IAAKqqG,UAAU,CAAC5iF,gBAAgB,KAAK,IAAI,EAAG;QAE3C4iF,UAAU,CAACniF,YAAY,EAAE;MAE1B;MAEAy6B,QAAQ,CAACsW,WAAW,CAACv9D,KAAK,CAACgc,IAAI,CAAE2yF,UAAU,CAACjrF,MAAM,CAAE;IAErD;EAED;EAEA,SAASgqF,oBAAoBA,CAAEzmD,QAAQ,EAAE3X,QAAQ,EAAG;IAEnD2X,QAAQ,CAACnR,QAAQ,CAAC91C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACwG,QAAQ,CAAE;IACjDmR,QAAQ,CAAChR,SAAS,CAACj2C,KAAK,GAAG+V,IAAI,CAACa,GAAG,CAAE04B,QAAQ,CAAC2G,SAAS,EAAE,IAAI,CAAE,CAAC,CAAC;EAElE;;EAEA,SAASu3D,mBAAmBA,CAAEvmD,QAAQ,EAAE3X,QAAQ,EAAG;IAElD,IAAKA,QAAQ,CAACiJ,WAAW,EAAG;MAE3B0O,QAAQ,CAAC1O,WAAW,CAACv4C,KAAK,GAAGsvC,QAAQ,CAACiJ,WAAW;IAElD;EAED;EAEA,SAASo1D,uBAAuBA,CAAE1mD,QAAQ,EAAE3X,QAAQ,EAAG;IAEtD2X,QAAQ,CAAC1R,SAAS,CAACv1C,KAAK,GAAGsvC,QAAQ,CAACiG,SAAS;IAC7C0R,QAAQ,CAACzR,SAAS,CAACx1C,KAAK,GAAGsvC,QAAQ,CAACkG,SAAS;IAE7C,IAAKlG,QAAQ,CAACsI,YAAY,EAAG;MAE5BqP,QAAQ,CAACrP,YAAY,CAAC53C,KAAK,GAAGsvC,QAAQ,CAACsI,YAAY;IAEpD;IAEA,IAAKtI,QAAQ,CAACuI,YAAY,EAAG;MAE5BoP,QAAQ,CAACpP,YAAY,CAAC73C,KAAK,GAAGsvC,QAAQ,CAACuI,YAAY;IAEpD;IAEA,IAAMK,MAAM,GAAG2mB,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE,CAAC4I,MAAM;IAEhD,IAAKA,MAAM,EAAG;MAEb;MACA+O,QAAQ,CAAC7O,eAAe,CAACp4C,KAAK,GAAGsvC,QAAQ,CAAC8I,eAAe;IAE1D;EAED;EAEA,SAASy1D,uBAAuBA,CAAE5mD,QAAQ,EAAE3X,QAAQ,EAAE89D,wBAAwB,EAAG;IAEhFnmD,QAAQ,CAAC2W,GAAG,CAAC59D,KAAK,GAAGsvC,QAAQ,CAACsuB,GAAG,CAAC,CAAC;;IAEnC,IAAKtuB,QAAQ,CAACmG,KAAK,GAAG,CAAC,EAAG;MAEzBwR,QAAQ,CAACvR,UAAU,CAAC11C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACoG,UAAU,CAAE,CAACh5B,cAAc,CAAE4yB,QAAQ,CAACmG,KAAK,CAAE;MAEtFwR,QAAQ,CAACtR,cAAc,CAAC31C,KAAK,GAAGsvC,QAAQ,CAACqG,cAAc;MAEvD,IAAKrG,QAAQ,CAACqyB,aAAa,EAAG;QAE7B1a,QAAQ,CAAC0a,aAAa,CAAC3hE,KAAK,GAAGsvC,QAAQ,CAACqyB,aAAa;MAEtD;MAEA,IAAKryB,QAAQ,CAACsyB,iBAAiB,EAAG;QAEjC3a,QAAQ,CAAC2a,iBAAiB,CAAC5hE,KAAK,GAAGsvC,QAAQ,CAACsyB,iBAAiB;MAE9D;IAED;IAEA,IAAKtyB,QAAQ,CAAC4G,SAAS,GAAG,CAAC,EAAG;MAE7B+Q,QAAQ,CAAC/Q,SAAS,CAACl2C,KAAK,GAAGsvC,QAAQ,CAAC4G,SAAS;MAC7C+Q,QAAQ,CAAC9Q,kBAAkB,CAACn2C,KAAK,GAAGsvC,QAAQ,CAAC6G,kBAAkB;MAE/D,IAAK7G,QAAQ,CAAC8G,YAAY,EAAG;QAE5B6Q,QAAQ,CAAC7Q,YAAY,CAACp2C,KAAK,GAAGsvC,QAAQ,CAAC8G,YAAY;MAEpD;MAEA,IAAK9G,QAAQ,CAAC+G,qBAAqB,EAAG;QAErC4Q,QAAQ,CAAC5Q,qBAAqB,CAACr2C,KAAK,GAAGsvC,QAAQ,CAAC+G,qBAAqB;MAEtE;MAEA,IAAK/G,QAAQ,CAACgH,kBAAkB,EAAG;QAElC2Q,QAAQ,CAAC1Q,oBAAoB,CAACv2C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACiH,oBAAoB,CAAE;QACzE0Q,QAAQ,CAAC3Q,kBAAkB,CAACt2C,KAAK,GAAGsvC,QAAQ,CAACgH,kBAAkB;QAE/D,IAAKhH,QAAQ,CAACuD,IAAI,KAAKloC,QAAQ,EAAG;UAEjCs8C,QAAQ,CAAC1Q,oBAAoB,CAACv2C,KAAK,CAACqd,MAAM,EAAE;QAE7C;MAED;IAED;IAEA,IAAKiyB,QAAQ,CAACkH,WAAW,GAAG,CAAC,EAAG;MAE/ByQ,QAAQ,CAACzQ,WAAW,CAACx2C,KAAK,GAAGsvC,QAAQ,CAACkH,WAAW;MACjDyQ,QAAQ,CAACxQ,cAAc,CAACz2C,KAAK,GAAGsvC,QAAQ,CAACmH,cAAc;MACvDwQ,QAAQ,CAACwa,2BAA2B,CAACzhE,KAAK,GAAGsvC,QAAQ,CAACoH,yBAAyB,CAAE,CAAC,CAAE;MACpFuQ,QAAQ,CAACya,2BAA2B,CAAC1hE,KAAK,GAAGsvC,QAAQ,CAACoH,yBAAyB,CAAE,CAAC,CAAE;MAEpF,IAAKpH,QAAQ,CAACqH,cAAc,EAAG;QAE9BsQ,QAAQ,CAACtQ,cAAc,CAAC32C,KAAK,GAAGsvC,QAAQ,CAACqH,cAAc;MAExD;MAEA,IAAKrH,QAAQ,CAACsH,uBAAuB,EAAG;QAEvCqQ,QAAQ,CAACrQ,uBAAuB,CAAC52C,KAAK,GAAGsvC,QAAQ,CAACsH,uBAAuB;MAE1E;IAED;IAEA,IAAKtH,QAAQ,CAACkJ,YAAY,GAAG,CAAC,EAAG;MAEhCyO,QAAQ,CAACzO,YAAY,CAACx4C,KAAK,GAAGsvC,QAAQ,CAACkJ,YAAY;MACnDyO,QAAQ,CAAC6a,sBAAsB,CAAC9hE,KAAK,GAAGotG,wBAAwB,CAAC19E,OAAO;MACxEu3B,QAAQ,CAAC4a,uBAAuB,CAAC7hE,KAAK,CAACua,GAAG,CAAE6yF,wBAAwB,CAACrkF,KAAK,EAAEqkF,wBAAwB,CAACpkF,MAAM,CAAE;MAE7G,IAAKsmB,QAAQ,CAACmJ,eAAe,EAAG;QAE/BwO,QAAQ,CAACxO,eAAe,CAACz4C,KAAK,GAAGsvC,QAAQ,CAACmJ,eAAe;MAE1D;MAEAwO,QAAQ,CAACvO,SAAS,CAAC14C,KAAK,GAAGsvC,QAAQ,CAACoJ,SAAS;MAE7C,IAAKpJ,QAAQ,CAACqJ,YAAY,EAAG;QAE5BsO,QAAQ,CAACtO,YAAY,CAAC34C,KAAK,GAAGsvC,QAAQ,CAACqJ,YAAY;MAEpD;MAEAsO,QAAQ,CAACrO,mBAAmB,CAAC54C,KAAK,GAAGsvC,QAAQ,CAACsJ,mBAAmB;MACjEqO,QAAQ,CAACpO,gBAAgB,CAAC74C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAACuJ,gBAAgB,CAAE;IAElE;IAEAoO,QAAQ,CAAClR,iBAAiB,CAAC/1C,KAAK,GAAGsvC,QAAQ,CAACyG,iBAAiB;IAC7DkR,QAAQ,CAACjR,aAAa,CAACh2C,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAAC0G,aAAa,CAAE;IAE3D,IAAK1G,QAAQ,CAAC0I,oBAAoB,EAAG;MAEpCiP,QAAQ,CAACjP,oBAAoB,CAACh4C,KAAK,GAAGsvC,QAAQ,CAAC0I,oBAAoB;IAEpE;IAEA,IAAK1I,QAAQ,CAAC2I,gBAAgB,EAAG;MAEhCgP,QAAQ,CAAChP,gBAAgB,CAACj4C,KAAK,GAAGsvC,QAAQ,CAAC2I,gBAAgB;IAE5D;EAED;EAEA,SAAS81D,qBAAqBA,CAAE9mD,QAAQ,EAAE3X,QAAQ,EAAG;IAEpD,IAAKA,QAAQ,CAACwH,MAAM,EAAG;MAEtBmQ,QAAQ,CAACnQ,MAAM,CAAC92C,KAAK,GAAGsvC,QAAQ,CAACwH,MAAM;IAExC;EAED;EAEA,SAASk3D,uBAAuBA,CAAE/mD,QAAQ,EAAE3X,QAAQ,EAAG;IAEtD2X,QAAQ,CAACma,iBAAiB,CAACphE,KAAK,CAACgc,IAAI,CAAEszB,QAAQ,CAAC8xB,iBAAiB,CAAE;IACnEna,QAAQ,CAACoa,YAAY,CAACrhE,KAAK,GAAGsvC,QAAQ,CAAC+xB,YAAY;IACnDpa,QAAQ,CAACqa,WAAW,CAACthE,KAAK,GAAGsvC,QAAQ,CAACgyB,WAAW;EAElD;EAEA,OAAO;IACNyrC,kBAAkB,EAAEA,kBAAkB;IACtCG,uBAAuB,EAAEA;EAC1B,CAAC;AAEF;AAEA,SAAS2B,mBAAmBA,CAAE79C,EAAE,EAAEvsD,IAAI,EAAEwsD,YAAY,EAAEvtD,KAAK,EAAG;EAE7D,IAAIytD,OAAO,GAAG,CAAC,CAAC;EAChB,IAAI29C,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIC,sBAAsB,GAAG,EAAE;EAE/B,IAAMC,gBAAgB,GAAK/9C,YAAY,CAACC,QAAQ,GAAKF,EAAE,CAACv0B,YAAY,CAAE,KAAK,CAAE,GAAG,CAAC,CAAC,CAAC;;EAEnF,SAASwyE,IAAIA,CAAEhX,aAAa,EAAE/zB,OAAO,EAAG;IAEvC,IAAMgrC,YAAY,GAAGhrC,OAAO,CAACA,OAAO;IACpCxgE,KAAK,CAAC00F,mBAAmB,CAAEH,aAAa,EAAEiX,YAAY,CAAE;EAEzD;EAEA,SAAS18E,MAAMA,CAAEylE,aAAa,EAAE/zB,OAAO,EAAG;IAEzC,IAAIhgD,MAAM,GAAGitC,OAAO,CAAE8mC,aAAa,CAAClrD,EAAE,CAAE;IAExC,IAAK7oB,MAAM,KAAK5f,SAAS,EAAG;MAE3B6qG,oBAAoB,CAAElX,aAAa,CAAE;MAErC/zE,MAAM,GAAGmtC,YAAY,CAAE4mC,aAAa,CAAE;MACtC9mC,OAAO,CAAE8mC,aAAa,CAAClrD,EAAE,CAAE,GAAG7oB,MAAM;MAEpC+zE,aAAa,CAACnjF,gBAAgB,CAAE,SAAS,EAAEs6F,uBAAuB,CAAE;IAErE;;IAEA;;IAEA,IAAMF,YAAY,GAAGhrC,OAAO,CAACA,OAAO;IACpCxgE,KAAK,CAACs0F,gBAAgB,CAAEC,aAAa,EAAEiX,YAAY,CAAE;;IAErD;;IAEA,IAAMx+C,KAAK,GAAGjsD,IAAI,CAAC6nD,MAAM,CAACoE,KAAK;IAE/B,IAAKo+C,UAAU,CAAE7W,aAAa,CAAClrD,EAAE,CAAE,KAAK2jB,KAAK,EAAG;MAE/C2+C,gBAAgB,CAAEpX,aAAa,CAAE;MAEjC6W,UAAU,CAAE7W,aAAa,CAAClrD,EAAE,CAAE,GAAG2jB,KAAK;IAEvC;EAED;EAEA,SAASW,YAAYA,CAAE4mC,aAAa,EAAG;IAEtC;;IAEA,IAAMqX,iBAAiB,GAAGC,yBAAyB,EAAE;IACrDtX,aAAa,CAACI,mBAAmB,GAAGiX,iBAAiB;IAErD,IAAMprF,MAAM,GAAG8sC,EAAE,CAACK,YAAY,EAAE;IAChC,IAAM1qC,IAAI,GAAGsxE,aAAa,CAACuX,MAAM;IACjC,IAAMl1D,KAAK,GAAG29C,aAAa,CAAC39C,KAAK;IAEjC0W,EAAE,CAACO,UAAU,CAAE,KAAK,EAAErtC,MAAM,CAAE;IAC9B8sC,EAAE,CAACQ,UAAU,CAAE,KAAK,EAAE7qC,IAAI,EAAE2zB,KAAK,CAAE;IACnC0W,EAAE,CAACO,UAAU,CAAE,KAAK,EAAE,IAAI,CAAE;IAC5BP,EAAE,CAACy+C,cAAc,CAAE,KAAK,EAAEH,iBAAiB,EAAEprF,MAAM,CAAE;IAErD,OAAOA,MAAM;EAEd;EAEA,SAASqrF,yBAAyBA,CAAA,EAAG;IAEpC,KAAM,IAAI1pG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmpG,gBAAgB,EAAEnpG,CAAC,EAAG,EAAG;MAE7C,IAAKkpG,sBAAsB,CAAC75F,OAAO,CAAErP,CAAC,CAAE,KAAK,CAAE,CAAC,EAAG;QAElDkpG,sBAAsB,CAAC1pG,IAAI,CAAEQ,CAAC,CAAE;QAChC,OAAOA,CAAC;MAET;IAED;IAEA2U,OAAO,CAACjX,KAAK,CAAE,uFAAuF,CAAE;IAExG,OAAO,CAAC;EAET;EAEA,SAAS8rG,gBAAgBA,CAAEpX,aAAa,EAAG;IAE1C,IAAM/zE,MAAM,GAAGitC,OAAO,CAAE8mC,aAAa,CAAClrD,EAAE,CAAE;IAC1C,IAAMka,QAAQ,GAAGgxC,aAAa,CAAChxC,QAAQ;IACvC,IAAMvX,KAAK,GAAGuoD,aAAa,CAACyX,OAAO;IAEnC1+C,EAAE,CAACO,UAAU,CAAE,KAAK,EAAErtC,MAAM,CAAE;IAE9B,KAAM,IAAIre,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGq1B,QAAQ,CAACrhD,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;MAErD,IAAM8iD,OAAO,GAAG1B,QAAQ,CAAEphD,CAAC,CAAE;;MAE7B;;MAEA,IAAK8pG,iBAAiB,CAAEhnD,OAAO,EAAE9iD,CAAC,EAAE6pC,KAAK,CAAE,KAAK,IAAI,EAAG;QAEtD,IAAM1vC,OAAK,GAAG2oD,OAAO,CAAC3oD,KAAK;QAC3B,IAAMye,MAAM,GAAGkqC,OAAO,CAACinD,QAAQ;QAE/B,IAAK,OAAO5vG,OAAK,KAAK,QAAQ,EAAG;UAEhC2oD,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAG7vG,OAAK;UAC3BgxD,EAAE,CAACY,aAAa,CAAE,KAAK,EAAEnzC,MAAM,EAAEkqC,OAAO,CAACknD,MAAM,CAAE;QAElD,CAAC,MAAM;UAEN,IAAKlnD,OAAO,CAAC3oD,KAAK,CAACof,SAAS,EAAG;YAE9B;;YAEAupC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,CAAC,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YACjD4rC,OAAO,CAACknD,MAAM,CAAE,EAAE,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;YAClD4rC,OAAO,CAACknD,MAAM,CAAE,EAAE,CAAE,GAAGlnD,OAAO,CAAC3oD,KAAK,CAAC+c,QAAQ,CAAE,CAAC,CAAE;UAEnD,CAAC,MAAM;YAEN/c,OAAK,CAAC0e,OAAO,CAAEiqC,OAAO,CAACknD,MAAM,CAAE;UAEhC;UAEA7+C,EAAE,CAACY,aAAa,CAAE,KAAK,EAAEnzC,MAAM,EAAEkqC,OAAO,CAACknD,MAAM,CAAE;QAElD;MAED;IAED;IAEA7+C,EAAE,CAACO,UAAU,CAAE,KAAK,EAAE,IAAI,CAAE;EAE7B;EAEA,SAASo+C,iBAAiBA,CAAEhnD,OAAO,EAAErzC,KAAK,EAAEo6B,KAAK,EAAG;IAEnD,IAAM1vC,KAAK,GAAG2oD,OAAO,CAAC3oD,KAAK;IAE3B,IAAK0vC,KAAK,CAAEp6B,KAAK,CAAE,KAAKhR,SAAS,EAAG;MAEnC;;MAEA,IAAK,OAAOtE,KAAK,KAAK,QAAQ,EAAG;QAEhC0vC,KAAK,CAAEp6B,KAAK,CAAE,GAAGtV,KAAK;MAEvB,CAAC,MAAM;QAEN0vC,KAAK,CAAEp6B,KAAK,CAAE,GAAGtV,KAAK,CAAC+b,KAAK,EAAE;MAE/B;MAEA,OAAO,IAAI;IAEZ,CAAC,MAAM;MAEN;;MAEA,IAAK,OAAO/b,KAAK,KAAK,QAAQ,EAAG;QAEhC,IAAK0vC,KAAK,CAAEp6B,KAAK,CAAE,KAAKtV,KAAK,EAAG;UAE/B0vC,KAAK,CAAEp6B,KAAK,CAAE,GAAGtV,KAAK;UACtB,OAAO,IAAI;QAEZ;MAED,CAAC,MAAM;QAEN,IAAM8vG,YAAY,GAAGpgE,KAAK,CAAEp6B,KAAK,CAAE;QAEnC,IAAKw6F,YAAY,CAACvxF,MAAM,CAAEve,KAAK,CAAE,KAAK,KAAK,EAAG;UAE7C8vG,YAAY,CAAC9zF,IAAI,CAAEhc,KAAK,CAAE;UAC1B,OAAO,IAAI;QAEZ;MAED;IAED;IAEA,OAAO,KAAK;EAEb;EAEA,SAASmvG,oBAAoBA,CAAElX,aAAa,EAAG;IAE9C;IACA;;IAEA,IAAMhxC,QAAQ,GAAGgxC,aAAa,CAAChxC,QAAQ;IAEvC,IAAIxoC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChB,IAAMsxF,SAAS,GAAG,EAAE,CAAC,CAAC;IACtB,IAAIC,WAAW,GAAG,CAAC,CAAC,CAAC;;IAErB,KAAM,IAAInqG,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGsxC,QAAQ,CAACrhD,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEnD,IAAM8iD,OAAO,GAAG1B,QAAQ,CAAEphD,CAAC,CAAE;MAC7B,IAAMpB,KAAI,GAAGwrG,cAAc,CAAEtnD,OAAO,CAAE;;MAEtC;;MAEAA,OAAO,CAACknD,MAAM,GAAG,IAAIl1F,YAAY,CAAElW,KAAI,CAACyrG,OAAO,GAAGv1F,YAAY,CAAC+2C,iBAAiB,CAAE;MAClF/I,OAAO,CAACinD,QAAQ,GAAGnxF,MAAM;;MAEzB;;MAEA,IAAK5Y,CAAC,GAAG,CAAC,EAAG;QAEZmqG,WAAW,GAAGvxF,MAAM,GAAGsxF,SAAS;QAEhC,IAAMI,oBAAoB,GAAGJ,SAAS,GAAGC,WAAW;;QAEpD;;QAEA,IAAKA,WAAW,KAAK,CAAC,IAAMG,oBAAoB,GAAG1rG,KAAI,CAAC2rG,QAAQ,GAAK,CAAC,EAAG;UAExE;;UAEA3xF,MAAM,IAAMsxF,SAAS,GAAGC,WAAa;UACrCrnD,OAAO,CAACinD,QAAQ,GAAGnxF,MAAM;QAE1B;MAED;MAEAA,MAAM,IAAIha,KAAI,CAACyrG,OAAO;IAEvB;;IAEA;;IAEAF,WAAW,GAAGvxF,MAAM,GAAGsxF,SAAS;IAEhC,IAAKC,WAAW,GAAG,CAAC,EAAGvxF,MAAM,IAAMsxF,SAAS,GAAGC,WAAa;;IAE5D;;IAEA/X,aAAa,CAACuX,MAAM,GAAG/wF,MAAM;IAC7Bw5E,aAAa,CAACyX,OAAO,GAAG,CAAC,CAAC;IAE1B,OAAO,IAAI;EAEZ;EAEA,SAASO,cAAcA,CAAEtnD,OAAO,EAAG;IAElC,IAAM3oD,KAAK,GAAG2oD,OAAO,CAAC3oD,KAAK;IAE3B,IAAMyE,IAAI,GAAG;MACZ2rG,QAAQ,EAAE,CAAC;MAAE;MACbF,OAAO,EAAE,CAAC,CAAC;IACZ,CAAC;;IAED;;IAEA,IAAK,OAAOlwG,KAAK,KAAK,QAAQ,EAAG;MAEhC;;MAEAyE,IAAI,CAAC2rG,QAAQ,GAAG,CAAC;MACjB3rG,IAAI,CAACyrG,OAAO,GAAG,CAAC;IAEjB,CAAC,MAAM,IAAKlwG,KAAK,CAACub,SAAS,EAAG;MAE7B;;MAEA9W,IAAI,CAAC2rG,QAAQ,GAAG,CAAC;MACjB3rG,IAAI,CAACyrG,OAAO,GAAG,CAAC;IAEjB,CAAC,MAAM,IAAKlwG,KAAK,CAAC62B,SAAS,IAAI72B,KAAK,CAAC8lB,OAAO,EAAG;MAE9C;;MAEArhB,IAAI,CAAC2rG,QAAQ,GAAG,EAAE;MAClB3rG,IAAI,CAACyrG,OAAO,GAAG,EAAE,CAAC,CAAC;IAEpB,CAAC,MAAM,IAAKlwG,KAAK,CAACstB,SAAS,EAAG;MAE7B;;MAEA7oB,IAAI,CAAC2rG,QAAQ,GAAG,EAAE;MAClB3rG,IAAI,CAACyrG,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKlwG,KAAK,CAACof,SAAS,EAAG;MAE7B;;MAEA3a,IAAI,CAAC2rG,QAAQ,GAAG,EAAE;MAClB3rG,IAAI,CAACyrG,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKlwG,KAAK,CAAC4iC,SAAS,EAAG;MAE7B;;MAEAn+B,IAAI,CAAC2rG,QAAQ,GAAG,EAAE;MAClB3rG,IAAI,CAACyrG,OAAO,GAAG,EAAE;IAElB,CAAC,MAAM,IAAKlwG,KAAK,CAAC0rB,SAAS,EAAG;MAE7BlR,OAAO,CAACC,IAAI,CAAE,6EAA6E,CAAE;IAE9F,CAAC,MAAM;MAEND,OAAO,CAACC,IAAI,CAAE,sDAAsD,EAAEza,KAAK,CAAE;IAE9E;IAEA,OAAOyE,IAAI;EAEZ;EAEA,SAAS2qG,uBAAuBA,CAAE35F,KAAK,EAAG;IAEzC,IAAMwiF,aAAa,GAAGxiF,KAAK,CAACjN,MAAM;IAElCyvF,aAAa,CAAC7iF,mBAAmB,CAAE,SAAS,EAAEg6F,uBAAuB,CAAE;IAEvE,IAAM95F,KAAK,GAAGy5F,sBAAsB,CAAC75F,OAAO,CAAE+iF,aAAa,CAACI,mBAAmB,CAAE;IACjF0W,sBAAsB,CAACx5F,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;IAEzC07C,EAAE,CAACc,YAAY,CAAEX,OAAO,CAAE8mC,aAAa,CAAClrD,EAAE,CAAE,CAAE;IAE9C,OAAOokB,OAAO,CAAE8mC,aAAa,CAAClrD,EAAE,CAAE;IAClC,OAAO+hE,UAAU,CAAE7W,aAAa,CAAClrD,EAAE,CAAE;EAEtC;EAEA,SAAShgB,OAAOA,CAAA,EAAG;IAElB,KAAM,IAAMggB,IAAE,IAAIokB,OAAO,EAAG;MAE3BH,EAAE,CAACc,YAAY,CAAEX,OAAO,CAAEpkB,IAAE,CAAE,CAAE;IAEjC;IAEAgiE,sBAAsB,GAAG,EAAE;IAC3B59C,OAAO,GAAG,CAAC,CAAC;IACZ29C,UAAU,GAAG,CAAC,CAAC;EAEhB;EAEA,OAAO;IAENG,IAAI,EAAEA,IAAI;IACVz8E,MAAM,EAAEA,MAAM;IAEdzF,OAAO,EAAEA;EAEV,CAAC;AAEF;AAEA,SAASsjF,mBAAmBA,CAAA,EAAG;EAE9B,IAAMvnF,MAAM,GAAG3E,eAAe,CAAE,QAAQ,CAAE;EAC1C2E,MAAM,CAAC1C,KAAK,CAACkqF,OAAO,GAAG,OAAO;EAC9B,OAAOxnF,MAAM;AAEd;AAEA,SAASynF,aAAaA,CAAEvhE,UAAU,GAAG,CAAC,CAAC,EAAG;EAEzC,IAAI,CAACwhE,eAAe,GAAG,IAAI;EAE3B,IAAMjoF,OAAO,GAAGymB,UAAU,CAAClmB,MAAM,KAAKxkB,SAAS,GAAG0qC,UAAU,CAAClmB,MAAM,GAAGunF,mBAAmB,EAAE;IAC1FI,QAAQ,GAAGzhE,UAAU,CAACztC,OAAO,KAAK+C,SAAS,GAAG0qC,UAAU,CAACztC,OAAO,GAAG,IAAI;IAEvEmvG,MAAM,GAAG1hE,UAAU,CAAC1f,KAAK,KAAKhrB,SAAS,GAAG0qC,UAAU,CAAC1f,KAAK,GAAG,IAAI;IACjEqhF,QAAQ,GAAG3hE,UAAU,CAACqe,OAAO,KAAK/oD,SAAS,GAAG0qC,UAAU,CAACqe,OAAO,GAAG,IAAI;IACvEujD,UAAU,GAAG5hE,UAAU,CAAC46D,SAAS,KAAKtlG,SAAS,GAAG0qC,UAAU,CAAC46D,SAAS,GAAG,KAAK;IAC9EiH,mBAAmB,GAAG7hE,UAAU,CAAC6F,kBAAkB,KAAKvwC,SAAS,GAAG0qC,UAAU,CAAC6F,kBAAkB,GAAG,IAAI;IACxGi8D,sBAAsB,GAAG9hE,UAAU,CAAC+hE,qBAAqB,KAAKzsG,SAAS,GAAG0qC,UAAU,CAAC+hE,qBAAqB,GAAG,KAAK;IAClHC,gBAAgB,GAAGhiE,UAAU,CAACiiE,eAAe,KAAK3sG,SAAS,GAAG0qC,UAAU,CAACiiE,eAAe,GAAG,SAAS;IACpGC,6BAA6B,GAAGliE,UAAU,CAACmiE,4BAA4B,KAAK7sG,SAAS,GAAG0qC,UAAU,CAACmiE,4BAA4B,GAAG,KAAK;EAExI,IAAIC,MAAM;EAEV,IAAKX,QAAQ,KAAK,IAAI,EAAG;IAExBW,MAAM,GAAGX,QAAQ,CAACtJ,oBAAoB,EAAE,CAAChpF,KAAK;EAE/C,CAAC,MAAM;IAENizF,MAAM,GAAGpiE,UAAU,CAAC7wB,KAAK,KAAK7Z,SAAS,GAAG0qC,UAAU,CAAC7wB,KAAK,GAAG,KAAK;EAEnE;EAEA,IAAIkzF,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,kBAAkB,GAAG,IAAI;;EAE7B;EACA;;EAEA,IAAMC,eAAe,GAAG,EAAE;EAC1B,IAAMC,gBAAgB,GAAG,EAAE;;EAE3B;;EAEA,IAAI,CAACC,UAAU,GAAGlpF,OAAO;;EAEzB;EACA,IAAI,CAACm7D,KAAK,GAAG;IAEZ;AACF;AACA;AACA;IACEC,iBAAiB,EAAE;EACpB,CAAC;;EAED;;EAEA,IAAI,CAAC5gB,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,cAAc,GAAG,IAAI;EAC1B,IAAI,CAACC,cAAc,GAAG,IAAI;EAC1B,IAAI,CAACC,gBAAgB,GAAG,IAAI;;EAE5B;;EAEA,IAAI,CAACwuC,WAAW,GAAG,IAAI;;EAEvB;;EAEA,IAAI,CAACx9D,cAAc,GAAG,EAAE;EACxB,IAAI,CAACq1B,oBAAoB,GAAG,KAAK;;EAEjC;;EAEA,IAAI,CAACyZ,cAAc,GAAGxwE,cAAc;;EAEpC;;EAEA,IAAI,CAACswE,uBAAuB,GAAG,KAAK;;EAEpC;;EAEA,IAAI,CAAC52B,WAAW,GAAGl/C,aAAa;EAChC,IAAI,CAAC2kG,mBAAmB,GAAG,GAAG;;EAE9B;;EAEAnyG,MAAM,CAACkrC,gBAAgB,CAAE,IAAI,EAAE;IAE9B;;IAEAknE,WAAW,EAAE;MACZp2F,GAAG,EAAE,SAAAA,IAAA,EAAY;QAEhBhB,OAAO,CAACC,IAAI,CAAE,qDAAqD,CAAE;QACrE,OAAO,CAAC;MAET,CAAC;MACDF,GAAG,EAAE,SAAAA,IAAA,EAAY;QAEhBC,OAAO,CAACC,IAAI,CAAE,qDAAqD,CAAE;MAEtE;IACD;EAED,CAAC,CAAE;;EAEH;;EAEA,IAAMo3F,KAAK,GAAG,IAAI;EAElB,IAAIC,cAAc,GAAG,KAAK;;EAE1B;;EAEA,IAAIC,sBAAsB,GAAG,CAAC;EAC9B,IAAIC,yBAAyB,GAAG,CAAC;EACjC,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,IAAIC,kBAAkB,GAAG,CAAE,CAAC;EAE5B,IAAIC,cAAc,GAAG,IAAI;EAEzB,IAAMC,gBAAgB,GAAG,IAAIllF,OAAO,EAAE;EACtC,IAAMmlF,eAAe,GAAG,IAAInlF,OAAO,EAAE;EACrC,IAAIolF,mBAAmB,GAAG,IAAI;;EAE9B;;EAEA,IAAIC,MAAM,GAAGhqF,OAAO,CAACQ,KAAK;EAC1B,IAAIypF,OAAO,GAAGjqF,OAAO,CAACS,MAAM;EAE5B,IAAIypF,WAAW,GAAG,CAAC;EACnB,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,IAAMlkB,SAAS,GAAG,IAAIvhE,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEqlF,MAAM,EAAEC,OAAO,CAAE;EACtD,IAAMI,QAAQ,GAAG,IAAI1lF,OAAO,CAAE,CAAC,EAAE,CAAC,EAAEqlF,MAAM,EAAEC,OAAO,CAAE;EACrD,IAAIK,YAAY,GAAG,KAAK;;EAExB;;EAEA,IAAMvkB,QAAQ,GAAG,IAAI5/B,OAAO,EAAE;;EAE9B;;EAEA,IAAIokD,gBAAgB,GAAG,KAAK;EAC5B,IAAIC,qBAAqB,GAAG,KAAK;;EAEjC;;EAEA,IAAIC,yBAAyB,GAAG,IAAI;;EAEpC;;EAEA,IAAMC,iBAAiB,GAAG,IAAItwE,OAAO,EAAE;EAEvC,IAAM4qB,QAAQ,GAAG,IAAIlyC,OAAO,EAAE;EAC9B,IAAM63F,QAAQ,GAAG,IAAIv8E,OAAO,EAAE;EAE9B,IAAMw8E,WAAW,GAAG;IAAExkE,UAAU,EAAE,IAAI;IAAE4K,GAAG,EAAE,IAAI;IAAE3K,WAAW,EAAE,IAAI;IAAEwkE,gBAAgB,EAAE,IAAI;IAAE1kE,OAAO,EAAE;EAAK,CAAC;EAE7G,SAAS2kE,mBAAmBA,CAAA,EAAG;IAE9B,OAAOpB,oBAAoB,KAAK,IAAI,GAAGQ,WAAW,GAAG,CAAC;EAEvD;;EAEA;;EAEA,IAAIla,GAAG,GAAGkY,QAAQ;EAElB,SAASxnF,UAAUA,CAAEqqF,YAAY,EAAEC,iBAAiB,EAAG;IAEtD,KAAM,IAAI1tG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGytG,YAAY,CAAC1tG,MAAM,EAAEC,CAAC,EAAG,EAAG;MAEhD,IAAM2tG,WAAW,GAAGF,YAAY,CAAEztG,CAAC,CAAE;MACrC,IAAMtE,OAAO,GAAGgnB,OAAO,CAACU,UAAU,CAAEuqF,WAAW,EAAED,iBAAiB,CAAE;MACpE,IAAKhyG,OAAO,KAAK,IAAI,EAAG,OAAOA,OAAO;IAEvC;IAEA,OAAO,IAAI;EAEZ;EAEA,IAAI;IAEH,IAAMgyG,iBAAiB,GAAG;MACzBp1F,KAAK,EAAE,IAAI;MACXmR,KAAK,EAAEohF,MAAM;MACbrjD,OAAO,EAAEsjD,QAAQ;MACjB/G,SAAS,EAAEgH,UAAU;MACrB/7D,kBAAkB,EAAEg8D,mBAAmB;MACvCE,qBAAqB,EAAED,sBAAsB;MAC7CG,eAAe,EAAED,gBAAgB;MACjCG,4BAA4B,EAAED;IAC/B,CAAC;;IAED;IACA,IAAK,cAAc,IAAI3oF,OAAO,EAAGA,OAAO,CAACs2B,YAAY,CAAE,aAAa,eAAAl3B,MAAA,CAAepe,QAAQ,EAAI;;IAE/F;IACAgf,OAAO,CAACzT,gBAAgB,CAAE,kBAAkB,EAAE2+F,aAAa,EAAE,KAAK,CAAE;IACpElrF,OAAO,CAACzT,gBAAgB,CAAE,sBAAsB,EAAE4+F,gBAAgB,EAAE,KAAK,CAAE;IAC3EnrF,OAAO,CAACzT,gBAAgB,CAAE,2BAA2B,EAAE6+F,sBAAsB,EAAE,KAAK,CAAE;IAEtF,IAAKpb,GAAG,KAAK,IAAI,EAAG;MAEnB,IAAM+a,YAAY,GAAG,CAAE,QAAQ,EAAE,OAAO,EAAE,oBAAoB,CAAE;MAEhE,IAAKzB,KAAK,CAAC+B,gBAAgB,KAAK,IAAI,EAAG;QAEtCN,YAAY,CAACO,KAAK,EAAE;MAErB;MAEAtb,GAAG,GAAGtvE,UAAU,CAAEqqF,YAAY,EAAEC,iBAAiB,CAAE;MAEnD,IAAKhb,GAAG,KAAK,IAAI,EAAG;QAEnB,IAAKtvE,UAAU,CAAEqqF,YAAY,CAAE,EAAG;UAEjC,MAAM,IAAI3vG,KAAK,CAAE,6DAA6D,CAAE;QAEjF,CAAC,MAAM;UAEN,MAAM,IAAIA,KAAK,CAAE,+BAA+B,CAAE;QAEnD;MAED;IAED;;IAEA;;IAEA,IAAK40F,GAAG,CAACpwB,wBAAwB,KAAK7jE,SAAS,EAAG;MAEjDi0F,GAAG,CAACpwB,wBAAwB,GAAG,YAAY;QAE1C,OAAO;UAAE,UAAU,EAAE,CAAC;UAAE,UAAU,EAAE,CAAC;UAAE,WAAW,EAAE;QAAE,CAAC;MAExD,CAAC;IAEF;EAED,CAAC,CAAC,OAAQ5kE,KAAK,EAAG;IAEjBiX,OAAO,CAACjX,KAAK,CAAE,uBAAuB,GAAGA,KAAK,CAACuwG,OAAO,CAAE;IACxD,MAAMvwG,KAAK;EAEZ;EAEA,IAAI2kD,UAAU,EAAE+I,YAAY,EAAEvtD,KAAK,EAAEe,IAAI;EACzC,IAAIo6D,UAAU,EAAEhyC,QAAQ,EAAEm1C,QAAQ,EAAEikB,UAAU,EAAEjqD,UAAU,EAAE+R,UAAU,EAAEk0B,OAAO;EAC/E,IAAI8xC,YAAY,EAAE/lE,SAAS,EAAEgmE,WAAW,EAAEzmB,YAAY,EAAEtlC,QAAQ,EAAEigC,SAAS;EAE3E,IAAIv5C,UAAU,EAAEslE,YAAY,EAAEC,cAAc,EAAEC,qBAAqB;EAEnE,IAAI3b,KAAK,EAAE50B,aAAa,EAAE/b,cAAc;EAExC,SAASusD,aAAaA,CAAA,EAAG;IAExBlsD,UAAU,GAAG,IAAI4pB,eAAe,CAAEymB,GAAG,CAAE;IAEvCtnC,YAAY,GAAG,IAAI4W,iBAAiB,CAAE0wB,GAAG,EAAErwC,UAAU,EAAElZ,UAAU,CAAE;IAEnEkZ,UAAU,CAAC0hB,IAAI,CAAE3Y,YAAY,CAAE;IAE/BunC,KAAK,GAAG,IAAImH,UAAU,CAAEpH,GAAG,EAAErwC,UAAU,EAAE+I,YAAY,CAAE;IAEvDvtD,KAAK,GAAG,IAAIguF,UAAU,CAAE6G,GAAG,EAAErwC,UAAU,EAAE+I,YAAY,CAAE;IAEvDxsD,IAAI,GAAG,IAAImuE,SAAS,EAAE;IACtB/T,UAAU,GAAG,IAAI+pB,eAAe,EAAE;IAClC/7D,QAAQ,GAAG,IAAIyrE,aAAa,CAAEC,GAAG,EAAErwC,UAAU,EAAExkD,KAAK,EAAEm7D,UAAU,EAAE5N,YAAY,EAAEunC,KAAK,EAAE/zF,IAAI,CAAE;IAC7Fu9D,QAAQ,GAAG,IAAI8I,aAAa,CAAE+mC,KAAK,CAAE;IACrC5rB,UAAU,GAAG,IAAI1U,eAAe,CAAEsgC,KAAK,CAAE;IACzC71E,UAAU,GAAG,IAAI+0B,eAAe,CAAEwnC,GAAG,EAAEtnC,YAAY,CAAE;IACrD2S,aAAa,GAAG,IAAIJ,kBAAkB,CAAE+0B,GAAG,EAAErwC,UAAU,EAAElsB,UAAU,EAAEi1B,YAAY,CAAE;IACnFljB,UAAU,GAAG,IAAIikC,eAAe,CAAEumB,GAAG,EAAEv8D,UAAU,EAAEv3B,IAAI,EAAEm/D,aAAa,CAAE;IACxE3B,OAAO,GAAG,IAAI8S,YAAY,CAAEwjB,GAAG,EAAExqD,UAAU,EAAE/R,UAAU,EAAEv3B,IAAI,CAAE;IAC/DwvG,YAAY,GAAG,IAAI3gC,iBAAiB,CAAEilB,GAAG,EAAEtnC,YAAY,EAAEpkC,QAAQ,CAAE;IACnEo7B,QAAQ,GAAG,IAAImhB,aAAa,CAAEvK,UAAU,CAAE;IAC1Ck1C,YAAY,GAAG,IAAI/tB,aAAa,CAAE6rB,KAAK,EAAE7vC,QAAQ,EAAEikB,UAAU,EAAE/9B,UAAU,EAAE+I,YAAY,EAAE2S,aAAa,EAAE3b,QAAQ,CAAE;IAClHja,SAAS,GAAG,IAAI8+D,cAAc,CAAE+E,KAAK,EAAEhzC,UAAU,CAAE;IACnDm1C,WAAW,GAAG,IAAIxqB,gBAAgB,EAAE;IACpC+D,YAAY,GAAG,IAAID,iBAAiB,CAAEplC,UAAU,EAAE+I,YAAY,CAAE;IAChEtiB,UAAU,GAAG,IAAIozB,eAAe,CAAE8vC,KAAK,EAAE7vC,QAAQ,EAAEt+D,KAAK,EAAEu+D,OAAO,EAAEmvC,MAAM,EAAEP,mBAAmB,CAAE;IAChG3oB,SAAS,GAAG,IAAIiG,cAAc,CAAE0jB,KAAK,EAAE5vC,OAAO,EAAEhR,YAAY,CAAE;IAC9DpJ,cAAc,GAAG,IAAIgnD,mBAAmB,CAAEtW,GAAG,EAAE9zF,IAAI,EAAEwsD,YAAY,EAAEvtD,KAAK,CAAE;IAE1EwwG,cAAc,GAAG,IAAI3sC,mBAAmB,CAAEgxB,GAAG,EAAErwC,UAAU,EAAEzjD,IAAI,EAAEwsD,YAAY,CAAE;IAC/EkjD,qBAAqB,GAAG,IAAIzhC,0BAA0B,CAAE6lB,GAAG,EAAErwC,UAAU,EAAEzjD,IAAI,EAAEwsD,YAAY,CAAE;IAE7FxsD,IAAI,CAACwuE,QAAQ,GAAG8gC,YAAY,CAAC9gC,QAAQ;IAErC4+B,KAAK,CAAC5gD,YAAY,GAAGA,YAAY;IACjC4gD,KAAK,CAAC3pD,UAAU,GAAGA,UAAU;IAC7B2pD,KAAK,CAAChzC,UAAU,GAAGA,UAAU;IAC7BgzC,KAAK,CAACmC,WAAW,GAAGA,WAAW;IAC/BnC,KAAK,CAAC3pB,SAAS,GAAGA,SAAS;IAC3B2pB,KAAK,CAACnuG,KAAK,GAAGA,KAAK;IACnBmuG,KAAK,CAACptG,IAAI,GAAGA,IAAI;EAElB;EAEA2vG,aAAa,EAAE;;EAEf;;EAEA,IAAMhoD,EAAE,GAAG,IAAIm6C,YAAY,CAAEsL,KAAK,EAAEtZ,GAAG,CAAE;EAEzC,IAAI,CAACnsC,EAAE,GAAGA,EAAE;;EAEZ;;EAEA,IAAI,CAACnjC,UAAU,GAAG,YAAY;IAE7B,OAAOsvE,GAAG;EAEX,CAAC;EAED,IAAI,CAAC4O,oBAAoB,GAAG,YAAY;IAEvC,OAAO5O,GAAG,CAAC4O,oBAAoB,EAAE;EAElC,CAAC;EAED,IAAI,CAACkN,gBAAgB,GAAG,YAAY;IAEnC,IAAM3wC,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,oBAAoB,CAAE;IACxD,IAAKkoD,SAAS,EAAGA,SAAS,CAAC4wC,WAAW,EAAE;EAEzC,CAAC;EAED,IAAI,CAACC,mBAAmB,GAAG,YAAY;IAEtC,IAAM7wC,SAAS,GAAGxb,UAAU,CAAC1sC,GAAG,CAAE,oBAAoB,CAAE;IACxD,IAAKkoD,SAAS,EAAGA,SAAS,CAAC8wC,cAAc,EAAE;EAE5C,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,YAAY;IAEhC,OAAOhC,WAAW;EAEnB,CAAC;EAED,IAAI,CAACiC,aAAa,GAAG,UAAW10G,KAAK,EAAG;IAEvC,IAAKA,KAAK,KAAKsE,SAAS,EAAG;IAE3BmuG,WAAW,GAAGzyG,KAAK;IAEnB,IAAI,CAAC+vB,OAAO,CAAEwiF,MAAM,EAAEC,OAAO,EAAE,KAAK,CAAE;EAEvC,CAAC;EAED,IAAI,CAAC/2E,OAAO,GAAG,UAAWjzB,MAAM,EAAG;IAElC,OAAOA,MAAM,CAAC+R,GAAG,CAAEg4F,MAAM,EAAEC,OAAO,CAAE;EAErC,CAAC;EAED,IAAI,CAACziF,OAAO,GAAG,UAAWhH,KAAK,EAAEC,MAAM,EAAE2rF,WAAW,EAAG;IAEtD,IAAKvoD,EAAE,CAAC07C,YAAY,EAAG;MAEtBttF,OAAO,CAACC,IAAI,CAAE,wEAAwE,CAAE;MACxF;IAED;IAEA83F,MAAM,GAAGxpF,KAAK;IACdypF,OAAO,GAAGxpF,MAAM;IAEhBT,OAAO,CAACQ,KAAK,GAAGhT,IAAI,CAACsC,KAAK,CAAE0Q,KAAK,GAAG0pF,WAAW,CAAE;IACjDlqF,OAAO,CAACS,MAAM,GAAGjT,IAAI,CAACsC,KAAK,CAAE2Q,MAAM,GAAGypF,WAAW,CAAE;IAEnD,IAAKkC,WAAW,KAAK,KAAK,EAAG;MAE5BpsF,OAAO,CAACnC,KAAK,CAAC2C,KAAK,GAAGA,KAAK,GAAG,IAAI;MAClCR,OAAO,CAACnC,KAAK,CAAC4C,MAAM,GAAGA,MAAM,GAAG,IAAI;IAErC;IAEA,IAAI,CAAC4rF,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE7rF,KAAK,EAAEC,MAAM,CAAE;EAExC,CAAC;EAED,IAAI,CAAC6rF,oBAAoB,GAAG,UAAWrsG,MAAM,EAAG;IAE/C,OAAOA,MAAM,CAAC+R,GAAG,CAAEg4F,MAAM,GAAGE,WAAW,EAAED,OAAO,GAAGC,WAAW,CAAE,CAACp6F,KAAK,EAAE;EAEzE,CAAC;EAED,IAAI,CAACy8F,oBAAoB,GAAG,UAAW/rF,KAAK,EAAEC,MAAM,EAAEmkF,UAAU,EAAG;IAElEoF,MAAM,GAAGxpF,KAAK;IACdypF,OAAO,GAAGxpF,MAAM;IAEhBypF,WAAW,GAAGtF,UAAU;IAExB5kF,OAAO,CAACQ,KAAK,GAAGhT,IAAI,CAACsC,KAAK,CAAE0Q,KAAK,GAAGokF,UAAU,CAAE;IAChD5kF,OAAO,CAACS,MAAM,GAAGjT,IAAI,CAACsC,KAAK,CAAE2Q,MAAM,GAAGmkF,UAAU,CAAE;IAElD,IAAI,CAACyH,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE7rF,KAAK,EAAEC,MAAM,CAAE;EAExC,CAAC;EAED,IAAI,CAAC+rF,kBAAkB,GAAG,UAAWvsG,MAAM,EAAG;IAE7C,OAAOA,MAAM,CAACwT,IAAI,CAAEo2F,gBAAgB,CAAE;EAEvC,CAAC;EAED,IAAI,CAAC/hB,WAAW,GAAG,UAAW7nF,MAAM,EAAG;IAEtC,OAAOA,MAAM,CAACwT,IAAI,CAAEyyE,SAAS,CAAE;EAEhC,CAAC;EAED,IAAI,CAACmmB,WAAW,GAAG,UAAW39F,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAG;IAEnD,IAAK/R,CAAC,CAACqW,SAAS,EAAG;MAElBmhE,SAAS,CAACl0E,GAAG,CAAEtD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACM,CAAC,EAAEN,CAAC,CAACmW,CAAC,EAAEnW,CAAC,CAACoW,CAAC,CAAE;IAEpC,CAAC,MAAM;MAENohE,SAAS,CAACl0E,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,CAAE;IAErC;IAEAtlB,KAAK,CAAC+rB,QAAQ,CAAE2iF,gBAAgB,CAACp2F,IAAI,CAAEyyE,SAAS,CAAE,CAAC/xE,cAAc,CAAE+1F,WAAW,CAAE,CAACp6F,KAAK,EAAE,CAAE;EAE3F,CAAC;EAED,IAAI,CAAC28F,UAAU,GAAG,UAAWxsG,MAAM,EAAG;IAErC,OAAOA,MAAM,CAACwT,IAAI,CAAE42F,QAAQ,CAAE;EAE/B,CAAC;EAED,IAAI,CAACqC,UAAU,GAAG,UAAWh+F,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAG;IAElD,IAAK/R,CAAC,CAACqW,SAAS,EAAG;MAElBslF,QAAQ,CAACr4F,GAAG,CAAEtD,CAAC,CAACA,CAAC,EAAEA,CAAC,CAACM,CAAC,EAAEN,CAAC,CAACmW,CAAC,EAAEnW,CAAC,CAACoW,CAAC,CAAE;IAEnC,CAAC,MAAM;MAENulF,QAAQ,CAACr4F,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,CAAE;IAEpC;IAEAtlB,KAAK,CAAC6rB,OAAO,CAAE8iF,eAAe,CAACr2F,IAAI,CAAE42F,QAAQ,CAAE,CAACl2F,cAAc,CAAE+1F,WAAW,CAAE,CAACp6F,KAAK,EAAE,CAAE;EAExF,CAAC;EAED,IAAI,CAAC68F,cAAc,GAAG,YAAY;IAEjC,OAAOrC,YAAY;EAEpB,CAAC;EAED,IAAI,CAAC/iB,cAAc,GAAG,UAAWqlB,OAAO,EAAG;IAE1CzxG,KAAK,CAACosF,cAAc,CAAE+iB,YAAY,GAAGsC,OAAO,CAAE;EAE/C,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,UAAW1yG,MAAM,EAAG;IAExCgwG,WAAW,GAAGhwG,MAAM;EAErB,CAAC;EAED,IAAI,CAAC2yG,kBAAkB,GAAG,UAAW3yG,MAAM,EAAG;IAE7CiwG,gBAAgB,GAAGjwG,MAAM;EAE1B,CAAC;;EAED;;EAEA,IAAI,CAAC0gE,aAAa,GAAG,UAAW56D,MAAM,EAAG;IAExC,OAAOA,MAAM,CAACwT,IAAI,CAAE2yB,UAAU,CAACy0B,aAAa,EAAE,CAAE;EAEjD,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,YAAY;IAEhC10B,UAAU,CAAC00B,aAAa,CAACo0B,KAAK,CAAE9oD,UAAU,EAAElC,SAAS,CAAE;EAExD,CAAC;EAED,IAAI,CAAC62B,aAAa,GAAG,YAAY;IAEhC,OAAO30B,UAAU,CAAC20B,aAAa,EAAE;EAElC,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,YAAY;IAEhC50B,UAAU,CAAC40B,aAAa,CAACk0B,KAAK,CAAE9oD,UAAU,EAAElC,SAAS,CAAE;EAExD,CAAC;EAED,IAAI,CAACG,KAAK,GAAG,UAAW7nB,KAAK,GAAG,IAAI,EAAEuK,KAAK,GAAG,IAAI,EAAE+9B,OAAO,GAAG,IAAI,EAAG;IAEpE,IAAIioD,IAAI,GAAG,CAAC;IAEZ,IAAKvwF,KAAK,EAAGuwF,IAAI,IAAI,KAAK;IAC1B,IAAKhmF,KAAK,EAAGgmF,IAAI,IAAI,GAAG;IACxB,IAAKjoD,OAAO,EAAGioD,IAAI,IAAI,IAAI;IAE3B/c,GAAG,CAAC3rD,KAAK,CAAE0oE,IAAI,CAAE;EAElB,CAAC;EAED,IAAI,CAACpzC,UAAU,GAAG,YAAY;IAE7B,IAAI,CAACt1B,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE;EAEjC,CAAC;EAED,IAAI,CAAC+lD,UAAU,GAAG,YAAY;IAE7B,IAAI,CAAC/lD,KAAK,CAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAE;EAEjC,CAAC;EAED,IAAI,CAAC6mD,YAAY,GAAG,YAAY;IAE/B,IAAI,CAAC7mD,KAAK,CAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAE;EAEjC,CAAC;;EAED;;EAEA,IAAI,CAAC7f,OAAO,GAAG,YAAY;IAE1BxE,OAAO,CAACnT,mBAAmB,CAAE,kBAAkB,EAAEq+F,aAAa,EAAE,KAAK,CAAE;IACvElrF,OAAO,CAACnT,mBAAmB,CAAE,sBAAsB,EAAEs+F,gBAAgB,EAAE,KAAK,CAAE;IAC9EnrF,OAAO,CAACnT,mBAAmB,CAAE,2BAA2B,EAAEu+F,sBAAsB,EAAE,KAAK,CAAE;IAEzFK,WAAW,CAACjnF,OAAO,EAAE;IACrBwgE,YAAY,CAACxgE,OAAO,EAAE;IACtB8xC,UAAU,CAAC9xC,OAAO,EAAE;IACpBi1C,QAAQ,CAACj1C,OAAO,EAAE;IAClBk5D,UAAU,CAACl5D,OAAO,EAAE;IACpBk1C,OAAO,CAACl1C,OAAO,EAAE;IACjB62C,aAAa,CAAC72C,OAAO,EAAE;IACvB86B,cAAc,CAAC96B,OAAO,EAAE;IACxBgnF,YAAY,CAAChnF,OAAO,EAAE;IAEtBq/B,EAAE,CAACr/B,OAAO,EAAE;IAEZq/B,EAAE,CAACh3C,mBAAmB,CAAE,cAAc,EAAEmgG,gBAAgB,CAAE;IAC1DnpD,EAAE,CAACh3C,mBAAmB,CAAE,YAAY,EAAEogG,cAAc,CAAE;IAEtD,IAAKxC,yBAAyB,EAAG;MAEhCA,yBAAyB,CAACjmF,OAAO,EAAE;MACnCimF,yBAAyB,GAAG,IAAI;IAEjC;IAEAxjE,SAAS,CAACpoC,IAAI,EAAE;EAEjB,CAAC;;EAED;;EAEA,SAASqsG,aAAaA,CAAEh+F,KAAK,EAAG;IAE/BA,KAAK,CAACggG,cAAc,EAAE;IAEtBj7F,OAAO,CAACpB,GAAG,CAAE,oCAAoC,CAAE;IAEnD04F,cAAc,GAAG,IAAI;EAEtB;EAEA,SAAS4B,gBAAgBA,CAAA,CAAE;EAAA,EAAc;IAExCl5F,OAAO,CAACpB,GAAG,CAAE,wCAAwC,CAAE;IAEvD04F,cAAc,GAAG,KAAK;IAEtB,IAAM4D,aAAa,GAAGjxG,IAAI,CAACyuE,SAAS;IACpC,IAAM0P,gBAAgB,GAAGsF,SAAS,CAACz9B,OAAO;IAC1C,IAAMkrD,mBAAmB,GAAGztB,SAAS,CAACoH,UAAU;IAChD,IAAMsmB,oBAAoB,GAAG1tB,SAAS,CAACt7D,WAAW;IAClD,IAAM0zD,aAAa,GAAG4H,SAAS,CAACrmF,IAAI;IAEpCuyG,aAAa,EAAE;IAEf3vG,IAAI,CAACyuE,SAAS,GAAGwiC,aAAa;IAC9BxtB,SAAS,CAACz9B,OAAO,GAAGm4B,gBAAgB;IACpCsF,SAAS,CAACoH,UAAU,GAAGqmB,mBAAmB;IAC1CztB,SAAS,CAACt7D,WAAW,GAAGgpF,oBAAoB;IAC5C1tB,SAAS,CAACrmF,IAAI,GAAGy+E,aAAa;EAE/B;EAEA,SAASqzB,sBAAsBA,CAAEl+F,KAAK,EAAG;IAExC+E,OAAO,CAACjX,KAAK,CAAE,qEAAqE,EAAEkS,KAAK,CAACogG,aAAa,CAAE;EAE5G;EAEA,SAASC,iBAAiBA,CAAErgG,KAAK,EAAG;IAEnC,IAAM65B,QAAQ,GAAG75B,KAAK,CAACjN,MAAM;IAE7B8mC,QAAQ,CAACl6B,mBAAmB,CAAE,SAAS,EAAE0gG,iBAAiB,CAAE;IAE5DC,kBAAkB,CAAEzmE,QAAQ,CAAE;EAE/B;;EAEA;;EAEA,SAASymE,kBAAkBA,CAAEzmE,QAAQ,EAAG;IAEvC0mE,gCAAgC,CAAE1mE,QAAQ,CAAE;IAE5CuvB,UAAU,CAACnyB,MAAM,CAAE4C,QAAQ,CAAE;EAE9B;EAGA,SAAS0mE,gCAAgCA,CAAE1mE,QAAQ,EAAG;IAErD,IAAM2jC,QAAQ,GAAGpU,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE,CAAC2jC,QAAQ;IAEpD,IAAKA,QAAQ,KAAK3uE,SAAS,EAAG;MAE7B2uE,QAAQ,CAACxwE,OAAO,CAAE,UAAWyhE,OAAO,EAAG;QAEtC6vC,YAAY,CAACrrB,cAAc,CAAExkB,OAAO,CAAE;MAEvC,CAAC,CAAE;MAEH,IAAK50B,QAAQ,CAACqY,gBAAgB,EAAG;QAEhCosD,YAAY,CAACprB,kBAAkB,CAAEr5C,QAAQ,CAAE;MAE5C;IAED;EAED;;EAEA;;EAEA,IAAI,CAACuhD,kBAAkB,GAAG,UAAWh5D,MAAM,EAAE+zB,KAAK,EAAE7vB,QAAQ,EAAEuT,QAAQ,EAAEzoC,MAAM,EAAEg6C,KAAK,EAAG;IAEvF,IAAK+K,KAAK,KAAK,IAAI,EAAGA,KAAK,GAAGunD,WAAW,CAAC,CAAC;;IAE3C,IAAMxc,WAAW,GAAK9vF,MAAM,CAACgoC,MAAM,IAAIhoC,MAAM,CAACqxB,WAAW,CAACrW,WAAW,EAAE,GAAG,CAAG;IAE7E,IAAMqiD,OAAO,GAAG+xC,UAAU,CAAEp+E,MAAM,EAAE+zB,KAAK,EAAE7vB,QAAQ,EAAEuT,QAAQ,EAAEzoC,MAAM,CAAE;IAEvEnD,KAAK,CAACgzF,WAAW,CAAEpnD,QAAQ,EAAEqnD,WAAW,CAAE;;IAE1C;;IAEA,IAAIrhF,KAAK,GAAGymB,QAAQ,CAACzmB,KAAK;IAC1B,IAAM2mB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;;IAE7C;;IAEA,IAAK3mB,KAAK,KAAK,IAAI,EAAG;MAErB,IAAK2mB,QAAQ,KAAK33B,SAAS,IAAI23B,QAAQ,CAACxK,KAAK,KAAK,CAAC,EAAG;IAEvD,CAAC,MAAM,IAAKnc,KAAK,CAACmc,KAAK,KAAK,CAAC,EAAG;MAE/B;IAED;;IAEA;;IAEA,IAAIykF,WAAW,GAAG,CAAC;IAEnB,IAAK5mE,QAAQ,CAAC6J,SAAS,KAAK,IAAI,EAAG;MAElC7jC,KAAK,GAAGy4B,UAAU,CAACykC,qBAAqB,CAAEz2C,QAAQ,CAAE;MACpDm6E,WAAW,GAAG,CAAC;IAEhB;IAEAtyC,aAAa,CAACK,KAAK,CAAEp9D,MAAM,EAAEyoC,QAAQ,EAAE40B,OAAO,EAAEnoC,QAAQ,EAAEzmB,KAAK,CAAE;IAEjE,IAAIsJ,SAAS;IACb,IAAI+sC,QAAQ,GAAGuoD,cAAc;IAE7B,IAAK5+F,KAAK,KAAK,IAAI,EAAG;MAErBsJ,SAAS,GAAGod,UAAU,CAACxgB,GAAG,CAAElG,KAAK,CAAE;MAEnCq2C,QAAQ,GAAGwoD,qBAAqB;MAChCxoD,QAAQ,CAAChN,QAAQ,CAAE//B,SAAS,CAAE;IAE/B;;IAEA;;IAEA,IAAMu3F,SAAS,GAAK7gG,KAAK,KAAK,IAAI,GAAKA,KAAK,CAACmc,KAAK,GAAGwK,QAAQ,CAACxK,KAAK;IAEnE,IAAM2kF,UAAU,GAAGr6E,QAAQ,CAACyiB,SAAS,CAACC,KAAK,GAAGy3D,WAAW;IACzD,IAAMG,UAAU,GAAGt6E,QAAQ,CAACyiB,SAAS,CAAC/sB,KAAK,GAAGykF,WAAW;IAEzD,IAAMrwD,UAAU,GAAGhF,KAAK,KAAK,IAAI,GAAGA,KAAK,CAACpC,KAAK,GAAGy3D,WAAW,GAAG,CAAC;IACjE,IAAMvvD,UAAU,GAAG9F,KAAK,KAAK,IAAI,GAAGA,KAAK,CAACpvB,KAAK,GAAGykF,WAAW,GAAGh8E,QAAQ;IAExE,IAAMo8E,SAAS,GAAGvgG,IAAI,CAACa,GAAG,CAAEw/F,UAAU,EAAEvwD,UAAU,CAAE;IACpD,IAAM0wD,OAAO,GAAGxgG,IAAI,CAACY,GAAG,CAAEw/F,SAAS,EAAEC,UAAU,GAAGC,UAAU,EAAExwD,UAAU,GAAGc,UAAU,CAAE,GAAG,CAAC;IAE3F,IAAM6vD,SAAS,GAAGzgG,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2/F,OAAO,GAAGD,SAAS,GAAG,CAAC,CAAE;IAExD,IAAKE,SAAS,KAAK,CAAC,EAAG;;IAEvB;;IAEA,IAAK3vG,MAAM,CAACgoC,MAAM,EAAG;MAEpB,IAAKS,QAAQ,CAAC6J,SAAS,KAAK,IAAI,EAAG;QAElCz1C,KAAK,CAACqzF,YAAY,CAAEznD,QAAQ,CAAC8J,kBAAkB,GAAGi6D,mBAAmB,EAAE,CAAE;QACzE1nD,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;MAEtB,CAAC,MAAM;QAEN9b,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;MAEtB;IAED,CAAC,MAAM,IAAK5gE,MAAM,CAACioC,MAAM,EAAG;MAE3B,IAAIkoD,SAAS,GAAG1nD,QAAQ,CAACyJ,SAAS;MAElC,IAAKi+C,SAAS,KAAK1yF,SAAS,EAAG0yF,SAAS,GAAG,CAAC,CAAC,CAAC;;MAE9CtzF,KAAK,CAACqzF,YAAY,CAAEC,SAAS,GAAGqc,mBAAmB,EAAE,CAAE;MAEvD,IAAKxsG,MAAM,CAAC4vG,cAAc,EAAG;QAE5B9qD,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;MAEtB,CAAC,MAAM,IAAK5gE,MAAM,CAAC6vG,UAAU,EAAG;QAE/B/qD,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;MAEtB,CAAC,MAAM;QAEN9b,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;MAEtB;IAED,CAAC,MAAM,IAAK5gE,MAAM,CAACkoC,QAAQ,EAAG;MAE7B4c,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;IAEtB,CAAC,MAAM,IAAK5gE,MAAM,CAAC8vG,QAAQ,EAAG;MAE7BhrD,QAAQ,CAAC8b,OAAO,CAAE,CAAC,CAAE;IAEtB;IAEA,IAAK5gE,MAAM,CAACunC,eAAe,EAAG;MAE7Bud,QAAQ,CAACgc,eAAe,CAAE2uC,SAAS,EAAEE,SAAS,EAAE3vG,MAAM,CAAC4qB,KAAK,CAAE;IAE/D,CAAC,MAAM,IAAKsK,QAAQ,CAACyqC,yBAAyB,EAAG;MAEhD,IAAMwM,aAAa,GAAGj9D,IAAI,CAACY,GAAG,CAAEolB,QAAQ,CAACi3C,aAAa,EAAEj3C,QAAQ,CAAC6qC,iBAAiB,CAAE;MAEpFjb,QAAQ,CAACgc,eAAe,CAAE2uC,SAAS,EAAEE,SAAS,EAAExjC,aAAa,CAAE;IAEhE,CAAC,MAAM;MAENrnB,QAAQ,CAACW,MAAM,CAAEgqD,SAAS,EAAEE,SAAS,CAAE;IAExC;EAED,CAAC;;EAED;;EAEA,IAAI,CAAC1nC,OAAO,GAAG,UAAWljB,KAAK,EAAE/zB,MAAM,EAAG;IAEzCy5E,kBAAkB,GAAG/jB,YAAY,CAAC/xE,GAAG,CAAEowC,KAAK,CAAE;IAC9C0lD,kBAAkB,CAAC1nC,IAAI,EAAE;IAEzB4nC,gBAAgB,CAACnsG,IAAI,CAAEisG,kBAAkB,CAAE;IAE3C1lD,KAAK,CAACne,eAAe,CAAE,UAAW5mC,MAAM,EAAG;MAE1C,IAAKA,MAAM,CAAC2lC,OAAO,IAAI3lC,MAAM,CAACqiC,MAAM,CAACvgB,IAAI,CAAEkP,MAAM,CAACqR,MAAM,CAAE,EAAG;QAE5DooE,kBAAkB,CAACrkB,SAAS,CAAEpmF,MAAM,CAAE;QAEtC,IAAKA,MAAM,CAACmkC,UAAU,EAAG;UAExBsmE,kBAAkB,CAACpkB,UAAU,CAAErmF,MAAM,CAAE;QAExC;MAED;IAED,CAAC,CAAE;IAEHyqG,kBAAkB,CAAClkB,WAAW,CAAEykB,KAAK,CAAC/uB,uBAAuB,CAAE;IAE/Dl3B,KAAK,CAACpe,QAAQ,CAAE,UAAW3mC,MAAM,EAAG;MAEnC,IAAMyoC,QAAQ,GAAGzoC,MAAM,CAACyoC,QAAQ;MAEhC,IAAKA,QAAQ,EAAG;QAEf,IAAKllB,KAAK,CAACC,OAAO,CAAEilB,QAAQ,CAAE,EAAG;UAEhC,KAAM,IAAIzpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGypC,QAAQ,CAAC1pC,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE5C,IAAM+wG,SAAS,GAAGtnE,QAAQ,CAAEzpC,CAAC,CAAE;YAE/BgxG,UAAU,CAAED,SAAS,EAAEhrD,KAAK,EAAE/kD,MAAM,CAAE;UAEvC;QAED,CAAC,MAAM;UAENgwG,UAAU,CAAEvnE,QAAQ,EAAEsc,KAAK,EAAE/kD,MAAM,CAAE;QAEtC;MAED;IAED,CAAC,CAAE;IAEH2qG,gBAAgB,CAACzqG,GAAG,EAAE;IACtBuqG,kBAAkB,GAAG,IAAI;EAE1B,CAAC;;EAED;;EAEA,IAAIjF,wBAAwB,GAAG,IAAI;EAEnC,SAAS77C,gBAAgBA,CAAEC,IAAI,EAAG;IAEjC,IAAK47C,wBAAwB,EAAGA,wBAAwB,CAAE57C,IAAI,CAAE;EAEjE;EAEA,SAAS8kD,gBAAgBA,CAAA,EAAG;IAE3B/lE,SAAS,CAACpoC,IAAI,EAAE;EAEjB;EAEA,SAASouG,cAAcA,CAAA,EAAG;IAEzBhmE,SAAS,CAACiP,KAAK,EAAE;EAElB;EAEA,IAAMjP,SAAS,GAAG,IAAI4gB,cAAc,EAAE;EACtC5gB,SAAS,CAACqhB,gBAAgB,CAAEL,gBAAgB,CAAE;EAE9C,IAAK,OAAOvvD,IAAI,KAAK,WAAW,EAAGuuC,SAAS,CAACshB,UAAU,CAAE7vD,IAAI,CAAE;EAE/D,IAAI,CAAC4vD,gBAAgB,GAAG,UAAWx7B,QAAQ,EAAG;IAE7Cg3E,wBAAwB,GAAGh3E,QAAQ;IACnC+2B,EAAE,CAACyE,gBAAgB,CAAEx7B,QAAQ,CAAE;IAE7BA,QAAQ,KAAK,IAAI,GAAKma,SAAS,CAACpoC,IAAI,EAAE,GAAGooC,SAAS,CAACiP,KAAK,EAAE;EAE7D,CAAC;EAED2N,EAAE,CAACt3C,gBAAgB,CAAE,cAAc,EAAEygG,gBAAgB,CAAE;EACvDnpD,EAAE,CAACt3C,gBAAgB,CAAE,YAAY,EAAE0gG,cAAc,CAAE;;EAEnD;;EAEA,IAAI,CAAClpD,MAAM,GAAG,UAAWV,KAAK,EAAE/zB,MAAM,EAAG;IAExC,IAAKA,MAAM,KAAKvzB,SAAS,IAAIuzB,MAAM,CAAC0U,QAAQ,KAAK,IAAI,EAAG;MAEvD/xB,OAAO,CAACjX,KAAK,CAAE,wEAAwE,CAAE;MACzF;IAED;IAEA,IAAKuuG,cAAc,KAAK,IAAI,EAAG;;IAE/B;;IAEA,IAAKlmD,KAAK,CAAC0jC,UAAU,KAAK,IAAI,EAAG1jC,KAAK,CAACje,iBAAiB,EAAE;;IAE1D;;IAEA,IAAK9V,MAAM,CAACyS,MAAM,KAAK,IAAI,EAAGzS,MAAM,CAAC8V,iBAAiB,EAAE;IAExD,IAAKye,EAAE,CAAC3B,OAAO,KAAK,IAAI,IAAI2B,EAAE,CAAC07C,YAAY,KAAK,IAAI,EAAG;MAEtD,IAAK17C,EAAE,CAACy7C,gBAAgB,KAAK,IAAI,EAAGz7C,EAAE,CAAC0/C,YAAY,CAAEj0E,MAAM,CAAE;MAE7DA,MAAM,GAAGu0B,EAAE,CAAC6/C,SAAS,EAAE,CAAC,CAAC;IAE1B;;IAEA;IACA,IAAKrgD,KAAK,CAACld,OAAO,KAAK,IAAI,EAAGkd,KAAK,CAACvgB,cAAc,CAAEwmE,KAAK,EAAEjmD,KAAK,EAAE/zB,MAAM,EAAEo6E,oBAAoB,CAAE;IAEhGX,kBAAkB,GAAG/jB,YAAY,CAAC/xE,GAAG,CAAEowC,KAAK,EAAE4lD,gBAAgB,CAAC5rG,MAAM,CAAE;IACvE0rG,kBAAkB,CAAC1nC,IAAI,EAAE;IAEzB4nC,gBAAgB,CAACnsG,IAAI,CAAEisG,kBAAkB,CAAE;IAE3C2B,iBAAiB,CAAC1yF,gBAAgB,CAAEsX,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAkB,CAAE;IACxFw2D,QAAQ,CAACv/B,uBAAuB,CAAEkkD,iBAAiB,CAAE;IAErDF,qBAAqB,GAAG,IAAI,CAACxpC,oBAAoB;IACjDupC,gBAAgB,GAAG7qD,QAAQ,CAAC2hB,IAAI,CAAE,IAAI,CAAC11B,cAAc,EAAE6+D,qBAAqB,EAAEl7E,MAAM,CAAE;IAEtFw5E,iBAAiB,GAAG2C,WAAW,CAACx4F,GAAG,CAAEowC,KAAK,EAAE2lD,eAAe,CAAC3rG,MAAM,CAAE;IACpEyrG,iBAAiB,CAACznC,IAAI,EAAE;IAExB2nC,eAAe,CAAClsG,IAAI,CAAEgsG,iBAAiB,CAAE;IAEzCyF,aAAa,CAAElrD,KAAK,EAAE/zB,MAAM,EAAE,CAAC,EAAEg6E,KAAK,CAACH,WAAW,CAAE;IAEpDL,iBAAiB,CAACtpG,MAAM,EAAE;IAE1B,IAAK8pG,KAAK,CAACH,WAAW,KAAK,IAAI,EAAG;MAEjCL,iBAAiB,CAACx8B,IAAI,CAAE69B,WAAW,EAAEC,gBAAgB,CAAE;IAExD;;IAEA;;IAEA,IAAKG,gBAAgB,KAAK,IAAI,EAAG7qD,QAAQ,CAAC8hB,YAAY,EAAE;IAExD,IAAMijB,YAAY,GAAGskB,kBAAkB,CAAC5tG,KAAK,CAACspF,YAAY;IAE1D9E,SAAS,CAAC57B,MAAM,CAAE0gC,YAAY,EAAEphC,KAAK,EAAE/zB,MAAM,CAAE;IAE/C,IAAKi7E,gBAAgB,KAAK,IAAI,EAAG7qD,QAAQ,CAAC+hB,UAAU,EAAE;;IAEtD;;IAEA,IAAK,IAAI,CAACvlE,IAAI,CAACyuE,SAAS,KAAK,IAAI,EAAG,IAAI,CAACzuE,IAAI,CAACe,KAAK,EAAE;;IAErD;;IAEAmpC,UAAU,CAAC2d,MAAM,CAAE+kD,iBAAiB,EAAEzlD,KAAK,CAAE;;IAE7C;;IAEA0lD,kBAAkB,CAAClkB,WAAW,CAAEykB,KAAK,CAAC/uB,uBAAuB,CAAE;IAE/D,IAAKjrD,MAAM,CAACqrE,aAAa,EAAG;MAE3B,IAAMC,OAAO,GAAGtrE,MAAM,CAACsrE,OAAO;MAE9B,KAAM,IAAIt9F,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGwtF,OAAO,CAACv9F,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAElD,IAAMkxG,OAAO,GAAG5T,OAAO,CAAEt9F,CAAC,CAAE;QAE5BmxG,WAAW,CAAE3F,iBAAiB,EAAEzlD,KAAK,EAAEmrD,OAAO,EAAEA,OAAO,CAACtnF,QAAQ,CAAE;MAEnE;IAED,CAAC,MAAM;MAENunF,WAAW,CAAE3F,iBAAiB,EAAEzlD,KAAK,EAAE/zB,MAAM,CAAE;IAEhD;;IAEA;;IAEA,IAAKo6E,oBAAoB,KAAK,IAAI,EAAG;MAEpC;;MAEAplF,QAAQ,CAACsyE,6BAA6B,CAAE8S,oBAAoB,CAAE;;MAE9D;;MAEAplF,QAAQ,CAACqyE,wBAAwB,CAAE+S,oBAAoB,CAAE;IAE1D;;IAEA;;IAEA,IAAKrmD,KAAK,CAACld,OAAO,KAAK,IAAI,EAAGkd,KAAK,CAACtgB,aAAa,CAAEumE,KAAK,EAAEjmD,KAAK,EAAE/zB,MAAM,CAAE;;IAEzE;;IAEA+rC,aAAa,CAAC0D,iBAAiB,EAAE;IACjC4qC,kBAAkB,GAAG,CAAE,CAAC;IACxBC,cAAc,GAAG,IAAI;IAErBX,gBAAgB,CAACzqG,GAAG,EAAE;IAEtB,IAAKyqG,gBAAgB,CAAC5rG,MAAM,GAAG,CAAC,EAAG;MAElC0rG,kBAAkB,GAAGE,gBAAgB,CAAEA,gBAAgB,CAAC5rG,MAAM,GAAG,CAAC,CAAE;IAErE,CAAC,MAAM;MAEN0rG,kBAAkB,GAAG,IAAI;IAE1B;IAEAC,eAAe,CAACxqG,GAAG,EAAE;IAErB,IAAKwqG,eAAe,CAAC3rG,MAAM,GAAG,CAAC,EAAG;MAEjCyrG,iBAAiB,GAAGE,eAAe,CAAEA,eAAe,CAAC3rG,MAAM,GAAG,CAAC,CAAE;IAElE,CAAC,MAAM;MAENyrG,iBAAiB,GAAG,IAAI;IAEzB;EAED,CAAC;EAED,SAASyF,aAAaA,CAAEjwG,MAAM,EAAEgxB,MAAM,EAAEixD,UAAU,EAAE4oB,WAAW,EAAG;IAEjE,IAAK7qG,MAAM,CAACkkC,OAAO,KAAK,KAAK,EAAG;IAEhC,IAAMA,OAAO,GAAGlkC,MAAM,CAACqiC,MAAM,CAACvgB,IAAI,CAAEkP,MAAM,CAACqR,MAAM,CAAE;IAEnD,IAAK6B,OAAO,EAAG;MAEd,IAAKlkC,MAAM,CAAC28F,OAAO,EAAG;QAErB1a,UAAU,GAAGjiF,MAAM,CAACskC,WAAW;MAEhC,CAAC,MAAM,IAAKtkC,MAAM,CAACowG,KAAK,EAAG;QAE1B,IAAKpwG,MAAM,CAACyoF,UAAU,KAAK,IAAI,EAAGzoF,MAAM,CAAC2rB,MAAM,CAAEqF,MAAM,CAAE;MAE1D,CAAC,MAAM,IAAKhxB,MAAM,CAAC2lC,OAAO,EAAG;QAE5B8kE,kBAAkB,CAACrkB,SAAS,CAAEpmF,MAAM,CAAE;QAEtC,IAAKA,MAAM,CAACmkC,UAAU,EAAG;UAExBsmE,kBAAkB,CAACpkB,UAAU,CAAErmF,MAAM,CAAE;QAExC;MAED,CAAC,MAAM,IAAKA,MAAM,CAAC8vG,QAAQ,EAAG;QAE7B,IAAK,CAAE9vG,MAAM,CAACqkC,aAAa,IAAIojD,QAAQ,CAACr+B,gBAAgB,CAAEppD,MAAM,CAAE,EAAG;UAEpE,IAAK6qG,WAAW,EAAG;YAElBwB,QAAQ,CAACx5E,qBAAqB,CAAE7yB,MAAM,CAACqxB,WAAW,CAAE,CAClDzK,YAAY,CAAEwlF,iBAAiB,CAAE;UAEpC;UAEA,IAAMl3E,QAAQ,GAAGkmC,OAAO,CAACzvC,MAAM,CAAE3rB,MAAM,CAAE;UACzC,IAAMyoC,QAAQ,GAAGzoC,MAAM,CAACyoC,QAAQ;UAEhC,IAAKA,QAAQ,CAACvE,OAAO,EAAG;YAEvBsmE,iBAAiB,CAAChsG,IAAI,CAAEwB,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAEw5C,UAAU,EAAEoqB,QAAQ,CAAC9lF,CAAC,EAAE,IAAI,CAAE;UAEnF;QAED;MAED,CAAC,MAAM,IAAKvmB,MAAM,CAACgoC,MAAM,IAAIhoC,MAAM,CAACioC,MAAM,IAAIjoC,MAAM,CAACkoC,QAAQ,EAAG;QAE/D,IAAKloC,MAAM,CAACqoC,aAAa,EAAG;UAE3B;;UAEA,IAAKroC,MAAM,CAACwoC,QAAQ,CAACqhB,KAAK,KAAKjsD,IAAI,CAAC6nD,MAAM,CAACoE,KAAK,EAAG;YAElD7pD,MAAM,CAACwoC,QAAQ,CAAC7c,MAAM,EAAE;YACxB3rB,MAAM,CAACwoC,QAAQ,CAACqhB,KAAK,GAAGjsD,IAAI,CAAC6nD,MAAM,CAACoE,KAAK;UAE1C;QAED;QAEA,IAAK,CAAE7pD,MAAM,CAACqkC,aAAa,IAAIojD,QAAQ,CAACt+B,gBAAgB,CAAEnpD,MAAM,CAAE,EAAG;UAEpE,IAAK6qG,WAAW,EAAG;YAElBwB,QAAQ,CAACx5E,qBAAqB,CAAE7yB,MAAM,CAACqxB,WAAW,CAAE,CAClDzK,YAAY,CAAEwlF,iBAAiB,CAAE;UAEpC;UAEA,IAAMl3E,UAAQ,GAAGkmC,OAAO,CAACzvC,MAAM,CAAE3rB,MAAM,CAAE;UACzC,IAAMyoC,SAAQ,GAAGzoC,MAAM,CAACyoC,QAAQ;UAEhC,IAAKllB,KAAK,CAACC,OAAO,CAAEilB,SAAQ,CAAE,EAAG;YAEhC,IAAMgP,MAAM,GAAGviB,UAAQ,CAACuiB,MAAM;YAE9B,KAAM,IAAIz4C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2oC,MAAM,CAAC14C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;cAEjD,IAAMg7C,KAAK,GAAGvC,MAAM,CAAEz4C,CAAC,CAAE;cACzB,IAAM6+C,aAAa,GAAGpV,SAAQ,CAAEuR,KAAK,CAAC5B,aAAa,CAAE;cAErD,IAAKyF,aAAa,IAAIA,aAAa,CAAC3Z,OAAO,EAAG;gBAE7CsmE,iBAAiB,CAAChsG,IAAI,CAAEwB,MAAM,EAAEk1B,UAAQ,EAAE2oB,aAAa,EAAEokC,UAAU,EAAEoqB,QAAQ,CAAC9lF,CAAC,EAAEyzB,KAAK,CAAE;cAEzF;YAED;UAED,CAAC,MAAM,IAAKvR,SAAQ,CAACvE,OAAO,EAAG;YAE9BsmE,iBAAiB,CAAChsG,IAAI,CAAEwB,MAAM,EAAEk1B,UAAQ,EAAEuT,SAAQ,EAAEw5C,UAAU,EAAEoqB,QAAQ,CAAC9lF,CAAC,EAAE,IAAI,CAAE;UAEnF;QAED;MAED;IAED;IAEA,IAAMkP,QAAQ,GAAGz1B,MAAM,CAACy1B,QAAQ;IAEhC,KAAM,IAAIz2B,IAAC,GAAG,CAAC,EAAE8P,GAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,IAAC,GAAG8P,GAAC,EAAE9P,IAAC,EAAG,EAAG;MAEnDixG,aAAa,CAAEx6E,QAAQ,CAAEz2B,IAAC,CAAE,EAAEgyB,MAAM,EAAEixD,UAAU,EAAE4oB,WAAW,CAAE;IAEhE;EAED;EAEA,SAASsF,WAAWA,CAAE3F,iBAAiB,EAAEzlD,KAAK,EAAE/zB,MAAM,EAAEpI,QAAQ,EAAG;IAElE,IAAMynF,aAAa,GAAG7F,iBAAiB,CAACtuB,MAAM;IAC9C,IAAMo0B,mBAAmB,GAAG9F,iBAAiB,CAACloB,YAAY;IAC1D,IAAMiuB,kBAAkB,GAAG/F,iBAAiB,CAACr+D,WAAW;IAExDs+D,kBAAkB,CAACjkB,eAAe,CAAEx1D,MAAM,CAAE;IAE5C,IAAKs/E,mBAAmB,CAACvxG,MAAM,GAAG,CAAC,EAAGyxG,sBAAsB,CAAEH,aAAa,EAAEtrD,KAAK,EAAE/zB,MAAM,CAAE;IAE5F,IAAKpI,QAAQ,EAAG/rB,KAAK,CAAC+rB,QAAQ,CAAE2iF,gBAAgB,CAACp2F,IAAI,CAAEyT,QAAQ,CAAE,CAAE;IAEnE,IAAKynF,aAAa,CAACtxG,MAAM,GAAG,CAAC,EAAG0xG,aAAa,CAAEJ,aAAa,EAAEtrD,KAAK,EAAE/zB,MAAM,CAAE;IAC7E,IAAKs/E,mBAAmB,CAACvxG,MAAM,GAAG,CAAC,EAAG0xG,aAAa,CAAEH,mBAAmB,EAAEvrD,KAAK,EAAE/zB,MAAM,CAAE;IACzF,IAAKu/E,kBAAkB,CAACxxG,MAAM,GAAG,CAAC,EAAG0xG,aAAa,CAAEF,kBAAkB,EAAExrD,KAAK,EAAE/zB,MAAM,CAAE;;IAEvF;;IAEAn0B,KAAK,CAACytD,OAAO,CAAC7hC,KAAK,CAACugE,OAAO,CAAE,IAAI,CAAE;IACnCnsF,KAAK,CAACytD,OAAO,CAAC7hC,KAAK,CAAC2iE,OAAO,CAAE,IAAI,CAAE;IACnCvuF,KAAK,CAACytD,OAAO,CAACpsC,KAAK,CAACktE,OAAO,CAAE,IAAI,CAAE;IAEnCvuF,KAAK,CAACkzF,gBAAgB,CAAE,KAAK,CAAE;EAEhC;EAEA,SAASygB,sBAAsBA,CAAEH,aAAa,EAAEtrD,KAAK,EAAE/zB,MAAM,EAAG;IAE/D,IAAMq5B,QAAQ,GAAGD,YAAY,CAACC,QAAQ;IAEtC,IAAK8hD,yBAAyB,KAAK,IAAI,EAAG;MAEzCA,yBAAyB,GAAG,IAAIhkF,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE;QACxDhD,eAAe,EAAE,IAAI;QACrBnqB,IAAI,EAAEqmD,UAAU,CAAC8f,GAAG,CAAE,6BAA6B,CAAE,GAAGh5D,aAAa,GAAGP,gBAAgB;QACxF4c,SAAS,EAAE9c,wBAAwB;QACnCuhB,OAAO,EAAIohC,QAAQ,IAAI0/C,UAAU,KAAK,IAAI,GAAK,CAAC,GAAG;MACpD,CAAC,CAAE;IAEJ;IAEAiB,KAAK,CAACgD,oBAAoB,CAAEtnD,QAAQ,CAAE;IAEtC,IAAK2D,QAAQ,EAAG;MAEf8hD,yBAAyB,CAACjjF,OAAO,CAAEw9B,QAAQ,CAACt2C,CAAC,EAAEs2C,QAAQ,CAACh2C,CAAC,CAAE;IAE5D,CAAC,MAAM;MAENy7F,yBAAyB,CAACjjF,OAAO,CAAEzW,eAAe,CAAEi0C,QAAQ,CAACt2C,CAAC,CAAE,EAAEqC,eAAe,CAAEi0C,QAAQ,CAACh2C,CAAC,CAAE,CAAE;IAElG;;IAEA;;IAEA,IAAMw0C,mBAAmB,GAAG8lD,KAAK,CAAC7lD,eAAe,EAAE;IACnD6lD,KAAK,CAACxlD,eAAe,CAAE2mD,yBAAyB,CAAE;IAClDnB,KAAK,CAACjlE,KAAK,EAAE;;IAEb;IACA;IACA,IAAMqf,kBAAkB,GAAG4lD,KAAK,CAAC3lD,WAAW;IAC5C2lD,KAAK,CAAC3lD,WAAW,GAAGl/C,aAAa;IAEjCsqG,aAAa,CAAEJ,aAAa,EAAEtrD,KAAK,EAAE/zB,MAAM,CAAE;IAE7Cg6E,KAAK,CAAC3lD,WAAW,GAAGD,kBAAkB;IAEtCp/B,QAAQ,CAACsyE,6BAA6B,CAAE6T,yBAAyB,CAAE;IACnEnmF,QAAQ,CAACqyE,wBAAwB,CAAE8T,yBAAyB,CAAE;IAE9DnB,KAAK,CAACxlD,eAAe,CAAEN,mBAAmB,CAAE;EAE7C;EAEA,SAASurD,aAAaA,CAAE70C,UAAU,EAAE7W,KAAK,EAAE/zB,MAAM,EAAG;IAEnD,IAAMu7E,gBAAgB,GAAGxnD,KAAK,CAACld,OAAO,KAAK,IAAI,GAAGkd,KAAK,CAACwnD,gBAAgB,GAAG,IAAI;IAE/E,KAAM,IAAIvtG,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG8sD,UAAU,CAAC78D,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAErD,IAAMwjF,UAAU,GAAG5mB,UAAU,CAAE58D,CAAC,CAAE;MAElC,IAAMgB,MAAM,GAAGwiF,UAAU,CAACxiF,MAAM;MAChC,IAAMk1B,QAAQ,GAAGstD,UAAU,CAACttD,QAAQ;MACpC,IAAMuT,QAAQ,GAAG8jE,gBAAgB,KAAK,IAAI,GAAG/pB,UAAU,CAAC/5C,QAAQ,GAAG8jE,gBAAgB;MACnF,IAAMvyD,KAAK,GAAGwoC,UAAU,CAACxoC,KAAK;MAE9B,IAAKh6C,MAAM,CAACqiC,MAAM,CAACvgB,IAAI,CAAEkP,MAAM,CAACqR,MAAM,CAAE,EAAG;QAE1CsnD,YAAY,CAAE3pF,MAAM,EAAE+kD,KAAK,EAAE/zB,MAAM,EAAEkE,QAAQ,EAAEuT,QAAQ,EAAEuR,KAAK,CAAE;MAEjE;IAED;EAED;EAEA,SAAS2vC,YAAYA,CAAE3pF,MAAM,EAAE+kD,KAAK,EAAE/zB,MAAM,EAAEkE,QAAQ,EAAEuT,QAAQ,EAAEuR,KAAK,EAAG;IAEzEh6C,MAAM,CAACwkC,cAAc,CAAEwmE,KAAK,EAAEjmD,KAAK,EAAE/zB,MAAM,EAAEkE,QAAQ,EAAEuT,QAAQ,EAAEuR,KAAK,CAAE;IAExEh6C,MAAM,CAAC8jC,eAAe,CAACpqB,gBAAgB,CAAEsX,MAAM,CAACC,kBAAkB,EAAEjxB,MAAM,CAACqxB,WAAW,CAAE;IACxFrxB,MAAM,CAAC+jC,YAAY,CAACloB,eAAe,CAAE7b,MAAM,CAAC8jC,eAAe,CAAE;IAE7D2E,QAAQ,CAACjE,cAAc,CAAEwmE,KAAK,EAAEjmD,KAAK,EAAE/zB,MAAM,EAAEkE,QAAQ,EAAEl1B,MAAM,EAAEg6C,KAAK,CAAE;IAExE,IAAKvR,QAAQ,CAAC0D,WAAW,KAAK,IAAI,IAAI1D,QAAQ,CAACuD,IAAI,KAAKjoC,UAAU,EAAG;MAEpE0kC,QAAQ,CAACuD,IAAI,GAAGloC,QAAQ;MACxB2kC,QAAQ,CAAC1iB,WAAW,GAAG,IAAI;MAC3BilF,KAAK,CAAChhB,kBAAkB,CAAEh5D,MAAM,EAAE+zB,KAAK,EAAE7vB,QAAQ,EAAEuT,QAAQ,EAAEzoC,MAAM,EAAEg6C,KAAK,CAAE;MAE5EvR,QAAQ,CAACuD,IAAI,GAAGnoC,SAAS;MACzB4kC,QAAQ,CAAC1iB,WAAW,GAAG,IAAI;MAC3BilF,KAAK,CAAChhB,kBAAkB,CAAEh5D,MAAM,EAAE+zB,KAAK,EAAE7vB,QAAQ,EAAEuT,QAAQ,EAAEzoC,MAAM,EAAEg6C,KAAK,CAAE;MAE5EvR,QAAQ,CAACuD,IAAI,GAAGjoC,UAAU;IAE3B,CAAC,MAAM;MAENinG,KAAK,CAAChhB,kBAAkB,CAAEh5D,MAAM,EAAE+zB,KAAK,EAAE7vB,QAAQ,EAAEuT,QAAQ,EAAEzoC,MAAM,EAAEg6C,KAAK,CAAE;IAE7E;IAEAh6C,MAAM,CAACykC,aAAa,CAAEumE,KAAK,EAAEjmD,KAAK,EAAE/zB,MAAM,EAAEkE,QAAQ,EAAEuT,QAAQ,EAAEuR,KAAK,CAAE;EAExE;EAEA,SAASg2D,UAAUA,CAAEvnE,QAAQ,EAAEsc,KAAK,EAAE/kD,MAAM,EAAG;IAE9C,IAAK+kD,KAAK,CAACld,OAAO,KAAK,IAAI,EAAGkd,KAAK,GAAGunD,WAAW,CAAC,CAAC;;IAEnD,IAAM/oC,kBAAkB,GAAGvL,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE;IAErD,IAAM0Y,MAAM,GAAGspD,kBAAkB,CAAC5tG,KAAK,CAACskD,MAAM;IAC9C,IAAMglC,YAAY,GAAGskB,kBAAkB,CAAC5tG,KAAK,CAACspF,YAAY;IAE1D,IAAMuqB,kBAAkB,GAAGvvD,MAAM,CAACtkD,KAAK,CAAComB,OAAO;IAE/C,IAAMklB,UAAU,GAAG+kE,YAAY,CAAC5sB,aAAa,CAAE73C,QAAQ,EAAE0Y,MAAM,CAACtkD,KAAK,EAAEspF,YAAY,EAAEphC,KAAK,EAAE/kD,MAAM,CAAE;IACpG,IAAM2wG,eAAe,GAAGzD,YAAY,CAAC5rB,kBAAkB,CAAEn5C,UAAU,CAAE;IAErE,IAAIikC,QAAQ,GAAG7I,kBAAkB,CAAC6I,QAAQ;;IAE1C;;IAEA7I,kBAAkB,CAACx7B,WAAW,GAAGU,QAAQ,CAAC+3C,sBAAsB,GAAGz7B,KAAK,CAAChd,WAAW,GAAG,IAAI;IAC3Fw7B,kBAAkB,CAAC7wB,GAAG,GAAGqS,KAAK,CAACrS,GAAG;IAClC6wB,kBAAkB,CAAClyB,MAAM,GAAG,CAAE5I,QAAQ,CAAC+3C,sBAAsB,GAAGpB,UAAU,GAAGjkB,QAAQ,EAAGxmD,GAAG,CAAE8zB,QAAQ,CAAC4I,MAAM,IAAIkyB,kBAAkB,CAACx7B,WAAW,CAAE;IAEhJ,IAAKqkC,QAAQ,KAAK3uE,SAAS,EAAG;MAE7B;;MAEAgrC,QAAQ,CAACx6B,gBAAgB,CAAE,SAAS,EAAEghG,iBAAiB,CAAE;MAEzD7iC,QAAQ,GAAG,IAAI8R,GAAG,EAAE;MACpB3a,kBAAkB,CAAC6I,QAAQ,GAAGA,QAAQ;IAEvC;IAEA,IAAI/O,OAAO,GAAG+O,QAAQ,CAACz3D,GAAG,CAAEg8F,eAAe,CAAE;IAE7C,IAAKtzC,OAAO,KAAK5/D,SAAS,EAAG;MAE5B;;MAEA,IAAK8lE,kBAAkB,CAAC6pB,cAAc,KAAK/vB,OAAO,IAAIkG,kBAAkB,CAACmtC,kBAAkB,KAAKA,kBAAkB,EAAG;QAEpHE,8BAA8B,CAAEnoE,QAAQ,EAAEN,UAAU,CAAE;QAEtD,OAAOk1B,OAAO;MAEf;IAED,CAAC,MAAM;MAENl1B,UAAU,CAACiY,QAAQ,GAAG8sD,YAAY,CAACr/B,WAAW,CAAEplC,QAAQ,CAAE;MAE1DA,QAAQ,CAAC0F,OAAO,CAAEnuC,MAAM,EAAEmoC,UAAU,EAAE6iE,KAAK,CAAE;MAE7CviE,QAAQ,CAAC2F,eAAe,CAAEjG,UAAU,EAAE6iE,KAAK,CAAE;MAE7C3tC,OAAO,GAAG6vC,YAAY,CAACxrB,cAAc,CAAEv5C,UAAU,EAAEwoE,eAAe,CAAE;MACpEvkC,QAAQ,CAAC14D,GAAG,CAAEi9F,eAAe,EAAEtzC,OAAO,CAAE;MAExCkG,kBAAkB,CAACnjB,QAAQ,GAAGjY,UAAU,CAACiY,QAAQ;IAElD;IAEA,IAAMA,QAAQ,GAAGmjB,kBAAkB,CAACnjB,QAAQ;IAE5C,IAAO,CAAE3X,QAAQ,CAACqY,gBAAgB,IAAI,CAAErY,QAAQ,CAACsyC,mBAAmB,IAAMtyC,QAAQ,CAAC2Y,QAAQ,KAAK,IAAI,EAAG;MAEtGhB,QAAQ,CAAC/S,cAAc,GAAG+T,QAAQ,CAACU,OAAO;IAE3C;IAEA8uD,8BAA8B,CAAEnoE,QAAQ,EAAEN,UAAU,CAAE;;IAEtD;;IAEAo7B,kBAAkB,CAACstC,WAAW,GAAGC,mBAAmB,CAAEroE,QAAQ,CAAE;IAChE86B,kBAAkB,CAACmtC,kBAAkB,GAAGA,kBAAkB;IAE1D,IAAKntC,kBAAkB,CAACstC,WAAW,EAAG;MAErC;;MAEAzwD,QAAQ,CAACyX,iBAAiB,CAAC1+D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACsnF,OAAO;MACvD/jC,QAAQ,CAAC0X,UAAU,CAAC3+D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACunF,KAAK;MAC9ChkC,QAAQ,CAAC2X,iBAAiB,CAAC5+D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACokF,WAAW;MAC3D7gC,QAAQ,CAAC6X,uBAAuB,CAAC9+D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACwnF,iBAAiB;MACvEjkC,QAAQ,CAACoY,UAAU,CAACr/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACqkF,IAAI;MAC7C9gC,QAAQ,CAACwY,gBAAgB,CAACz/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACynF,UAAU;MACzDlkC,QAAQ,CAACoZ,cAAc,CAACrgE,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACskF,QAAQ;MACrD/gC,QAAQ,CAACqZ,KAAK,CAACtgE,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAAC0nF,YAAY;MAChDnkC,QAAQ,CAACsZ,KAAK,CAACvgE,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAAC2nF,YAAY;MAChDpkC,QAAQ,CAAC2Y,WAAW,CAAC5/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACg4B,KAAK;MAC/CurB,QAAQ,CAAC4Y,iBAAiB,CAAC7/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAAC4nF,WAAW;MAC3DrkC,QAAQ,CAACiZ,gBAAgB,CAAClgE,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACukF,IAAI;MAEnDhhC,QAAQ,CAACkY,oBAAoB,CAACn/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACy7D,oBAAoB;MACvElY,QAAQ,CAACmY,uBAAuB,CAACp/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAAC07D,uBAAuB;MAC7EnY,QAAQ,CAACyY,aAAa,CAAC1/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACg8D,aAAa;MACzDzY,QAAQ,CAAC0Y,gBAAgB,CAAC3/D,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACi8D,gBAAgB;MAC/D1Y,QAAQ,CAAC+Y,cAAc,CAAChgE,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACs8D,cAAc;MAC3D/Y,QAAQ,CAACgZ,iBAAiB,CAACjgE,KAAK,GAAGgoD,MAAM,CAACtkD,KAAK,CAACu8D,iBAAiB;MACjE;IAED;;IAEA,IAAM23C,YAAY,GAAG1zC,OAAO,CAACwQ,WAAW,EAAE;IAC1C,IAAMmjC,YAAY,GAAGp8B,aAAa,CAACM,YAAY,CAAE67B,YAAY,CAACh9B,GAAG,EAAE3zB,QAAQ,CAAE;IAE7EmjB,kBAAkB,CAAC6pB,cAAc,GAAG/vB,OAAO;IAC3CkG,kBAAkB,CAACytC,YAAY,GAAGA,YAAY;IAE9C,OAAO3zC,OAAO;EAEf;EAEA,SAASuzC,8BAA8BA,CAAEnoE,QAAQ,EAAEN,UAAU,EAAG;IAE/D,IAAMo7B,kBAAkB,GAAGvL,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE;IAErD86B,kBAAkB,CAAC4Y,cAAc,GAAGh0C,UAAU,CAACg0C,cAAc;IAC7D5Y,kBAAkB,CAAC0X,UAAU,GAAG9yC,UAAU,CAAC8yC,UAAU;IACrD1X,kBAAkB,CAACoY,QAAQ,GAAGxzC,UAAU,CAACwzC,QAAQ;IACjDpY,kBAAkB,CAAC2J,YAAY,GAAG/kC,UAAU,CAAC+kC,YAAY;IACzD3J,kBAAkB,CAAC4J,YAAY,GAAGhlC,UAAU,CAACglC,YAAY;IACzD5J,kBAAkB,CAAC6J,WAAW,GAAGjlC,UAAU,CAACilC,WAAW;IACvD7J,kBAAkB,CAACuJ,iBAAiB,GAAG3kC,UAAU,CAAC2kC,iBAAiB;IACnEvJ,kBAAkB,CAACkV,iBAAiB,GAAGtwC,UAAU,CAACswC,iBAAiB;IACnElV,kBAAkB,CAACT,eAAe,GAAG36B,UAAU,CAACuwC,mBAAmB;IACnEnV,kBAAkB,CAACiY,YAAY,GAAGrzC,UAAU,CAACqzC,YAAY;IACzDjY,kBAAkB,CAACgY,cAAc,GAAGpzC,UAAU,CAACozC,cAAc;IAC7DhY,kBAAkB,CAACle,WAAW,GAAGld,UAAU,CAACkd,WAAW;EAExD;EAEA,SAAS+pD,UAAUA,CAAEp+E,MAAM,EAAE+zB,KAAK,EAAE7vB,QAAQ,EAAEuT,QAAQ,EAAEzoC,MAAM,EAAG;IAEhE,IAAK+kD,KAAK,CAACld,OAAO,KAAK,IAAI,EAAGkd,KAAK,GAAGunD,WAAW,CAAC,CAAC;;IAEnDtmF,QAAQ,CAAC2uE,iBAAiB,EAAE;IAE5B,IAAMjiD,GAAG,GAAGqS,KAAK,CAACrS,GAAG;IACrB,IAAM3K,WAAW,GAAGU,QAAQ,CAAC+3C,sBAAsB,GAAGz7B,KAAK,CAAChd,WAAW,GAAG,IAAI;IAC9E,IAAMpjB,QAAQ,GAAKymF,oBAAoB,KAAK,IAAI,GAAKJ,KAAK,CAAC7uB,cAAc,GAAKivB,oBAAoB,CAACtqB,gBAAgB,KAAK,IAAI,GAAGsqB,oBAAoB,CAACviF,OAAO,CAAClE,QAAQ,GAAGhZ,cAAgB;IACvL,IAAM0lC,MAAM,GAAG,CAAE5I,QAAQ,CAAC+3C,sBAAsB,GAAGpB,UAAU,GAAGjkB,QAAQ,EAAGxmD,GAAG,CAAE8zB,QAAQ,CAAC4I,MAAM,IAAItJ,WAAW,CAAE;IAChH,IAAMyzC,YAAY,GAAG/yC,QAAQ,CAACwD,YAAY,KAAK,IAAI,IAAI,CAAC,CAAE/W,QAAQ,CAACC,UAAU,CAACjX,KAAK,IAAIgX,QAAQ,CAACC,UAAU,CAACjX,KAAK,CAACq1B,QAAQ,KAAK,CAAC;IAC/H,IAAMgoC,cAAc,GAAG,CAAC,CAAE9yC,QAAQ,CAACgI,SAAS,IAAI,CAAC,CAAEvb,QAAQ,CAACC,UAAU,CAACojB,OAAO;IAC9E,IAAM20B,YAAY,GAAG,CAAC,CAAEh4C,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ;IACzD,IAAM+3C,YAAY,GAAG,CAAC,CAAEj4C,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM;IACvD,IAAMg7C,WAAW,GAAG,CAAC,CAAEl4C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK;IACrD,IAAMmnC,WAAW,GAAG5c,QAAQ,CAACwF,UAAU,GAAG+8D,KAAK,CAAC3lD,WAAW,GAAGl/C,aAAa;IAE3E,IAAMwyC,cAAc,GAAGzjB,QAAQ,CAACqiB,eAAe,CAACniB,QAAQ,IAAIF,QAAQ,CAACqiB,eAAe,CAACnlB,MAAM,IAAI8C,QAAQ,CAACqiB,eAAe,CAACr5B,KAAK;IAC7H,IAAM4uD,iBAAiB,GAAKn0B,cAAc,KAAKl7C,SAAS,GAAKk7C,cAAc,CAAC55C,MAAM,GAAG,CAAC;IAEtF,IAAMwkE,kBAAkB,GAAGvL,UAAU,CAACrjD,GAAG,CAAE8zB,QAAQ,CAAE;IACrD,IAAM0Y,MAAM,GAAGspD,kBAAkB,CAAC5tG,KAAK,CAACskD,MAAM;IAE9C,IAAK8qD,gBAAgB,KAAK,IAAI,EAAG;MAEhC,IAAKC,qBAAqB,KAAK,IAAI,IAAIl7E,MAAM,KAAKs6E,cAAc,EAAG;QAElE,IAAMhoC,QAAQ,GACbtyC,MAAM,KAAKs6E,cAAc,IACzB7iE,QAAQ,CAACvC,EAAE,KAAKmlE,kBAAkB;;QAEnC;QACA;QACA;QACAjqD,QAAQ,CAACiiB,QAAQ,CAAE56B,QAAQ,EAAEzX,MAAM,EAAEsyC,QAAQ,CAAE;MAEhD;IAED;;IAEA;;IAEA,IAAI2tC,kBAAkB,GAAG,KAAK;IAE9B,IAAKxoE,QAAQ,CAACxlB,OAAO,KAAKsgD,kBAAkB,CAACyxB,SAAS,EAAG;MAExD,IAAKzxB,kBAAkB,CAACstC,WAAW,IAAMttC,kBAAkB,CAACmtC,kBAAkB,KAAKvvD,MAAM,CAACtkD,KAAK,CAAComB,OAAS,EAAG;QAE3GguF,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAAC4Y,cAAc,KAAKx3D,QAAQ,EAAG;QAE5DssF,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAKjxG,MAAM,CAACunC,eAAe,IAAIg8B,kBAAkB,CAAC0X,UAAU,KAAK,KAAK,EAAG;QAE/Eg2B,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK,CAAEjxG,MAAM,CAACunC,eAAe,IAAIg8B,kBAAkB,CAAC0X,UAAU,KAAK,IAAI,EAAG;QAEhFg2B,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAKjxG,MAAM,CAACqoC,aAAa,IAAIk7B,kBAAkB,CAACoY,QAAQ,KAAK,KAAK,EAAG;QAE3Es1B,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK,CAAEjxG,MAAM,CAACqoC,aAAa,IAAIk7B,kBAAkB,CAACoY,QAAQ,KAAK,IAAI,EAAG;QAE5Es1B,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAAClyB,MAAM,KAAKA,MAAM,EAAG;QAElD4/D,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAKxoE,QAAQ,CAACiK,GAAG,KAAK,IAAI,IAAI6wB,kBAAkB,CAAC7wB,GAAG,KAAKA,GAAG,EAAG;QAErEu+D,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAACkV,iBAAiB,KAAKh7E,SAAS,KAC3D8lE,kBAAkB,CAACkV,iBAAiB,KAAKr3B,QAAQ,CAACyhB,SAAS,IAC7DU,kBAAkB,CAACT,eAAe,KAAK1hB,QAAQ,CAAC0hB,eAAe,CAAE,EAAG;QAEpEmuC,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAACiY,YAAY,KAAKA,YAAY,EAAG;QAE9Dy1B,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAACgY,cAAc,KAAKA,cAAc,EAAG;QAElE01B,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAAC2J,YAAY,KAAKA,YAAY,EAAG;QAE9D+jC,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAAC4J,YAAY,KAAKA,YAAY,EAAG;QAE9D8jC,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAAC6J,WAAW,KAAKA,WAAW,EAAG;QAE5D6jC,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK1tC,kBAAkB,CAACle,WAAW,KAAKA,WAAW,EAAG;QAE5D4rD,kBAAkB,GAAG,IAAI;MAE1B,CAAC,MAAM,IAAK7mD,YAAY,CAACC,QAAQ,KAAK,IAAI,IAAIkZ,kBAAkB,CAACuJ,iBAAiB,KAAKA,iBAAiB,EAAG;QAE1GmkC,kBAAkB,GAAG,IAAI;MAE1B;IAED,CAAC,MAAM;MAENA,kBAAkB,GAAG,IAAI;MACzB1tC,kBAAkB,CAACyxB,SAAS,GAAGvsD,QAAQ,CAACxlB,OAAO;IAEhD;;IAEA;;IAEA,IAAIo6C,OAAO,GAAGkG,kBAAkB,CAAC6pB,cAAc;IAE/C,IAAK6jB,kBAAkB,KAAK,IAAI,EAAG;MAElC5zC,OAAO,GAAG2yC,UAAU,CAAEvnE,QAAQ,EAAEsc,KAAK,EAAE/kD,MAAM,CAAE;IAEhD;IAEA,IAAIkxG,cAAc,GAAG,KAAK;IAC1B,IAAIC,eAAe,GAAG,KAAK;IAC3B,IAAIC,aAAa,GAAG,KAAK;IAEzB,IAAMC,UAAU,GAAGh0C,OAAO,CAACwQ,WAAW,EAAE;MACvCyjC,UAAU,GAAG/tC,kBAAkB,CAACnjB,QAAQ;IAEzC,IAAKvjD,KAAK,CAACwyF,UAAU,CAAEhyB,OAAO,CAACA,OAAO,CAAE,EAAG;MAE1C6zC,cAAc,GAAG,IAAI;MACrBC,eAAe,GAAG,IAAI;MACtBC,aAAa,GAAG,IAAI;IAErB;IAEA,IAAK3oE,QAAQ,CAACvC,EAAE,KAAKmlE,kBAAkB,EAAG;MAEzCA,kBAAkB,GAAG5iE,QAAQ,CAACvC,EAAE;MAEhCirE,eAAe,GAAG,IAAI;IAEvB;IAEA,IAAKD,cAAc,IAAI5F,cAAc,KAAKt6E,MAAM,EAAG;MAElDqgF,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,kBAAkB,EAAE1gE,MAAM,CAACE,gBAAgB,CAAE;MAEvE,IAAKk5B,YAAY,CAACsX,sBAAsB,EAAG;QAE1C2vC,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,eAAe,EACxC,GAAG,IAAKxiF,IAAI,CAACqD,GAAG,CAAEye,MAAM,CAAC8P,GAAG,GAAG,GAAG,CAAE,GAAG5xB,IAAI,CAACsD,GAAG,CAAE,CAAE;MAErD;MAEA,IAAK84F,cAAc,KAAKt6E,MAAM,EAAG;QAEhCs6E,cAAc,GAAGt6E,MAAM;;QAEvB;QACA;QACA;;QAEAmgF,eAAe,GAAG,IAAI,CAAC,CAAE;QACzBC,aAAa,GAAG,IAAI,CAAC,CAAE;MAExB;;MAEA;MACA;;MAEA,IAAK3oE,QAAQ,CAACqY,gBAAgB,IAC7BrY,QAAQ,CAACm+D,mBAAmB,IAC5Bn+D,QAAQ,CAACi+D,kBAAkB,IAC3Bj+D,QAAQ,CAAC+3C,sBAAsB,IAC/B/3C,QAAQ,CAAC4I,MAAM,EAAG;QAElB,IAAMkgE,OAAO,GAAGF,UAAU,CAACrhE,GAAG,CAACwhE,cAAc;QAE7C,IAAKD,OAAO,KAAK9zG,SAAS,EAAG;UAE5B8zG,OAAO,CAACzjC,QAAQ,CAAE4jB,GAAG,EACpB2a,QAAQ,CAACx5E,qBAAqB,CAAE7B,MAAM,CAACK,WAAW,CAAE,CAAE;QAExD;MAED;MAEA,IAAKoX,QAAQ,CAACm+D,mBAAmB,IAChCn+D,QAAQ,CAACi+D,kBAAkB,IAC3Bj+D,QAAQ,CAACg+D,qBAAqB,IAC9Bh+D,QAAQ,CAACwK,mBAAmB,IAC5BxK,QAAQ,CAAC+3C,sBAAsB,IAC/B/3C,QAAQ,CAACqY,gBAAgB,EAAG;QAE5BuwD,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,gBAAgB,EAAE1gE,MAAM,CAACyzC,oBAAoB,KAAK,IAAI,CAAE;MAEnF;MAEA,IAAKh8B,QAAQ,CAACm+D,mBAAmB,IAChCn+D,QAAQ,CAACi+D,kBAAkB,IAC3Bj+D,QAAQ,CAACg+D,qBAAqB,IAC9Bh+D,QAAQ,CAACwK,mBAAmB,IAC5BxK,QAAQ,CAAC+3C,sBAAsB,IAC/B/3C,QAAQ,CAACqY,gBAAgB,IACzBrY,QAAQ,CAACo/D,gBAAgB,IACzB7nG,MAAM,CAACqoC,aAAa,EAAG;QAEvBgpE,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,YAAY,EAAE1gE,MAAM,CAACC,kBAAkB,CAAE;MAEpE;IAED;;IAEA;IACA;IACA;;IAEA,IAAKjxB,MAAM,CAACqoC,aAAa,EAAG;MAE3BgpE,UAAU,CAACr8B,WAAW,CAAE0c,GAAG,EAAE1xF,MAAM,EAAE,YAAY,CAAE;MACnDqxG,UAAU,CAACr8B,WAAW,CAAE0c,GAAG,EAAE1xF,MAAM,EAAE,mBAAmB,CAAE;MAE1D,IAAMwoC,QAAQ,GAAGxoC,MAAM,CAACwoC,QAAQ;MAEhC,IAAKA,QAAQ,EAAG;QAEf,IAAK4hB,YAAY,CAACiY,mBAAmB,EAAG;UAEvC,IAAK75B,QAAQ,CAACipE,WAAW,KAAK,IAAI,EAAGjpE,QAAQ,CAACkpE,kBAAkB,EAAE;UAElEL,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,aAAa,EAAElpD,QAAQ,CAACipE,WAAW,EAAEzrF,QAAQ,CAAE;UACzEqrF,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,iBAAiB,EAAElpD,QAAQ,CAACmpE,eAAe,CAAE;QAExE,CAAC,MAAM;UAENh+F,OAAO,CAACC,IAAI,CAAE,yIAAyI,CAAE;QAE1J;MAED;IAED;IAEA,IAAM2jC,eAAe,GAAGriB,QAAQ,CAACqiB,eAAe;IAEhD,IAAKA,eAAe,CAACniB,QAAQ,KAAK33B,SAAS,IAAI85C,eAAe,CAACnlB,MAAM,KAAK30B,SAAS,IAAM85C,eAAe,CAACr5B,KAAK,KAAKzgB,SAAS,IAAI2sD,YAAY,CAACC,QAAQ,KAAK,IAAM,EAAG;MAElK+iD,YAAY,CAACzhF,MAAM,CAAE3rB,MAAM,EAAEk1B,QAAQ,EAAEuT,QAAQ,EAAE40B,OAAO,CAAE;IAE3D;IAGA,IAAK8zC,eAAe,IAAI5tC,kBAAkB,CAACn/B,aAAa,KAAKpkC,MAAM,CAACokC,aAAa,EAAG;MAEnFm/B,kBAAkB,CAACn/B,aAAa,GAAGpkC,MAAM,CAACokC,aAAa;MACvDitE,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,eAAe,EAAE1xF,MAAM,CAACokC,aAAa,CAAE;IAElE;IAEA,IAAK+sE,eAAe,EAAG;MAEtBE,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,qBAAqB,EAAEsZ,KAAK,CAACF,mBAAmB,CAAE;MAE5E,IAAKvnC,kBAAkB,CAACstC,WAAW,EAAG;QAErC;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEAe,6BAA6B,CAAEN,UAAU,EAAEF,aAAa,CAAE;MAE3D;;MAEA;;MAEA,IAAK1+D,GAAG,IAAIjK,QAAQ,CAACiK,GAAG,KAAK,IAAI,EAAG;QAEnCvL,SAAS,CAAC++D,kBAAkB,CAAEoL,UAAU,EAAE5+D,GAAG,CAAE;MAEhD;MAEAvL,SAAS,CAACk/D,uBAAuB,CAAEiL,UAAU,EAAE7oE,QAAQ,EAAEmjE,WAAW,EAAED,OAAO,EAAEQ,yBAAyB,CAAE;MAE1Gv3B,aAAa,CAACK,MAAM,CAAEyc,GAAG,EAAEnuB,kBAAkB,CAACytC,YAAY,EAAEM,UAAU,EAAEtrF,QAAQ,CAAE;IAEnF;IAEA,IAAKyiB,QAAQ,CAACqY,gBAAgB,IAAIrY,QAAQ,CAACmZ,kBAAkB,KAAK,IAAI,EAAG;MAExEgzB,aAAa,CAACK,MAAM,CAAEyc,GAAG,EAAEnuB,kBAAkB,CAACytC,YAAY,EAAEM,UAAU,EAAEtrF,QAAQ,CAAE;MAClFyiB,QAAQ,CAACmZ,kBAAkB,GAAG,KAAK;IAEpC;IAEA,IAAKnZ,QAAQ,CAACk/D,gBAAgB,EAAG;MAEhC0J,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,QAAQ,EAAE1xF,MAAM,CAACmY,MAAM,CAAE;IAEpD;;IAEA;;IAEAk5F,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,iBAAiB,EAAE1xF,MAAM,CAAC8jC,eAAe,CAAE;IACrEutE,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,cAAc,EAAE1xF,MAAM,CAAC+jC,YAAY,CAAE;IAC/DstE,UAAU,CAACvjC,QAAQ,CAAE4jB,GAAG,EAAE,aAAa,EAAE1xF,MAAM,CAACqxB,WAAW,CAAE;;IAE7D;;IAEA,IAAKoX,QAAQ,CAACqY,gBAAgB,IAAIrY,QAAQ,CAACsyC,mBAAmB,EAAG;MAEhE,IAAMtjC,MAAM,GAAGhP,QAAQ,CAACuY,cAAc;MAEtC,KAAM,IAAIhiD,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2oC,MAAM,CAAC14C,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAKorD,YAAY,CAACC,QAAQ,EAAG;UAE5B,IAAMrQ,KAAK,GAAGvC,MAAM,CAAEz4C,CAAC,CAAE;UAEzBgiD,cAAc,CAACr1B,MAAM,CAAEquB,KAAK,EAAEqjB,OAAO,CAAE;UACvCrc,cAAc,CAAConD,IAAI,CAAEpuD,KAAK,EAAEqjB,OAAO,CAAE;QAEtC,CAAC,MAAM;UAEN1pD,OAAO,CAACC,IAAI,CAAE,4EAA4E,CAAE;QAE7F;MAED;IAED;IAEA,OAAOypD,OAAO;EAEf;;EAEA;;EAEA,SAASu0C,6BAA6BA,CAAExxD,QAAQ,EAAEjnD,KAAK,EAAG;IAEzDinD,QAAQ,CAACyX,iBAAiB,CAAC9xC,WAAW,GAAG5sB,KAAK;IAC9CinD,QAAQ,CAAC0X,UAAU,CAAC/xC,WAAW,GAAG5sB,KAAK;IAEvCinD,QAAQ,CAAC2X,iBAAiB,CAAChyC,WAAW,GAAG5sB,KAAK;IAC9CinD,QAAQ,CAAC6X,uBAAuB,CAAClyC,WAAW,GAAG5sB,KAAK;IACpDinD,QAAQ,CAAC2Y,WAAW,CAAChzC,WAAW,GAAG5sB,KAAK;IACxCinD,QAAQ,CAAC4Y,iBAAiB,CAACjzC,WAAW,GAAG5sB,KAAK;IAC9CinD,QAAQ,CAACoY,UAAU,CAACzyC,WAAW,GAAG5sB,KAAK;IACvCinD,QAAQ,CAACwY,gBAAgB,CAAC7yC,WAAW,GAAG5sB,KAAK;IAC7CinD,QAAQ,CAACoZ,cAAc,CAACzzC,WAAW,GAAG5sB,KAAK;IAC3CinD,QAAQ,CAACiZ,gBAAgB,CAACtzC,WAAW,GAAG5sB,KAAK;EAE9C;EAEA,SAAS23G,mBAAmBA,CAAEroE,QAAQ,EAAG;IAExC,OAAOA,QAAQ,CAACg+D,qBAAqB,IAAIh+D,QAAQ,CAACi+D,kBAAkB,IAAIj+D,QAAQ,CAACm+D,mBAAmB,IACnGn+D,QAAQ,CAAC+3C,sBAAsB,IAAI/3C,QAAQ,CAACo/D,gBAAgB,IAC1Dp/D,QAAQ,CAACqY,gBAAgB,IAAIrY,QAAQ,CAAC0Y,MAAM,KAAK,IAAM;EAE3D;EAEA,IAAI,CAACwnC,iBAAiB,GAAG,YAAY;IAEpC,OAAOuiB,sBAAsB;EAE9B,CAAC;EAED,IAAI,CAACriB,oBAAoB,GAAG,YAAY;IAEvC,OAAOsiB,yBAAyB;EAEjC,CAAC;EAED,IAAI,CAAChmD,eAAe,GAAG,YAAY;IAElC,OAAOimD,oBAAoB;EAE5B,CAAC;EAED,IAAI,CAACrF,uBAAuB,GAAG,UAAW3hD,YAAY,EAAE4zC,YAAY,EAAEhvE,YAAY,EAAG;IAEpFgvC,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACv7B,OAAO,CAAE,CAACmrE,cAAc,GAAGgE,YAAY;IACpEhgC,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACp7B,YAAY,CAAE,CAACgrE,cAAc,GAAGhrE,YAAY;IAEzE,IAAMirE,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAC7D6vC,sBAAsB,CAAC2C,qBAAqB,GAAG,IAAI;IAEnD,IAAK3C,sBAAsB,CAAC2C,qBAAqB,EAAG;MAEnD3C,sBAAsB,CAAC4D,yBAAyB,GAAG7uE,YAAY,KAAKvrB,SAAS;MAE7E,IAAK,CAAEw2F,sBAAsB,CAAC4D,yBAAyB,EAAG;QAEzD;QACA;QACA,IAAKx2C,UAAU,CAAC8f,GAAG,CAAE,sCAAsC,CAAE,KAAK,IAAI,EAAG;UAExExtD,OAAO,CAACC,IAAI,CAAE,wGAAwG,CAAE;UACxHqgF,sBAAsB,CAAC4E,oBAAoB,GAAG,KAAK;QAEpD;MAED;IAED;EAED,CAAC;EAED,IAAI,CAAC8M,0BAA0B,GAAG,UAAWvhD,YAAY,EAAEytD,kBAAkB,EAAG;IAE/E,IAAM5d,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;IAC7D6vC,sBAAsB,CAACE,kBAAkB,GAAG0d,kBAAkB;IAC9D5d,sBAAsB,CAAC6d,uBAAuB,GAAGD,kBAAkB,KAAKp0G,SAAS;EAElF,CAAC;EAED,IAAI,CAAC+nD,eAAe,GAAG,UAAWpB,YAAY,EAAEskC,cAAc,GAAG,CAAC,EAAEE,iBAAiB,GAAG,CAAC,EAAG;IAE3FwiB,oBAAoB,GAAGhnD,YAAY;IACnC8mD,sBAAsB,GAAGxiB,cAAc;IACvCyiB,yBAAyB,GAAGviB,iBAAiB;IAE7C,IAAImpB,qBAAqB,GAAG,IAAI;IAEhC,IAAK3tD,YAAY,EAAG;MAEnB,IAAM6vC,sBAAsB,GAAGj8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE;MAE7D,IAAK6vC,sBAAsB,CAAC6d,uBAAuB,KAAKr0G,SAAS,EAAG;QAEnE;QACAZ,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAE,IAAI,CAAE;QACpC6iB,qBAAqB,GAAG,KAAK;MAE9B,CAAC,MAAM,IAAK9d,sBAAsB,CAACE,kBAAkB,KAAK12F,SAAS,EAAG;QAErEuoB,QAAQ,CAACiyE,iBAAiB,CAAE7zC,YAAY,CAAE;MAE3C,CAAC,MAAM,IAAK6vC,sBAAsB,CAAC2C,qBAAqB,EAAG;QAE1D;QACA5wE,QAAQ,CAAC+xE,cAAc,CAAE3zC,YAAY,EAAE4T,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACv7B,OAAO,CAAE,CAACmrE,cAAc,EAAEh8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACp7B,YAAY,CAAE,CAACgrE,cAAc,CAAE;MAE3J;IAED;IAEA,IAAI7E,WAAW,GAAG,IAAI;IACtB,IAAIuI,MAAM,GAAG,KAAK;IAClB,IAAIsa,gBAAgB,GAAG,KAAK;IAE5B,IAAK5tD,YAAY,EAAG;MAEnB,IAAMv7B,OAAO,GAAGu7B,YAAY,CAACv7B,OAAO;MAEpC,IAAKA,OAAO,CAACsB,eAAe,IAAItB,OAAO,CAACW,kBAAkB,EAAG;QAE5DwoF,gBAAgB,GAAG,IAAI;MAExB;MAEA,IAAM7d,kBAAkB,GAAGn8B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE,CAAC+vC,kBAAkB;MAE5E,IAAK/vC,YAAY,CAACE,uBAAuB,EAAG;QAE3C6qC,WAAW,GAAGgF,kBAAkB,CAAEzL,cAAc,CAAE;QAClDgP,MAAM,GAAG,IAAI;MAEd,CAAC,MAAM,IAAOttC,YAAY,CAACC,QAAQ,IAAIjG,YAAY,CAACn7B,OAAO,GAAG,CAAC,IAAMjD,QAAQ,CAAC6wE,kBAAkB,CAAEzyC,YAAY,CAAE,KAAK,KAAK,EAAG;QAE5H+qC,WAAW,GAAGn3B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE,CAACkwC,8BAA8B;MAE5E,CAAC,MAAM;QAENnF,WAAW,GAAGgF,kBAAkB;MAEjC;MAEAoX,gBAAgB,CAACp2F,IAAI,CAAEivC,YAAY,CAACx7B,QAAQ,CAAE;MAC9C4iF,eAAe,CAACr2F,IAAI,CAAEivC,YAAY,CAAC17B,OAAO,CAAE;MAC5C+iF,mBAAmB,GAAGrnD,YAAY,CAACz7B,WAAW;IAE/C,CAAC,MAAM;MAEN4iF,gBAAgB,CAACp2F,IAAI,CAAEyyE,SAAS,CAAE,CAAC/xE,cAAc,CAAE+1F,WAAW,CAAE,CAACp6F,KAAK,EAAE;MACxEg6F,eAAe,CAACr2F,IAAI,CAAE42F,QAAQ,CAAE,CAACl2F,cAAc,CAAE+1F,WAAW,CAAE,CAACp6F,KAAK,EAAE;MACtEi6F,mBAAmB,GAAGO,YAAY;IAEnC;IAEA,IAAMiG,gBAAgB,GAAGp1G,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAEC,WAAW,CAAE;IAEpE,IAAK8iB,gBAAgB,IAAI7nD,YAAY,CAAC5I,WAAW,IAAIuwD,qBAAqB,EAAG;MAE5El1G,KAAK,CAAC2kD,WAAW,CAAE4C,YAAY,EAAE+qC,WAAW,CAAE;IAE/C;IAEAtyF,KAAK,CAAC+rB,QAAQ,CAAE2iF,gBAAgB,CAAE;IAClC1uG,KAAK,CAAC6rB,OAAO,CAAE8iF,eAAe,CAAE;IAChC3uG,KAAK,CAACosF,cAAc,CAAEwiB,mBAAmB,CAAE;IAE3C,IAAK/T,MAAM,EAAG;MAEb,IAAM/D,iBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACv7B,OAAO,CAAE;MAChE6oE,GAAG,CAACsF,oBAAoB,CAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAGtO,cAAc,EAAEiL,iBAAiB,CAACK,cAAc,EAAEpL,iBAAiB,CAAE;IAEtH,CAAC,MAAM,IAAKopB,gBAAgB,EAAG;MAE9B,IAAMre,kBAAiB,GAAG37B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAACv7B,OAAO,CAAE;MAChE,IAAMqpF,KAAK,GAAGxpB,cAAc,IAAI,CAAC;MACjCgJ,GAAG,CAACygB,uBAAuB,CAAE,KAAK,EAAE,KAAK,EAAExe,kBAAiB,CAACK,cAAc,EAAEpL,iBAAiB,IAAI,CAAC,EAAEspB,KAAK,CAAE;IAE7G;IAEA7G,kBAAkB,GAAG,CAAE,CAAC,CAAC,CAAC;EAE3B,CAAC;;EAED,IAAI,CAAC+G,sBAAsB,GAAG,UAAWhuD,YAAY,EAAEh0C,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAE9E,MAAM,EAAEg1F,mBAAmB,EAAG;IAEzG,IAAK,EAAIjuD,YAAY,IAAIA,YAAY,CAAC57B,mBAAmB,CAAE,EAAG;MAE7D7U,OAAO,CAACjX,KAAK,CAAE,0FAA0F,CAAE;MAC3G;IAED;IAEA,IAAIyyF,WAAW,GAAGn3B,UAAU,CAACrjD,GAAG,CAAEyvC,YAAY,CAAE,CAAC+vC,kBAAkB;IAEnE,IAAK/vC,YAAY,CAACE,uBAAuB,IAAI+tD,mBAAmB,KAAK50G,SAAS,EAAG;MAEhF0xF,WAAW,GAAGA,WAAW,CAAEkjB,mBAAmB,CAAE;IAEjD;IAEA,IAAKljB,WAAW,EAAG;MAElBtyF,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAEC,WAAW,CAAE;MAE3C,IAAI;QAEH,IAAMtmE,OAAO,GAAGu7B,YAAY,CAACv7B,OAAO;QACpC,IAAMypF,aAAa,GAAGzpF,OAAO,CAACpE,MAAM;QACpC,IAAM6wE,WAAW,GAAGzsE,OAAO,CAAC7tB,IAAI;QAEhC,IAAKs3G,aAAa,KAAK7pG,UAAU,IAAIkpF,KAAK,CAAC1zE,OAAO,CAAEq0F,aAAa,CAAE,KAAK5gB,GAAG,CAAC97D,YAAY,CAAE,KAAK,CAAE,EAAG;UAEnGjiB,OAAO,CAACjX,KAAK,CAAE,2GAA2G,CAAE;UAC5H;QAED;QAEA,IAAM61G,uBAAuB,GAAKjd,WAAW,KAAKntF,aAAa,KAAQk5C,UAAU,CAAC8f,GAAG,CAAE,6BAA6B,CAAE,IAAM/W,YAAY,CAACC,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,wBAAwB,CAAI,CAAE;QAEnM,IAAKm0B,WAAW,KAAK1tF,gBAAgB,IAAI+pF,KAAK,CAAC1zE,OAAO,CAAEq3E,WAAW,CAAE,KAAK5D,GAAG,CAAC97D,YAAY,CAAE,KAAK,CAAE;QAAI;QACtG,EAAI0/D,WAAW,KAAKptF,SAAS,KAAMkiD,YAAY,CAACC,QAAQ,IAAIhJ,UAAU,CAAC8f,GAAG,CAAE,mBAAmB,CAAE,IAAI9f,UAAU,CAAC8f,GAAG,CAAE,0BAA0B,CAAE,CAAE,CAAE;QAAI;QACzJ,CAAEoxC,uBAAuB,EAAG;UAE5B5+F,OAAO,CAACjX,KAAK,CAAE,qHAAqH,CAAE;UACtI;QAED;;QAEA;;QAEA,IAAO0T,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAMg0C,YAAY,CAACliC,KAAK,GAAGA,KAAO,IAAQxR,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAM0zC,YAAY,CAACjiC,MAAM,GAAGA,MAAU,EAAG;UAE/GuvE,GAAG,CAAC8gB,UAAU,CAAEpiG,CAAC,EAAEM,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAEwvE,KAAK,CAAC1zE,OAAO,CAAEq0F,aAAa,CAAE,EAAE3gB,KAAK,CAAC1zE,OAAO,CAAEq3E,WAAW,CAAE,EAAEj4E,MAAM,CAAE;QAE5G;MAED,CAAC,SAAS;QAET;;QAEA,IAAM8xE,YAAW,GAAKic,oBAAoB,KAAK,IAAI,GAAKpzC,UAAU,CAACrjD,GAAG,CAAEy2F,oBAAoB,CAAE,CAACjX,kBAAkB,GAAG,IAAI;QACxHt3F,KAAK,CAACqyF,eAAe,CAAE,KAAK,EAAEC,YAAW,CAAE;MAE5C;IAED;EAED,CAAC;EAED,IAAI,CAACsjB,wBAAwB,GAAG,UAAWr9E,QAAQ,EAAEvM,OAAO,EAAE6pF,KAAK,GAAG,CAAC,EAAG;IAEzE,IAAMC,UAAU,GAAGzjG,IAAI,CAACmD,GAAG,CAAE,CAAC,EAAE,CAAEqgG,KAAK,CAAE;IACzC,IAAMxwF,KAAK,GAAGhT,IAAI,CAACsC,KAAK,CAAEqX,OAAO,CAAChH,KAAK,CAACK,KAAK,GAAGywF,UAAU,CAAE;IAC5D,IAAMxwF,MAAM,GAAGjT,IAAI,CAACsC,KAAK,CAAEqX,OAAO,CAAChH,KAAK,CAACM,MAAM,GAAGwwF,UAAU,CAAE;IAE9D3sF,QAAQ,CAAC2rD,YAAY,CAAE9oD,OAAO,EAAE,CAAC,CAAE;IAEnC6oE,GAAG,CAACkhB,iBAAiB,CAAE,IAAI,EAAEF,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAEwR,KAAK,EAAEC,MAAM,CAAE;IAEjFtlB,KAAK,CAAC6zF,aAAa,EAAE;EAEtB,CAAC;EAED,IAAI,CAACmiB,oBAAoB,GAAG,UAAWz9E,QAAQ,EAAE09E,UAAU,EAAEC,UAAU,EAAEL,KAAK,GAAG,CAAC,EAAG;IAEpF,IAAMxwF,KAAK,GAAG4wF,UAAU,CAACjxF,KAAK,CAACK,KAAK;IACpC,IAAMC,MAAM,GAAG2wF,UAAU,CAACjxF,KAAK,CAACM,MAAM;IACtC,IAAM+wE,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE80F,UAAU,CAACtuF,MAAM,CAAE;IACnD,IAAM0uE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE80F,UAAU,CAAC/3G,IAAI,CAAE;IAE/CgrB,QAAQ,CAAC2rD,YAAY,CAAEohC,UAAU,EAAE,CAAC,CAAE;;IAEtC;IACA;IACArhB,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEid,UAAU,CAAC1tF,KAAK,CAAE;IAC1CqsE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEid,UAAU,CAAC3tF,gBAAgB,CAAE;IACrDssE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEid,UAAU,CAACztF,eAAe,CAAE;IAEnD,IAAKwtF,UAAU,CAACrvF,aAAa,EAAG;MAE/BiuE,GAAG,CAACb,aAAa,CAAE,IAAI,EAAE6hB,KAAK,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAEwR,KAAK,EAAEC,MAAM,EAAE+wE,QAAQ,EAAEC,MAAM,EAAE2f,UAAU,CAACjxF,KAAK,CAACiB,IAAI,CAAE;IAEjH,CAAC,MAAM;MAEN,IAAKgwF,UAAU,CAACxf,mBAAmB,EAAG;QAErC5B,GAAG,CAACX,uBAAuB,CAAE,IAAI,EAAE2hB,KAAK,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAEoiG,UAAU,CAAC/tF,OAAO,CAAE,CAAC,CAAE,CAAC7C,KAAK,EAAE4wF,UAAU,CAAC/tF,OAAO,CAAE,CAAC,CAAE,CAAC5C,MAAM,EAAE+wE,QAAQ,EAAE4f,UAAU,CAAC/tF,OAAO,CAAE,CAAC,CAAE,CAACjC,IAAI,CAAE;MAE1K,CAAC,MAAM;QAEN4uE,GAAG,CAACb,aAAa,CAAE,IAAI,EAAE6hB,KAAK,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAEwiF,QAAQ,EAAEC,MAAM,EAAE2f,UAAU,CAACjxF,KAAK,CAAE;MAE7F;IAED;;IAEA;IACA,IAAK6wF,KAAK,KAAK,CAAC,IAAIK,UAAU,CAAC5tF,eAAe,EAAGusE,GAAG,CAACqB,cAAc,CAAE,IAAI,CAAE;IAE3El2F,KAAK,CAAC6zF,aAAa,EAAE;EAEtB,CAAC;EAED,IAAI,CAACsiB,sBAAsB,GAAG,UAAWC,SAAS,EAAE79E,QAAQ,EAAE09E,UAAU,EAAEC,UAAU,EAAEL,KAAK,GAAG,CAAC,EAAG;IAEjG,IAAK1H,KAAK,CAAC+B,gBAAgB,EAAG;MAE7Bp5F,OAAO,CAACC,IAAI,CAAE,2EAA2E,CAAE;MAC3F;IAED;IAEA,IAAMsO,KAAK,GAAG+wF,SAAS,CAACljG,GAAG,CAACK,CAAC,GAAG6iG,SAAS,CAACnjG,GAAG,CAACM,CAAC,GAAG,CAAC;IACnD,IAAM+R,MAAM,GAAG8wF,SAAS,CAACljG,GAAG,CAACW,CAAC,GAAGuiG,SAAS,CAACnjG,GAAG,CAACY,CAAC,GAAG,CAAC;IACpD,IAAM+X,KAAK,GAAGwqF,SAAS,CAACljG,GAAG,CAACwW,CAAC,GAAG0sF,SAAS,CAACnjG,GAAG,CAACyW,CAAC,GAAG,CAAC;IACnD,IAAM2sE,QAAQ,GAAGvB,KAAK,CAAC1zE,OAAO,CAAE80F,UAAU,CAACtuF,MAAM,CAAE;IACnD,IAAM0uE,MAAM,GAAGxB,KAAK,CAAC1zE,OAAO,CAAE80F,UAAU,CAAC/3G,IAAI,CAAE;IAC/C,IAAIk4G,QAAQ;IAEZ,IAAKH,UAAU,CAAC5oF,eAAe,EAAG;MAEjCnE,QAAQ,CAAC6rD,YAAY,CAAEkhC,UAAU,EAAE,CAAC,CAAE;MACtCG,QAAQ,GAAG,KAAK;IAEjB,CAAC,MAAM,IAAKH,UAAU,CAACvpF,kBAAkB,EAAG;MAE3CxD,QAAQ,CAACisD,iBAAiB,CAAE8gC,UAAU,EAAE,CAAC,CAAE;MAC3CG,QAAQ,GAAG,KAAK;IAEjB,CAAC,MAAM;MAENv/F,OAAO,CAACC,IAAI,CAAE,6GAA6G,CAAE;MAC7H;IAED;IAEA89E,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEid,UAAU,CAAC1tF,KAAK,CAAE;IAC1CqsE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEid,UAAU,CAAC3tF,gBAAgB,CAAE;IACrDssE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEid,UAAU,CAACztF,eAAe,CAAE;IAEnD,IAAM6tF,YAAY,GAAGzhB,GAAG,CAAC97D,YAAY,CAAE,IAAI,CAAE;IAC7C,IAAMw9E,iBAAiB,GAAG1hB,GAAG,CAAC97D,YAAY,CAAE,KAAK,CAAE;IACnD,IAAMy9E,gBAAgB,GAAG3hB,GAAG,CAAC97D,YAAY,CAAE,IAAI,CAAE;IACjD,IAAM09E,cAAc,GAAG5hB,GAAG,CAAC97D,YAAY,CAAE,IAAI,CAAE;IAC/C,IAAM29E,gBAAgB,GAAG7hB,GAAG,CAAC97D,YAAY,CAAE,KAAK,CAAE;IAElD,IAAM/T,KAAK,GAAGixF,UAAU,CAACxf,mBAAmB,GAAGwf,UAAU,CAAC/tF,OAAO,CAAE,CAAC,CAAE,GAAG+tF,UAAU,CAACjxF,KAAK;IAEzF6vE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEj0E,KAAK,CAACK,KAAK,CAAE;IACpCwvE,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEj0E,KAAK,CAACM,MAAM,CAAE;IACtCuvE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEmd,SAAS,CAACnjG,GAAG,CAACM,CAAC,CAAE;IACxCshF,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEmd,SAAS,CAACnjG,GAAG,CAACY,CAAC,CAAE;IACxCghF,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEmd,SAAS,CAACnjG,GAAG,CAACyW,CAAC,CAAE;IAEzC,IAAKusF,UAAU,CAACrvF,aAAa,IAAIqvF,UAAU,CAAC3oF,eAAe,EAAG;MAE7DunE,GAAG,CAACZ,aAAa,CAAEoiB,QAAQ,EAAER,KAAK,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAE0kB,QAAQ,CAAC7O,CAAC,EAAErE,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAEyqE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAACiB,IAAI,CAAE;IAE7H,CAAC,MAAM;MAEN,IAAKgwF,UAAU,CAACxf,mBAAmB,EAAG;QAErC3/E,OAAO,CAACC,IAAI,CAAE,yFAAyF,CAAE;QACzG89E,GAAG,CAAC8hB,uBAAuB,CAAEN,QAAQ,EAAER,KAAK,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAE0kB,QAAQ,CAAC7O,CAAC,EAAErE,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAEyqE,QAAQ,EAAErxE,KAAK,CAACiB,IAAI,CAAE;MAE/H,CAAC,MAAM;QAEN4uE,GAAG,CAACZ,aAAa,CAAEoiB,QAAQ,EAAER,KAAK,EAAEt9E,QAAQ,CAAChlB,CAAC,EAAEglB,QAAQ,CAAC1kB,CAAC,EAAE0kB,QAAQ,CAAC7O,CAAC,EAAErE,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAEyqE,QAAQ,EAAEC,MAAM,EAAEtxE,KAAK,CAAE;MAExH;IAED;IAEA6vE,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEqd,YAAY,CAAE;IACrCzhB,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEsd,iBAAiB,CAAE;IAC3C1hB,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEud,gBAAgB,CAAE;IACzC3hB,GAAG,CAACoE,WAAW,CAAE,IAAI,EAAEwd,cAAc,CAAE;IACvC5hB,GAAG,CAACoE,WAAW,CAAE,KAAK,EAAEyd,gBAAgB,CAAE;;IAE1C;IACA,IAAKb,KAAK,KAAK,CAAC,IAAIK,UAAU,CAAC5tF,eAAe,EAAGusE,GAAG,CAACqB,cAAc,CAAEmgB,QAAQ,CAAE;IAE/Er2G,KAAK,CAAC6zF,aAAa,EAAE;EAEtB,CAAC;EAED,IAAI,CAACgF,WAAW,GAAG,UAAW7sE,OAAO,EAAG;IAEvC,IAAKA,OAAO,CAACi9B,aAAa,EAAG;MAE5B9/B,QAAQ,CAAC+rD,cAAc,CAAElpD,OAAO,EAAE,CAAC,CAAE;IAEtC,CAAC,MAAM,IAAKA,OAAO,CAACsB,eAAe,EAAG;MAErCnE,QAAQ,CAAC6rD,YAAY,CAAEhpD,OAAO,EAAE,CAAC,CAAE;IAEpC,CAAC,MAAM,IAAKA,OAAO,CAACW,kBAAkB,EAAG;MAExCxD,QAAQ,CAACisD,iBAAiB,CAAEppD,OAAO,EAAE,CAAC,CAAE;IAEzC,CAAC,MAAM;MAEN7C,QAAQ,CAAC2rD,YAAY,CAAE9oD,OAAO,EAAE,CAAC,CAAE;IAEpC;IAEAhsB,KAAK,CAAC6zF,aAAa,EAAE;EAEtB,CAAC;EAED,IAAI,CAAC+iB,UAAU,GAAG,YAAY;IAE7BvI,sBAAsB,GAAG,CAAC;IAC1BC,yBAAyB,GAAG,CAAC;IAC7BC,oBAAoB,GAAG,IAAI;IAE3BvuG,KAAK,CAAC8B,KAAK,EAAE;IACbo+D,aAAa,CAACp+D,KAAK,EAAE;EAEtB,CAAC;EAED,IAAK,OAAO+0G,kBAAkB,KAAK,WAAW,EAAG;IAEhDA,kBAAkB,CAAC/kG,aAAa,CAAE,IAAIglG,WAAW,CAAE,SAAS,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAE,CAAE;EAEnF;AAED;AAAC,IAEKC,cAAc,0BAAAC,cAAA;EAAA/vF,SAAA,CAAA8vF,cAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAA9vF,YAAA,CAAA4vF,cAAA;EAAA,SAAAA,eAAA;IAAAtyG,eAAA,OAAAsyG,cAAA;IAAA,OAAAE,QAAA,CAAAnjB,KAAA,OAAAhrD,SAAA;EAAA;EAAA,OAAA7jC,YAAA,CAAA8xG,cAAA;AAAA,EAASnK,aAAa;AAAAjxG,OAAA,CAAAo7G,cAAA,GAAAA,cAAA;AAE1CA,cAAc,CAACj7G,SAAS,CAACm0G,gBAAgB,GAAG,IAAI;AAAC,IAE3CiH,OAAO;EAEZ,SAAAA,QAAa91F,KAAK,EAAEkoF,OAAO,GAAG,OAAO,EAAG;IAAA7kG,eAAA,OAAAyyG,OAAA;IAEvC,IAAI,CAAChzB,SAAS,GAAG,IAAI;IAErB,IAAI,CAAC1hF,IAAI,GAAG,EAAE;IAEd,IAAI,CAAC4e,KAAK,GAAG,IAAIa,KAAK,CAAEb,KAAK,CAAE;IAC/B,IAAI,CAACkoF,OAAO,GAAGA,OAAO;EAEvB;EAACrkG,YAAA,CAAAiyG,OAAA;IAAA/6G,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI8+F,OAAO,CAAE,IAAI,CAAC91F,KAAK,EAAE,IAAI,CAACkoF,OAAO,CAAE;IAE/C;EAAC;IAAAntG,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,CAAQ;IAAA,EAAa;MAEpB,OAAO;QACNvmB,IAAI,EAAE,SAAS;QACfkjB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACkC,MAAM,EAAE;QAC1BgmF,OAAO,EAAE,IAAI,CAACA;MACf,CAAC;IAEF;EAAC;EAAA,OAAA4N,OAAA;AAAA;AAAAv7G,OAAA,CAAAu7G,OAAA,GAAAA,OAAA;AAAA,IAIIC,GAAG;EAER,SAAAA,IAAa/1F,KAAK,EAAE2iB,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,EAAG;IAAAv/B,eAAA,OAAA0yG,GAAA;IAE1C,IAAI,CAAC9N,KAAK,GAAG,IAAI;IAEjB,IAAI,CAAC7mG,IAAI,GAAG,EAAE;IAEd,IAAI,CAAC4e,KAAK,GAAG,IAAIa,KAAK,CAAEb,KAAK,CAAE;IAE/B,IAAI,CAAC2iB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAAC/+B,YAAA,CAAAkyG,GAAA;IAAAh7G,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI++F,GAAG,CAAE,IAAI,CAAC/1F,KAAK,EAAE,IAAI,CAAC2iB,IAAI,EAAE,IAAI,CAACC,GAAG,CAAE;IAElD;EAAC;IAAA7nC,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,CAAQ;IAAA,EAAa;MAEpB,OAAO;QACNvmB,IAAI,EAAE,KAAK;QACXkjB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACkC,MAAM,EAAE;QAC1BygB,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,GAAG,EAAE,IAAI,CAACA;MACX,CAAC;IAEF;EAAC;EAAA,OAAAmzE,GAAA;AAAA;AAAAx7G,OAAA,CAAAw7G,GAAA,GAAAA,GAAA;AAAA,IAIIC,KAAK,0BAAAC,UAAA;EAAApwF,SAAA,CAAAmwF,KAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAnwF,YAAA,CAAAiwF,KAAA;EAEV,SAAAA,MAAA,EAAc;IAAA,IAAAG,OAAA;IAAA9yG,eAAA,OAAA2yG,KAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAn5G,IAAA;IAEAo5G,OAAA,CAAKxsE,OAAO,GAAG,IAAI;IAEnBwsE,OAAA,CAAKr5G,IAAI,GAAG,OAAO;IAEnBq5G,OAAA,CAAKvsE,UAAU,GAAG,IAAI;IACtBusE,OAAA,CAAKtsE,WAAW,GAAG,IAAI;IACvBssE,OAAA,CAAK3hE,GAAG,GAAG,IAAI;IAEf2hE,OAAA,CAAK9H,gBAAgB,GAAG,IAAI;IAE5B8H,OAAA,CAAK5rB,UAAU,GAAG,IAAI,CAAC,CAAC;;IAExB,IAAK,OAAOirB,kBAAkB,KAAK,WAAW,EAAG;MAEhDA,kBAAkB,CAAC/kG,aAAa,CAAE,IAAIglG,WAAW,CAAE,SAAS,EAAE;QAAEC,MAAM,EAAA9uF,sBAAA,CAAAuvF,OAAA;MAAO,CAAC,CAAE,CAAE;IAEnF;IAAC,OAAAA,OAAA;EAEF;EAACtyG,YAAA,CAAAmyG,KAAA;IAAAj7G,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA+gE,KAAA,CAAAt7G,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAKhqB,MAAM,CAACgpB,UAAU,KAAK,IAAI,EAAG,IAAI,CAACA,UAAU,GAAGhpB,MAAM,CAACgpB,UAAU,CAAC5yB,KAAK,EAAE;MAC7E,IAAK4J,MAAM,CAACipB,WAAW,KAAK,IAAI,EAAG,IAAI,CAACA,WAAW,GAAGjpB,MAAM,CAACipB,WAAW,CAAC7yB,KAAK,EAAE;MAChF,IAAK4J,MAAM,CAAC4zB,GAAG,KAAK,IAAI,EAAG,IAAI,CAACA,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG,CAACx9B,KAAK,EAAE;MAExD,IAAK4J,MAAM,CAACytF,gBAAgB,KAAK,IAAI,EAAG,IAAI,CAACA,gBAAgB,GAAGztF,MAAM,CAACytF,gBAAgB,CAACr3F,KAAK,EAAE;MAE/F,IAAI,CAACuzE,UAAU,GAAG3pE,MAAM,CAAC2pE,UAAU;MACnC,IAAI,CAACvjE,gBAAgB,GAAGpG,MAAM,CAACoG,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAAjsB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA+gE,KAAA,CAAAt7G,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAACwvB,GAAG,KAAK,IAAI,EAAG5vB,IAAI,CAAC9iB,MAAM,CAAC0yC,GAAG,GAAG,IAAI,CAACA,GAAG,CAACnxB,MAAM,EAAE;MAE5D,OAAOuB,IAAI;IAEZ;EAAC;EAAA,OAAAoxF,KAAA;AAAA,EAnDkB9wE,QAAQ;AAAA3qC,OAAA,CAAAy7G,KAAA,GAAAA,KAAA;AAAA,IAuDtBI,iBAAiB;EAEtB,SAAAA,kBAAazlG,KAAK,EAAE6sC,MAAM,EAAG;IAAAn6C,eAAA,OAAA+yG,iBAAA;IAE5B,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAAC1lG,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6sC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC9wB,KAAK,GAAG/b,KAAK,KAAKpR,SAAS,GAAGoR,KAAK,CAAC9P,MAAM,GAAG28C,MAAM,GAAG,CAAC;IAE5D,IAAI,CAACjI,KAAK,GAAGrmC,eAAe;IAC5B,IAAI,CAACsmC,WAAW,GAAG;MAAE97B,MAAM,EAAE,CAAC;MAAEgT,KAAK,EAAE,CAAE;IAAE,CAAC;IAE5C,IAAI,CAAC3H,OAAO,GAAG,CAAC;IAEhB,IAAI,CAACtT,IAAI,GAAGN,YAAY,EAAE;EAE3B;EAACtN,YAAA,CAAAuyG,iBAAA;IAAAr7G,GAAA;IAAAE,KAAA,EAED,SAAAw6C,iBAAA,EAAmB,CAAC;EAAC;IAAA16C,GAAA;IAAAya,GAAA,EAErB,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC8pB,OAAO,EAAG;IAEtC;EAAC;IAAAhqB,GAAA;IAAAE,KAAA,EAED,SAAAy6C,SAAUz6C,KAAK,EAAG;MAEjB,IAAI,CAACs6C,KAAK,GAAGt6C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACjQ,KAAK,GAAG,IAAIiQ,MAAM,CAACjQ,KAAK,CAACxP,WAAW,CAAEyf,MAAM,CAACjQ,KAAK,CAAE;MACzD,IAAI,CAAC+b,KAAK,GAAG9L,MAAM,CAAC8L,KAAK;MACzB,IAAI,CAAC8wB,MAAM,GAAG58B,MAAM,CAAC48B,MAAM;MAC3B,IAAI,CAACjI,KAAK,GAAG30B,MAAM,CAAC20B,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAx6C,GAAA;IAAAE,KAAA,EAED,SAAA06C,OAAQC,MAAM,EAAE/7B,SAAS,EAAEg8B,MAAM,EAAG;MAEnCD,MAAM,IAAI,IAAI,CAAC4H,MAAM;MACrB3H,MAAM,IAAIh8B,SAAS,CAAC2jC,MAAM;MAE1B,KAAM,IAAI18C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC4sC,MAAM,EAAE18C,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAE/C,IAAI,CAAC6P,KAAK,CAAEilC,MAAM,GAAG90C,CAAC,CAAE,GAAG+Y,SAAS,CAAClJ,KAAK,CAAEklC,MAAM,GAAG/0C,CAAC,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKva,KAAK,EAAEye,MAAM,GAAG,CAAC,EAAG;MAExB,IAAI,CAAC/I,KAAK,CAAC6E,GAAG,CAAEva,KAAK,EAAEye,MAAM,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAO4N,IAAI,EAAG;MAEb,IAAKA,IAAI,CAAC0xF,YAAY,KAAK/2G,SAAS,EAAG;QAEtCqlB,IAAI,CAAC0xF,YAAY,GAAG,CAAC,CAAC;MAEvB;MAEA,IAAK,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,KAAKh3G,SAAS,EAAG;QAE5C,IAAI,CAACoR,KAAK,CAACwO,MAAM,CAACo3F,KAAK,GAAGplG,YAAY,EAAE;MAEzC;MAEA,IAAKyT,IAAI,CAAC0xF,YAAY,CAAE,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,CAAE,KAAKh3G,SAAS,EAAG;QAEjEqlB,IAAI,CAAC0xF,YAAY,CAAE,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,CAAE,GAAG,IAAI,CAAC5lG,KAAK,CAACvO,KAAK,CAAE,CAAC,CAAE,CAAC+c,MAAM;MAE5E;MAEA,IAAMxO,KAAK,GAAG,IAAI,IAAI,CAACA,KAAK,CAACxP,WAAW,CAAEyjB,IAAI,CAAC0xF,YAAY,CAAE,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,CAAE,CAAE;MAExF,IAAMC,EAAE,GAAG,IAAI,IAAI,CAACr1G,WAAW,CAAEwP,KAAK,EAAE,IAAI,CAAC6sC,MAAM,CAAE;MACrDg5D,EAAE,CAAC9gE,QAAQ,CAAE,IAAI,CAACH,KAAK,CAAE;MAEzB,OAAOihE,EAAE;IAEV;EAAC;IAAAz7G,GAAA;IAAAE,KAAA,EAED,SAAAu7C,SAAUlmB,QAAQ,EAAG;MAEpB,IAAI,CAACmlB,gBAAgB,GAAGnlB,QAAQ;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAv1B,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQuB,IAAI,EAAG;MAEd,IAAKA,IAAI,CAAC0xF,YAAY,KAAK/2G,SAAS,EAAG;QAEtCqlB,IAAI,CAAC0xF,YAAY,GAAG,CAAC,CAAC;MAEvB;;MAEA;;MAEA,IAAK,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,KAAKh3G,SAAS,EAAG;QAE5C,IAAI,CAACoR,KAAK,CAACwO,MAAM,CAACo3F,KAAK,GAAGplG,YAAY,EAAE;MAEzC;MAEA,IAAKyT,IAAI,CAAC0xF,YAAY,CAAE,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,CAAE,KAAKh3G,SAAS,EAAG;QAEjEqlB,IAAI,CAAC0xF,YAAY,CAAE,IAAI,CAAC3lG,KAAK,CAACwO,MAAM,CAACo3F,KAAK,CAAE,GAAGlxF,KAAK,CAACI,IAAI,CAAE,IAAIzG,WAAW,CAAE,IAAI,CAACrO,KAAK,CAACwO,MAAM,CAAE,CAAE;MAElG;;MAEA;;MAEA,OAAO;QACN1N,IAAI,EAAE,IAAI,CAACA,IAAI;QACf0N,MAAM,EAAE,IAAI,CAACxO,KAAK,CAACwO,MAAM,CAACo3F,KAAK;QAC/Bz5G,IAAI,EAAE,IAAI,CAAC6T,KAAK,CAACxP,WAAW,CAACC,IAAI;QACjCo8C,MAAM,EAAE,IAAI,CAACA;MACd,CAAC;IAEF;EAAC;EAAA,OAAA44D,iBAAA;AAAA;AAAA77G,OAAA,CAAA67G,iBAAA,GAAAA,iBAAA;AAIF,IAAMK,SAAS,GAAG,aAAc,IAAI7kF,OAAO,EAAE;AAAC,IAExC8kF,0BAA0B;EAE/B,SAAAA,2BAAaC,iBAAiB,EAAEthE,QAAQ,EAAE37B,MAAM,EAAE0J,UAAU,GAAG,KAAK,EAAG;IAAA/f,eAAA,OAAAqzG,0BAAA;IAEtE,IAAI,CAACn5D,4BAA4B,GAAG,IAAI;IAExC,IAAI,CAACn8C,IAAI,GAAG,EAAE;IAEd,IAAI,CAACwjB,IAAI,GAAG+xF,iBAAiB;IAC7B,IAAI,CAACthE,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC37B,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAAC0J,UAAU,GAAGA,UAAU,KAAK,IAAI;EAEtC;EAACvf,YAAA,CAAA6yG,0BAAA;IAAA37G,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACmO,IAAI,CAAC8H,KAAK;IAEvB;EAAC;IAAA3xB,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACmO,IAAI,CAACjU,KAAK;IAEvB;EAAC;IAAA5V,GAAA;IAAAya,GAAA,EAED,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAI,CAAC2pB,IAAI,CAACiD,WAAW,GAAG5sB,KAAK;IAE9B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc1W,CAAC,EAAG;MAEjB,KAAM,IAAIlR,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACgU,IAAI,CAAC8H,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEnD21G,SAAS,CAAC78F,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;QAExC21G,SAAS,CAAC/tF,YAAY,CAAE1W,CAAC,CAAE;QAE3B,IAAI,CAACskC,MAAM,CAAEx1C,CAAC,EAAE21G,SAAS,CAACvkG,CAAC,EAAEukG,SAAS,CAACjkG,CAAC,EAAEikG,SAAS,CAACpuF,CAAC,CAAE;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm3B,kBAAmBpgB,CAAC,EAAG;MAEtB,KAAM,IAAIlR,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAE9C21G,SAAS,CAAC78F,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;QAExC21G,SAAS,CAACrkF,iBAAiB,CAAEpgB,CAAC,CAAE;QAEhC,IAAI,CAACskC,MAAM,CAAEx1C,CAAC,EAAE21G,SAAS,CAACvkG,CAAC,EAAEukG,SAAS,CAACjkG,CAAC,EAAEikG,SAAS,CAACpuF,CAAC,CAAE;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAm4B,mBAAoBphB,CAAC,EAAG;MAEvB,KAAM,IAAIlR,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAAC8b,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAE9C21G,SAAS,CAAC78F,mBAAmB,CAAE,IAAI,EAAE9Y,CAAC,CAAE;QAExC21G,SAAS,CAACrjF,kBAAkB,CAAEphB,CAAC,CAAE;QAEjC,IAAI,CAACskC,MAAM,CAAEx1C,CAAC,EAAE21G,SAAS,CAACvkG,CAAC,EAAEukG,SAAS,CAACjkG,CAAC,EAAEikG,SAAS,CAACpuF,CAAC,CAAE;MAExD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAA2b,KAAMrG,KAAK,EAAE2B,CAAC,EAAG;MAEhB,IAAI,CAAC0S,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,CAAE,GAAGxH,CAAC;MAE7D,OAAO,IAAI;IAEZ;EAAC;IAAAnX,GAAA;IAAAE,KAAA,EAED,SAAA4b,KAAMtG,KAAK,EAAEiC,CAAC,EAAG;MAEhB,IAAI,CAACoS,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,GAAG,CAAC,CAAE,GAAGlH,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAutB,KAAMjY,KAAK,EAAE8X,CAAC,EAAG;MAEhB,IAAI,CAACzD,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,GAAG,CAAC,CAAE,GAAG2O,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAwtB,KAAMlY,KAAK,EAAE+X,CAAC,EAAG;MAEhB,IAAI,CAAC1D,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,GAAG,CAAC,CAAE,GAAG4O,CAAC;MAEjE,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA6e,KAAMvJ,KAAK,EAAG;MAEb,OAAO,IAAI,CAACqU,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,CAAE;IAEjE;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA8e,KAAMxJ,KAAK,EAAG;MAEb,OAAO,IAAI,CAACqU,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,GAAG,CAAC,CAAE;IAErE;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAkoB,KAAM5S,KAAK,EAAG;MAEb,OAAO,IAAI,CAACqU,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,GAAG,CAAC,CAAE;IAErE;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA8uB,KAAMxZ,KAAK,EAAG;MAEb,OAAO,IAAI,CAACqU,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM,GAAG,CAAC,CAAE;IAErE;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAo7C,MAAO9lC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAG;MAEpBjC,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM;MAE9C,IAAI,CAACkL,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAChC,IAAI,CAAC0S,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAq7C,OAAQ/lC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAExB9X,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM;MAE9C,IAAI,CAACkL,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAChC,IAAI,CAAC0S,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAChC,IAAI,CAACoS,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG8X,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAs7C,QAAShmC,KAAK,EAAE2B,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAEC,CAAC,EAAG;MAE5B/X,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACqU,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM;MAE9C,IAAI,CAACkL,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG2B,CAAC;MAChC,IAAI,CAAC0S,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAGiC,CAAC;MAChC,IAAI,CAACoS,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG8X,CAAC;MAChC,IAAI,CAACzD,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAG,CAAC,CAAE,GAAG+X,CAAC;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAO4N,IAAI,EAAG;MAEb,IAAKA,IAAI,KAAKrlB,SAAS,EAAG;QAEzBkW,OAAO,CAACpB,GAAG,CAAE,kHAAkH,CAAE;QAEjI,IAAM1D,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI7P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4rB,KAAK,EAAE5rB,CAAC,EAAG,EAAG;UAEvC,IAAMyP,KAAK,GAAGzP,CAAC,GAAG,IAAI,CAAC8jB,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM;UAEhD,KAAM,IAAI6f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8b,QAAQ,EAAE9b,CAAC,EAAG,EAAG;YAE1C5oB,KAAK,CAACrQ,IAAI,CAAE,IAAI,CAACskB,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAGgpB,CAAC,CAAE,CAAE;UAE3C;QAED;QAEA,OAAO,IAAI6b,eAAe,CAAE,IAAI,IAAI,CAACzkC,KAAK,CAACxP,WAAW,CAAEwP,KAAK,CAAE,EAAE,IAAI,CAAC0kC,QAAQ,EAAE,IAAI,CAACjyB,UAAU,CAAE;MAElG,CAAC,MAAM;QAEN,IAAKwB,IAAI,CAACgyF,kBAAkB,KAAKr3G,SAAS,EAAG;UAE5CqlB,IAAI,CAACgyF,kBAAkB,GAAG,CAAC,CAAC;QAE7B;QAEA,IAAKhyF,IAAI,CAACgyF,kBAAkB,CAAE,IAAI,CAAChyF,IAAI,CAACnT,IAAI,CAAE,KAAKlS,SAAS,EAAG;UAE9DqlB,IAAI,CAACgyF,kBAAkB,CAAE,IAAI,CAAChyF,IAAI,CAACnT,IAAI,CAAE,GAAG,IAAI,CAACmT,IAAI,CAAC5N,KAAK,CAAE4N,IAAI,CAAE;QAEpE;QAEA,OAAO,IAAI8xF,0BAA0B,CAAE9xF,IAAI,CAACgyF,kBAAkB,CAAE,IAAI,CAAChyF,IAAI,CAACnT,IAAI,CAAE,EAAE,IAAI,CAAC4jC,QAAQ,EAAE,IAAI,CAAC37B,MAAM,EAAE,IAAI,CAAC0J,UAAU,CAAE;MAEhI;IAED;EAAC;IAAAroB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQuB,IAAI,EAAG;MAEd,IAAKA,IAAI,KAAKrlB,SAAS,EAAG;QAEzBkW,OAAO,CAACpB,GAAG,CAAE,uHAAuH,CAAE;QAEtI,IAAM1D,KAAK,GAAG,EAAE;QAEhB,KAAM,IAAI7P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4rB,KAAK,EAAE5rB,CAAC,EAAG,EAAG;UAEvC,IAAMyP,KAAK,GAAGzP,CAAC,GAAG,IAAI,CAAC8jB,IAAI,CAAC44B,MAAM,GAAG,IAAI,CAAC9jC,MAAM;UAEhD,KAAM,IAAI6f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8b,QAAQ,EAAE9b,CAAC,EAAG,EAAG;YAE1C5oB,KAAK,CAACrQ,IAAI,CAAE,IAAI,CAACskB,IAAI,CAACjU,KAAK,CAAEJ,KAAK,GAAGgpB,CAAC,CAAE,CAAE;UAE3C;QAED;;QAEA;;QAEA,OAAO;UACN8b,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBv4C,IAAI,EAAE,IAAI,CAAC6T,KAAK,CAACxP,WAAW,CAACC,IAAI;UACjCuP,KAAK,EAAEA,KAAK;UACZyS,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;MAEF,CAAC,MAAM;QAEN;;QAEA,IAAKwB,IAAI,CAACgyF,kBAAkB,KAAKr3G,SAAS,EAAG;UAE5CqlB,IAAI,CAACgyF,kBAAkB,GAAG,CAAC,CAAC;QAE7B;QAEA,IAAKhyF,IAAI,CAACgyF,kBAAkB,CAAE,IAAI,CAAChyF,IAAI,CAACnT,IAAI,CAAE,KAAKlS,SAAS,EAAG;UAE9DqlB,IAAI,CAACgyF,kBAAkB,CAAE,IAAI,CAAChyF,IAAI,CAACnT,IAAI,CAAE,GAAG,IAAI,CAACmT,IAAI,CAACvB,MAAM,CAAEuB,IAAI,CAAE;QAErE;QAEA,OAAO;UACN24B,4BAA4B,EAAE,IAAI;UAClClI,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBzwB,IAAI,EAAE,IAAI,CAACA,IAAI,CAACnT,IAAI;UACpBiI,MAAM,EAAE,IAAI,CAACA,MAAM;UACnB0J,UAAU,EAAE,IAAI,CAACA;QAClB,CAAC;MAEF;IAED;EAAC;EAAA,OAAAszF,0BAAA;AAAA;AAAAn8G,OAAA,CAAAm8G,0BAAA,GAAAA,0BAAA;AAAA,IAIIv0B,cAAc,0BAAA00B,UAAA;EAAAhxF,SAAA,CAAAs8D,cAAA,EAAA00B,UAAA;EAAA,IAAAC,QAAA,GAAA/wF,YAAA,CAAAo8D,cAAA;EAEnB,SAAAA,eAAal4C,UAAU,EAAG;IAAA,IAAA8sE,OAAA;IAAA1zG,eAAA,OAAA8+E,cAAA;IAEzB40B,OAAA,GAAAD,QAAA,CAAA/5G,IAAA;IAEAg6G,OAAA,CAAKtN,gBAAgB,GAAG,IAAI;IAE5BsN,OAAA,CAAKj6G,IAAI,GAAG,gBAAgB;IAE5Bi6G,OAAA,CAAK/2F,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE;IAElCk2F,OAAA,CAAKjlE,GAAG,GAAG,IAAI;IAEfilE,OAAA,CAAK/kE,QAAQ,GAAG,IAAI;IAEpB+kE,OAAA,CAAK34F,QAAQ,GAAG,CAAC;IAEjB24F,OAAA,CAAKhjE,eAAe,GAAG,IAAI;IAE3BgjE,OAAA,CAAK9oE,WAAW,GAAG,IAAI;IAEvB8oE,OAAA,CAAKviE,GAAG,GAAG,IAAI;IAEfuiE,OAAA,CAAK3mE,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA8sE,OAAA;EAE9B;EAAClzG,YAAA,CAAAs+E,cAAA;IAAApnF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAktC,cAAA,CAAAznF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAAC8xB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAAC5zB,QAAQ,GAAGwC,MAAM,CAACxC,QAAQ;MAE/B,IAAI,CAAC21B,eAAe,GAAGnzB,MAAM,CAACmzB,eAAe;MAE7C,IAAI,CAACS,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA2tC,cAAA;AAAA,EA9C2B30C,QAAQ;AAAAjzC,OAAA,CAAA4nF,cAAA,GAAAA,cAAA;AAkDrC,IAAI60B,SAAS;AAEb,IAAMC,eAAe,GAAG,aAAc,IAAIrlF,OAAO,EAAE;AACnD,IAAMslF,WAAW,GAAG,aAAc,IAAItlF,OAAO,EAAE;AAC/C,IAAMulF,WAAW,GAAG,aAAc,IAAIvlF,OAAO,EAAE;AAE/C,IAAMwlF,gBAAgB,GAAG,aAAc,IAAI9gG,OAAO,EAAE;AACpD,IAAM+gG,gBAAgB,GAAG,aAAc,IAAI/gG,OAAO,EAAE;AACpD,IAAMghG,gBAAgB,GAAG,aAAc,IAAI15E,OAAO,EAAE;AAEpD,IAAM25E,GAAG,GAAG,aAAc,IAAI3lF,OAAO,EAAE;AACvC,IAAM4lF,GAAG,GAAG,aAAc,IAAI5lF,OAAO,EAAE;AACvC,IAAM6lF,GAAG,GAAG,aAAc,IAAI7lF,OAAO,EAAE;AAEvC,IAAM8lF,IAAI,GAAG,aAAc,IAAIphG,OAAO,EAAE;AACxC,IAAMqhG,IAAI,GAAG,aAAc,IAAIrhG,OAAO,EAAE;AACxC,IAAMshG,IAAI,GAAG,aAAc,IAAIthG,OAAO,EAAE;AAAC,IAEnCuhG,MAAM,0BAAAC,UAAA;EAAAjyF,SAAA,CAAAgyF,MAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAhyF,YAAA,CAAA8xF,MAAA;EAEX,SAAAA,OAAattE,QAAQ,EAAG;IAAA,IAAAytE,OAAA;IAAA30G,eAAA,OAAAw0G,MAAA;IAEvBG,OAAA,GAAAD,QAAA,CAAAh7G,IAAA;IAEAi7G,OAAA,CAAKpG,QAAQ,GAAG,IAAI;IAEpBoG,OAAA,CAAKl7G,IAAI,GAAG,QAAQ;IAEpB,IAAKk6G,SAAS,KAAKz3G,SAAS,EAAG;MAE9By3G,SAAS,GAAG,IAAIh+D,cAAc,EAAE;MAEhC,IAAMi/D,YAAY,GAAG,IAAIriG,YAAY,CAAE,CACtC,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACrB,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACnB,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACnB,CAAE;MAEH,IAAM+gG,iBAAiB,GAAG,IAAIP,iBAAiB,CAAE6B,YAAY,EAAE,CAAC,CAAE;MAElEjB,SAAS,CAACp9D,QAAQ,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MAC1Co9D,SAAS,CAACl9D,YAAY,CAAE,UAAU,EAAE,IAAI48D,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAE;MACtGK,SAAS,CAACl9D,YAAY,CAAE,IAAI,EAAE,IAAI48D,0BAA0B,CAAEC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAE,CAAE;IAEjG;IAEAqB,OAAA,CAAKhhF,QAAQ,GAAGggF,SAAS;IACzBgB,OAAA,CAAKztE,QAAQ,GAAKA,QAAQ,KAAKhrC,SAAS,GAAKgrC,QAAQ,GAAG,IAAI43C,cAAc,EAAE;IAE5E61B,OAAA,CAAK/9F,MAAM,GAAG,IAAI3D,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;IAAC,OAAA0hG,OAAA;EAEvC;EAACn0G,YAAA,CAAAg0G,MAAA;IAAA98G,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAS+W,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAKD,SAAS,CAACzsB,MAAM,KAAK,IAAI,EAAG;QAEhCrd,OAAO,CAACjX,KAAK,CAAE,uFAAuF,CAAE;MAEzG;MAEA04G,WAAW,CAACtiF,kBAAkB,CAAE,IAAI,CAACzB,WAAW,CAAE;MAElDmkF,gBAAgB,CAACrgG,IAAI,CAAEsoC,SAAS,CAACzsB,MAAM,CAACK,WAAW,CAAE;MACrD,IAAI,CAACyS,eAAe,CAACpqB,gBAAgB,CAAE+jC,SAAS,CAACzsB,MAAM,CAACC,kBAAkB,EAAE,IAAI,CAACI,WAAW,CAAE;MAE9FgkF,WAAW,CAACxiF,qBAAqB,CAAE,IAAI,CAACiR,eAAe,CAAE;MAEzD,IAAK2Z,SAAS,CAACzsB,MAAM,CAACyxB,mBAAmB,IAAI,IAAI,CAACha,QAAQ,CAACwJ,eAAe,KAAK,KAAK,EAAG;QAEtFmjE,WAAW,CAACv/F,cAAc,CAAE,CAAEw/F,WAAW,CAAC9uF,CAAC,CAAE;MAE9C;MAEA,IAAMjK,QAAQ,GAAG,IAAI,CAACmsB,QAAQ,CAACnsB,QAAQ;MACvC,IAAIrJ,GAAG,EAAED,GAAG;MAEZ,IAAKsJ,QAAQ,KAAK,CAAC,EAAG;QAErBtJ,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAEsJ,QAAQ,CAAE;QAC1BrJ,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEqJ,QAAQ,CAAE;MAE3B;MAEA,IAAMnE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1Bi+F,eAAe,CAAEX,GAAG,CAAC/hG,GAAG,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,CAAE,EAAE2hG,WAAW,EAAEl9F,MAAM,EAAEi9F,WAAW,EAAEniG,GAAG,EAAED,GAAG,CAAE;MACzFojG,eAAe,CAAEV,GAAG,CAAChiG,GAAG,CAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC,CAAE,EAAE2hG,WAAW,EAAEl9F,MAAM,EAAEi9F,WAAW,EAAEniG,GAAG,EAAED,GAAG,CAAE;MACvFojG,eAAe,CAAET,GAAG,CAACjiG,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE,EAAE2hG,WAAW,EAAEl9F,MAAM,EAAEi9F,WAAW,EAAEniG,GAAG,EAAED,GAAG,CAAE;MAErF4iG,IAAI,CAACliG,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;MAChBmiG,IAAI,CAACniG,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;MAChBoiG,IAAI,CAACpiG,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;;MAEhB;MACA,IAAI0jB,SAAS,GAAGqmB,SAAS,CAACtkB,GAAG,CAACoC,iBAAiB,CAAEk6E,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE,KAAK,EAAER,eAAe,CAAE;MAExF,IAAK/9E,SAAS,KAAK,IAAI,EAAG;QAEzB;QACAg/E,eAAe,CAAEV,GAAG,CAAChiG,GAAG,CAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE,EAAE2hG,WAAW,EAAEl9F,MAAM,EAAEi9F,WAAW,EAAEniG,GAAG,EAAED,GAAG,CAAE;QACvF6iG,IAAI,CAACniG,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE;QAEhB0jB,SAAS,GAAGqmB,SAAS,CAACtkB,GAAG,CAACoC,iBAAiB,CAAEk6E,GAAG,EAAEE,GAAG,EAAED,GAAG,EAAE,KAAK,EAAEP,eAAe,CAAE;QACpF,IAAK/9E,SAAS,KAAK,IAAI,EAAG;UAEzB;QAED;MAED;MAEA,IAAMgO,QAAQ,GAAGqY,SAAS,CAACtkB,GAAG,CAACF,MAAM,CAACjiB,UAAU,CAAEm+F,eAAe,CAAE;MAEnE,IAAK/vE,QAAQ,GAAGqY,SAAS,CAAC5c,IAAI,IAAIuE,QAAQ,GAAGqY,SAAS,CAAC3c,GAAG,EAAG;MAE7D4c,UAAU,CAACl/C,IAAI,CAAE;QAEhB4mC,QAAQ,EAAEA,QAAQ;QAClBvQ,KAAK,EAAEsgF,eAAe,CAACjgG,KAAK,EAAE;QAC9BkR,EAAE,EAAEqjB,QAAQ,CAACY,KAAK,CAAE8qE,eAAe,EAAEM,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE,IAAIthG,OAAO,EAAE,CAAE;QACrFypC,IAAI,EAAE,IAAI;QACVj+C,MAAM,EAAE;MAET,CAAC,CAAE;IAEJ;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA4iE,MAAA,CAAAn9G,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAKhqB,MAAM,CAAC3G,MAAM,KAAK1a,SAAS,EAAG,IAAI,CAAC0a,MAAM,CAAChD,IAAI,CAAE2J,MAAM,CAAC3G,MAAM,CAAE;MAEpE,IAAI,CAACswB,QAAQ,GAAG3pB,MAAM,CAAC2pB,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAstE,MAAA;AAAA,EAzHmB3yE,QAAQ;AAAA3qC,OAAA,CAAAs9G,MAAA,GAAAA,MAAA;AA6H7B,SAASK,eAAeA,CAAEC,cAAc,EAAEC,UAAU,EAAEn+F,MAAM,EAAEsE,KAAK,EAAExJ,GAAG,EAAED,GAAG,EAAG;EAE/E;EACAsiG,gBAAgB,CAAC3/F,UAAU,CAAE0gG,cAAc,EAAEl+F,MAAM,CAAE,CAAC7C,SAAS,CAAE,GAAG,CAAE,CAACM,QAAQ,CAAE6G,KAAK,CAAE;;EAExF;EACA,IAAKxJ,GAAG,KAAKxV,SAAS,EAAG;IAExB83G,gBAAgB,CAACnlG,CAAC,GAAK4C,GAAG,GAAGsiG,gBAAgB,CAACllG,CAAC,GAAO6C,GAAG,GAAGqiG,gBAAgB,CAAC5kG,CAAG;IAChF6kG,gBAAgB,CAAC7kG,CAAC,GAAKuC,GAAG,GAAGqiG,gBAAgB,CAACllG,CAAC,GAAO4C,GAAG,GAAGsiG,gBAAgB,CAAC5kG,CAAG;EAEjF,CAAC,MAAM;IAEN6kG,gBAAgB,CAACpgG,IAAI,CAAEmgG,gBAAgB,CAAE;EAE1C;EAGAe,cAAc,CAAClhG,IAAI,CAAEmhG,UAAU,CAAE;EACjCD,cAAc,CAACjmG,CAAC,IAAImlG,gBAAgB,CAACnlG,CAAC;EACtCimG,cAAc,CAAC3lG,CAAC,IAAI6kG,gBAAgB,CAAC7kG,CAAC;;EAEtC;EACA2lG,cAAc,CAACzvF,YAAY,CAAE4uF,gBAAgB,CAAE;AAEhD;AAEA,IAAMe,KAAK,GAAG,aAAc,IAAIzmF,OAAO,EAAE;AACzC,IAAM0mF,KAAK,GAAG,aAAc,IAAI1mF,OAAO,EAAE;AAAC,IAEpC2mF,GAAG,0BAAAC,UAAA;EAAA3yF,SAAA,CAAA0yF,GAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA1yF,YAAA,CAAAwyF,GAAA;EAER,SAAAA,IAAA,EAAc;IAAA,IAAAG,OAAA;IAAAr1G,eAAA,OAAAk1G,GAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA17G,IAAA;IAEA27G,OAAA,CAAKC,aAAa,GAAG,CAAC;IAEtBD,OAAA,CAAK57G,IAAI,GAAG,KAAK;IAEjBrC,MAAM,CAACkrC,gBAAgB,CAAA/e,sBAAA,CAAA8xF,OAAA,GAAQ;MAC9BxgB,MAAM,EAAE;QACPv8F,UAAU,EAAE,IAAI;QAChBV,KAAK,EAAE;MACR,CAAC;MACDi3G,KAAK,EAAE;QACNj3G,KAAK,EAAE;MACR;IACD,CAAC,CAAE;IAEHy9G,OAAA,CAAKnuB,UAAU,GAAG,IAAI;IAAC,OAAAmuB,OAAA;EAExB;EAAC70G,YAAA,CAAA00G,GAAA;IAAAx9G,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAsjE,GAAA,CAAA79G,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAE,KAAK;MAEzB,IAAMs3E,MAAM,GAAGt3E,MAAM,CAACs3E,MAAM;MAE5B,KAAM,IAAIp3F,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGsnF,MAAM,CAACr3F,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAM0zG,KAAK,GAAGtc,MAAM,CAAEp3F,CAAC,CAAE;QAEzB,IAAI,CAAC83G,QAAQ,CAAEpE,KAAK,CAAC1yG,MAAM,CAACkV,KAAK,EAAE,EAAEw9F,KAAK,CAACttE,QAAQ,CAAE;MAEtD;MAEA,IAAI,CAACqjD,UAAU,GAAG3pE,MAAM,CAAC2pE,UAAU;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAxvF,GAAA;IAAAE,KAAA,EAED,SAAA29G,SAAU92G,MAAM,EAAEolC,QAAQ,GAAG,CAAC,EAAG;MAEhCA,QAAQ,GAAGl2B,IAAI,CAACgC,GAAG,CAAEk0B,QAAQ,CAAE;MAE/B,IAAMgxD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAItnF,CAAC;MAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsnF,MAAM,CAACr3F,MAAM,EAAE+P,CAAC,EAAG,EAAG;QAEtC,IAAKs2B,QAAQ,GAAGgxD,MAAM,CAAEtnF,CAAC,CAAE,CAACs2B,QAAQ,EAAG;UAEtC;QAED;MAED;MAEAgxD,MAAM,CAAC1nF,MAAM,CAAEI,CAAC,EAAE,CAAC,EAAE;QAAEs2B,QAAQ,EAAEA,QAAQ;QAAEplC,MAAM,EAAEA;MAAO,CAAC,CAAE;MAE7D,IAAI,CAACqV,GAAG,CAAErV,MAAM,CAAE;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EAED,SAAA49G,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACF,aAAa;IAE1B;EAAC;IAAA59G,GAAA;IAAAE,KAAA,EAED,SAAA69G,qBAAsB5xE,QAAQ,EAAG;MAEhC,IAAMgxD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAACr3F,MAAM,GAAG,CAAC,EAAG;QAExB,IAAIC,CAAC,EAAE8P,CAAC;QAER,KAAM9P,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGsnF,MAAM,CAACr3F,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE7C,IAAKomC,QAAQ,GAAGgxD,MAAM,CAAEp3F,CAAC,CAAE,CAAComC,QAAQ,EAAG;YAEtC;UAED;QAED;QAEA,OAAOgxD,MAAM,CAAEp3F,CAAC,GAAG,CAAC,CAAE,CAACgB,MAAM;MAE9B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAS+W,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAM04C,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAACr3F,MAAM,GAAG,CAAC,EAAG;QAExBw3G,KAAK,CAAC1jF,qBAAqB,CAAE,IAAI,CAACxB,WAAW,CAAE;QAE/C,IAAM+T,QAAQ,GAAGqY,SAAS,CAACtkB,GAAG,CAACF,MAAM,CAACjiB,UAAU,CAAEu/F,KAAK,CAAE;QAEzD,IAAI,CAACS,oBAAoB,CAAE5xE,QAAQ,CAAE,CAACsB,OAAO,CAAE+W,SAAS,EAAEC,UAAU,CAAE;MAEvE;IAED;EAAC;IAAAzkD,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAQqF,MAAM,EAAG;MAEhB,IAAMolE,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAACr3F,MAAM,GAAG,CAAC,EAAG;QAExBw3G,KAAK,CAAC1jF,qBAAqB,CAAE7B,MAAM,CAACK,WAAW,CAAE;QACjDmlF,KAAK,CAAC3jF,qBAAqB,CAAE,IAAI,CAACxB,WAAW,CAAE;QAE/C,IAAM+T,QAAQ,GAAGmxE,KAAK,CAACv/F,UAAU,CAAEw/F,KAAK,CAAE,GAAGxlF,MAAM,CAAC0xB,IAAI;QAExD0zC,MAAM,CAAE,CAAC,CAAE,CAACp2F,MAAM,CAACkkC,OAAO,GAAG,IAAI;QAEjC,IAAIllC,CAAC,EAAE8P,CAAC;QAER,KAAM9P,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGsnF,MAAM,CAACr3F,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE7C,IAAKomC,QAAQ,IAAIgxD,MAAM,CAAEp3F,CAAC,CAAE,CAAComC,QAAQ,EAAG;YAEvCgxD,MAAM,CAAEp3F,CAAC,GAAG,CAAC,CAAE,CAACgB,MAAM,CAACkkC,OAAO,GAAG,KAAK;YACtCkyD,MAAM,CAAEp3F,CAAC,CAAE,CAACgB,MAAM,CAACkkC,OAAO,GAAG,IAAI;UAElC,CAAC,MAAM;YAEN;UAED;QAED;QAEA,IAAI,CAAC2yE,aAAa,GAAG73G,CAAC,GAAG,CAAC;QAE1B,OAAQA,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAErBo3F,MAAM,CAAEp3F,CAAC,CAAE,CAACgB,MAAM,CAACkkC,OAAO,GAAG,KAAK;QAEnC;MAED;IAED;EAAC;IAAAjrC,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAsjE,GAAA,CAAA79G,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjC,IAAK,IAAI,CAACulE,UAAU,KAAK,KAAK,EAAG3lE,IAAI,CAAC9iB,MAAM,CAACyoF,UAAU,GAAG,KAAK;MAE/D3lE,IAAI,CAAC9iB,MAAM,CAACo2F,MAAM,GAAG,EAAE;MAEvB,IAAMA,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,KAAM,IAAIp3F,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGsnF,MAAM,CAACr3F,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAM0zG,KAAK,GAAGtc,MAAM,CAAEp3F,CAAC,CAAE;QAEzB8jB,IAAI,CAAC9iB,MAAM,CAACo2F,MAAM,CAAC53F,IAAI,CAAE;UACxBwB,MAAM,EAAE0yG,KAAK,CAAC1yG,MAAM,CAAC2P,IAAI;UACzBy1B,QAAQ,EAAEstE,KAAK,CAACttE;QACjB,CAAC,CAAE;MAEJ;MAEA,OAAOtiB,IAAI;IAEZ;EAAC;EAAA,OAAA2zF,GAAA;AAAA,EAvLgBrzE,QAAQ;AAAA3qC,OAAA,CAAAg+G,GAAA,GAAAA,GAAA;AA2L1B,IAAMQ,aAAa,GAAG,aAAc,IAAInnF,OAAO,EAAE;AAEjD,IAAMonF,UAAU,GAAG,aAAc,IAAI7wF,OAAO,EAAE;AAC9C,IAAM8wF,WAAW,GAAG,aAAc,IAAI9wF,OAAO,EAAE;AAE/C,IAAM+wF,SAAS,GAAG,aAAc,IAAItnF,OAAO,EAAE;AAC7C,IAAMunF,OAAO,GAAG,aAAc,IAAIv7E,OAAO,EAAE;AAAC,IAEtCw7E,WAAW,0BAAAC,KAAA;EAAAxzF,SAAA,CAAAuzF,WAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAAvzF,YAAA,CAAAqzF,WAAA;EAEhB,SAAAA,YAAapiF,QAAQ,EAAEuT,QAAQ,EAAG;IAAA,IAAAgvE,OAAA;IAAAl2G,eAAA,OAAA+1G,WAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAv8G,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzBgvE,OAAA,CAAKpvE,aAAa,GAAG,IAAI;IAEzBovE,OAAA,CAAKz8G,IAAI,GAAG,aAAa;IAEzBy8G,OAAA,CAAKnvE,QAAQ,GAAG,UAAU;IAC1BmvE,OAAA,CAAKlvE,UAAU,GAAG,IAAIzM,OAAO,EAAE;IAC/B27E,OAAA,CAAKC,iBAAiB,GAAG,IAAI57E,OAAO,EAAE;IAAC,OAAA27E,OAAA;EAExC;EAAC11G,YAAA,CAAAu1G,WAAA;IAAAr+G,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAmkE,WAAA,CAAA1+G,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACR,QAAQ,GAAGxpB,MAAM,CAACwpB,QAAQ;MAC/B,IAAI,CAACC,UAAU,CAACpzB,IAAI,CAAE2J,MAAM,CAACypB,UAAU,CAAE;MACzC,IAAI,CAACmvE,iBAAiB,CAACviG,IAAI,CAAE2J,MAAM,CAAC44F,iBAAiB,CAAE;MAEvD,IAAI,CAAClvE,QAAQ,GAAG1pB,MAAM,CAAC0pB,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAvvC,GAAA;IAAAE,KAAA,EAED,SAAAivG,KAAM5/D,QAAQ,EAAED,UAAU,EAAG;MAE5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;MAExB,IAAKD,UAAU,KAAK9qC,SAAS,EAAG;QAE/B,IAAI,CAACqpC,iBAAiB,CAAE,IAAI,CAAE;QAE9B,IAAI,CAAC0B,QAAQ,CAACmvE,iBAAiB,EAAE;QAEjCpvE,UAAU,GAAG,IAAI,CAAClX,WAAW;MAE9B;MAEA,IAAI,CAACkX,UAAU,CAACpzB,IAAI,CAAEozB,UAAU,CAAE;MAClC,IAAI,CAACmvE,iBAAiB,CAACviG,IAAI,CAAEozB,UAAU,CAAE,CAACltB,MAAM,EAAE;IAEnD;EAAC;IAAApiB,GAAA;IAAAE,KAAA,EAED,SAAA8mG,KAAA,EAAO;MAEN,IAAI,CAACz3D,QAAQ,CAACy3D,IAAI,EAAE;IAErB;EAAC;IAAAhnG,GAAA;IAAAE,KAAA,EAED,SAAAy+G,qBAAA,EAAuB;MAEtB,IAAM7iF,MAAM,GAAG,IAAI1O,OAAO,EAAE;MAE5B,IAAMwxF,UAAU,GAAG,IAAI,CAAC3iF,QAAQ,CAACC,UAAU,CAAC0iF,UAAU;MAEtD,KAAM,IAAI74G,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG+oG,UAAU,CAACjtF,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEpD+1B,MAAM,CAACjd,mBAAmB,CAAE+/F,UAAU,EAAE74G,CAAC,CAAE;QAE3C,IAAMyd,KAAK,GAAG,GAAG,GAAGsY,MAAM,CAACle,eAAe,EAAE;QAE5C,IAAK4F,KAAK,KAAK4W,QAAQ,EAAG;UAEzB0B,MAAM,CAAClf,cAAc,CAAE4G,KAAK,CAAE;QAE/B,CAAC,MAAM;UAENsY,MAAM,CAACrhB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC;QAE3B;;QAEAmkG,UAAU,CAACpjE,OAAO,CAAEz1C,CAAC,EAAE+1B,MAAM,CAAC3kB,CAAC,EAAE2kB,MAAM,CAACrkB,CAAC,EAAEqkB,MAAM,CAACxO,CAAC,EAAEwO,MAAM,CAACvO,CAAC,CAAE;MAEhE;IAED;EAAC;IAAAvtB,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1BmM,IAAA,CAAAC,eAAA,CAAAmkE,WAAA,CAAA1+G,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;MAE9B,IAAK,IAAI,CAACuB,QAAQ,KAAK,UAAU,EAAG;QAEnC,IAAI,CAACovE,iBAAiB,CAACviG,IAAI,CAAE,IAAI,CAACkc,WAAW,CAAE,CAAChW,MAAM,EAAE;MAEzD,CAAC,MAAM,IAAK,IAAI,CAACitB,QAAQ,KAAK,UAAU,EAAG;QAE1C,IAAI,CAACovE,iBAAiB,CAACviG,IAAI,CAAE,IAAI,CAACozB,UAAU,CAAE,CAACltB,MAAM,EAAE;MAExD,CAAC,MAAM;QAEN1H,OAAO,CAACC,IAAI,CAAE,4CAA4C,GAAG,IAAI,CAAC00B,QAAQ,CAAE;MAE7E;IAED;EAAC;IAAArvC,GAAA;IAAAE,KAAA,EAED,SAAAklD,cAAe5vC,KAAK,EAAE9M,MAAM,EAAG;MAE9B,IAAM6mC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMtT,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9BgiF,UAAU,CAACp/F,mBAAmB,CAAEod,QAAQ,CAACC,UAAU,CAAC2iF,SAAS,EAAErpG,KAAK,CAAE;MACtE0oG,WAAW,CAACr/F,mBAAmB,CAAEod,QAAQ,CAACC,UAAU,CAAC0iF,UAAU,EAAEppG,KAAK,CAAE;MAExEwoG,aAAa,CAAC9hG,IAAI,CAAExT,MAAM,CAAE,CAACilB,YAAY,CAAE,IAAI,CAAC2hB,UAAU,CAAE;MAE5D5mC,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAErB,KAAM,IAAI1U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAM2qE,MAAM,GAAGwtC,WAAW,CAACliG,YAAY,CAAEjW,CAAC,CAAE;QAE5C,IAAK2qE,MAAM,KAAK,CAAC,EAAG;UAEnB,IAAMouC,SAAS,GAAGb,UAAU,CAACjiG,YAAY,CAAEjW,CAAC,CAAE;UAE9Cq4G,OAAO,CAAC39F,gBAAgB,CAAE8uB,QAAQ,CAACwvE,KAAK,CAAED,SAAS,CAAE,CAAC1mF,WAAW,EAAEmX,QAAQ,CAACyvE,YAAY,CAAEF,SAAS,CAAE,CAAE;UAEvGp2G,MAAM,CAAC6T,eAAe,CAAE4hG,SAAS,CAACjiG,IAAI,CAAE8hG,aAAa,CAAE,CAACrwF,YAAY,CAAEywF,OAAO,CAAE,EAAE1tC,MAAM,CAAE;QAE1F;MAED;MAEA,OAAOhoE,MAAM,CAACilB,YAAY,CAAE,IAAI,CAAC8wF,iBAAiB,CAAE;IAErD;EAAC;EAAA,OAAAJ,WAAA;AAAA,EArIwBr6D,IAAI;AAAAxkD,OAAA,CAAA6+G,WAAA,GAAAA,WAAA;AAAA,IAyIxBY,IAAI,0BAAAC,UAAA;EAAAp0F,SAAA,CAAAm0F,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAn0F,YAAA,CAAAi0F,IAAA;EAET,SAAAA,KAAA,EAAc;IAAA,IAAAG,OAAA;IAAA92G,eAAA,OAAA22G,IAAA;IAEbG,OAAA,GAAAD,QAAA,CAAAn9G,IAAA;IAEAo9G,OAAA,CAAKC,MAAM,GAAG,IAAI;IAElBD,OAAA,CAAKr9G,IAAI,GAAG,MAAM;IAAC,OAAAq9G,OAAA;EAEpB;EAAC,OAAAt2G,YAAA,CAAAm2G,IAAA;AAAA,EAViB90E,QAAQ;AAAA3qC,OAAA,CAAAy/G,IAAA,GAAAA,IAAA;AAAA,IAcrBK,WAAW,0BAAAC,SAAA;EAAAz0F,SAAA,CAAAw0F,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAx0F,YAAA,CAAAs0F,WAAA;EAEhB,SAAAA,YAAaz1F,IAAI,GAAG,IAAI,EAAEZ,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEsC,MAAM,EAAEzpB,IAAI,EAAEmpB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,GAAGrd,aAAa,EAAEsd,SAAS,GAAGtd,aAAa,EAAEwd,UAAU,EAAEC,QAAQ,EAAG;IAAA,IAAA+zF,OAAA;IAAAn3G,eAAA,OAAAg3G,WAAA;IAElKG,OAAA,GAAAD,QAAA,CAAAx9G,IAAA,OAAO,IAAI,EAAEkpB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU,EAAEC,QAAQ;IAE5F+zF,OAAA,CAAKj1F,aAAa,GAAG,IAAI;IAEzBi1F,OAAA,CAAK72F,KAAK,GAAG;MAAEiB,IAAI,EAAEA,IAAI;MAAEZ,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAEzDu2F,OAAA,CAAKvzF,eAAe,GAAG,KAAK;IAC5BuzF,OAAA,CAAKrzF,KAAK,GAAG,KAAK;IAClBqzF,OAAA,CAAKpzF,eAAe,GAAG,CAAC;IAAC,OAAAozF,OAAA;EAE1B;EAAC,OAAA32G,YAAA,CAAAw2G,WAAA;AAAA,EAdwB10F,OAAO;AAAAprB,OAAA,CAAA8/G,WAAA,GAAAA,WAAA;AAkBjC,IAAMI,aAAa,GAAG,aAAc,IAAI78E,OAAO,EAAE;AACjD,IAAM88E,eAAe,GAAG,aAAc,IAAI98E,OAAO,EAAE;AAAC,IAE9C+8E,QAAQ;EAEb,SAAAA,SAAab,KAAK,GAAG,EAAE,EAAEC,YAAY,GAAG,EAAE,EAAG;IAAA12G,eAAA,OAAAs3G,QAAA;IAE5C,IAAI,CAAClpG,IAAI,GAAGN,YAAY,EAAE;IAE1B,IAAI,CAAC2oG,KAAK,GAAGA,KAAK,CAAC13G,KAAK,CAAE,CAAC,CAAE;IAC7B,IAAI,CAAC23G,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACa,YAAY,GAAG,IAAI;IAExB,IAAI,CAACrH,WAAW,GAAG,IAAI;IACvB,IAAI,CAACE,eAAe,GAAG,CAAC;IAExB,IAAI,CAAC9nD,KAAK,GAAG,CAAE,CAAC;IAEhB,IAAI,CAACkZ,IAAI,EAAE;EAEZ;EAAChhE,YAAA,CAAA82G,QAAA;IAAA5/G,GAAA;IAAAE,KAAA,EAED,SAAA4pE,KAAA,EAAO;MAEN,IAAMi1C,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,IAAI,CAACa,YAAY,GAAG,IAAIhlG,YAAY,CAAEkkG,KAAK,CAACj5G,MAAM,GAAG,EAAE,CAAE;;MAEzD;;MAEA,IAAKk5G,YAAY,CAACl5G,MAAM,KAAK,CAAC,EAAG;QAEhC,IAAI,CAAC44G,iBAAiB,EAAE;MAEzB,CAAC,MAAM;QAEN;;QAEA,IAAKK,KAAK,CAACj5G,MAAM,KAAKk5G,YAAY,CAACl5G,MAAM,EAAG;UAE3C4U,OAAO,CAACC,IAAI,CAAE,iFAAiF,CAAE;UAEjG,IAAI,CAACqkG,YAAY,GAAG,EAAE;UAEtB,KAAM,IAAIj5G,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG,IAAI,CAACitF,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAEvD,IAAI,CAACi5G,YAAY,CAACz5G,IAAI,CAAE,IAAIs9B,OAAO,EAAE,CAAE;UAExC;QAED;MAED;IAED;EAAC;IAAA7iC,GAAA;IAAAE,KAAA,EAED,SAAAw+G,kBAAA,EAAoB;MAEnB,IAAI,CAACM,YAAY,CAACl5G,MAAM,GAAG,CAAC;MAE5B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG,IAAI,CAACitF,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEvD,IAAM+5G,OAAO,GAAG,IAAIj9E,OAAO,EAAE;QAE7B,IAAK,IAAI,CAACk8E,KAAK,CAAEh5G,CAAC,CAAE,EAAG;UAEtB+5G,OAAO,CAAC5jG,IAAI,CAAE,IAAI,CAAC6iG,KAAK,CAAEh5G,CAAC,CAAE,CAACqyB,WAAW,CAAE,CAAChW,MAAM,EAAE;QAErD;QAEA,IAAI,CAAC48F,YAAY,CAACz5G,IAAI,CAAEu6G,OAAO,CAAE;MAElC;IAED;EAAC;IAAA9/G,GAAA;IAAAE,KAAA,EAED,SAAA8mG,KAAA,EAAO;MAEN;;MAEA,KAAM,IAAIjhG,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG,IAAI,CAACitF,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEvD,IAAMg6G,IAAI,GAAG,IAAI,CAAChB,KAAK,CAAEh5G,CAAC,CAAE;QAE5B,IAAKg6G,IAAI,EAAG;UAEXA,IAAI,CAAC3nF,WAAW,CAAClc,IAAI,CAAE,IAAI,CAAC8iG,YAAY,CAAEj5G,CAAC,CAAE,CAAE,CAACqc,MAAM,EAAE;QAEzD;MAED;;MAEA;;MAEA,KAAM,IAAIrc,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG,IAAI,CAACitF,KAAK,CAACj5G,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;QAEvD,IAAMg6G,KAAI,GAAG,IAAI,CAAChB,KAAK,CAAEh5G,IAAC,CAAE;QAE5B,IAAKg6G,KAAI,EAAG;UAEX,IAAKA,KAAI,CAACv1E,MAAM,IAAIu1E,KAAI,CAACv1E,MAAM,CAAC60E,MAAM,EAAG;YAExCU,KAAI,CAACn8F,MAAM,CAAC1H,IAAI,CAAE6jG,KAAI,CAACv1E,MAAM,CAACpS,WAAW,CAAE,CAAChW,MAAM,EAAE;YACpD29F,KAAI,CAACn8F,MAAM,CAACjH,QAAQ,CAAEojG,KAAI,CAAC3nF,WAAW,CAAE;UAEzC,CAAC,MAAM;YAEN2nF,KAAI,CAACn8F,MAAM,CAAC1H,IAAI,CAAE6jG,KAAI,CAAC3nF,WAAW,CAAE;UAErC;UAEA2nF,KAAI,CAACn8F,MAAM,CAACsjB,SAAS,CAAE64E,KAAI,CAAC5jF,QAAQ,EAAE4jF,KAAI,CAACxtF,UAAU,EAAEwtF,KAAI,CAACv8F,KAAK,CAAE;QAEpE;MAED;IAED;EAAC;IAAAxjB,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER,IAAMqsF,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAMa,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAMrH,WAAW,GAAG,IAAI,CAACA,WAAW;;MAEpC;;MAEA,KAAM,IAAIzyG,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGitF,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAElD;;QAEA,IAAM6d,MAAM,GAAGm7F,KAAK,CAAEh5G,CAAC,CAAE,GAAGg5G,KAAK,CAAEh5G,CAAC,CAAE,CAACqyB,WAAW,GAAGunF,eAAe;QAEpED,aAAa,CAACj/F,gBAAgB,CAAEmD,MAAM,EAAEo7F,YAAY,CAAEj5G,CAAC,CAAE,CAAE;QAC3D25G,aAAa,CAAC9gG,OAAO,CAAEihG,YAAY,EAAE95G,CAAC,GAAG,EAAE,CAAE;MAE9C;MAEA,IAAKyyG,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,CAAC1rF,WAAW,GAAG,IAAI;MAE/B;IAED;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI2jG,QAAQ,CAAE,IAAI,CAACb,KAAK,EAAE,IAAI,CAACC,YAAY,CAAE;IAErD;EAAC;IAAAh/G,GAAA;IAAAE,KAAA,EAED,SAAAu4G,mBAAA,EAAqB;MAEpB;MACA;MACA;MACA;MACA;MACA;;MAEA,IAAI5xF,IAAI,GAAG5Q,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAACohG,KAAK,CAACj5G,MAAM,GAAG,CAAC,CAAE,CAAC,CAAC;MAC/C+gB,IAAI,GAAG1N,cAAc,CAAE0N,IAAI,CAAE;MAC7BA,IAAI,GAAG5Q,IAAI,CAACa,GAAG,CAAE+P,IAAI,EAAE,CAAC,CAAE;MAE1B,IAAMg5F,YAAY,GAAG,IAAIhlG,YAAY,CAAEgM,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAE,CAAC,CAAC;MAC1Dg5F,YAAY,CAACplG,GAAG,CAAE,IAAI,CAAColG,YAAY,CAAE,CAAC,CAAC;;MAEvC,IAAMrH,WAAW,GAAG,IAAI8G,WAAW,CAAEO,YAAY,EAAEh5F,IAAI,EAAEA,IAAI,EAAErX,UAAU,EAAEP,SAAS,CAAE;MACtFupG,WAAW,CAAC1rF,WAAW,GAAG,IAAI;MAE9B,IAAI,CAAC+yF,YAAY,GAAGA,YAAY;MAChC,IAAI,CAACrH,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACE,eAAe,GAAG7xF,IAAI;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAA7mB,GAAA;IAAAE,KAAA,EAED,SAAA8/G,cAAe35G,IAAI,EAAG;MAErB,KAAM,IAAIN,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG,IAAI,CAACitF,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEvD,IAAMg6G,IAAI,GAAG,IAAI,CAAChB,KAAK,CAAEh5G,CAAC,CAAE;QAE5B,IAAKg6G,IAAI,CAAC15G,IAAI,KAAKA,IAAI,EAAG;UAEzB,OAAO05G,IAAI;QAEZ;MAED;MAEA,OAAOv7G,SAAS;IAEjB;EAAC;IAAAxE,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAW;MAEV,IAAK,IAAI,CAACurF,WAAW,KAAK,IAAI,EAAG;QAEhC,IAAI,CAACA,WAAW,CAACvrF,OAAO,EAAE;QAE1B,IAAI,CAACurF,WAAW,GAAG,IAAI;MAExB;IAED;EAAC;IAAAx4G,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAElB,KAAK,EAAG;MAEvB,IAAI,CAACroG,IAAI,GAAGupG,IAAI,CAACvpG,IAAI;MAErB,KAAM,IAAI3Q,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAAClB,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAErD,IAAM2Q,IAAI,GAAGupG,IAAI,CAAClB,KAAK,CAAEh5G,CAAC,CAAE;QAC5B,IAAIg6G,IAAI,GAAGhB,KAAK,CAAEroG,IAAI,CAAE;QAExB,IAAKqpG,IAAI,KAAKv7G,SAAS,EAAG;UAEzBkW,OAAO,CAACC,IAAI,CAAE,0CAA0C,EAAEjE,IAAI,CAAE;UAChEqpG,IAAI,GAAG,IAAId,IAAI,EAAE;QAElB;QAEA,IAAI,CAACF,KAAK,CAACx5G,IAAI,CAAEw6G,IAAI,CAAE;QACvB,IAAI,CAACf,YAAY,CAACz5G,IAAI,CAAE,IAAIs9B,OAAO,EAAE,CAACnkB,SAAS,CAAEuhG,IAAI,CAACjB,YAAY,CAAEj5G,CAAC,CAAE,CAAE,CAAE;MAE5E;MAEA,IAAI,CAAC+jE,IAAI,EAAE;MAEX,OAAO,IAAI;IAEZ;EAAC;IAAA9pE,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAG;QACZmD,QAAQ,EAAE;UACThD,OAAO,EAAE,GAAG;UACZjoB,IAAI,EAAE,UAAU;UAChBR,SAAS,EAAE;QACZ,CAAC;QACDw9G,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE;MACf,CAAC;MAEDn1F,IAAI,CAACnT,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,IAAMqoG,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAIj5G,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGkpG,KAAK,CAACj5G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEhD,IAAMg6G,IAAI,GAAGhB,KAAK,CAAEh5G,CAAC,CAAE;QACvB8jB,IAAI,CAACk1F,KAAK,CAACx5G,IAAI,CAAEw6G,IAAI,CAACrpG,IAAI,CAAE;QAE5B,IAAMwpG,WAAW,GAAGlB,YAAY,CAAEj5G,CAAC,CAAE;QACrC8jB,IAAI,CAACm1F,YAAY,CAACz5G,IAAI,CAAE26G,WAAW,CAACthG,OAAO,EAAE,CAAE;MAEhD;MAEA,OAAOiL,IAAI;IAEZ;EAAC;EAAA,OAAA+1F,QAAA;AAAA;AAAApgH,OAAA,CAAAogH,QAAA,GAAAA,QAAA;AAAA,IAIIO,wBAAwB,0BAAAC,kBAAA;EAAAt1F,SAAA,CAAAq1F,wBAAA,EAAAC,kBAAA;EAAA,IAAAC,QAAA,GAAAr1F,YAAA,CAAAm1F,wBAAA;EAE7B,SAAAA,yBAAavqG,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU,EAAE+9C,gBAAgB,GAAG,CAAC,EAAG;IAAA,IAAAk6C,OAAA;IAAAh4G,eAAA,OAAA63G,wBAAA;IAEhE,IAAK,OAAO93F,UAAU,KAAK,QAAQ,EAAG;MAErC+9C,gBAAgB,GAAG/9C,UAAU;MAE7BA,UAAU,GAAG,KAAK;MAElB3N,OAAO,CAACjX,KAAK,CAAE,+FAA+F,CAAE;IAEjH;IAEA68G,OAAA,GAAAD,QAAA,CAAAr+G,IAAA,OAAO4T,KAAK,EAAE0kC,QAAQ,EAAEjyB,UAAU;IAElCi4F,OAAA,CAAKv5C,0BAA0B,GAAG,IAAI;IAEtCu5C,OAAA,CAAKl6C,gBAAgB,GAAGA,gBAAgB;IAAC,OAAAk6C,OAAA;EAE1C;EAACx3G,YAAA,CAAAq3G,wBAAA;IAAAngH,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAimE,wBAAA,CAAAxgH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACugD,gBAAgB,GAAGvgD,MAAM,CAACugD,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAApmE,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAimE,wBAAA,CAAAxgH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACu8C,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE7Cv8C,IAAI,CAACk9C,0BAA0B,GAAG,IAAI;MAEtC,OAAOl9C,IAAI;IAEZ;EAAC;EAAA,OAAAs2F,wBAAA;AAAA,EA1CqC9lE,eAAe;AAAA76C,OAAA,CAAA2gH,wBAAA,GAAAA,wBAAA;AA8CtD,IAAMI,oBAAoB,GAAG,aAAc,IAAI19E,OAAO,EAAE;AACxD,IAAM29E,oBAAoB,GAAG,aAAc,IAAI39E,OAAO,EAAE;AAExD,IAAM49E,mBAAmB,GAAG,EAAE;AAE9B,IAAMC,KAAK,GAAG,aAAc,IAAI18D,IAAI,EAAE;AAAC,IAEjC28D,aAAa,0BAAAC,MAAA;EAAA91F,SAAA,CAAA61F,aAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAA71F,YAAA,CAAA21F,aAAA;EAElB,SAAAA,cAAa1kF,QAAQ,EAAEuT,QAAQ,EAAE7d,KAAK,EAAG;IAAA,IAAAmvF,OAAA;IAAAx4G,eAAA,OAAAq4G,aAAA;IAExCG,OAAA,GAAAD,QAAA,CAAA7+G,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzBsxE,OAAA,CAAKxyE,eAAe,GAAG,IAAI;IAE3BwyE,OAAA,CAAKvyE,cAAc,GAAG,IAAI4xE,wBAAwB,CAAE,IAAItlG,YAAY,CAAE8W,KAAK,GAAG,EAAE,CAAE,EAAE,EAAE,CAAE;IACxFmvF,OAAA,CAAKtyE,aAAa,GAAG,IAAI;IAEzBsyE,OAAA,CAAKnvF,KAAK,GAAGA,KAAK;IAElBmvF,OAAA,CAAK11E,aAAa,GAAG,KAAK;IAAC,OAAA01E,OAAA;EAE5B;EAACh4G,YAAA,CAAA63G,aAAA;IAAA3gH,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAymE,aAAA,CAAAhhH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACtB,cAAc,CAACryB,IAAI,CAAE2J,MAAM,CAAC0oB,cAAc,CAAE;MAEjD,IAAK1oB,MAAM,CAAC2oB,aAAa,KAAK,IAAI,EAAG,IAAI,CAACA,aAAa,GAAG3oB,MAAM,CAAC2oB,aAAa,CAACvyB,KAAK,EAAE;MAEtF,IAAI,CAAC0V,KAAK,GAAG9L,MAAM,CAAC8L,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA3xB,GAAA;IAAAE,KAAA,EAED,SAAA6gH,WAAYvrG,KAAK,EAAEyP,KAAK,EAAG;MAE1BA,KAAK,CAACvG,SAAS,CAAE,IAAI,CAAC8vB,aAAa,CAAC54B,KAAK,EAAEJ,KAAK,GAAG,CAAC,CAAE;IAEvD;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA8gH,YAAaxrG,KAAK,EAAEoO,MAAM,EAAG;MAE5BA,MAAM,CAAClF,SAAS,CAAE,IAAI,CAAC6vB,cAAc,CAAC34B,KAAK,EAAEJ,KAAK,GAAG,EAAE,CAAE;IAE1D;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAS+W,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMrsB,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM6oF,YAAY,GAAG,IAAI,CAACtvF,KAAK;MAE/B+uF,KAAK,CAACzkF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9BykF,KAAK,CAAClxE,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAKkxE,KAAK,CAAClxE,QAAQ,KAAKhrC,SAAS,EAAG;MAEpC,KAAM,IAAI08G,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAGD,YAAY,EAAEC,UAAU,EAAG,EAAG;QAEpE;;QAEA,IAAI,CAACF,WAAW,CAAEE,UAAU,EAAEX,oBAAoB,CAAE;QAEpDC,oBAAoB,CAAC//F,gBAAgB,CAAE2X,WAAW,EAAEmoF,oBAAoB,CAAE;;QAE1E;;QAEAG,KAAK,CAACtoF,WAAW,GAAGooF,oBAAoB;QAExCE,KAAK,CAACjzE,OAAO,CAAE+W,SAAS,EAAEi8D,mBAAmB,CAAE;;QAE/C;;QAEA,KAAM,IAAI16G,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG4qG,mBAAmB,CAAC36G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE9D,IAAMo4B,SAAS,GAAGsiF,mBAAmB,CAAE16G,CAAC,CAAE;UAC1Co4B,SAAS,CAAC+iF,UAAU,GAAGA,UAAU;UACjC/iF,SAAS,CAACp3B,MAAM,GAAG,IAAI;UACvB09C,UAAU,CAACl/C,IAAI,CAAE44B,SAAS,CAAE;QAE7B;QAEAsiF,mBAAmB,CAAC36G,MAAM,GAAG,CAAC;MAE/B;IAED;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAihH,WAAY3rG,KAAK,EAAEyP,KAAK,EAAG;MAE1B,IAAK,IAAI,CAACupB,aAAa,KAAK,IAAI,EAAG;QAElC,IAAI,CAACA,aAAa,GAAG,IAAI2xE,wBAAwB,CAAE,IAAItlG,YAAY,CAAE,IAAI,CAAC0zB,cAAc,CAAC5c,KAAK,GAAG,CAAC,CAAE,EAAE,CAAC,CAAE;MAE1G;MAEA1M,KAAK,CAACrG,OAAO,CAAE,IAAI,CAAC4vB,aAAa,CAAC54B,KAAK,EAAEJ,KAAK,GAAG,CAAC,CAAE;IAErD;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAkhH,YAAa5rG,KAAK,EAAEoO,MAAM,EAAG;MAE5BA,MAAM,CAAChF,OAAO,CAAE,IAAI,CAAC2vB,cAAc,CAAC34B,KAAK,EAAEJ,KAAK,GAAG,EAAE,CAAE;IAExD;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAAkkD,mBAAA,EAAqB,CAErB;EAAC;IAAApkD,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACvX,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAU,CAAC,CAAE;IAE1C;EAAC;EAAA,OAAA4+G,aAAA;AAAA,EA9G0B38D,IAAI;AAAAxkD,OAAA,CAAAmhH,aAAA,GAAAA,aAAA;AAAA,IAkH1B35B,iBAAiB,0BAAAq6B,UAAA;EAAAv2F,SAAA,CAAAk8D,iBAAA,EAAAq6B,UAAA;EAAA,IAAAC,QAAA,GAAAt2F,YAAA,CAAAg8D,iBAAA;EAEtB,SAAAA,kBAAa93C,UAAU,EAAG;IAAA,IAAAqyE,OAAA;IAAAj5G,eAAA,OAAA0+E,iBAAA;IAEzBu6B,OAAA,GAAAD,QAAA,CAAAt/G,IAAA;IAEAu/G,OAAA,CAAKnT,mBAAmB,GAAG,IAAI;IAE/BmT,OAAA,CAAKx/G,IAAI,GAAG,mBAAmB;IAE/Bw/G,OAAA,CAAKt8F,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE;IAElCy7F,OAAA,CAAKtoE,SAAS,GAAG,CAAC;IAClBsoE,OAAA,CAAKC,OAAO,GAAG,OAAO;IACtBD,OAAA,CAAKE,QAAQ,GAAG,OAAO;IAEvBF,OAAA,CAAK9nE,GAAG,GAAG,IAAI;IAEf8nE,OAAA,CAAKlsE,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAqyE,OAAA;EAE9B;EAACz4G,YAAA,CAAAk+E,iBAAA;IAAAhnF,GAAA;IAAAE,KAAA,EAGD,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA8sC,iBAAA,CAAArnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAACg0B,SAAS,GAAGpzB,MAAM,CAACozB,SAAS;MACjC,IAAI,CAACuoE,OAAO,GAAG37F,MAAM,CAAC27F,OAAO;MAC7B,IAAI,CAACC,QAAQ,GAAG57F,MAAM,CAAC47F,QAAQ;MAE/B,IAAI,CAAChoE,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAutC,iBAAA;AAAA,EArC8Bv0C,QAAQ;AAAAjzC,OAAA,CAAAwnF,iBAAA,GAAAA,iBAAA;AAyCxC,IAAM06B,QAAQ,GAAG,aAAc,IAAI7qF,OAAO,EAAE;AAC5C,IAAM8qF,MAAM,GAAG,aAAc,IAAI9qF,OAAO,EAAE;AAC1C,IAAM+qF,gBAAgB,GAAG,aAAc,IAAI/+E,OAAO,EAAE;AACpD,IAAMg/E,MAAM,GAAG,aAAc,IAAI9hF,GAAG,EAAE;AACtC,IAAM+hF,SAAS,GAAG,aAAc,IAAI9iF,MAAM,EAAE;AAAC,IAEvC+iF,IAAI,0BAAAC,UAAA;EAAAl3F,SAAA,CAAAi3F,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAAj3F,YAAA,CAAA+2F,IAAA;EAET,SAAAA,KAAa9lF,QAAQ,GAAG,IAAIgiB,cAAc,EAAE,EAAEzO,QAAQ,GAAG,IAAIw3C,iBAAiB,EAAE,EAAG;IAAA,IAAAk7B,OAAA;IAAA55G,eAAA,OAAAy5G,IAAA;IAElFG,OAAA,GAAAD,QAAA,CAAAjgH,IAAA;IAEAkgH,OAAA,CAAKlzE,MAAM,GAAG,IAAI;IAElBkzE,OAAA,CAAKngH,IAAI,GAAG,MAAM;IAElBmgH,OAAA,CAAKjmF,QAAQ,GAAGA,QAAQ;IACxBimF,OAAA,CAAK1yE,QAAQ,GAAGA,QAAQ;IAExB0yE,OAAA,CAAK99D,kBAAkB,EAAE;IAAC,OAAA89D,OAAA;EAE3B;EAACp5G,YAAA,CAAAi5G,IAAA;IAAA/hH,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA6nE,IAAA,CAAApiH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACL,QAAQ,GAAG3pB,MAAM,CAAC2pB,QAAQ;MAC/B,IAAI,CAACvT,QAAQ,GAAGpW,MAAM,CAACoW,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAj8B,GAAA;IAAAE,KAAA,EAED,SAAAiiH,qBAAA,EAAuB;MAEtB,IAAMlmF,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE9B;;MAEA,IAAKA,QAAQ,CAACzmB,KAAK,KAAK,IAAI,EAAG;QAE9B,IAAM4rC,iBAAiB,GAAGnlB,QAAQ,CAACC,UAAU,CAACC,QAAQ;QACtD,IAAMimF,aAAa,GAAG,CAAE,CAAC,CAAE;QAE3B,KAAM,IAAIr8G,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGurC,iBAAiB,CAACzvB,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE3D27G,QAAQ,CAAC7iG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,CAAC,GAAG,CAAC,CAAE;UACxD47G,MAAM,CAAC9iG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,CAAC,CAAE;UAElDq8G,aAAa,CAAEr8G,CAAC,CAAE,GAAGq8G,aAAa,CAAEr8G,CAAC,GAAG,CAAC,CAAE;UAC3Cq8G,aAAa,CAAEr8G,CAAC,CAAE,IAAI27G,QAAQ,CAAC3jG,UAAU,CAAE4jG,MAAM,CAAE;QAEpD;QAEA1lF,QAAQ,CAAC8iB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEglE,aAAa,EAAE,CAAC,CAAE,CAAE;MAExF,CAAC,MAAM;QAEN1nG,OAAO,CAACC,IAAI,CAAE,+FAA+F,CAAE;MAEhH;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3a,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAS+W,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMxoB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM7D,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM4tE,SAAS,GAAGxhD,SAAS,CAAC+pB,MAAM,CAACwzC,IAAI,CAAC/b,SAAS;MACjD,IAAMtnD,SAAS,GAAGziB,QAAQ,CAACyiB,SAAS;;MAEpC;;MAEA,IAAKziB,QAAQ,CAACwiB,cAAc,KAAK,IAAI,EAAGxiB,QAAQ,CAACsjB,qBAAqB,EAAE;MAExEuiE,SAAS,CAAC5lG,IAAI,CAAE+f,QAAQ,CAACwiB,cAAc,CAAE;MACzCqjE,SAAS,CAACn0F,YAAY,CAAEyK,WAAW,CAAE;MACrC0pF,SAAS,CAACvoF,MAAM,IAAIysE,SAAS;MAE7B,IAAKxhD,SAAS,CAACtkB,GAAG,CAACrD,gBAAgB,CAAEilF,SAAS,CAAE,KAAK,KAAK,EAAG;;MAE7D;;MAEAF,gBAAgB,CAAC1lG,IAAI,CAAEkc,WAAW,CAAE,CAAChW,MAAM,EAAE;MAC7Cy/F,MAAM,CAAC3lG,IAAI,CAAEsoC,SAAS,CAACtkB,GAAG,CAAE,CAACvS,YAAY,CAAEi0F,gBAAgB,CAAE;MAE7D,IAAMS,cAAc,GAAGrc,SAAS,IAAK,CAAE,IAAI,CAACxiF,KAAK,CAACrM,CAAC,GAAG,IAAI,CAACqM,KAAK,CAAC/L,CAAC,GAAG,IAAI,CAAC+L,KAAK,CAAC8J,CAAC,IAAK,CAAC,CAAE;MACzF,IAAMg1F,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;MAExD,IAAME,MAAM,GAAG,IAAI1rF,OAAO,EAAE;MAC5B,IAAM2rF,IAAI,GAAG,IAAI3rF,OAAO,EAAE;MAC1B,IAAM4rF,YAAY,GAAG,IAAI5rF,OAAO,EAAE;MAClC,IAAM6rF,QAAQ,GAAG,IAAI7rF,OAAO,EAAE;MAC9B,IAAMjD,IAAI,GAAG,IAAI,CAAC+iF,cAAc,GAAG,CAAC,GAAG,CAAC;MAExC,IAAMnhG,KAAK,GAAGymB,QAAQ,CAACzmB,KAAK;MAC5B,IAAM0mB,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAMklB,iBAAiB,GAAGllB,UAAU,CAACC,QAAQ;MAE7C,IAAK3mB,KAAK,KAAK,IAAI,EAAG;QAErB,IAAMmpC,KAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE4nC,SAAS,CAACC,KAAK,CAAE;QAC5C,IAAMkG,GAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACmc,KAAK,EAAI+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI;QAE1E,KAAM,IAAI5rB,CAAC,GAAG44C,KAAK,EAAE9oC,CAAC,GAAGgvC,GAAG,GAAG,CAAC,EAAE9+C,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,IAAI6tB,IAAI,EAAG;UAEpD,IAAMja,CAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAEhZ,CAAC,CAAE;UACzB,IAAM6T,CAAC,GAAGpE,KAAK,CAACuJ,IAAI,CAAEhZ,CAAC,GAAG,CAAC,CAAE;UAE7Bw8G,MAAM,CAAC1jG,mBAAmB,CAAEuiC,iBAAiB,EAAEznC,CAAC,CAAE;UAClD6oG,IAAI,CAAC3jG,mBAAmB,CAAEuiC,iBAAiB,EAAExnC,CAAC,CAAE;UAEhD,IAAM+oG,MAAM,GAAGd,MAAM,CAACphF,mBAAmB,CAAE8hF,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAY,CAAE;UAEjF,IAAKE,MAAM,GAAGL,gBAAgB,EAAG;UAEjCI,QAAQ,CAAC/0F,YAAY,CAAE,IAAI,CAACyK,WAAW,CAAE,CAAC,CAAC;;UAE3C,IAAM+T,QAAQ,GAAGqY,SAAS,CAACtkB,GAAG,CAACF,MAAM,CAACjiB,UAAU,CAAE2kG,QAAQ,CAAE;UAE5D,IAAKv2E,QAAQ,GAAGqY,SAAS,CAAC5c,IAAI,IAAIuE,QAAQ,GAAGqY,SAAS,CAAC3c,GAAG,EAAG;UAE7D4c,UAAU,CAACl/C,IAAI,CAAE;YAEhB4mC,QAAQ,EAAEA,QAAQ;YAClB;YACA;YACAvQ,KAAK,EAAE6mF,YAAY,CAACxmG,KAAK,EAAE,CAAC0R,YAAY,CAAE,IAAI,CAACyK,WAAW,CAAE;YAC5D5iB,KAAK,EAAEzP,CAAC;YACRi/C,IAAI,EAAE,IAAI;YACVD,SAAS,EAAE,IAAI;YACfh+C,MAAM,EAAE;UAET,CAAC,CAAE;QAEJ;MAED,CAAC,MAAM;QAEN,IAAM43C,OAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE4nC,SAAS,CAACC,KAAK,CAAE;QAC5C,IAAMkG,KAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAEuqC,iBAAiB,CAACzvB,KAAK,EAAI+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI;QAEtF,KAAM,IAAI5rB,IAAC,GAAG44C,OAAK,EAAE9oC,GAAC,GAAGgvC,KAAG,GAAG,CAAC,EAAE9+C,IAAC,GAAG8P,GAAC,EAAE9P,IAAC,IAAI6tB,IAAI,EAAG;UAEpD2uF,MAAM,CAAC1jG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,IAAC,CAAE;UAClDy8G,IAAI,CAAC3jG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,IAAC,GAAG,CAAC,CAAE;UAEpD,IAAM48G,OAAM,GAAGd,MAAM,CAACphF,mBAAmB,CAAE8hF,MAAM,EAAEC,IAAI,EAAEE,QAAQ,EAAED,YAAY,CAAE;UAEjF,IAAKE,OAAM,GAAGL,gBAAgB,EAAG;UAEjCI,QAAQ,CAAC/0F,YAAY,CAAE,IAAI,CAACyK,WAAW,CAAE,CAAC,CAAC;;UAE3C,IAAM+T,SAAQ,GAAGqY,SAAS,CAACtkB,GAAG,CAACF,MAAM,CAACjiB,UAAU,CAAE2kG,QAAQ,CAAE;UAE5D,IAAKv2E,SAAQ,GAAGqY,SAAS,CAAC5c,IAAI,IAAIuE,SAAQ,GAAGqY,SAAS,CAAC3c,GAAG,EAAG;UAE7D4c,UAAU,CAACl/C,IAAI,CAAE;YAEhB4mC,QAAQ,EAAEA,SAAQ;YAClB;YACA;YACAvQ,KAAK,EAAE6mF,YAAY,CAACxmG,KAAK,EAAE,CAAC0R,YAAY,CAAE,IAAI,CAACyK,WAAW,CAAE;YAC5D5iB,KAAK,EAAEzP,IAAC;YACRi/C,IAAI,EAAE,IAAI;YACVD,SAAS,EAAE,IAAI;YACfh+C,MAAM,EAAE;UAET,CAAC,CAAE;QAEJ;MAED;IAED;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EAED,SAAAkkD,mBAAA,EAAqB;MAEpB,IAAMnoB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMqiB,eAAe,GAAGriB,QAAQ,CAACqiB,eAAe;MAChD,IAAMz3C,IAAI,GAAGnH,MAAM,CAACmH,IAAI,CAAEy3C,eAAe,CAAE;MAE3C,IAAKz3C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAM45C,cAAc,GAAGpB,eAAe,CAAEz3C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAK64C,cAAc,KAAKl7C,SAAS,EAAG;UAEnC,IAAI,CAAC6/C,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAIrtC,CAAC,GAAG,CAAC,EAAEstC,EAAE,GAAG7E,cAAc,CAAC55C,MAAM,EAAEmR,CAAC,GAAGstC,EAAE,EAAEttC,CAAC,EAAG,EAAG;YAE3D,IAAM5Q,IAAI,GAAGq5C,cAAc,CAAEzoC,CAAC,CAAE,CAAC5Q,IAAI,IAAI6C,MAAM,CAAE+N,CAAC,CAAE;YAEpD,IAAI,CAACotC,qBAAqB,CAAC9+C,IAAI,CAAE,CAAC,CAAE;YACpC,IAAI,CAAC++C,qBAAqB,CAAEj+C,IAAI,CAAE,GAAG4Q,CAAC;UAEvC;QAED;MAED;IAED;EAAC;EAAA,OAAA8qG,IAAA;AAAA,EA1MiB53E,QAAQ;AAAA3qC,OAAA,CAAAuiH,IAAA,GAAAA,IAAA;AA8M3B,IAAMa,MAAM,GAAG,aAAc,IAAI/rF,OAAO,EAAE;AAC1C,IAAMgsF,IAAI,GAAG,aAAc,IAAIhsF,OAAO,EAAE;AAAC,IAEnCisF,YAAY,0BAAAC,KAAA;EAAAj4F,SAAA,CAAAg4F,YAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAAh4F,YAAA,CAAA83F,YAAA;EAEjB,SAAAA,aAAa7mF,QAAQ,EAAEuT,QAAQ,EAAG;IAAA,IAAAyzE,OAAA;IAAA36G,eAAA,OAAAw6G,YAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAhhH,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzByzE,OAAA,CAAKtM,cAAc,GAAG,IAAI;IAE1BsM,OAAA,CAAKlhH,IAAI,GAAG,cAAc;IAAC,OAAAkhH,OAAA;EAE5B;EAACn6G,YAAA,CAAAg6G,YAAA;IAAA9iH,GAAA;IAAAE,KAAA,EAED,SAAAiiH,qBAAA,EAAuB;MAEtB,IAAMlmF,QAAQ,GAAG,IAAI,CAACA,QAAQ;;MAE9B;;MAEA,IAAKA,QAAQ,CAACzmB,KAAK,KAAK,IAAI,EAAG;QAE9B,IAAM4rC,iBAAiB,GAAGnlB,QAAQ,CAACC,UAAU,CAACC,QAAQ;QACtD,IAAMimF,aAAa,GAAG,EAAE;QAExB,KAAM,IAAIr8G,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGurC,iBAAiB,CAACzvB,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,IAAI,CAAC,EAAG;UAE7D68G,MAAM,CAAC/jG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,CAAC,CAAE;UAClD88G,IAAI,CAAChkG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,CAAC,GAAG,CAAC,CAAE;UAEpDq8G,aAAa,CAAEr8G,CAAC,CAAE,GAAKA,CAAC,KAAK,CAAC,GAAK,CAAC,GAAGq8G,aAAa,CAAEr8G,CAAC,GAAG,CAAC,CAAE;UAC7Dq8G,aAAa,CAAEr8G,CAAC,GAAG,CAAC,CAAE,GAAGq8G,aAAa,CAAEr8G,CAAC,CAAE,GAAG68G,MAAM,CAAC7kG,UAAU,CAAE8kG,IAAI,CAAE;QAExE;QAEA5mF,QAAQ,CAAC8iB,YAAY,CAAE,cAAc,EAAE,IAAI3B,sBAAsB,CAAEglE,aAAa,EAAE,CAAC,CAAE,CAAE;MAExF,CAAC,MAAM;QAEN1nG,OAAO,CAACC,IAAI,CAAE,uGAAuG,CAAE;MAExH;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAmoG,YAAA;AAAA,EA3CyBf,IAAI;AAAAviH,OAAA,CAAAsjH,YAAA,GAAAA,YAAA;AAAA,IA+CzBI,QAAQ,0BAAAC,MAAA;EAAAr4F,SAAA,CAAAo4F,QAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAp4F,YAAA,CAAAk4F,QAAA;EAEb,SAAAA,SAAajnF,QAAQ,EAAEuT,QAAQ,EAAG;IAAA,IAAA6zE,OAAA;IAAA/6G,eAAA,OAAA46G,QAAA;IAEjCG,OAAA,GAAAD,QAAA,CAAAphH,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzB6zE,OAAA,CAAKzM,UAAU,GAAG,IAAI;IAEtByM,OAAA,CAAKthH,IAAI,GAAG,UAAU;IAAC,OAAAshH,OAAA;EAExB;EAAC,OAAAv6G,YAAA,CAAAo6G,QAAA;AAAA,EAVqBnB,IAAI;AAAAviH,OAAA,CAAA0jH,QAAA,GAAAA,QAAA;AAAA,IAcrBh8B,cAAc,0BAAAo8B,UAAA;EAAAx4F,SAAA,CAAAo8D,cAAA,EAAAo8B,UAAA;EAAA,IAAAC,QAAA,GAAAv4F,YAAA,CAAAk8D,cAAA;EAEnB,SAAAA,eAAah4C,UAAU,EAAG;IAAA,IAAAs0E,OAAA;IAAAl7G,eAAA,OAAA4+E,cAAA;IAEzBs8B,OAAA,GAAAD,QAAA,CAAAvhH,IAAA;IAEAwhH,OAAA,CAAKhV,gBAAgB,GAAG,IAAI;IAE5BgV,OAAA,CAAKzhH,IAAI,GAAG,gBAAgB;IAE5ByhH,OAAA,CAAKv+F,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE;IAElC09F,OAAA,CAAKzsE,GAAG,GAAG,IAAI;IAEfysE,OAAA,CAAKvsE,QAAQ,GAAG,IAAI;IAEpBusE,OAAA,CAAK38F,IAAI,GAAG,CAAC;IACb28F,OAAA,CAAKxqE,eAAe,GAAG,IAAI;IAE3BwqE,OAAA,CAAK/pE,GAAG,GAAG,IAAI;IAEf+pE,OAAA,CAAKnuE,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAs0E,OAAA;EAE9B;EAAC16G,YAAA,CAAAo+E,cAAA;IAAAlnF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAgtC,cAAA,CAAAvnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAAC8xB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACE,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACpwB,IAAI,GAAGhB,MAAM,CAACgB,IAAI;MACvB,IAAI,CAACmyB,eAAe,GAAGnzB,MAAM,CAACmzB,eAAe;MAE7C,IAAI,CAACS,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAytC,cAAA;AAAA,EA1C2Bz0C,QAAQ;AAAAjzC,OAAA,CAAA0nF,cAAA,GAAAA,cAAA;AA8CrC,IAAMu8B,cAAc,GAAG,aAAc,IAAI5gF,OAAO,EAAE;AAClD,IAAM6gF,IAAI,GAAG,aAAc,IAAI3jF,GAAG,EAAE;AACpC,IAAM4jF,OAAO,GAAG,aAAc,IAAI3kF,MAAM,EAAE;AAC1C,IAAM4kF,WAAW,GAAG,aAAc,IAAI/sF,OAAO,EAAE;AAAC,IAE1CgtF,MAAM,0BAAAC,WAAA;EAAAh5F,SAAA,CAAA+4F,MAAA,EAAAC,WAAA;EAAA,IAAAC,QAAA,GAAA/4F,YAAA,CAAA64F,MAAA;EAEX,SAAAA,OAAa5nF,QAAQ,GAAG,IAAIgiB,cAAc,EAAE,EAAEzO,QAAQ,GAAG,IAAI03C,cAAc,EAAE,EAAG;IAAA,IAAA88B,OAAA;IAAA17G,eAAA,OAAAu7G,MAAA;IAE/EG,OAAA,GAAAD,QAAA,CAAA/hH,IAAA;IAEAgiH,OAAA,CAAK/0E,QAAQ,GAAG,IAAI;IAEpB+0E,OAAA,CAAKjiH,IAAI,GAAG,QAAQ;IAEpBiiH,OAAA,CAAK/nF,QAAQ,GAAGA,QAAQ;IACxB+nF,OAAA,CAAKx0E,QAAQ,GAAGA,QAAQ;IAExBw0E,OAAA,CAAK5/D,kBAAkB,EAAE;IAAC,OAAA4/D,OAAA;EAE3B;EAACl7G,YAAA,CAAA+6G,MAAA;IAAA7jH,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA2pE,MAAA,CAAAlkH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACL,QAAQ,GAAG3pB,MAAM,CAAC2pB,QAAQ;MAC/B,IAAI,CAACvT,QAAQ,GAAGpW,MAAM,CAACoW,QAAQ;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAj8B,GAAA;IAAAE,KAAA,EAED,SAAAutC,QAAS+W,SAAS,EAAEC,UAAU,EAAG;MAEhC,IAAMxoB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM7D,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAM4tE,SAAS,GAAGxhD,SAAS,CAAC+pB,MAAM,CAACs1C,MAAM,CAAC7d,SAAS;MACnD,IAAMtnD,SAAS,GAAGziB,QAAQ,CAACyiB,SAAS;;MAEpC;;MAEA,IAAKziB,QAAQ,CAACwiB,cAAc,KAAK,IAAI,EAAGxiB,QAAQ,CAACsjB,qBAAqB,EAAE;MAExEokE,OAAO,CAACznG,IAAI,CAAE+f,QAAQ,CAACwiB,cAAc,CAAE;MACvCklE,OAAO,CAACh2F,YAAY,CAAEyK,WAAW,CAAE;MACnCurF,OAAO,CAACpqF,MAAM,IAAIysE,SAAS;MAE3B,IAAKxhD,SAAS,CAACtkB,GAAG,CAACrD,gBAAgB,CAAE8mF,OAAO,CAAE,KAAK,KAAK,EAAG;;MAE3D;;MAEAF,cAAc,CAACvnG,IAAI,CAAEkc,WAAW,CAAE,CAAChW,MAAM,EAAE;MAC3CshG,IAAI,CAACxnG,IAAI,CAAEsoC,SAAS,CAACtkB,GAAG,CAAE,CAACvS,YAAY,CAAE81F,cAAc,CAAE;MAEzD,IAAMpB,cAAc,GAAGrc,SAAS,IAAK,CAAE,IAAI,CAACxiF,KAAK,CAACrM,CAAC,GAAG,IAAI,CAACqM,KAAK,CAAC/L,CAAC,GAAG,IAAI,CAAC+L,KAAK,CAAC8J,CAAC,IAAK,CAAC,CAAE;MACzF,IAAMg1F,gBAAgB,GAAGD,cAAc,GAAGA,cAAc;MAExD,IAAM7sG,KAAK,GAAGymB,QAAQ,CAACzmB,KAAK;MAC5B,IAAM0mB,UAAU,GAAGD,QAAQ,CAACC,UAAU;MACtC,IAAMklB,iBAAiB,GAAGllB,UAAU,CAACC,QAAQ;MAE7C,IAAK3mB,KAAK,KAAK,IAAI,EAAG;QAErB,IAAMmpC,KAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE4nC,SAAS,CAACC,KAAK,CAAE;QAC5C,IAAMkG,GAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACmc,KAAK,EAAI+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI;QAE1E,KAAM,IAAI5rB,CAAC,GAAG44C,KAAK,EAAE7sB,EAAE,GAAG+yB,GAAG,EAAE9+C,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAE7C,IAAM4T,CAAC,GAAGnE,KAAK,CAACuJ,IAAI,CAAEhZ,CAAC,CAAE;UAEzB69G,WAAW,CAAC/kG,mBAAmB,CAAEuiC,iBAAiB,EAAEznC,CAAC,CAAE;UAEvDsqG,SAAS,CAAEL,WAAW,EAAEjqG,CAAC,EAAE2oG,gBAAgB,EAAElqF,WAAW,EAAEosB,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAE;QAExF;MAED,CAAC,MAAM;QAEN,IAAM9F,OAAK,GAAG1oC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE4nC,SAAS,CAACC,KAAK,CAAE;QAC5C,IAAMkG,KAAG,GAAG5uC,IAAI,CAACY,GAAG,CAAEuqC,iBAAiB,CAACzvB,KAAK,EAAI+sB,SAAS,CAACC,KAAK,GAAGD,SAAS,CAAC/sB,KAAK,CAAI;QAEtF,KAAM,IAAI5rB,IAAC,GAAG44C,OAAK,EAAE9oC,CAAC,GAAGgvC,KAAG,EAAE9+C,IAAC,GAAG8P,CAAC,EAAE9P,IAAC,EAAG,EAAG;UAE3C69G,WAAW,CAAC/kG,mBAAmB,CAAEuiC,iBAAiB,EAAEr7C,IAAC,CAAE;UAEvDk+G,SAAS,CAAEL,WAAW,EAAE79G,IAAC,EAAEu8G,gBAAgB,EAAElqF,WAAW,EAAEosB,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAE;QAExF;MAED;IAED;EAAC;IAAAzkD,GAAA;IAAAE,KAAA,EAED,SAAAkkD,mBAAA,EAAqB;MAEpB,IAAMnoB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMqiB,eAAe,GAAGriB,QAAQ,CAACqiB,eAAe;MAChD,IAAMz3C,IAAI,GAAGnH,MAAM,CAACmH,IAAI,CAAEy3C,eAAe,CAAE;MAE3C,IAAKz3C,IAAI,CAACf,MAAM,GAAG,CAAC,EAAG;QAEtB,IAAM45C,cAAc,GAAGpB,eAAe,CAAEz3C,IAAI,CAAE,CAAC,CAAE,CAAE;QAEnD,IAAK64C,cAAc,KAAKl7C,SAAS,EAAG;UAEnC,IAAI,CAAC6/C,qBAAqB,GAAG,EAAE;UAC/B,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;UAE/B,KAAM,IAAIrtC,CAAC,GAAG,CAAC,EAAEstC,EAAE,GAAG7E,cAAc,CAAC55C,MAAM,EAAEmR,CAAC,GAAGstC,EAAE,EAAEttC,CAAC,EAAG,EAAG;YAE3D,IAAM5Q,IAAI,GAAGq5C,cAAc,CAAEzoC,CAAC,CAAE,CAAC5Q,IAAI,IAAI6C,MAAM,CAAE+N,CAAC,CAAE;YAEpD,IAAI,CAACotC,qBAAqB,CAAC9+C,IAAI,CAAE,CAAC,CAAE;YACpC,IAAI,CAAC++C,qBAAqB,CAAEj+C,IAAI,CAAE,GAAG4Q,CAAC;UAEvC;QAED;MAED;IAED;EAAC;EAAA,OAAA4sG,MAAA;AAAA,EAtHmB15E,QAAQ;AAAA3qC,OAAA,CAAAqkH,MAAA,GAAAA,MAAA;AA0H7B,SAASI,SAASA,CAAEroF,KAAK,EAAEpmB,KAAK,EAAE8sG,gBAAgB,EAAElqF,WAAW,EAAEosB,SAAS,EAAEC,UAAU,EAAE19C,MAAM,EAAG;EAEhG,IAAMm9G,kBAAkB,GAAGR,IAAI,CAACljF,iBAAiB,CAAE5E,KAAK,CAAE;EAE1D,IAAKsoF,kBAAkB,GAAG5B,gBAAgB,EAAG;IAE5C,IAAM6B,cAAc,GAAG,IAAIttF,OAAO,EAAE;IAEpC6sF,IAAI,CAACpjF,mBAAmB,CAAE1E,KAAK,EAAEuoF,cAAc,CAAE;IACjDA,cAAc,CAACx2F,YAAY,CAAEyK,WAAW,CAAE;IAE1C,IAAM+T,QAAQ,GAAGqY,SAAS,CAACtkB,GAAG,CAACF,MAAM,CAACjiB,UAAU,CAAEomG,cAAc,CAAE;IAElE,IAAKh4E,QAAQ,GAAGqY,SAAS,CAAC5c,IAAI,IAAIuE,QAAQ,GAAGqY,SAAS,CAAC3c,GAAG,EAAG;IAE7D4c,UAAU,CAACl/C,IAAI,CAAE;MAEhB4mC,QAAQ,EAAEA,QAAQ;MAClBi4E,aAAa,EAAEnuG,IAAI,CAAC0H,IAAI,CAAEumG,kBAAkB,CAAE;MAC9CtoF,KAAK,EAAEuoF,cAAc;MACrB3uG,KAAK,EAAEA,KAAK;MACZwvC,IAAI,EAAE,IAAI;MACVj+C,MAAM,EAAEA;IAET,CAAC,CAAE;EAEJ;AAED;AAAC,IAEKs9G,YAAY,0BAAAC,SAAA;EAAAx5F,SAAA,CAAAu5F,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAv5F,YAAA,CAAAq5F,YAAA;EAEjB,SAAAA,aAAaG,KAAK,EAAEt5F,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU,EAAG;IAAA,IAAAg5F,OAAA;IAAAn8G,eAAA,OAAA+7G,YAAA;IAE3FI,OAAA,GAAAF,QAAA,CAAAviH,IAAA,OAAOwiH,KAAK,EAAEt5F,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU;IAEnFg5F,OAAA,CAAK38B,cAAc,GAAG,IAAI;IAE1B28B,OAAA,CAAKl5F,SAAS,GAAGA,SAAS,KAAK/mB,SAAS,GAAG+mB,SAAS,GAAGjd,YAAY;IACnEm2G,OAAA,CAAKn5F,SAAS,GAAGA,SAAS,KAAK9mB,SAAS,GAAG8mB,SAAS,GAAGhd,YAAY;IAEnEm2G,OAAA,CAAKv4F,eAAe,GAAG,KAAK;IAE5B,IAAM05B,KAAK,GAAA/5B,sBAAA,CAAA44F,OAAA,CAAO;IAElB,SAASC,WAAWA,CAAA,EAAG;MAEtB9+D,KAAK,CAAC94B,WAAW,GAAG,IAAI;MACxB03F,KAAK,CAACG,yBAAyB,CAAED,WAAW,CAAE;IAE/C;IAEA,IAAK,2BAA2B,IAAIF,KAAK,EAAG;MAE3CA,KAAK,CAACG,yBAAyB,CAAED,WAAW,CAAE;IAE/C;IAAC,OAAAD,OAAA;EAEF;EAAC37G,YAAA,CAAAu7G,YAAA;IAAArkH,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAACwiB,KAAK,CAAE,CAAC1M,IAAI,CAAE,IAAI,CAAE;IAEvD;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER,IAAM8xF,KAAK,GAAG,IAAI,CAAC57F,KAAK;MACxB,IAAMg8F,qBAAqB,IAAG,2BAA2B,IAAIJ,KAAK;MAElE,IAAKI,qBAAqB,KAAK,KAAK,IAAIJ,KAAK,CAACK,UAAU,IAAIL,KAAK,CAACM,iBAAiB,EAAG;QAErF,IAAI,CAACh4F,WAAW,GAAG,IAAI;MAExB;IAED;EAAC;EAAA,OAAAu3F,YAAA;AAAA,EA/CyBz5F,OAAO;AAAAprB,OAAA,CAAA6kH,YAAA,GAAAA,YAAA;AAAA,IAmD5BU,kBAAkB,0BAAAC,SAAA;EAAAl6F,SAAA,CAAAi6F,kBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAj6F,YAAA,CAAA+5F,kBAAA;EAEvB,SAAAA,mBAAa97F,KAAK,EAAEC,MAAM,EAAEsC,MAAM,EAAG;IAAA,IAAA05F,OAAA;IAAA58G,eAAA,OAAAy8G,kBAAA;IAEpCG,OAAA,GAAAD,QAAA,CAAAjjH,IAAA,OAAO;MAAEinB,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA;IAAO,CAAC;IAExBg8F,OAAA,CAAK9qB,oBAAoB,GAAG,IAAI;IAEhC8qB,OAAA,CAAK15F,MAAM,GAAGA,MAAM;IAEpB05F,OAAA,CAAK55F,SAAS,GAAGrd,aAAa;IAC9Bi3G,OAAA,CAAK35F,SAAS,GAAGtd,aAAa;IAE9Bi3G,OAAA,CAAKh5F,eAAe,GAAG,KAAK;IAE5Bg5F,OAAA,CAAKp4F,WAAW,GAAG,IAAI;IAAC,OAAAo4F,OAAA;EAEzB;EAAC,OAAAp8G,YAAA,CAAAi8G,kBAAA;AAAA,EAjB+Bn6F,OAAO;AAAAprB,OAAA,CAAAulH,kBAAA,GAAAA,kBAAA;AAAA,IAqBlCI,iBAAiB,0BAAAC,SAAA;EAAAt6F,SAAA,CAAAq6F,iBAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAr6F,YAAA,CAAAm6F,iBAAA;EAEtB,SAAAA,kBAAar5F,OAAO,EAAE7C,KAAK,EAAEC,MAAM,EAAEsC,MAAM,EAAEzpB,IAAI,EAAEmpB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEE,UAAU,EAAEC,QAAQ,EAAG;IAAA,IAAA45F,OAAA;IAAAh9G,eAAA,OAAA68G,iBAAA;IAEtHG,OAAA,GAAAD,QAAA,CAAArjH,IAAA,OAAO,IAAI,EAAEkpB,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU,EAAEC,QAAQ;IAE5F45F,OAAA,CAAKjrB,mBAAmB,GAAG,IAAI;IAE/BirB,OAAA,CAAK18F,KAAK,GAAG;MAAEK,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAC7Co8F,OAAA,CAAKx5F,OAAO,GAAGA,OAAO;;IAEtB;IACA;;IAEAw5F,OAAA,CAAKl5F,KAAK,GAAG,KAAK;;IAElB;IACA;;IAEAk5F,OAAA,CAAKp5F,eAAe,GAAG,KAAK;IAAC,OAAAo5F,OAAA;EAE9B;EAAC,OAAAx8G,YAAA,CAAAq8G,iBAAA;AAAA,EArB8Bv6F,OAAO;AAAAprB,OAAA,CAAA2lH,iBAAA,GAAAA,iBAAA;AAAA,IAyBjCI,aAAa,0BAAAC,SAAA;EAAA16F,SAAA,CAAAy6F,aAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAz6F,YAAA,CAAAu6F,aAAA;EAElB,SAAAA,cAAav8F,MAAM,EAAEkC,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU,EAAG;IAAA,IAAAi6F,OAAA;IAAAp9G,eAAA,OAAAi9G,aAAA;IAE5FG,OAAA,GAAAD,QAAA,CAAAzjH,IAAA,OAAOgnB,MAAM,EAAEkC,OAAO,EAAEE,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEzpB,IAAI,EAAE0pB,UAAU;IAEpFi6F,OAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BD,OAAA,CAAK54F,WAAW,GAAG,IAAI;IAAC,OAAA44F,OAAA;EAEzB;EAAC,OAAA58G,YAAA,CAAAy8G,aAAA;AAAA,EAV0B36F,OAAO;AAcnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BAprB,OAAA,CAAA+lH,aAAA,GAAAA,aAAA;AAAA,IA8BMK,KAAK;EAEV,SAAAA,MAAA,EAAc;IAAAt9G,eAAA,OAAAs9G,KAAA;IAEb,IAAI,CAAC7jH,IAAI,GAAG,OAAO;IAEnB,IAAI,CAAC8jH,kBAAkB,GAAG,GAAG;EAE9B;;EAEA;EACA;EAAA/8G,YAAA,CAAA88G,KAAA;IAAA5lH,GAAA;IAAAE,KAAA,EAEA,SAAA4lH,SAAA,CAAU;IAAA,EAA0B;MAEnCprG,OAAO,CAACC,IAAI,CAAE,2CAA2C,CAAE;MAC3D,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAA3a,GAAA;IAAAE,KAAA,EAEA,SAAA6lH,WAAY9rF,CAAC,EAAE+rF,cAAc,EAAG;MAE/B,IAAMruG,CAAC,GAAG,IAAI,CAACsuG,cAAc,CAAEhsF,CAAC,CAAE;MAClC,OAAO,IAAI,CAAC6rF,QAAQ,CAAEnuG,CAAC,EAAEquG,cAAc,CAAE;IAE1C;;IAEA;EAAA;IAAAhmH,GAAA;IAAAE,KAAA,EAEA,SAAAgmH,UAAWC,SAAS,GAAG,CAAC,EAAG;MAE1B,IAAMprF,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAI/Y,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAImkG,SAAS,EAAEnkG,CAAC,EAAG,EAAG;QAEvC+Y,MAAM,CAACx1B,IAAI,CAAE,IAAI,CAACugH,QAAQ,CAAE9jG,CAAC,GAAGmkG,SAAS,CAAE,CAAE;MAE9C;MAEA,OAAOprF,MAAM;IAEd;;IAEA;EAAA;IAAA/6B,GAAA;IAAAE,KAAA,EAEA,SAAAkmH,gBAAiBD,SAAS,GAAG,CAAC,EAAG;MAEhC,IAAMprF,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAI/Y,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAImkG,SAAS,EAAEnkG,CAAC,EAAG,EAAG;QAEvC+Y,MAAM,CAACx1B,IAAI,CAAE,IAAI,CAACwgH,UAAU,CAAE/jG,CAAC,GAAGmkG,SAAS,CAAE,CAAE;MAEhD;MAEA,OAAOprF,MAAM;IAEd;;IAEA;EAAA;IAAA/6B,GAAA;IAAAE,KAAA,EAEA,SAAAmmH,UAAA,EAAY;MAEX,IAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,EAAE;MACjC,OAAOD,OAAO,CAAEA,OAAO,CAACxgH,MAAM,GAAG,CAAC,CAAE;IAErC;;IAEA;EAAA;IAAA9F,GAAA;IAAAE,KAAA,EAEA,SAAAqmH,WAAYJ,SAAS,GAAG,IAAI,CAACN,kBAAkB,EAAG;MAEjD,IAAK,IAAI,CAACW,eAAe,IACtB,IAAI,CAACA,eAAe,CAAC1gH,MAAM,KAAKqgH,SAAS,GAAG,CAAG,IACjD,CAAE,IAAI,CAACr5F,WAAW,EAAG;QAErB,OAAO,IAAI,CAAC05F,eAAe;MAE5B;MAEA,IAAI,CAAC15F,WAAW,GAAG,KAAK;MAExB,IAAM8iB,KAAK,GAAG,EAAE;MAChB,IAAI62E,OAAO;QAAEC,IAAI,GAAG,IAAI,CAACZ,QAAQ,CAAE,CAAC,CAAE;MACtC,IAAIr1C,GAAG,GAAG,CAAC;MAEX7gC,KAAK,CAACrqC,IAAI,CAAE,CAAC,CAAE;MAEf,KAAM,IAAIogB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwgG,SAAS,EAAExgG,CAAC,EAAG,EAAG;QAEvC8gG,OAAO,GAAG,IAAI,CAACX,QAAQ,CAAEngG,CAAC,GAAGwgG,SAAS,CAAE;QACxC11C,GAAG,IAAIg2C,OAAO,CAAC1oG,UAAU,CAAE2oG,IAAI,CAAE;QACjC92E,KAAK,CAACrqC,IAAI,CAAEkrE,GAAG,CAAE;QACjBi2C,IAAI,GAAGD,OAAO;MAEf;MAEA,IAAI,CAACD,eAAe,GAAG52E,KAAK;MAE5B,OAAOA,KAAK,CAAC,CAAC;IAEf;EAAC;IAAA5vC,GAAA;IAAAE,KAAA,EAED,SAAAymH,iBAAA,EAAmB;MAElB,IAAI,CAAC75F,WAAW,GAAG,IAAI;MACvB,IAAI,CAACy5F,UAAU,EAAE;IAElB;;IAEA;EAAA;IAAAvmH,GAAA;IAAAE,KAAA,EAEA,SAAA+lH,eAAgBhsF,CAAC,EAAEkS,QAAQ,EAAG;MAE7B,IAAMy6E,UAAU,GAAG,IAAI,CAACL,UAAU,EAAE;MAEpC,IAAIxgH,CAAC,GAAG,CAAC;MACT,IAAM+rB,EAAE,GAAG80F,UAAU,CAAC9gH,MAAM;MAE5B,IAAI+gH,eAAe,CAAC,CAAC;;MAErB,IAAK16E,QAAQ,EAAG;QAEf06E,eAAe,GAAG16E,QAAQ;MAE3B,CAAC,MAAM;QAEN06E,eAAe,GAAG5sF,CAAC,GAAG2sF,UAAU,CAAE90F,EAAE,GAAG,CAAC,CAAE;MAE3C;;MAEA;;MAEA,IAAIzZ,GAAG,GAAG,CAAC;QAAEC,IAAI,GAAGwZ,EAAE,GAAG,CAAC;QAAEg1F,UAAU;MAEtC,OAAQzuG,GAAG,IAAIC,IAAI,EAAG;QAErBvS,CAAC,GAAGkQ,IAAI,CAACsC,KAAK,CAAEF,GAAG,GAAG,CAAEC,IAAI,GAAGD,GAAG,IAAK,CAAC,CAAE,CAAC,CAAC;;QAE5CyuG,UAAU,GAAGF,UAAU,CAAE7gH,CAAC,CAAE,GAAG8gH,eAAe;QAE9C,IAAKC,UAAU,GAAG,CAAC,EAAG;UAErBzuG,GAAG,GAAGtS,CAAC,GAAG,CAAC;QAEZ,CAAC,MAAM,IAAK+gH,UAAU,GAAG,CAAC,EAAG;UAE5BxuG,IAAI,GAAGvS,CAAC,GAAG,CAAC;QAEb,CAAC,MAAM;UAENuS,IAAI,GAAGvS,CAAC;UACR;;UAEA;QAED;MAED;;MAEAA,CAAC,GAAGuS,IAAI;MAER,IAAKsuG,UAAU,CAAE7gH,CAAC,CAAE,KAAK8gH,eAAe,EAAG;QAE1C,OAAO9gH,CAAC,IAAK+rB,EAAE,GAAG,CAAC,CAAE;MAEtB;;MAEA;;MAEA,IAAMi1F,YAAY,GAAGH,UAAU,CAAE7gH,CAAC,CAAE;MACpC,IAAMihH,WAAW,GAAGJ,UAAU,CAAE7gH,CAAC,GAAG,CAAC,CAAE;MAEvC,IAAMkhH,aAAa,GAAGD,WAAW,GAAGD,YAAY;;MAEhD;;MAEA,IAAMG,eAAe,GAAG,CAAEL,eAAe,GAAGE,YAAY,IAAKE,aAAa;;MAE1E;;MAEA,IAAMtvG,CAAC,GAAG,CAAE5R,CAAC,GAAGmhH,eAAe,KAAOp1F,EAAE,GAAG,CAAC,CAAE;MAE9C,OAAOna,CAAC;IAET;;IAEA;IACA;IACA;IACA;EAAA;IAAA3X,GAAA;IAAAE,KAAA,EAEA,SAAAinH,WAAYxvG,CAAC,EAAEquG,cAAc,EAAG;MAE/B,IAAMt+F,KAAK,GAAG,MAAM;MACpB,IAAI8Z,EAAE,GAAG7pB,CAAC,GAAG+P,KAAK;MAClB,IAAI0/F,EAAE,GAAGzvG,CAAC,GAAG+P,KAAK;;MAElB;;MAEA,IAAK8Z,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;MACpB,IAAK4lF,EAAE,GAAG,CAAC,EAAGA,EAAE,GAAG,CAAC;MAEpB,IAAMC,GAAG,GAAG,IAAI,CAACvB,QAAQ,CAAEtkF,EAAE,CAAE;MAC/B,IAAM8lF,GAAG,GAAG,IAAI,CAACxB,QAAQ,CAAEsB,EAAE,CAAE;MAE/B,IAAM9nE,OAAO,GAAG0mE,cAAc,KAAQqB,GAAG,CAAC5rG,SAAS,GAAK,IAAIF,OAAO,EAAE,GAAG,IAAIsb,OAAO,EAAE,CAAE;MAEvFyoB,OAAO,CAACpjC,IAAI,CAAEorG,GAAG,CAAE,CAAC9qG,GAAG,CAAE6qG,GAAG,CAAE,CAACnsG,SAAS,EAAE;MAE1C,OAAOokC,OAAO;IAEf;EAAC;IAAAt/C,GAAA;IAAAE,KAAA,EAED,SAAAqnH,aAActtF,CAAC,EAAE+rF,cAAc,EAAG;MAEjC,IAAMruG,CAAC,GAAG,IAAI,CAACsuG,cAAc,CAAEhsF,CAAC,CAAE;MAClC,OAAO,IAAI,CAACktF,UAAU,CAAExvG,CAAC,EAAEquG,cAAc,CAAE;IAE5C;EAAC;IAAAhmH,GAAA;IAAAE,KAAA,EAED,SAAAsnH,oBAAqBC,QAAQ,EAAEC,MAAM,EAAG;MAEvC;;MAEA,IAAMvuF,MAAM,GAAG,IAAItC,OAAO,EAAE;MAE5B,IAAMqpB,QAAQ,GAAG,EAAE;MACnB,IAAMH,OAAO,GAAG,EAAE;MAClB,IAAM4nE,SAAS,GAAG,EAAE;MAEpB,IAAMC,GAAG,GAAG,IAAI/wF,OAAO,EAAE;MACzB,IAAMgxF,GAAG,GAAG,IAAIhlF,OAAO,EAAE;;MAEzB;;MAEA,KAAM,IAAI98B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0hH,QAAQ,EAAE1hH,CAAC,EAAG,EAAG;QAEtC,IAAMk0B,CAAC,GAAGl0B,CAAC,GAAG0hH,QAAQ;QAEtBvnE,QAAQ,CAAEn6C,CAAC,CAAE,GAAG,IAAI,CAACwhH,YAAY,CAAEttF,CAAC,EAAE,IAAIpD,OAAO,EAAE,CAAE;MAEtD;;MAEA;MACA;;MAEAkpB,OAAO,CAAE,CAAC,CAAE,GAAG,IAAIlpB,OAAO,EAAE;MAC5B8wF,SAAS,CAAE,CAAC,CAAE,GAAG,IAAI9wF,OAAO,EAAE;MAC9B,IAAIhgB,GAAG,GAAGrN,MAAM,CAACs+G,SAAS;MAC1B,IAAM7kG,EAAE,GAAGhN,IAAI,CAACgC,GAAG,CAAEioC,QAAQ,CAAE,CAAC,CAAE,CAAC/oC,CAAC,CAAE;MACtC,IAAM+L,EAAE,GAAGjN,IAAI,CAACgC,GAAG,CAAEioC,QAAQ,CAAE,CAAC,CAAE,CAACzoC,CAAC,CAAE;MACtC,IAAMswG,EAAE,GAAG9xG,IAAI,CAACgC,GAAG,CAAEioC,QAAQ,CAAE,CAAC,CAAE,CAAC5yB,CAAC,CAAE;MAEtC,IAAKrK,EAAE,IAAIpM,GAAG,EAAG;QAEhBA,GAAG,GAAGoM,EAAE;QACRkW,MAAM,CAAC1e,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEtB;MAEA,IAAKyI,EAAE,IAAIrM,GAAG,EAAG;QAEhBA,GAAG,GAAGqM,EAAE;QACRiW,MAAM,CAAC1e,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEtB;MAEA,IAAKstG,EAAE,IAAIlxG,GAAG,EAAG;QAEhBsiB,MAAM,CAAC1e,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEtB;MAEAmtG,GAAG,CAACtvF,YAAY,CAAE4nB,QAAQ,CAAE,CAAC,CAAE,EAAE/mB,MAAM,CAAE,CAACje,SAAS,EAAE;MAErD6kC,OAAO,CAAE,CAAC,CAAE,CAACznB,YAAY,CAAE4nB,QAAQ,CAAE,CAAC,CAAE,EAAE0nE,GAAG,CAAE;MAC/CD,SAAS,CAAE,CAAC,CAAE,CAACrvF,YAAY,CAAE4nB,QAAQ,CAAE,CAAC,CAAE,EAAEH,OAAO,CAAE,CAAC,CAAE,CAAE;;MAG1D;;MAEA,KAAM,IAAIh6C,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI0hH,QAAQ,EAAE1hH,IAAC,EAAG,EAAG;QAEtCg6C,OAAO,CAAEh6C,IAAC,CAAE,GAAGg6C,OAAO,CAAEh6C,IAAC,GAAG,CAAC,CAAE,CAACkW,KAAK,EAAE;QAEvC0rG,SAAS,CAAE5hH,IAAC,CAAE,GAAG4hH,SAAS,CAAE5hH,IAAC,GAAG,CAAC,CAAE,CAACkW,KAAK,EAAE;QAE3C2rG,GAAG,CAACtvF,YAAY,CAAE4nB,QAAQ,CAAEn6C,IAAC,GAAG,CAAC,CAAE,EAAEm6C,QAAQ,CAAEn6C,IAAC,CAAE,CAAE;QAEpD,IAAK6hH,GAAG,CAAC9hH,MAAM,EAAE,GAAG0D,MAAM,CAACiqB,OAAO,EAAG;UAEpCm0F,GAAG,CAAC1sG,SAAS,EAAE;UAEf,IAAMwI,KAAK,GAAGzN,IAAI,CAAC4X,IAAI,CAAEjX,KAAK,CAAEspC,QAAQ,CAAEn6C,IAAC,GAAG,CAAC,CAAE,CAACyX,GAAG,CAAE0iC,QAAQ,CAAEn6C,IAAC,CAAE,CAAE,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC,CAAC;;UAEpFg6C,OAAO,CAAEh6C,IAAC,CAAE,CAAC4nB,YAAY,CAAEk6F,GAAG,CAACvhF,gBAAgB,CAAEshF,GAAG,EAAElkG,KAAK,CAAE,CAAE;QAEhE;QAEAikG,SAAS,CAAE5hH,IAAC,CAAE,CAACuyB,YAAY,CAAE4nB,QAAQ,CAAEn6C,IAAC,CAAE,EAAEg6C,OAAO,CAAEh6C,IAAC,CAAE,CAAE;MAE3D;;MAEA;;MAEA,IAAK2hH,MAAM,KAAK,IAAI,EAAG;QAEtB,IAAIhkG,MAAK,GAAGzN,IAAI,CAAC4X,IAAI,CAAEjX,KAAK,CAAEmpC,OAAO,CAAE,CAAC,CAAE,CAACviC,GAAG,CAAEuiC,OAAO,CAAE0nE,QAAQ,CAAE,CAAE,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;QACjF/jG,MAAK,IAAI+jG,QAAQ;QAEjB,IAAKvnE,QAAQ,CAAE,CAAC,CAAE,CAAC1iC,GAAG,CAAEoqG,GAAG,CAACtvF,YAAY,CAAEynB,OAAO,CAAE,CAAC,CAAE,EAAEA,OAAO,CAAE0nE,QAAQ,CAAE,CAAE,CAAE,GAAG,CAAC,EAAG;UAErF/jG,MAAK,GAAG,CAAEA,MAAK;QAEhB;QAEA,KAAM,IAAI3d,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI0hH,QAAQ,EAAE1hH,IAAC,EAAG,EAAG;UAEtC;UACAg6C,OAAO,CAAEh6C,IAAC,CAAE,CAAC4nB,YAAY,CAAEk6F,GAAG,CAACvhF,gBAAgB,CAAE4Z,QAAQ,CAAEn6C,IAAC,CAAE,EAAE2d,MAAK,GAAG3d,IAAC,CAAE,CAAE;UAC7E4hH,SAAS,CAAE5hH,IAAC,CAAE,CAACuyB,YAAY,CAAE4nB,QAAQ,CAAEn6C,IAAC,CAAE,EAAEg6C,OAAO,CAAEh6C,IAAC,CAAE,CAAE;QAE3D;MAED;MAEA,OAAO;QACNm6C,QAAQ,EAAEA,QAAQ;QAClBH,OAAO,EAAEA,OAAO;QAChB4nE,SAAS,EAAEA;MACZ,CAAC;IAEF;EAAC;IAAA3nH,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACggG,kBAAkB,GAAGhgG,MAAM,CAACggG,kBAAkB;MAEnD,OAAO,IAAI;IAEZ;EAAC;IAAA7lH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAG;QACZmD,QAAQ,EAAE;UACThD,OAAO,EAAE,GAAG;UACZjoB,IAAI,EAAE,OAAO;UACbR,SAAS,EAAE;QACZ;MACD,CAAC;MAEDsoB,IAAI,CAACg8F,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACjDh8F,IAAI,CAAC9nB,IAAI,GAAG,IAAI,CAACA,IAAI;MAErB,OAAO8nB,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhB,IAAI,CAAC4F,kBAAkB,GAAG5F,IAAI,CAAC4F,kBAAkB;MAEjD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAD,KAAA;AAAA;AAAApmH,OAAA,CAAAomH,KAAA,GAAAA,KAAA;AAAA,IAIIoC,YAAY,0BAAAC,MAAA;EAAAn9F,SAAA,CAAAk9F,YAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAAl9F,YAAA,CAAAg9F,YAAA;EAEjB,SAAAA,aAAaG,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAEC,SAAS,GAAGvyG,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEuyG,UAAU,GAAG,KAAK,EAAEC,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAArgH,eAAA,OAAA0/G,YAAA;IAEpIW,OAAA,GAAAT,QAAA,CAAAlmH,IAAA;IAEA2mH,OAAA,CAAKC,cAAc,GAAG,IAAI;IAE1BD,OAAA,CAAK5mH,IAAI,GAAG,cAAc;IAE1B4mH,OAAA,CAAKR,EAAE,GAAGA,EAAE;IACZQ,OAAA,CAAKP,EAAE,GAAGA,EAAE;IAEZO,OAAA,CAAKN,OAAO,GAAGA,OAAO;IACtBM,OAAA,CAAKL,OAAO,GAAGA,OAAO;IAEtBK,OAAA,CAAKJ,WAAW,GAAGA,WAAW;IAC9BI,OAAA,CAAKH,SAAS,GAAGA,SAAS;IAE1BG,OAAA,CAAKF,UAAU,GAAGA,UAAU;IAE5BE,OAAA,CAAKD,SAAS,GAAGA,SAAS;IAAC,OAAAC,OAAA;EAE5B;EAAC7/G,YAAA,CAAAk/G,YAAA;IAAAhoH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,EAAG;MAE7B,IAAMpqF,KAAK,GAAGoqF,cAAc,IAAI,IAAIzqG,OAAO,EAAE;MAE7C,IAAMstG,KAAK,GAAG5yG,IAAI,CAACC,EAAE,GAAG,CAAC;MACzB,IAAI4yG,UAAU,GAAG,IAAI,CAACN,SAAS,GAAG,IAAI,CAACD,WAAW;MAClD,IAAMQ,UAAU,GAAG9yG,IAAI,CAACgC,GAAG,CAAE6wG,UAAU,CAAE,GAAGt/G,MAAM,CAACiqB,OAAO;;MAE1D;MACA,OAAQq1F,UAAU,GAAG,CAAC,EAAGA,UAAU,IAAID,KAAK;MAC5C,OAAQC,UAAU,GAAGD,KAAK,EAAGC,UAAU,IAAID,KAAK;MAEhD,IAAKC,UAAU,GAAGt/G,MAAM,CAACiqB,OAAO,EAAG;QAElC,IAAKs1F,UAAU,EAAG;UAEjBD,UAAU,GAAG,CAAC;QAEf,CAAC,MAAM;UAENA,UAAU,GAAGD,KAAK;QAEnB;MAED;MAEA,IAAK,IAAI,CAACJ,UAAU,KAAK,IAAI,IAAI,CAAEM,UAAU,EAAG;QAE/C,IAAKD,UAAU,KAAKD,KAAK,EAAG;UAE3BC,UAAU,GAAG,CAAED,KAAK;QAErB,CAAC,MAAM;UAENC,UAAU,GAAGA,UAAU,GAAGD,KAAK;QAEhC;MAED;MAEA,IAAMhrG,KAAK,GAAG,IAAI,CAAC0qG,WAAW,GAAG5wG,CAAC,GAAGmxG,UAAU;MAC/C,IAAI3xG,CAAC,GAAG,IAAI,CAACgxG,EAAE,GAAG,IAAI,CAACE,OAAO,GAAGpyG,IAAI,CAAC8D,GAAG,CAAE8D,KAAK,CAAE;MAClD,IAAIpG,CAAC,GAAG,IAAI,CAAC2wG,EAAE,GAAG,IAAI,CAACE,OAAO,GAAGryG,IAAI,CAAC+D,GAAG,CAAE6D,KAAK,CAAE;MAElD,IAAK,IAAI,CAAC6qG,SAAS,KAAK,CAAC,EAAG;QAE3B,IAAM3uG,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAE,IAAI,CAAC2uG,SAAS,CAAE;QACtC,IAAM1uG,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAE,IAAI,CAAC0uG,SAAS,CAAE;QAEtC,IAAMzlG,EAAE,GAAG9L,CAAC,GAAG,IAAI,CAACgxG,EAAE;QACtB,IAAMjlG,EAAE,GAAGzL,CAAC,GAAG,IAAI,CAAC2wG,EAAE;;QAEtB;QACAjxG,CAAC,GAAG8L,EAAE,GAAGlJ,GAAG,GAAGmJ,EAAE,GAAGlJ,GAAG,GAAG,IAAI,CAACmuG,EAAE;QACjC1wG,CAAC,GAAGwL,EAAE,GAAGjJ,GAAG,GAAGkJ,EAAE,GAAGnJ,GAAG,GAAG,IAAI,CAACquG,EAAE;MAElC;MAEA,OAAOxsF,KAAK,CAACnhB,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;IAEzB;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA8tE,YAAA,CAAAroH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACsiG,EAAE,GAAGtiG,MAAM,CAACsiG,EAAE;MACnB,IAAI,CAACC,EAAE,GAAGviG,MAAM,CAACuiG,EAAE;MAEnB,IAAI,CAACC,OAAO,GAAGxiG,MAAM,CAACwiG,OAAO;MAC7B,IAAI,CAACC,OAAO,GAAGziG,MAAM,CAACyiG,OAAO;MAE7B,IAAI,CAACC,WAAW,GAAG1iG,MAAM,CAAC0iG,WAAW;MACrC,IAAI,CAACC,SAAS,GAAG3iG,MAAM,CAAC2iG,SAAS;MAEjC,IAAI,CAACC,UAAU,GAAG5iG,MAAM,CAAC4iG,UAAU;MAEnC,IAAI,CAACC,SAAS,GAAG7iG,MAAM,CAAC6iG,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAA1oH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA8tE,YAAA,CAAAroH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACs+F,EAAE,GAAG,IAAI,CAACA,EAAE;MACjBt+F,IAAI,CAACu+F,EAAE,GAAG,IAAI,CAACA,EAAE;MAEjBv+F,IAAI,CAACw+F,OAAO,GAAG,IAAI,CAACA,OAAO;MAC3Bx+F,IAAI,CAACy+F,OAAO,GAAG,IAAI,CAACA,OAAO;MAE3Bz+F,IAAI,CAAC0+F,WAAW,GAAG,IAAI,CAACA,WAAW;MACnC1+F,IAAI,CAAC2+F,SAAS,GAAG,IAAI,CAACA,SAAS;MAE/B3+F,IAAI,CAAC4+F,UAAU,GAAG,IAAI,CAACA,UAAU;MAEjC5+F,IAAI,CAAC6+F,SAAS,GAAG,IAAI,CAACA,SAAS;MAE/B,OAAO7+F,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAA8tE,YAAA,CAAAroH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAACkI,EAAE,GAAGlI,IAAI,CAACkI,EAAE;MACjB,IAAI,CAACC,EAAE,GAAGnI,IAAI,CAACmI,EAAE;MAEjB,IAAI,CAACC,OAAO,GAAGpI,IAAI,CAACoI,OAAO;MAC3B,IAAI,CAACC,OAAO,GAAGrI,IAAI,CAACqI,OAAO;MAE3B,IAAI,CAACC,WAAW,GAAGtI,IAAI,CAACsI,WAAW;MACnC,IAAI,CAACC,SAAS,GAAGvI,IAAI,CAACuI,SAAS;MAE/B,IAAI,CAACC,UAAU,GAAGxI,IAAI,CAACwI,UAAU;MAEjC,IAAI,CAACC,SAAS,GAAGzI,IAAI,CAACyI,SAAS;MAE/B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAV,YAAA;AAAA,EApJyBpC,KAAK;AAAApmH,OAAA,CAAAwoH,YAAA,GAAAA,YAAA;AAAA,IAwJ1BgB,QAAQ,0BAAAC,aAAA;EAAAn+F,SAAA,CAAAk+F,QAAA,EAAAC,aAAA;EAAA,IAAAC,QAAA,GAAAl+F,YAAA,CAAAg+F,QAAA;EAEb,SAAAA,SAAab,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;IAAA,IAAAW,OAAA;IAAA9gH,eAAA,OAAA0gH,QAAA;IAElEI,OAAA,GAAAF,QAAA,CAAAlnH,IAAA,OAAOmmH,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU;IAEnEW,OAAA,CAAKC,UAAU,GAAG,IAAI;IAEtBD,OAAA,CAAKrnH,IAAI,GAAG,UAAU;IAAC,OAAAqnH,OAAA;EAExB;EAAC,OAAAtgH,YAAA,CAAAkgH,QAAA;AAAA,EAVqBhB,YAAY;AAcnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARAxoH,OAAA,CAAAwpH,QAAA,GAAAA,QAAA;AAUA,SAASM,SAASA,CAAA,EAAG;EAEpB,IAAIC,EAAE,GAAG,CAAC;IAAE12F,EAAE,GAAG,CAAC;IAAE5Y,EAAE,GAAG,CAAC;IAAE6Y,EAAE,GAAG,CAAC;;EAElC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASg3C,IAAIA,CAAE9zC,EAAE,EAAEI,EAAE,EAAEmL,EAAE,EAAEC,EAAE,EAAG;IAE/B+nF,EAAE,GAAGvzF,EAAE;IACPnD,EAAE,GAAG0O,EAAE;IACPtnB,EAAE,GAAG,CAAE,CAAC,GAAG+b,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAG,CAAC,GAAGmL,EAAE,GAAGC,EAAE;IACpC1O,EAAE,GAAG,CAAC,GAAGkD,EAAE,GAAG,CAAC,GAAGI,EAAE,GAAGmL,EAAE,GAAGC,EAAE;EAE/B;EAEA,OAAO;IAENgoF,cAAc,EAAE,SAAAA,eAAWxzF,EAAE,EAAEI,EAAE,EAAEwQ,EAAE,EAAE6iF,EAAE,EAAEC,OAAO,EAAG;MAEpD5/C,IAAI,CAAE1zC,EAAE,EAAEwQ,EAAE,EAAE8iF,OAAO,IAAK9iF,EAAE,GAAG5Q,EAAE,CAAE,EAAE0zF,OAAO,IAAKD,EAAE,GAAGrzF,EAAE,CAAE,CAAE;IAE7D,CAAC;IAEDuzF,wBAAwB,EAAE,SAAAA,yBAAW3zF,EAAE,EAAEI,EAAE,EAAEwQ,EAAE,EAAE6iF,EAAE,EAAEG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAG;MAEpE;MACA,IAAItoF,EAAE,GAAG,CAAEpL,EAAE,GAAGJ,EAAE,IAAK4zF,GAAG,GAAG,CAAEhjF,EAAE,GAAG5Q,EAAE,KAAO4zF,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEjjF,EAAE,GAAGxQ,EAAE,IAAKyzF,GAAG;MAC5E,IAAIzC,EAAE,GAAG,CAAExgF,EAAE,GAAGxQ,EAAE,IAAKyzF,GAAG,GAAG,CAAEJ,EAAE,GAAGrzF,EAAE,KAAOyzF,GAAG,GAAGC,GAAG,CAAE,GAAG,CAAEL,EAAE,GAAG7iF,EAAE,IAAKkjF,GAAG;;MAE5E;MACAtoF,EAAE,IAAIqoF,GAAG;MACTzC,EAAE,IAAIyC,GAAG;MAET//C,IAAI,CAAE1zC,EAAE,EAAEwQ,EAAE,EAAEpF,EAAE,EAAE4lF,EAAE,CAAE;IAEvB,CAAC;IAED2C,IAAI,EAAE,SAAAA,KAAWpyG,CAAC,EAAG;MAEpB,IAAMyvG,EAAE,GAAGzvG,CAAC,GAAGA,CAAC;MAChB,IAAMqyG,EAAE,GAAG5C,EAAE,GAAGzvG,CAAC;MACjB,OAAO4xG,EAAE,GAAG12F,EAAE,GAAGlb,CAAC,GAAGsC,EAAE,GAAGmtG,EAAE,GAAGt0F,EAAE,GAAGk3F,EAAE;IAEvC;EAED,CAAC;AAEF;;AAEA;;AAEA,IAAMrnG,GAAG,GAAG,aAAc,IAAIkU,OAAO,EAAE;AACvC,IAAMozF,EAAE,GAAG,aAAc,IAAIX,SAAS,EAAE;AACxC,IAAMY,EAAE,GAAG,aAAc,IAAIZ,SAAS,EAAE;AACxC,IAAMa,EAAE,GAAG,aAAc,IAAIb,SAAS,EAAE;AAAC,IAEnCc,gBAAgB,0BAAAC,OAAA;EAAAv/F,SAAA,CAAAs/F,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAt/F,YAAA,CAAAo/F,gBAAA;EAErB,SAAAA,iBAAarvF,MAAM,GAAG,EAAE,EAAE2sF,MAAM,GAAG,KAAK,EAAE6C,SAAS,GAAG,aAAa,EAAEb,OAAO,GAAG,GAAG,EAAG;IAAA,IAAAc,OAAA;IAAAliH,eAAA,OAAA8hH,gBAAA;IAEpFI,OAAA,GAAAF,QAAA,CAAAtoH,IAAA;IAEAwoH,OAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,OAAA,CAAKzoH,IAAI,GAAG,kBAAkB;IAE9ByoH,OAAA,CAAKzvF,MAAM,GAAGA,MAAM;IACpByvF,OAAA,CAAK9C,MAAM,GAAGA,MAAM;IACpB8C,OAAA,CAAKD,SAAS,GAAGA,SAAS;IAC1BC,OAAA,CAAKd,OAAO,GAAGA,OAAO;IAAC,OAAAc,OAAA;EAExB;EAAC1hH,YAAA,CAAAshH,gBAAA;IAAApqH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAInvF,OAAO,EAAE,EAAG;MAE7C,IAAM+E,KAAK,GAAGoqF,cAAc;MAE5B,IAAMjrF,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMllB,CAAC,GAAGklB,MAAM,CAACj1B,MAAM;MAEvB,IAAM6f,CAAC,GAAG,CAAE9P,CAAC,IAAK,IAAI,CAAC6xG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,IAAK/vG,CAAC;MAC7C,IAAI+yG,QAAQ,GAAGz0G,IAAI,CAACsC,KAAK,CAAEoN,CAAC,CAAE;MAC9B,IAAI+qD,MAAM,GAAG/qD,CAAC,GAAG+kG,QAAQ;MAEzB,IAAK,IAAI,CAAChD,MAAM,EAAG;QAElBgD,QAAQ,IAAIA,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAEz0G,IAAI,CAACsC,KAAK,CAAEtC,IAAI,CAACgC,GAAG,CAAEyyG,QAAQ,CAAE,GAAG70G,CAAC,CAAE,GAAG,CAAC,IAAKA,CAAC;MAElF,CAAC,MAAM,IAAK66D,MAAM,KAAK,CAAC,IAAIg6C,QAAQ,KAAK70G,CAAC,GAAG,CAAC,EAAG;QAEhD60G,QAAQ,GAAG70G,CAAC,GAAG,CAAC;QAChB66D,MAAM,GAAG,CAAC;MAEX;MAEA,IAAIjyC,EAAE,EAAE8T,EAAE,CAAC,CAAC;;MAEZ,IAAK,IAAI,CAACm1E,MAAM,IAAIgD,QAAQ,GAAG,CAAC,EAAG;QAElCjsF,EAAE,GAAG1D,MAAM,CAAE,CAAE2vF,QAAQ,GAAG,CAAC,IAAK70G,CAAC,CAAE;MAEpC,CAAC,MAAM;QAEN;QACA8M,GAAG,CAACjG,UAAU,CAAEqe,MAAM,CAAE,CAAC,CAAE,EAAEA,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC3e,GAAG,CAAE2e,MAAM,CAAE,CAAC,CAAE,CAAE;QAC7D0D,EAAE,GAAG9b,GAAG;MAET;MAEA,IAAM+b,EAAE,GAAG3D,MAAM,CAAE2vF,QAAQ,GAAG70G,CAAC,CAAE;MACjC,IAAM8oB,EAAE,GAAG5D,MAAM,CAAE,CAAE2vF,QAAQ,GAAG,CAAC,IAAK70G,CAAC,CAAE;MAEzC,IAAK,IAAI,CAAC6xG,MAAM,IAAIgD,QAAQ,GAAG,CAAC,GAAG70G,CAAC,EAAG;QAEtC08B,EAAE,GAAGxX,MAAM,CAAE,CAAE2vF,QAAQ,GAAG,CAAC,IAAK70G,CAAC,CAAE;MAEpC,CAAC,MAAM;QAEN;QACA8M,GAAG,CAACjG,UAAU,CAAEqe,MAAM,CAAEllB,CAAC,GAAG,CAAC,CAAE,EAAEklB,MAAM,CAAEllB,CAAC,GAAG,CAAC,CAAE,CAAE,CAACuG,GAAG,CAAE2e,MAAM,CAAEllB,CAAC,GAAG,CAAC,CAAE,CAAE;QACzE08B,EAAE,GAAG5vB,GAAG;MAET;MAEA,IAAK,IAAI,CAAC4nG,SAAS,KAAK,aAAa,IAAI,IAAI,CAACA,SAAS,KAAK,SAAS,EAAG;QAEvE;QACA,IAAMnxG,GAAG,GAAG,IAAI,CAACmxG,SAAS,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI;QACrD,IAAIX,GAAG,GAAG3zG,IAAI,CAACmD,GAAG,CAAEqlB,EAAE,CAACzgB,iBAAiB,CAAE0gB,EAAE,CAAE,EAAEtlB,GAAG,CAAE;QACrD,IAAIywG,GAAG,GAAG5zG,IAAI,CAACmD,GAAG,CAAEslB,EAAE,CAAC1gB,iBAAiB,CAAE2gB,EAAE,CAAE,EAAEvlB,GAAG,CAAE;QACrD,IAAI0wG,GAAG,GAAG7zG,IAAI,CAACmD,GAAG,CAAEulB,EAAE,CAAC3gB,iBAAiB,CAAEu0B,EAAE,CAAE,EAAEn5B,GAAG,CAAE;;QAErD;QACA,IAAKywG,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAG,GAAG;QAC3B,IAAKD,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGC,GAAG;QAC3B,IAAKC,GAAG,GAAG,IAAI,EAAGA,GAAG,GAAGD,GAAG;QAE3BI,EAAE,CAACN,wBAAwB,CAAElrF,EAAE,CAACtnB,CAAC,EAAEunB,EAAE,CAACvnB,CAAC,EAAEwnB,EAAE,CAACxnB,CAAC,EAAEo7B,EAAE,CAACp7B,CAAC,EAAEyyG,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAE;QACpEI,EAAE,CAACP,wBAAwB,CAAElrF,EAAE,CAAChnB,CAAC,EAAEinB,EAAE,CAACjnB,CAAC,EAAEknB,EAAE,CAAClnB,CAAC,EAAE86B,EAAE,CAAC96B,CAAC,EAAEmyG,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAE;QACpEK,EAAE,CAACR,wBAAwB,CAAElrF,EAAE,CAACnR,CAAC,EAAEoR,EAAE,CAACpR,CAAC,EAAEqR,EAAE,CAACrR,CAAC,EAAEilB,EAAE,CAACjlB,CAAC,EAAEs8F,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAE;MAErE,CAAC,MAAM,IAAK,IAAI,CAACS,SAAS,KAAK,YAAY,EAAG;QAE7CN,EAAE,CAACT,cAAc,CAAE/qF,EAAE,CAACtnB,CAAC,EAAEunB,EAAE,CAACvnB,CAAC,EAAEwnB,EAAE,CAACxnB,CAAC,EAAEo7B,EAAE,CAACp7B,CAAC,EAAE,IAAI,CAACuyG,OAAO,CAAE;QACzDQ,EAAE,CAACV,cAAc,CAAE/qF,EAAE,CAAChnB,CAAC,EAAEinB,EAAE,CAACjnB,CAAC,EAAEknB,EAAE,CAAClnB,CAAC,EAAE86B,EAAE,CAAC96B,CAAC,EAAE,IAAI,CAACiyG,OAAO,CAAE;QACzDS,EAAE,CAACX,cAAc,CAAE/qF,EAAE,CAACnR,CAAC,EAAEoR,EAAE,CAACpR,CAAC,EAAEqR,EAAE,CAACrR,CAAC,EAAEilB,EAAE,CAACjlB,CAAC,EAAE,IAAI,CAACo8F,OAAO,CAAE;MAE1D;MAEA9tF,KAAK,CAACnhB,GAAG,CACRwvG,EAAE,CAACF,IAAI,CAAEr5C,MAAM,CAAE,EACjBw5C,EAAE,CAACH,IAAI,CAAEr5C,MAAM,CAAE,EACjBy5C,EAAE,CAACJ,IAAI,CAAEr5C,MAAM,CAAE,CACjB;MAED,OAAO90C,KAAK;IAEb;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAkwE,gBAAA,CAAAzqH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACkV,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGgQ,MAAM,CAACkV,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAExD,IAAM61B,KAAK,GAAG/V,MAAM,CAACkV,MAAM,CAAEh1B,CAAC,CAAE;QAEhC,IAAI,CAACg1B,MAAM,CAACx1B,IAAI,CAAEq2B,KAAK,CAAC3f,KAAK,EAAE,CAAE;MAElC;MAEA,IAAI,CAACyrG,MAAM,GAAG7hG,MAAM,CAAC6hG,MAAM;MAC3B,IAAI,CAAC6C,SAAS,GAAG1kG,MAAM,CAAC0kG,SAAS;MACjC,IAAI,CAACb,OAAO,GAAG7jG,MAAM,CAAC6jG,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA1pH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAkwE,gBAAA,CAAAzqH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACkR,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACklB,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD,IAAM61B,KAAK,GAAG,IAAI,CAACb,MAAM,CAAEh1B,CAAC,CAAE;QAC9B8jB,IAAI,CAACkR,MAAM,CAACx1B,IAAI,CAAEq2B,KAAK,CAAChd,OAAO,EAAE,CAAE;MAEpC;MAEAiL,IAAI,CAAC69F,MAAM,GAAG,IAAI,CAACA,MAAM;MACzB79F,IAAI,CAAC0gG,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/B1gG,IAAI,CAAC6/F,OAAO,GAAG,IAAI,CAACA,OAAO;MAE3B,OAAO7/F,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAkwE,gBAAA,CAAAzqH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAACllF,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACllF,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD,IAAM61B,KAAK,GAAGqkF,IAAI,CAACllF,MAAM,CAAEh1B,CAAC,CAAE;QAC9B,IAAI,CAACg1B,MAAM,CAACx1B,IAAI,CAAE,IAAIsxB,OAAO,EAAE,CAACnY,SAAS,CAAEkd,KAAK,CAAE,CAAE;MAErD;MAEA,IAAI,CAAC8rF,MAAM,GAAGzH,IAAI,CAACyH,MAAM;MACzB,IAAI,CAAC6C,SAAS,GAAGtK,IAAI,CAACsK,SAAS;MAC/B,IAAI,CAACb,OAAO,GAAGzJ,IAAI,CAACyJ,OAAO;MAE3B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAU,gBAAA;AAAA,EArK6BxE,KAAK;AAyKpC;AACA;AACA;AACA;AAHApmH,OAAA,CAAA4qH,gBAAA,GAAAA,gBAAA;AAKA,SAASO,UAAUA,CAAEhzG,CAAC,EAAE8mB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE4T,EAAE,EAAG;EAExC,IAAMjU,EAAE,GAAG,CAAEK,EAAE,GAAGF,EAAE,IAAK,GAAG;EAC5B,IAAMlgB,EAAE,GAAG,CAAEg0B,EAAE,GAAG7T,EAAE,IAAK,GAAG;EAC5B,IAAM0oF,EAAE,GAAGzvG,CAAC,GAAGA,CAAC;EAChB,IAAMqyG,EAAE,GAAGryG,CAAC,GAAGyvG,EAAE;EACjB,OAAO,CAAE,CAAC,GAAG1oF,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGL,EAAE,GAAG/f,EAAE,IAAKyrG,EAAE,GAAG,CAAE,CAAE,CAAC,GAAGtrF,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAG,CAAC,GAAGL,EAAE,GAAG/f,EAAE,IAAK6oG,EAAE,GAAG9oF,EAAE,GAAG3mB,CAAC,GAAG+mB,EAAE;AAEnG;;AAEA;;AAEA,SAASksF,iBAAiBA,CAAEjzG,CAAC,EAAEgO,CAAC,EAAG;EAElC,IAAM8rE,CAAC,GAAG,CAAC,GAAG95E,CAAC;EACf,OAAO85E,CAAC,GAAGA,CAAC,GAAG9rE,CAAC;AAEjB;AAEA,SAASklG,iBAAiBA,CAAElzG,CAAC,EAAEgO,CAAC,EAAG;EAElC,OAAO,CAAC,IAAK,CAAC,GAAGhO,CAAC,CAAE,GAAGA,CAAC,GAAGgO,CAAC;AAE7B;AAEA,SAASmlG,iBAAiBA,CAAEnzG,CAAC,EAAEgO,CAAC,EAAG;EAElC,OAAOhO,CAAC,GAAGA,CAAC,GAAGgO,CAAC;AAEjB;AAEA,SAASolG,eAAeA,CAAEpzG,CAAC,EAAE8mB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;EAEzC,OAAOisF,iBAAiB,CAAEjzG,CAAC,EAAE8mB,EAAE,CAAE,GAAGosF,iBAAiB,CAAElzG,CAAC,EAAE+mB,EAAE,CAAE,GAC7DosF,iBAAiB,CAAEnzG,CAAC,EAAEgnB,EAAE,CAAE;AAE5B;;AAEA;;AAEA,SAASqsF,aAAaA,CAAErzG,CAAC,EAAEgO,CAAC,EAAG;EAE9B,IAAM8rE,CAAC,GAAG,CAAC,GAAG95E,CAAC;EACf,OAAO85E,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG9rE,CAAC;AAErB;AAEA,SAASslG,aAAaA,CAAEtzG,CAAC,EAAEgO,CAAC,EAAG;EAE9B,IAAM8rE,CAAC,GAAG,CAAC,GAAG95E,CAAC;EACf,OAAO,CAAC,GAAG85E,CAAC,GAAGA,CAAC,GAAG95E,CAAC,GAAGgO,CAAC;AAEzB;AAEA,SAASulG,aAAaA,CAAEvzG,CAAC,EAAEgO,CAAC,EAAG;EAE9B,OAAO,CAAC,IAAK,CAAC,GAAGhO,CAAC,CAAE,GAAGA,CAAC,GAAGA,CAAC,GAAGgO,CAAC;AAEjC;AAEA,SAASwlG,aAAaA,CAAExzG,CAAC,EAAEgO,CAAC,EAAG;EAE9B,OAAOhO,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGgO,CAAC;AAErB;AAEA,SAASylG,WAAWA,CAAEzzG,CAAC,EAAE8mB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE4T,EAAE,EAAG;EAEzC,OAAOy4E,aAAa,CAAErzG,CAAC,EAAE8mB,EAAE,CAAE,GAAGwsF,aAAa,CAAEtzG,CAAC,EAAE+mB,EAAE,CAAE,GAAGwsF,aAAa,CAAEvzG,CAAC,EAAEgnB,EAAE,CAAE,GAC9EwsF,aAAa,CAAExzG,CAAC,EAAE46B,EAAE,CAAE;AAExB;AAAC,IAEK84E,gBAAgB,0BAAAC,OAAA;EAAAxgG,SAAA,CAAAugG,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAvgG,YAAA,CAAAqgG,gBAAA;EAErB,SAAAA,iBAAa/sF,EAAE,GAAG,IAAI/iB,OAAO,EAAE,EAAEgD,EAAE,GAAG,IAAIhD,OAAO,EAAE,EAAEiD,EAAE,GAAG,IAAIjD,OAAO,EAAE,EAAEiwG,EAAE,GAAG,IAAIjwG,OAAO,EAAE,EAAG;IAAA,IAAAkwG,OAAA;IAAAnjH,eAAA,OAAA+iH,gBAAA;IAE7FI,OAAA,GAAAF,QAAA,CAAAvpH,IAAA;IAEAypH,OAAA,CAAKC,kBAAkB,GAAG,IAAI;IAE9BD,OAAA,CAAK1pH,IAAI,GAAG,kBAAkB;IAE9B0pH,OAAA,CAAKntF,EAAE,GAAGA,EAAE;IACZmtF,OAAA,CAAKltG,EAAE,GAAGA,EAAE;IACZktG,OAAA,CAAKjtG,EAAE,GAAGA,EAAE;IACZitG,OAAA,CAAKD,EAAE,GAAGA,EAAE;IAAC,OAAAC,OAAA;EAEd;EAAC3iH,YAAA,CAAAuiH,gBAAA;IAAArrH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAIzqG,OAAO,EAAE,EAAG;MAE7C,IAAMqgB,KAAK,GAAGoqF,cAAc;MAE5B,IAAM1nF,EAAE,GAAG,IAAI,CAACA,EAAE;QAAE/f,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEgtG,EAAE,GAAG,IAAI,CAACA,EAAE;MAE5D5vF,KAAK,CAACnhB,GAAG,CACR2wG,WAAW,CAAEzzG,CAAC,EAAE2mB,EAAE,CAACnnB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,EAAEq0G,EAAE,CAACr0G,CAAC,CAAE,EACxCi0G,WAAW,CAAEzzG,CAAC,EAAE2mB,EAAE,CAAC7mB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,EAAE+zG,EAAE,CAAC/zG,CAAC,CAAE,CACxC;MAED,OAAOmkB,KAAK;IAEb;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAmxE,gBAAA,CAAA1rH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACyY,EAAE,CAACpiB,IAAI,CAAE2J,MAAM,CAACyY,EAAE,CAAE;MACzB,IAAI,CAAC/f,EAAE,CAACrC,IAAI,CAAE2J,MAAM,CAACtH,EAAE,CAAE;MACzB,IAAI,CAACC,EAAE,CAACtC,IAAI,CAAE2J,MAAM,CAACrH,EAAE,CAAE;MACzB,IAAI,CAACgtG,EAAE,CAACtvG,IAAI,CAAE2J,MAAM,CAAC2lG,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxrH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAmxE,gBAAA,CAAA1rH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACyU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC1f,OAAO,EAAE;MAC3BiL,IAAI,CAACtL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;MAC3BiL,IAAI,CAACrL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;MAC3BiL,IAAI,CAAC2hG,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC5sG,OAAO,EAAE;MAE3B,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAmxE,gBAAA,CAAA1rH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC3hF,EAAE,CAAC5f,SAAS,CAAEuhG,IAAI,CAAC3hF,EAAE,CAAE;MAC5B,IAAI,CAAC/f,EAAE,CAACG,SAAS,CAAEuhG,IAAI,CAAC1hG,EAAE,CAAE;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEuhG,IAAI,CAACzhG,EAAE,CAAE;MAC5B,IAAI,CAACgtG,EAAE,CAAC9sG,SAAS,CAAEuhG,IAAI,CAACuL,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAH,gBAAA;AAAA,EArE6BzF,KAAK;AAAApmH,OAAA,CAAA6rH,gBAAA,GAAAA,gBAAA;AAAA,IAyE9BM,iBAAiB,0BAAAC,OAAA;EAAA9gG,SAAA,CAAA6gG,iBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA7gG,YAAA,CAAA2gG,iBAAA;EAEtB,SAAAA,kBAAartF,EAAE,GAAG,IAAIzH,OAAO,EAAE,EAAEtY,EAAE,GAAG,IAAIsY,OAAO,EAAE,EAAErY,EAAE,GAAG,IAAIqY,OAAO,EAAE,EAAE20F,EAAE,GAAG,IAAI30F,OAAO,EAAE,EAAG;IAAA,IAAAi1F,OAAA;IAAAxjH,eAAA,OAAAqjH,iBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAA7pH,IAAA;IAEA8pH,OAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/BD,OAAA,CAAK/pH,IAAI,GAAG,mBAAmB;IAE/B+pH,OAAA,CAAKxtF,EAAE,GAAGA,EAAE;IACZwtF,OAAA,CAAKvtG,EAAE,GAAGA,EAAE;IACZutG,OAAA,CAAKttG,EAAE,GAAGA,EAAE;IACZstG,OAAA,CAAKN,EAAE,GAAGA,EAAE;IAAC,OAAAM,OAAA;EAEd;EAAChjH,YAAA,CAAA6iH,iBAAA;IAAA3rH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAInvF,OAAO,EAAE,EAAG;MAE7C,IAAM+E,KAAK,GAAGoqF,cAAc;MAE5B,IAAM1nF,EAAE,GAAG,IAAI,CAACA,EAAE;QAAE/f,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEgtG,EAAE,GAAG,IAAI,CAACA,EAAE;MAE5D5vF,KAAK,CAACnhB,GAAG,CACR2wG,WAAW,CAAEzzG,CAAC,EAAE2mB,EAAE,CAACnnB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,EAAEq0G,EAAE,CAACr0G,CAAC,CAAE,EACxCi0G,WAAW,CAAEzzG,CAAC,EAAE2mB,EAAE,CAAC7mB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,EAAE+zG,EAAE,CAAC/zG,CAAC,CAAE,EACxC2zG,WAAW,CAAEzzG,CAAC,EAAE2mB,EAAE,CAAChR,CAAC,EAAE/O,EAAE,CAAC+O,CAAC,EAAE9O,EAAE,CAAC8O,CAAC,EAAEk+F,EAAE,CAACl+F,CAAC,CAAE,CACxC;MAED,OAAOsO,KAAK;IAEb;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAyxE,iBAAA,CAAAhsH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACyY,EAAE,CAACpiB,IAAI,CAAE2J,MAAM,CAACyY,EAAE,CAAE;MACzB,IAAI,CAAC/f,EAAE,CAACrC,IAAI,CAAE2J,MAAM,CAACtH,EAAE,CAAE;MACzB,IAAI,CAACC,EAAE,CAACtC,IAAI,CAAE2J,MAAM,CAACrH,EAAE,CAAE;MACzB,IAAI,CAACgtG,EAAE,CAACtvG,IAAI,CAAE2J,MAAM,CAAC2lG,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxrH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAyxE,iBAAA,CAAAhsH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACyU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC1f,OAAO,EAAE;MAC3BiL,IAAI,CAACtL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;MAC3BiL,IAAI,CAACrL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;MAC3BiL,IAAI,CAAC2hG,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC5sG,OAAO,EAAE;MAE3B,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAyxE,iBAAA,CAAAhsH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC3hF,EAAE,CAAC5f,SAAS,CAAEuhG,IAAI,CAAC3hF,EAAE,CAAE;MAC5B,IAAI,CAAC/f,EAAE,CAACG,SAAS,CAAEuhG,IAAI,CAAC1hG,EAAE,CAAE;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEuhG,IAAI,CAACzhG,EAAE,CAAE;MAC5B,IAAI,CAACgtG,EAAE,CAAC9sG,SAAS,CAAEuhG,IAAI,CAACuL,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAG,iBAAA;AAAA,EAtE8B/F,KAAK;AAAApmH,OAAA,CAAAmsH,iBAAA,GAAAA,iBAAA;AAAA,IA0E/BK,SAAS,0BAAAC,OAAA;EAAAnhG,SAAA,CAAAkhG,SAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAlhG,YAAA,CAAAghG,SAAA;EAEd,SAAAA,UAAaztG,EAAE,GAAG,IAAIhD,OAAO,EAAE,EAAEiD,EAAE,GAAG,IAAIjD,OAAO,EAAE,EAAG;IAAA,IAAA4wG,OAAA;IAAA7jH,eAAA,OAAA0jH,SAAA;IAErDG,OAAA,GAAAD,QAAA,CAAAlqH,IAAA;IAEAmqH,OAAA,CAAKC,WAAW,GAAG,IAAI;IAEvBD,OAAA,CAAKpqH,IAAI,GAAG,WAAW;IAEvBoqH,OAAA,CAAK5tG,EAAE,GAAGA,EAAE;IACZ4tG,OAAA,CAAK3tG,EAAE,GAAGA,EAAE;IAAC,OAAA2tG,OAAA;EAEd;EAACrjH,YAAA,CAAAkjH,SAAA;IAAAhsH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAIzqG,OAAO,EAAE,EAAG;MAE7C,IAAMqgB,KAAK,GAAGoqF,cAAc;MAE5B,IAAKruG,CAAC,KAAK,CAAC,EAAG;QAEdikB,KAAK,CAAC1f,IAAI,CAAE,IAAI,CAACsC,EAAE,CAAE;MAEtB,CAAC,MAAM;QAENod,KAAK,CAAC1f,IAAI,CAAE,IAAI,CAACsC,EAAE,CAAE,CAAChC,GAAG,CAAE,IAAI,CAAC+B,EAAE,CAAE;QACpCqd,KAAK,CAAChf,cAAc,CAAEjF,CAAC,CAAE,CAACyE,GAAG,CAAE,IAAI,CAACmC,EAAE,CAAE;MAEzC;MAEA,OAAOqd,KAAK;IAEb;;IAEA;EAAA;IAAA57B,GAAA;IAAAE,KAAA,EACA,SAAA6lH,WAAY9rF,CAAC,EAAE+rF,cAAc,EAAG;MAE/B,OAAO,IAAI,CAACF,QAAQ,CAAE7rF,CAAC,EAAE+rF,cAAc,CAAE;IAE1C;EAAC;IAAAhmH,GAAA;IAAAE,KAAA,EAED,SAAAinH,WAAYxvG,CAAC,EAAEquG,cAAc,EAAG;MAE/B,IAAM1mE,OAAO,GAAG0mE,cAAc,IAAI,IAAIzqG,OAAO,EAAE;MAE/C+jC,OAAO,CAACpjC,IAAI,CAAE,IAAI,CAACsC,EAAE,CAAE,CAAChC,GAAG,CAAE,IAAI,CAAC+B,EAAE,CAAE,CAACrD,SAAS,EAAE;MAElD,OAAOokC,OAAO;IAEf;EAAC;IAAAt/C,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA8xE,SAAA,CAAArsH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACtH,EAAE,CAACrC,IAAI,CAAE2J,MAAM,CAACtH,EAAE,CAAE;MACzB,IAAI,CAACC,EAAE,CAACtC,IAAI,CAAE2J,MAAM,CAACrH,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxe,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA8xE,SAAA,CAAArsH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACtL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;MAC3BiL,IAAI,CAACrL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;MAE3B,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAA8xE,SAAA,CAAArsH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC1hG,EAAE,CAACG,SAAS,CAAEuhG,IAAI,CAAC1hG,EAAE,CAAE;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEuhG,IAAI,CAACzhG,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAwtG,SAAA;AAAA,EAlFsBpG,KAAK;AAAApmH,OAAA,CAAAwsH,SAAA,GAAAA,SAAA;AAAA,IAsFvBK,UAAU,0BAAAC,OAAA;EAAAxhG,SAAA,CAAAuhG,UAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAvhG,YAAA,CAAAqhG,UAAA;EAEf,SAAAA,WAAa9tG,EAAE,GAAG,IAAIsY,OAAO,EAAE,EAAErY,EAAE,GAAG,IAAIqY,OAAO,EAAE,EAAG;IAAA,IAAA21F,OAAA;IAAAlkH,eAAA,OAAA+jH,UAAA;IAErDG,OAAA,GAAAD,QAAA,CAAAvqH,IAAA;IAEAwqH,OAAA,CAAKC,YAAY,GAAG,IAAI;IAExBD,OAAA,CAAKzqH,IAAI,GAAG,YAAY;IAExByqH,OAAA,CAAKjuG,EAAE,GAAGA,EAAE;IACZiuG,OAAA,CAAKhuG,EAAE,GAAGA,EAAE;IAAC,OAAAguG,OAAA;EAEd;EAAC1jH,YAAA,CAAAujH,UAAA;IAAArsH,GAAA;IAAAE,KAAA,EACD,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAInvF,OAAO,EAAE,EAAG;MAE7C,IAAM+E,KAAK,GAAGoqF,cAAc;MAE5B,IAAKruG,CAAC,KAAK,CAAC,EAAG;QAEdikB,KAAK,CAAC1f,IAAI,CAAE,IAAI,CAACsC,EAAE,CAAE;MAEtB,CAAC,MAAM;QAENod,KAAK,CAAC1f,IAAI,CAAE,IAAI,CAACsC,EAAE,CAAE,CAAChC,GAAG,CAAE,IAAI,CAAC+B,EAAE,CAAE;QACpCqd,KAAK,CAAChf,cAAc,CAAEjF,CAAC,CAAE,CAACyE,GAAG,CAAE,IAAI,CAACmC,EAAE,CAAE;MAEzC;MAEA,OAAOqd,KAAK;IAEb;IACA;EAAA;IAAA57B,GAAA;IAAAE,KAAA,EACA,SAAA6lH,WAAY9rF,CAAC,EAAE+rF,cAAc,EAAG;MAE/B,OAAO,IAAI,CAACF,QAAQ,CAAE7rF,CAAC,EAAE+rF,cAAc,CAAE;IAE1C;EAAC;IAAAhmH,GAAA;IAAAE,KAAA,EACD,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAmyE,UAAA,CAAA1sH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACtH,EAAE,CAACrC,IAAI,CAAE2J,MAAM,CAACtH,EAAE,CAAE;MACzB,IAAI,CAACC,EAAE,CAACtC,IAAI,CAAE2J,MAAM,CAACrH,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxe,GAAA;IAAAE,KAAA,EACD,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAmyE,UAAA,CAAA1sH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACtL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;MAC3BiL,IAAI,CAACrL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;MAE3B,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EACD,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAmyE,UAAA,CAAA1sH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC1hG,EAAE,CAACG,SAAS,CAAEuhG,IAAI,CAAC1hG,EAAE,CAAE;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEuhG,IAAI,CAACzhG,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA6tG,UAAA;AAAA,EAnEuBzG,KAAK;AAAApmH,OAAA,CAAA6sH,UAAA,GAAAA,UAAA;AAAA,IAuExBK,oBAAoB,0BAAAC,OAAA;EAAA7hG,SAAA,CAAA4hG,oBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA5hG,YAAA,CAAA0hG,oBAAA;EAEzB,SAAAA,qBAAapuF,EAAE,GAAG,IAAI/iB,OAAO,EAAE,EAAEgD,EAAE,GAAG,IAAIhD,OAAO,EAAE,EAAEiD,EAAE,GAAG,IAAIjD,OAAO,EAAE,EAAG;IAAA,IAAAsxG,OAAA;IAAAvkH,eAAA,OAAAokH,oBAAA;IAEzEG,OAAA,GAAAD,QAAA,CAAA5qH,IAAA;IAEA6qH,OAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElCD,OAAA,CAAK9qH,IAAI,GAAG,sBAAsB;IAElC8qH,OAAA,CAAKvuF,EAAE,GAAGA,EAAE;IACZuuF,OAAA,CAAKtuG,EAAE,GAAGA,EAAE;IACZsuG,OAAA,CAAKruG,EAAE,GAAGA,EAAE;IAAC,OAAAquG,OAAA;EAEd;EAAC/jH,YAAA,CAAA4jH,oBAAA;IAAA1sH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAIzqG,OAAO,EAAE,EAAG;MAE7C,IAAMqgB,KAAK,GAAGoqF,cAAc;MAE5B,IAAM1nF,EAAE,GAAG,IAAI,CAACA,EAAE;QAAE/f,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;MAE9Cod,KAAK,CAACnhB,GAAG,CACRswG,eAAe,CAAEpzG,CAAC,EAAE2mB,EAAE,CAACnnB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,CAAE,EACtC4zG,eAAe,CAAEpzG,CAAC,EAAE2mB,EAAE,CAAC7mB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,CAAE,CACtC;MAED,OAAOmkB,KAAK;IAEb;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAwyE,oBAAA,CAAA/sH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACyY,EAAE,CAACpiB,IAAI,CAAE2J,MAAM,CAACyY,EAAE,CAAE;MACzB,IAAI,CAAC/f,EAAE,CAACrC,IAAI,CAAE2J,MAAM,CAACtH,EAAE,CAAE;MACzB,IAAI,CAACC,EAAE,CAACtC,IAAI,CAAE2J,MAAM,CAACrH,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxe,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAwyE,oBAAA,CAAA/sH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACyU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC1f,OAAO,EAAE;MAC3BiL,IAAI,CAACtL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;MAC3BiL,IAAI,CAACrL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;MAE3B,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAwyE,oBAAA,CAAA/sH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC3hF,EAAE,CAAC5f,SAAS,CAAEuhG,IAAI,CAAC3hF,EAAE,CAAE;MAC5B,IAAI,CAAC/f,EAAE,CAACG,SAAS,CAAEuhG,IAAI,CAAC1hG,EAAE,CAAE;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEuhG,IAAI,CAACzhG,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAkuG,oBAAA;AAAA,EAjEiC9G,KAAK;AAAApmH,OAAA,CAAAktH,oBAAA,GAAAA,oBAAA;AAAA,IAqElCK,qBAAqB,0BAAAC,OAAA;EAAAliG,SAAA,CAAAiiG,qBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAjiG,YAAA,CAAA+hG,qBAAA;EAE1B,SAAAA,sBAAazuF,EAAE,GAAG,IAAIzH,OAAO,EAAE,EAAEtY,EAAE,GAAG,IAAIsY,OAAO,EAAE,EAAErY,EAAE,GAAG,IAAIqY,OAAO,EAAE,EAAG;IAAA,IAAAq2F,OAAA;IAAA5kH,eAAA,OAAAykH,qBAAA;IAEzEG,OAAA,GAAAD,QAAA,CAAAjrH,IAAA;IAEAkrH,OAAA,CAAKC,uBAAuB,GAAG,IAAI;IAEnCD,OAAA,CAAKnrH,IAAI,GAAG,uBAAuB;IAEnCmrH,OAAA,CAAK5uF,EAAE,GAAGA,EAAE;IACZ4uF,OAAA,CAAK3uG,EAAE,GAAGA,EAAE;IACZ2uG,OAAA,CAAK1uG,EAAE,GAAGA,EAAE;IAAC,OAAA0uG,OAAA;EAEd;EAACpkH,YAAA,CAAAikH,qBAAA;IAAA/sH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAInvF,OAAO,EAAE,EAAG;MAE7C,IAAM+E,KAAK,GAAGoqF,cAAc;MAE5B,IAAM1nF,EAAE,GAAG,IAAI,CAACA,EAAE;QAAE/f,EAAE,GAAG,IAAI,CAACA,EAAE;QAAEC,EAAE,GAAG,IAAI,CAACA,EAAE;MAE9Cod,KAAK,CAACnhB,GAAG,CACRswG,eAAe,CAAEpzG,CAAC,EAAE2mB,EAAE,CAACnnB,CAAC,EAAEoH,EAAE,CAACpH,CAAC,EAAEqH,EAAE,CAACrH,CAAC,CAAE,EACtC4zG,eAAe,CAAEpzG,CAAC,EAAE2mB,EAAE,CAAC7mB,CAAC,EAAE8G,EAAE,CAAC9G,CAAC,EAAE+G,EAAE,CAAC/G,CAAC,CAAE,EACtCszG,eAAe,CAAEpzG,CAAC,EAAE2mB,EAAE,CAAChR,CAAC,EAAE/O,EAAE,CAAC+O,CAAC,EAAE9O,EAAE,CAAC8O,CAAC,CAAE,CACtC;MAED,OAAOsO,KAAK;IAEb;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA6yE,qBAAA,CAAAptH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACyY,EAAE,CAACpiB,IAAI,CAAE2J,MAAM,CAACyY,EAAE,CAAE;MACzB,IAAI,CAAC/f,EAAE,CAACrC,IAAI,CAAE2J,MAAM,CAACtH,EAAE,CAAE;MACzB,IAAI,CAACC,EAAE,CAACtC,IAAI,CAAE2J,MAAM,CAACrH,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAAxe,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA6yE,qBAAA,CAAAptH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACyU,EAAE,GAAG,IAAI,CAACA,EAAE,CAAC1f,OAAO,EAAE;MAC3BiL,IAAI,CAACtL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACK,OAAO,EAAE;MAC3BiL,IAAI,CAACrL,EAAE,GAAG,IAAI,CAACA,EAAE,CAACI,OAAO,EAAE;MAE3B,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAA6yE,qBAAA,CAAAptH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC3hF,EAAE,CAAC5f,SAAS,CAAEuhG,IAAI,CAAC3hF,EAAE,CAAE;MAC5B,IAAI,CAAC/f,EAAE,CAACG,SAAS,CAAEuhG,IAAI,CAAC1hG,EAAE,CAAE;MAC5B,IAAI,CAACC,EAAE,CAACE,SAAS,CAAEuhG,IAAI,CAACzhG,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAuuG,qBAAA;AAAA,EAlEkCnH,KAAK;AAAApmH,OAAA,CAAAutH,qBAAA,GAAAA,qBAAA;AAAA,IAsEnCK,WAAW,0BAAAC,OAAA;EAAAviG,SAAA,CAAAsiG,WAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAtiG,YAAA,CAAAoiG,WAAA;EAEhB,SAAAA,YAAaryF,MAAM,GAAG,EAAE,EAAG;IAAA,IAAAwyF,OAAA;IAAAjlH,eAAA,OAAA8kH,WAAA;IAE1BG,OAAA,GAAAD,QAAA,CAAAtrH,IAAA;IAEAurH,OAAA,CAAKC,aAAa,GAAG,IAAI;IAEzBD,OAAA,CAAKxrH,IAAI,GAAG,aAAa;IAEzBwrH,OAAA,CAAKxyF,MAAM,GAAGA,MAAM;IAAC,OAAAwyF,OAAA;EAEtB;EAACzkH,YAAA,CAAAskH,WAAA;IAAAptH,GAAA;IAAAE,KAAA,EAED,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,GAAG,IAAIzqG,OAAO,EAAE,EAAG;MAE7C,IAAMqgB,KAAK,GAAGoqF,cAAc;MAE5B,IAAMjrF,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMpV,CAAC,GAAG,CAAEoV,MAAM,CAACj1B,MAAM,GAAG,CAAC,IAAK6R,CAAC;MAEnC,IAAM+yG,QAAQ,GAAGz0G,IAAI,CAACsC,KAAK,CAAEoN,CAAC,CAAE;MAChC,IAAM+qD,MAAM,GAAG/qD,CAAC,GAAG+kG,QAAQ;MAE3B,IAAMjsF,EAAE,GAAG1D,MAAM,CAAE2vF,QAAQ,KAAK,CAAC,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,CAAE;MAC7D,IAAMhsF,EAAE,GAAG3D,MAAM,CAAE2vF,QAAQ,CAAE;MAC7B,IAAM/rF,EAAE,GAAG5D,MAAM,CAAE2vF,QAAQ,GAAG3vF,MAAM,CAACj1B,MAAM,GAAG,CAAC,GAAGi1B,MAAM,CAACj1B,MAAM,GAAG,CAAC,GAAG4kH,QAAQ,GAAG,CAAC,CAAE;MACpF,IAAMn4E,EAAE,GAAGxX,MAAM,CAAE2vF,QAAQ,GAAG3vF,MAAM,CAACj1B,MAAM,GAAG,CAAC,GAAGi1B,MAAM,CAACj1B,MAAM,GAAG,CAAC,GAAG4kH,QAAQ,GAAG,CAAC,CAAE;MAEpF9uF,KAAK,CAACnhB,GAAG,CACRkwG,UAAU,CAAEj6C,MAAM,EAAEjyC,EAAE,CAACtnB,CAAC,EAAEunB,EAAE,CAACvnB,CAAC,EAAEwnB,EAAE,CAACxnB,CAAC,EAAEo7B,EAAE,CAACp7B,CAAC,CAAE,EAC5CwzG,UAAU,CAAEj6C,MAAM,EAAEjyC,EAAE,CAAChnB,CAAC,EAAEinB,EAAE,CAACjnB,CAAC,EAAEknB,EAAE,CAAClnB,CAAC,EAAE86B,EAAE,CAAC96B,CAAC,CAAE,CAC5C;MAED,OAAOmkB,KAAK;IAEb;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAkzE,WAAA,CAAAztH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACkV,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGgQ,MAAM,CAACkV,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAExD,IAAM61B,KAAK,GAAG/V,MAAM,CAACkV,MAAM,CAAEh1B,CAAC,CAAE;QAEhC,IAAI,CAACg1B,MAAM,CAACx1B,IAAI,CAAEq2B,KAAK,CAAC3f,KAAK,EAAE,CAAE;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjc,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAkzE,WAAA,CAAAztH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACkR,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACklB,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD,IAAM61B,KAAK,GAAG,IAAI,CAACb,MAAM,CAAEh1B,CAAC,CAAE;QAC9B8jB,IAAI,CAACkR,MAAM,CAACx1B,IAAI,CAAEq2B,KAAK,CAAChd,OAAO,EAAE,CAAE;MAEpC;MAEA,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAkzE,WAAA,CAAAztH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAACllF,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACllF,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD,IAAM61B,KAAK,GAAGqkF,IAAI,CAACllF,MAAM,CAAEh1B,CAAC,CAAE;QAC9B,IAAI,CAACg1B,MAAM,CAACx1B,IAAI,CAAE,IAAIgW,OAAO,EAAE,CAACmD,SAAS,CAAEkd,KAAK,CAAE,CAAE;MAErD;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAwxF,WAAA;AAAA,EAxFwBxH,KAAK;AAAApmH,OAAA,CAAA4tH,WAAA,GAAAA,WAAA;AA4F/B,IAAIK,MAAM,GAAG,aAAa/tH,MAAM,CAAC2b,MAAM,CAAC;EACvC7U,SAAS,EAAE,IAAI;EACfwiH,QAAQ,EAAEA,QAAQ;EAClBoB,gBAAgB,EAAEA,gBAAgB;EAClCiB,gBAAgB,EAAEA,gBAAgB;EAClCM,iBAAiB,EAAEA,iBAAiB;EACpC3D,YAAY,EAAEA,YAAY;EAC1BgE,SAAS,EAAEA,SAAS;EACpBK,UAAU,EAAEA,UAAU;EACtBK,oBAAoB,EAAEA,oBAAoB;EAC1CK,qBAAqB,EAAEA,qBAAqB;EAC5CK,WAAW,EAAEA;AACd,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AAHA,IAKMM,SAAS,0BAAAC,QAAA;EAAA7iG,SAAA,CAAA4iG,SAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAA5iG,YAAA,CAAA0iG,SAAA;EAEd,SAAAA,UAAA,EAAc;IAAA,IAAAG,OAAA;IAAAvlH,eAAA,OAAAolH,SAAA;IAEbG,OAAA,GAAAD,QAAA,CAAA5rH,IAAA;IAEA6rH,OAAA,CAAK9rH,IAAI,GAAG,WAAW;IAEvB8rH,OAAA,CAAKC,MAAM,GAAG,EAAE;IAChBD,OAAA,CAAKE,SAAS,GAAG,KAAK,CAAC,CAAC;IAAA,OAAAF,OAAA;EAEzB;EAAC/kH,YAAA,CAAA4kH,SAAA;IAAA1tH,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAK4xG,KAAK,EAAG;MAEZ,IAAI,CAACF,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAE;IAE1B;EAAC;IAAAhuH,GAAA;IAAAE,KAAA,EAED,SAAA+tH,UAAA,EAAY;MAEX;MACA,IAAMC,UAAU,GAAG,IAAI,CAACJ,MAAM,CAAE,CAAC,CAAE,CAAChI,QAAQ,CAAE,CAAC,CAAE;MACjD,IAAMqI,QAAQ,GAAG,IAAI,CAACL,MAAM,CAAE,IAAI,CAACA,MAAM,CAAChoH,MAAM,GAAG,CAAC,CAAE,CAACggH,QAAQ,CAAE,CAAC,CAAE;MAEpE,IAAK,CAAEoI,UAAU,CAACzvG,MAAM,CAAE0vG,QAAQ,CAAE,EAAG;QAEtC,IAAI,CAACL,MAAM,CAACvoH,IAAI,CAAE,IAAIymH,SAAS,CAAEmC,QAAQ,EAAED,UAAU,CAAE,CAAE;MAE1D;IAED;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAAA;IAAAluH,GAAA;IAAAE,KAAA,EAEA,SAAA4lH,SAAUnuG,CAAC,EAAEquG,cAAc,EAAG;MAE7B,IAAMhkG,CAAC,GAAGrK,CAAC,GAAG,IAAI,CAAC0uG,SAAS,EAAE;MAC9B,IAAM+H,YAAY,GAAG,IAAI,CAACC,eAAe,EAAE;MAC3C,IAAItoH,CAAC,GAAG,CAAC;;MAET;;MAEA,OAAQA,CAAC,GAAGqoH,YAAY,CAACtoH,MAAM,EAAG;QAEjC,IAAKsoH,YAAY,CAAEroH,CAAC,CAAE,IAAIic,CAAC,EAAG;UAE7B,IAAMssG,IAAI,GAAGF,YAAY,CAAEroH,CAAC,CAAE,GAAGic,CAAC;UAClC,IAAMgsG,KAAK,GAAG,IAAI,CAACF,MAAM,CAAE/nH,CAAC,CAAE;UAE9B,IAAMkhH,aAAa,GAAG+G,KAAK,CAAC3H,SAAS,EAAE;UACvC,IAAMpsF,CAAC,GAAGgtF,aAAa,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGqH,IAAI,GAAGrH,aAAa;UAE5D,OAAO+G,KAAK,CAACjI,UAAU,CAAE9rF,CAAC,EAAE+rF,cAAc,CAAE;QAE7C;QAEAjgH,CAAC,EAAG;MAEL;MAEA,OAAO,IAAI;;MAEX;IAED;;IAEA;IACA;IACA;EAAA;IAAA/F,GAAA;IAAAE,KAAA,EAEA,SAAAmmH,UAAA,EAAY;MAEX,IAAMkI,IAAI,GAAG,IAAI,CAACF,eAAe,EAAE;MACnC,OAAOE,IAAI,CAAEA,IAAI,CAACzoH,MAAM,GAAG,CAAC,CAAE;IAE/B;;IAEA;EAAA;IAAA9F,GAAA;IAAAE,KAAA,EACA,SAAAymH,iBAAA,EAAmB;MAElB,IAAI,CAAC75F,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC0hG,YAAY,GAAG,IAAI;MACxB,IAAI,CAACH,eAAe,EAAE;IAEvB;;IAEA;IACA;EAAA;IAAAruH,GAAA;IAAAE,KAAA,EAEA,SAAAmuH,gBAAA,EAAkB;MAEjB;;MAEA,IAAK,IAAI,CAACG,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC1oH,MAAM,KAAK,IAAI,CAACgoH,MAAM,CAAChoH,MAAM,EAAG;QAE3E,OAAO,IAAI,CAAC0oH,YAAY;MAEzB;;MAEA;MACA;;MAEA,IAAMlI,OAAO,GAAG,EAAE;MAClB,IAAImI,IAAI,GAAG,CAAC;MAEZ,KAAM,IAAI1oH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACi4G,MAAM,CAAChoH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD0oH,IAAI,IAAI,IAAI,CAACX,MAAM,CAAE/nH,CAAC,CAAE,CAACsgH,SAAS,EAAE;QACpCC,OAAO,CAAC/gH,IAAI,CAAEkpH,IAAI,CAAE;MAErB;MAEA,IAAI,CAACD,YAAY,GAAGlI,OAAO;MAE3B,OAAOA,OAAO;IAEf;EAAC;IAAAtmH,GAAA;IAAAE,KAAA,EAED,SAAAkmH,gBAAiBD,SAAS,GAAG,EAAE,EAAG;MAEjC,IAAMprF,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAIh1B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIogH,SAAS,EAAEpgH,CAAC,EAAG,EAAG;QAEvCg1B,MAAM,CAACx1B,IAAI,CAAE,IAAI,CAACugH,QAAQ,CAAE//G,CAAC,GAAGogH,SAAS,CAAE,CAAE;MAE9C;MAEA,IAAK,IAAI,CAAC4H,SAAS,EAAG;QAErBhzF,MAAM,CAACx1B,IAAI,CAAEw1B,MAAM,CAAE,CAAC,CAAE,CAAE;MAE3B;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA/6B,GAAA;IAAAE,KAAA,EAED,SAAAgmH,UAAWC,SAAS,GAAG,EAAE,EAAG;MAE3B,IAAMprF,MAAM,GAAG,EAAE;MACjB,IAAI2rF,IAAI;MAER,KAAM,IAAI3gH,CAAC,GAAG,CAAC,EAAE+nH,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE/nH,CAAC,GAAG+nH,MAAM,CAAChoH,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEhE,IAAMioH,KAAK,GAAGF,MAAM,CAAE/nH,CAAC,CAAE;QACzB,IAAMopF,UAAU,GAAG6+B,KAAK,CAACpF,cAAc,GAAGzC,SAAS,GAAG,CAAC,GAClD6H,KAAK,CAAC5B,WAAW,IAAI4B,KAAK,CAACvB,YAAY,GAAK,CAAC,GAC9CuB,KAAK,CAACR,aAAa,GAAGrH,SAAS,GAAG6H,KAAK,CAACjzF,MAAM,CAACj1B,MAAM,GACpDqgH,SAAS;QAEd,IAAMuI,GAAG,GAAGV,KAAK,CAAC9H,SAAS,CAAE/2B,UAAU,CAAE;QAEzC,KAAM,IAAI3wD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkwF,GAAG,CAAC5oH,MAAM,EAAE04B,CAAC,EAAG,EAAG;UAEvC,IAAM5C,KAAK,GAAG8yF,GAAG,CAAElwF,CAAC,CAAE;UAEtB,IAAKkoF,IAAI,IAAIA,IAAI,CAACjoG,MAAM,CAAEmd,KAAK,CAAE,EAAG,SAAS,CAAC;;UAE9Cb,MAAM,CAACx1B,IAAI,CAAEq2B,KAAK,CAAE;UACpB8qF,IAAI,GAAG9qF,KAAK;QAEb;MAED;MAEA,IAAK,IAAI,CAACmyF,SAAS,IAAIhzF,MAAM,CAACj1B,MAAM,GAAG,CAAC,IAAI,CAAEi1B,MAAM,CAAEA,MAAM,CAACj1B,MAAM,GAAG,CAAC,CAAE,CAAC2Y,MAAM,CAAEsc,MAAM,CAAE,CAAC,CAAE,CAAE,EAAG;QAEjGA,MAAM,CAACx1B,IAAI,CAAEw1B,MAAM,CAAE,CAAC,CAAE,CAAE;MAE3B;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA/6B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAwzE,SAAA,CAAA/tH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACioG,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI/nH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGgQ,MAAM,CAACioG,MAAM,CAAChoH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAExD,IAAMioH,KAAK,GAAGnoG,MAAM,CAACioG,MAAM,CAAE/nH,CAAC,CAAE;QAEhC,IAAI,CAAC+nH,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAC/xG,KAAK,EAAE,CAAE;MAElC;MAEA,IAAI,CAAC8xG,SAAS,GAAGloG,MAAM,CAACkoG,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAA/tH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAwzE,SAAA,CAAA/tH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACkkG,SAAS,GAAG,IAAI,CAACA,SAAS;MAC/BlkG,IAAI,CAACikG,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI/nH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACi4G,MAAM,CAAChoH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD,IAAMioH,KAAK,GAAG,IAAI,CAACF,MAAM,CAAE/nH,CAAC,CAAE;QAC9B8jB,IAAI,CAACikG,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAC1lG,MAAM,EAAE,CAAE;MAEnC;MAEA,OAAOuB,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAwzE,SAAA,CAAA/tH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC8N,SAAS,GAAG9N,IAAI,CAAC8N,SAAS;MAC/B,IAAI,CAACD,MAAM,GAAG,EAAE;MAEhB,KAAM,IAAI/nH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAAC6N,MAAM,CAAChoH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEtD,IAAMioH,KAAK,GAAG/N,IAAI,CAAC6N,MAAM,CAAE/nH,CAAC,CAAE;QAC9B,IAAI,CAAC+nH,MAAM,CAACvoH,IAAI,CAAE,IAAIkoH,MAAM,CAAEO,KAAK,CAACjsH,IAAI,CAAE,EAAE,CAAC+kD,QAAQ,CAAEknE,KAAK,CAAE,CAAE;MAEjE;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAN,SAAA;AAAA,EA9OsB9H,KAAK;AAAApmH,OAAA,CAAAkuH,SAAA,GAAAA,SAAA;AAAA,IAkPvBiB,IAAI,0BAAAC,UAAA;EAAA9jG,SAAA,CAAA6jG,IAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA7jG,YAAA,CAAA2jG,IAAA;EAET,SAAAA,KAAa5zF,MAAM,EAAG;IAAA,IAAA+zF,OAAA;IAAAxmH,eAAA,OAAAqmH,IAAA;IAErBG,OAAA,GAAAD,QAAA,CAAA7sH,IAAA;IAEA8sH,OAAA,CAAK/sH,IAAI,GAAG,MAAM;IAElB+sH,OAAA,CAAKC,YAAY,GAAG,IAAIxzG,OAAO,EAAE;IAEjC,IAAKwf,MAAM,EAAG;MAEb+zF,OAAA,CAAKh0F,aAAa,CAAEC,MAAM,CAAE;IAE7B;IAAC,OAAA+zF,OAAA;EAEF;EAAChmH,YAAA,CAAA6lH,IAAA;IAAA3uH,GAAA;IAAAE,KAAA,EAED,SAAA46B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACi0F,MAAM,CAAEj0F,MAAM,CAAE,CAAC,CAAE,CAAC5jB,CAAC,EAAE4jB,MAAM,CAAE,CAAC,CAAE,CAACtjB,CAAC,CAAE;MAE3C,KAAM,IAAI1R,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGklB,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEjD,IAAI,CAACkpH,MAAM,CAAEl0F,MAAM,CAAEh1B,CAAC,CAAE,CAACoR,CAAC,EAAE4jB,MAAM,CAAEh1B,CAAC,CAAE,CAAC0R,CAAC,CAAE;MAE5C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA8uH,OAAQ73G,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAI,CAACs3G,YAAY,CAACt0G,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE,CAAC,CAAC;;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA+uH,OAAQ93G,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAMu2G,KAAK,GAAG,IAAIhC,SAAS,CAAE,IAAI,CAAC+C,YAAY,CAAC9yG,KAAK,EAAE,EAAE,IAAIV,OAAO,CAAEpE,CAAC,EAAEM,CAAC,CAAE,CAAE;MAC7E,IAAI,CAACq2G,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAE;MAEzB,IAAI,CAACe,YAAY,CAACt0G,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgvH,iBAAkBC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,EAAG;MAEtC,IAAM4F,KAAK,GAAG,IAAItB,oBAAoB,CACrC,IAAI,CAACqC,YAAY,CAAC9yG,KAAK,EAAE,EACzB,IAAIV,OAAO,CAAE4zG,IAAI,EAAEC,IAAI,CAAE,EACzB,IAAI7zG,OAAO,CAAE4sG,EAAE,EAAEC,EAAE,CAAE,CACrB;MAED,IAAI,CAAC0F,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAE;MAEzB,IAAI,CAACe,YAAY,CAACt0G,GAAG,CAAE0tG,EAAE,EAAEC,EAAE,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAApoH,GAAA;IAAAE,KAAA,EAED,SAAAmvH,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAM4F,KAAK,GAAG,IAAI3C,gBAAgB,CACjC,IAAI,CAAC0D,YAAY,CAAC9yG,KAAK,EAAE,EACzB,IAAIV,OAAO,CAAE+zG,KAAK,EAAEC,KAAK,CAAE,EAC3B,IAAIh0G,OAAO,CAAEi0G,KAAK,EAAEC,KAAK,CAAE,EAC3B,IAAIl0G,OAAO,CAAE4sG,EAAE,EAAEC,EAAE,CAAE,CACrB;MAED,IAAI,CAAC0F,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAE;MAEzB,IAAI,CAACe,YAAY,CAACt0G,GAAG,CAAE0tG,EAAE,EAAEC,EAAE,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAApoH,GAAA;IAAAE,KAAA,EAED,SAAAwvH,WAAYhB,GAAG,CAAC,qBAAsB;MAErC,IAAMiB,IAAI,GAAG,CAAE,IAAI,CAACZ,YAAY,CAAC9yG,KAAK,EAAE,CAAE,CAAC4L,MAAM,CAAE6mG,GAAG,CAAE;MAExD,IAAMV,KAAK,GAAG,IAAIZ,WAAW,CAAEuC,IAAI,CAAE;MACrC,IAAI,CAAC7B,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAE;MAEzB,IAAI,CAACe,YAAY,CAAC7yG,IAAI,CAAEwyG,GAAG,CAAEA,GAAG,CAAC5oH,MAAM,GAAG,CAAC,CAAE,CAAE;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAA0vH,IAAKzH,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAE1D,IAAMzyF,EAAE,GAAG,IAAI,CAAC+4F,YAAY,CAAC53G,CAAC;MAC9B,IAAM8e,EAAE,GAAG,IAAI,CAAC84F,YAAY,CAACt3G,CAAC;MAE9B,IAAI,CAACo4G,MAAM,CAAE1H,EAAE,GAAGnyF,EAAE,EAAEoyF,EAAE,GAAGnyF,EAAE,EAAEkzF,OAAO,EACrCZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAE;MAErC,OAAO,IAAI;IAEZ;EAAC;IAAAzoH,GAAA;IAAAE,KAAA,EAED,SAAA2vH,OAAQ1H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAG;MAE7D,IAAI,CAACqH,UAAU,CAAE3H,EAAE,EAAEC,EAAE,EAAEe,OAAO,EAAEA,OAAO,EAAEZ,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAE;MAE/E,OAAO,IAAI;IAEZ;EAAC;IAAAzoH,GAAA;IAAAE,KAAA,EAED,SAAA6vH,QAAS5H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;MAElF,IAAM1yF,EAAE,GAAG,IAAI,CAAC+4F,YAAY,CAAC53G,CAAC;MAC9B,IAAM8e,EAAE,GAAG,IAAI,CAAC84F,YAAY,CAACt3G,CAAC;MAE9B,IAAI,CAACq4G,UAAU,CAAE3H,EAAE,GAAGnyF,EAAE,EAAEoyF,EAAE,GAAGnyF,EAAE,EAAEoyF,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,CAAE;MAEpG,OAAO,IAAI;IAEZ;EAAC;IAAA1oH,GAAA;IAAAE,KAAA,EAED,SAAA4vH,WAAY3H,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAG;MAErF,IAAMsF,KAAK,GAAG,IAAIhG,YAAY,CAAEG,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,CAAE;MAEzG,IAAK,IAAI,CAACoF,MAAM,CAAChoH,MAAM,GAAG,CAAC,EAAG;QAE7B;QACA,IAAMkqH,UAAU,GAAGhC,KAAK,CAAClI,QAAQ,CAAE,CAAC,CAAE;QAEtC,IAAK,CAAEkK,UAAU,CAACvxG,MAAM,CAAE,IAAI,CAACswG,YAAY,CAAE,EAAG;UAE/C,IAAI,CAACE,MAAM,CAAEe,UAAU,CAAC74G,CAAC,EAAE64G,UAAU,CAACv4G,CAAC,CAAE;QAE1C;MAED;MAEA,IAAI,CAACq2G,MAAM,CAACvoH,IAAI,CAAEyoH,KAAK,CAAE;MAEzB,IAAMiC,SAAS,GAAGjC,KAAK,CAAClI,QAAQ,CAAE,CAAC,CAAE;MACrC,IAAI,CAACiJ,YAAY,CAAC7yG,IAAI,CAAE+zG,SAAS,CAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAAjwH,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAy0E,IAAA,CAAAhvH,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACkpG,YAAY,CAAC7yG,IAAI,CAAE2J,MAAM,CAACkpG,YAAY,CAAE;MAE7C,OAAO,IAAI;IAEZ;EAAC;IAAA/uH,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAy0E,IAAA,CAAAhvH,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACklG,YAAY,GAAG,IAAI,CAACA,YAAY,CAACnwG,OAAO,EAAE;MAE/C,OAAOiL,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAy0E,IAAA,CAAAhvH,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAAC8O,YAAY,CAACrwG,SAAS,CAAEuhG,IAAI,CAAC8O,YAAY,CAAE;MAEhD,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAJ,IAAA;AAAA,EAtLiBjB,SAAS;AAAAluH,OAAA,CAAAmvH,IAAA,GAAAA,IAAA;AAAA,IA0LtBuB,aAAa,0BAAAC,gBAAA;EAAArlG,SAAA,CAAAolG,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAplG,YAAA,CAAAklG,aAAA;EAElB,SAAAA,cAAan1F,MAAM,GAAG,CAAE,IAAIxf,OAAO,CAAE,CAAC,EAAE,CAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,GAAG,CAAE,CAAE,EAAEksG,QAAQ,GAAG,EAAE,EAAE4I,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAGr6G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAq6G,OAAA;IAAAjoH,eAAA,OAAA4nH,aAAA;IAEvJK,OAAA,GAAAH,QAAA,CAAApuH,IAAA;IAEAuuH,OAAA,CAAKxuH,IAAI,GAAG,eAAe;IAE3BwuH,OAAA,CAAKrhF,UAAU,GAAG;MACjBnU,MAAM,EAAEA,MAAM;MACd0sF,QAAQ,EAAEA,QAAQ;MAClB4I,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA;IACZ,CAAC;IAED7I,QAAQ,GAAGxxG,IAAI,CAACsC,KAAK,CAAEkvG,QAAQ,CAAE;;IAEjC;;IAEA6I,SAAS,GAAG15G,KAAK,CAAE05G,SAAS,EAAE,CAAC,EAAEr6G,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;;IAE9C;;IAEA,IAAM2pC,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM7F,GAAG,GAAG,EAAE;IACd,IAAMwwE,WAAW,GAAG,EAAE;IACtB,IAAMzwE,OAAO,GAAG,EAAE;;IAElB;;IAEA,IAAM0wE,eAAe,GAAG,GAAG,GAAGhJ,QAAQ;IACtC,IAAMt5B,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAM1J,EAAE,GAAG,IAAI5R,OAAO,EAAE;IACxB,IAAM4d,MAAM,GAAG,IAAItC,OAAO,EAAE;IAC5B,IAAM65F,SAAS,GAAG,IAAI75F,OAAO,EAAE;IAC/B,IAAM85F,UAAU,GAAG,IAAI95F,OAAO,EAAE;IAChC,IAAI5Y,EAAE,GAAG,CAAC;IACV,IAAIC,EAAE,GAAG,CAAC;;IAEV;;IAEA,KAAM,IAAIsgB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAMzD,MAAM,CAACj1B,MAAM,GAAG,CAAG,EAAE04B,CAAC,EAAG,EAAG;MAEnD,QAASA,CAAC;QAET,KAAK,CAAC;UAAK;;UAEVvgB,EAAE,GAAG8c,MAAM,CAAEyD,CAAC,GAAG,CAAC,CAAE,CAACrnB,CAAC,GAAG4jB,MAAM,CAAEyD,CAAC,CAAE,CAACrnB,CAAC;UACtC+G,EAAE,GAAG6c,MAAM,CAAEyD,CAAC,GAAG,CAAC,CAAE,CAAC/mB,CAAC,GAAGsjB,MAAM,CAAEyD,CAAC,CAAE,CAAC/mB,CAAC;UAEtC0hB,MAAM,CAAChiB,CAAC,GAAG+G,EAAE,GAAG,GAAG;UACnBib,MAAM,CAAC1hB,CAAC,GAAG,CAAEwG,EAAE;UACfkb,MAAM,CAAC7L,CAAC,GAAGpP,EAAE,GAAG,GAAG;UAEnByyG,UAAU,CAACz0G,IAAI,CAAEid,MAAM,CAAE;UAEzBA,MAAM,CAACje,SAAS,EAAE;UAElBs1G,WAAW,CAACjrH,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;UAEhD;QAED,KAAOyN,MAAM,CAACj1B,MAAM,GAAG,CAAC;UAAI;;UAE3B0qH,WAAW,CAACjrH,IAAI,CAAEorH,UAAU,CAACx5G,CAAC,EAAEw5G,UAAU,CAACl5G,CAAC,EAAEk5G,UAAU,CAACrjG,CAAC,CAAE;UAE5D;QAED;UAAW;;UAEVrP,EAAE,GAAG8c,MAAM,CAAEyD,CAAC,GAAG,CAAC,CAAE,CAACrnB,CAAC,GAAG4jB,MAAM,CAAEyD,CAAC,CAAE,CAACrnB,CAAC;UACtC+G,EAAE,GAAG6c,MAAM,CAAEyD,CAAC,GAAG,CAAC,CAAE,CAAC/mB,CAAC,GAAGsjB,MAAM,CAAEyD,CAAC,CAAE,CAAC/mB,CAAC;UAEtC0hB,MAAM,CAAChiB,CAAC,GAAG+G,EAAE,GAAG,GAAG;UACnBib,MAAM,CAAC1hB,CAAC,GAAG,CAAEwG,EAAE;UACfkb,MAAM,CAAC7L,CAAC,GAAGpP,EAAE,GAAG,GAAG;UAEnBwyG,SAAS,CAACx0G,IAAI,CAAEid,MAAM,CAAE;UAExBA,MAAM,CAAChiB,CAAC,IAAIw5G,UAAU,CAACx5G,CAAC;UACxBgiB,MAAM,CAAC1hB,CAAC,IAAIk5G,UAAU,CAACl5G,CAAC;UACxB0hB,MAAM,CAAC7L,CAAC,IAAIqjG,UAAU,CAACrjG,CAAC;UAExB6L,MAAM,CAACje,SAAS,EAAE;UAElBs1G,WAAW,CAACjrH,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;UAEhDqjG,UAAU,CAACz0G,IAAI,CAAEw0G,SAAS,CAAE;MAAC;IAIhC;;IAEA;;IAEA,KAAM,IAAI3qH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0hH,QAAQ,EAAE1hH,CAAC,EAAG,EAAG;MAEtC,IAAMyzB,GAAG,GAAG62F,QAAQ,GAAGtqH,CAAC,GAAG0qH,eAAe,GAAGH,SAAS;MAEtD,IAAMt2G,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEwf,GAAG,CAAE;MAC3B,IAAMzf,GAAG,GAAG9D,IAAI,CAAC8D,GAAG,CAAEyf,GAAG,CAAE;MAE3B,KAAM,IAAIgF,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAMzD,MAAM,CAACj1B,MAAM,GAAG,CAAG,EAAE04B,GAAC,EAAG,EAAG;QAEnD;;QAEA2vD,MAAM,CAACh3E,CAAC,GAAG4jB,MAAM,CAAEyD,GAAC,CAAE,CAACrnB,CAAC,GAAG6C,GAAG;QAC9Bm0E,MAAM,CAAC12E,CAAC,GAAGsjB,MAAM,CAAEyD,GAAC,CAAE,CAAC/mB,CAAC;QACxB02E,MAAM,CAAC7gE,CAAC,GAAGyN,MAAM,CAAEyD,GAAC,CAAE,CAACrnB,CAAC,GAAG4C,GAAG;QAE9B8rC,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;QAE7C;;QAEAH,EAAE,CAAChW,CAAC,GAAGpR,CAAC,GAAG0hH,QAAQ;QACnBt6F,EAAE,CAAC1V,CAAC,GAAG+mB,GAAC,IAAKzD,MAAM,CAACj1B,MAAM,GAAG,CAAC,CAAE;QAEhCk6C,GAAG,CAACz6C,IAAI,CAAE4nB,EAAE,CAAChW,CAAC,EAAEgW,EAAE,CAAC1V,CAAC,CAAE;;QAEtB;;QAEA,IAAMN,CAAC,GAAGq5G,WAAW,CAAE,CAAC,GAAGhyF,GAAC,GAAG,CAAC,CAAE,GAAGxkB,GAAG;QACxC,IAAMvC,CAAC,GAAG+4G,WAAW,CAAE,CAAC,GAAGhyF,GAAC,GAAG,CAAC,CAAE;QAClC,IAAMlR,CAAC,GAAGkjG,WAAW,CAAE,CAAC,GAAGhyF,GAAC,GAAG,CAAC,CAAE,GAAGzkB,GAAG;QAExCgmC,OAAO,CAACx6C,IAAI,CAAE4R,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAE;MAExB;IAED;;IAEA;;IAEA,KAAM,IAAIvnB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG0hH,QAAQ,EAAE1hH,IAAC,EAAG,EAAG;MAErC,KAAM,IAAIy4B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAKzD,MAAM,CAACj1B,MAAM,GAAG,CAAG,EAAE04B,GAAC,EAAG,EAAG;QAElD,IAAMoyF,IAAI,GAAGpyF,GAAC,GAAGz4B,IAAC,GAAGg1B,MAAM,CAACj1B,MAAM;QAElC,IAAM6T,CAAC,GAAGi3G,IAAI;QACd,IAAMh3G,CAAC,GAAGg3G,IAAI,GAAG71F,MAAM,CAACj1B,MAAM;QAC9B,IAAM+T,CAAC,GAAG+2G,IAAI,GAAG71F,MAAM,CAACj1B,MAAM,GAAG,CAAC;QAClC,IAAMkc,CAAC,GAAG4uG,IAAI,GAAG,CAAC;;QAElB;;QAEA/wE,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;QACvB69B,OAAO,CAACt6C,IAAI,CAAEsU,CAAC,EAAEmI,CAAC,EAAEpI,CAAC,CAAE;MAExB;IAED;;IAEA;;IAEA22G,OAAA,CAAK1xE,QAAQ,CAAEgB,OAAO,CAAE;IACxB0wE,OAAA,CAAKxxE,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1E0qE,OAAA,CAAKxxE,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAC/DuwE,OAAA,CAAKxxE,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IAAC,OAAAwwE,OAAA;EAEzE;EAACznH,YAAA,CAAAonH,aAAA;IAAAlwH,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIqmG,aAAa,CAAErmG,IAAI,CAACkR,MAAM,EAAElR,IAAI,CAAC49F,QAAQ,EAAE59F,IAAI,CAACwmG,QAAQ,EAAExmG,IAAI,CAACymG,SAAS,CAAE;IAEtF;EAAC;EAAA,OAAAJ,aAAA;AAAA,EAvK0BjyE,cAAc;AAAAz+C,OAAA,CAAA0wH,aAAA,GAAA1wH,OAAA,CAAAqxH,mBAAA,GAAAX,aAAA;AAAA,IA2KpCY,eAAe,0BAAAC,cAAA;EAAAjmG,SAAA,CAAAgmG,eAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAAhmG,YAAA,CAAA8lG,eAAA;EAEpB,SAAAA,gBAAav3F,MAAM,GAAG,CAAC,EAAEzzB,MAAM,GAAG,CAAC,EAAEmrH,WAAW,GAAG,CAAC,EAAEC,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAA7oH,eAAA,OAAAwoH,eAAA;IAE1E,IAAM11C,IAAI,GAAG,IAAIuzC,IAAI,EAAE;IACvBvzC,IAAI,CAACy0C,MAAM,CAAE,CAAC,EAAE,CAAE/pH,MAAM,GAAG,CAAC,EAAEyzB,MAAM,EAAEtjB,IAAI,CAACC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAE;IACxDklE,IAAI,CAACy0C,MAAM,CAAE,CAAC,EAAE/pH,MAAM,GAAG,CAAC,EAAEyzB,MAAM,EAAE,CAAC,EAAEtjB,IAAI,CAACC,EAAE,GAAG,GAAG,CAAE;IAEtDi7G,OAAA,GAAAH,QAAA,CAAAhvH,IAAA,OAAOo5E,IAAI,CAAC8qC,SAAS,CAAE+K,WAAW,CAAE,EAAEC,cAAc;IAEpDC,OAAA,CAAKpvH,IAAI,GAAG,iBAAiB;IAE7BovH,OAAA,CAAKjiF,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdrQ,MAAM,EAAEpjB,MAAM;MACdmrH,WAAW,EAAEA,WAAW;MACxBC,cAAc,EAAEA;IACjB,CAAC;IAAC,OAAAC,OAAA;EAEH;EAACroH,YAAA,CAAAgoH,eAAA;IAAA9wH,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIinG,eAAe,CAAEjnG,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC/jB,MAAM,EAAE+jB,IAAI,CAAConG,WAAW,EAAEpnG,IAAI,CAACqnG,cAAc,CAAE;IAE9F;EAAC;EAAA,OAAAJ,eAAA;AAAA,EAzB4BZ,aAAa;AAAA1wH,OAAA,CAAAsxH,eAAA,GAAAtxH,OAAA,CAAA4xH,qBAAA,GAAAN,eAAA;AAAA,IA6BrCO,cAAc,0BAAAC,gBAAA;EAAAxmG,SAAA,CAAAumG,cAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAvmG,YAAA,CAAAqmG,cAAA;EAEnB,SAAAA,eAAa93F,MAAM,GAAG,CAAC,EAAEkuF,QAAQ,GAAG,CAAC,EAAE+J,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGx7G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAw7G,OAAA;IAAAppH,eAAA,OAAA+oH,cAAA;IAElFK,OAAA,GAAAH,QAAA,CAAAvvH,IAAA;IAEA0vH,OAAA,CAAK3vH,IAAI,GAAG,gBAAgB;IAE5B2vH,OAAA,CAAKxiF,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdkuF,QAAQ,EAAEA,QAAQ;MAClB+J,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAEDhK,QAAQ,GAAGxxG,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2wG,QAAQ,CAAE;;IAElC;;IAEA,IAAM5nE,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMmuC,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAM1J,EAAE,GAAG,IAAI5R,OAAO,EAAE;;IAExB;;IAEAsqC,QAAQ,CAACtgD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACxBw6C,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACvBy6C,GAAG,CAACz6C,IAAI,CAAE,GAAG,EAAE,GAAG,CAAE;IAEpB,KAAM,IAAIqT,CAAC,GAAG,CAAC,EAAE7S,CAAC,GAAG,CAAC,EAAE6S,CAAC,IAAI6uG,QAAQ,EAAE7uG,CAAC,EAAG,EAAE7S,CAAC,IAAI,CAAC,EAAG;MAErD,IAAM4rH,OAAO,GAAGH,UAAU,GAAG54G,CAAC,GAAG6uG,QAAQ,GAAGgK,WAAW;;MAEvD;;MAEAtjC,MAAM,CAACh3E,CAAC,GAAGoiB,MAAM,GAAGtjB,IAAI,CAAC8D,GAAG,CAAE43G,OAAO,CAAE;MACvCxjC,MAAM,CAAC12E,CAAC,GAAG8hB,MAAM,GAAGtjB,IAAI,CAAC+D,GAAG,CAAE23G,OAAO,CAAE;MAEvC9rE,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;MAE7C;;MAEAyyB,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;;MAEvB;;MAEA4nB,EAAE,CAAChW,CAAC,GAAG,CAAE0uC,QAAQ,CAAE9/C,CAAC,CAAE,GAAGwzB,MAAM,GAAG,CAAC,IAAK,CAAC;MACzCpM,EAAE,CAAC1V,CAAC,GAAG,CAAEouC,QAAQ,CAAE9/C,CAAC,GAAG,CAAC,CAAE,GAAGwzB,MAAM,GAAG,CAAC,IAAK,CAAC;MAE7CymB,GAAG,CAACz6C,IAAI,CAAE4nB,EAAE,CAAChW,CAAC,EAAEgW,EAAE,CAAC1V,CAAC,CAAE;IAEvB;;IAEA;;IAEA,KAAM,IAAI1R,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI0hH,QAAQ,EAAE1hH,IAAC,EAAG,EAAG;MAEtC85C,OAAO,CAACt6C,IAAI,CAAEQ,IAAC,EAAEA,IAAC,GAAG,CAAC,EAAE,CAAC,CAAE;IAE5B;;IAEA;;IAEA2rH,OAAA,CAAK7yE,QAAQ,CAAEgB,OAAO,CAAE;IACxB6xE,OAAA,CAAK3yE,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1E6rE,OAAA,CAAK3yE,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvE2xE,OAAA,CAAK3yE,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAAC,OAAA0xE,OAAA;EAEjE;EAAC5oH,YAAA,CAAAuoH,cAAA;IAAArxH,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIwnG,cAAc,CAAExnG,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC49F,QAAQ,EAAE59F,IAAI,CAAC2nG,UAAU,EAAE3nG,IAAI,CAAC4nG,WAAW,CAAE;IAE3F;EAAC;EAAA,OAAAJ,cAAA;AAAA,EAhF2BpzE,cAAc;AAAAz+C,OAAA,CAAA6xH,cAAA,GAAA7xH,OAAA,CAAAoyH,oBAAA,GAAAP,cAAA;AAAA,IAoFrCQ,gBAAgB,0BAAAC,gBAAA;EAAAhnG,SAAA,CAAA+mG,gBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA/mG,YAAA,CAAA6mG,gBAAA;EAErB,SAAAA,iBAAaG,SAAS,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,EAAE/oG,MAAM,GAAG,CAAC,EAAEgoG,cAAc,GAAG,CAAC,EAAEzrE,cAAc,GAAG,CAAC,EAAEysE,SAAS,GAAG,KAAK,EAAEV,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGx7G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAAi8G,OAAA;IAAA7pH,eAAA,OAAAupH,gBAAA;IAEhKM,OAAA,GAAAJ,QAAA,CAAA/vH,IAAA;IAEAmwH,OAAA,CAAKpwH,IAAI,GAAG,kBAAkB;IAE9BowH,OAAA,CAAKjjF,UAAU,GAAG;MACjB8iF,SAAS,EAAEA,SAAS;MACpBC,YAAY,EAAEA,YAAY;MAC1B/oG,MAAM,EAAEA,MAAM;MACdgoG,cAAc,EAAEA,cAAc;MAC9BzrE,cAAc,EAAEA,cAAc;MAC9BysE,SAAS,EAAEA,SAAS;MACpBV,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAED,IAAM7rE,KAAK,GAAA/5B,sBAAA,CAAAsmG,OAAA,CAAO;IAElBjB,cAAc,GAAGj7G,IAAI,CAACsC,KAAK,CAAE24G,cAAc,CAAE;IAC7CzrE,cAAc,GAAGxvC,IAAI,CAACsC,KAAK,CAAEktC,cAAc,CAAE;;IAE7C;;IAEA,IAAM5F,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAIxqC,KAAK,GAAG,CAAC;IACb,IAAM48G,UAAU,GAAG,EAAE;IACrB,IAAMnoC,UAAU,GAAG/gE,MAAM,GAAG,CAAC;IAC7B,IAAI68B,UAAU,GAAG,CAAC;;IAElB;;IAEAssE,aAAa,EAAE;IAEf,IAAKH,SAAS,KAAK,KAAK,EAAG;MAE1B,IAAKF,SAAS,GAAG,CAAC,EAAGM,WAAW,CAAE,IAAI,CAAE;MACxC,IAAKL,YAAY,GAAG,CAAC,EAAGK,WAAW,CAAE,KAAK,CAAE;IAE7C;;IAEA;;IAEAH,OAAA,CAAKtzE,QAAQ,CAAEgB,OAAO,CAAE;IACxBsyE,OAAA,CAAKpzE,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1EssE,OAAA,CAAKpzE,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvEoyE,OAAA,CAAKpzE,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAE/D,SAASqyE,aAAaA,CAAA,EAAG;MAExB,IAAMl5F,MAAM,GAAG,IAAItC,OAAO,EAAE;MAC5B,IAAMs3D,MAAM,GAAG,IAAIt3D,OAAO,EAAE;MAE5B,IAAIgwB,UAAU,GAAG,CAAC;;MAElB;MACA,IAAM0rE,KAAK,GAAG,CAAEN,YAAY,GAAGD,SAAS,IAAK9oG,MAAM;;MAEnD;;MAEA,KAAM,IAAIzR,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIguC,cAAc,EAAEhuC,CAAC,EAAG,EAAG;QAE5C,IAAM+6G,QAAQ,GAAG,EAAE;QAEnB,IAAMr2G,CAAC,GAAG1E,CAAC,GAAGguC,cAAc;;QAE5B;;QAEA,IAAMlsB,MAAM,GAAGpd,CAAC,IAAK81G,YAAY,GAAGD,SAAS,CAAE,GAAGA,SAAS;QAE3D,KAAM,IAAI76G,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI+5G,cAAc,EAAE/5G,CAAC,EAAG,EAAG;UAE5C,IAAM8iB,CAAC,GAAG9iB,CAAC,GAAG+5G,cAAc;UAE5B,IAAMxtG,KAAK,GAAGuW,CAAC,GAAGw3F,WAAW,GAAGD,UAAU;UAE1C,IAAMiB,QAAQ,GAAGx8G,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;UAClC,IAAMgvG,QAAQ,GAAGz8G,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;;UAElC;;UAEAyqE,MAAM,CAACh3E,CAAC,GAAGoiB,MAAM,GAAGk5F,QAAQ;UAC5BtkC,MAAM,CAAC12E,CAAC,GAAG,CAAE0E,CAAC,GAAG+M,MAAM,GAAG+gE,UAAU;UACpCkE,MAAM,CAAC7gE,CAAC,GAAGiM,MAAM,GAAGm5F,QAAQ;UAC5B7sE,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;UAE7C;;UAEA6L,MAAM,CAAC1e,GAAG,CAAEg4G,QAAQ,EAAEF,KAAK,EAAEG,QAAQ,CAAE,CAACx3G,SAAS,EAAE;UACnD6kC,OAAO,CAACx6C,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;;UAE5C;;UAEA0yB,GAAG,CAACz6C,IAAI,CAAE00B,CAAC,EAAE,CAAC,GAAG9d,CAAC,CAAE;;UAEpB;;UAEAq2G,QAAQ,CAACjtH,IAAI,CAAEiQ,KAAK,EAAG,CAAE;QAE1B;;QAEA;;QAEA48G,UAAU,CAAC7sH,IAAI,CAAEitH,QAAQ,CAAE;MAE5B;;MAEA;;MAEA,KAAM,IAAIr7G,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG+5G,cAAc,EAAE/5G,GAAC,EAAG,EAAG;QAE3C,KAAM,IAAIM,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGguC,cAAc,EAAEhuC,GAAC,EAAG,EAAG;UAE3C;;UAEA,IAAMkC,CAAC,GAAGy4G,UAAU,CAAE36G,GAAC,CAAE,CAAEN,GAAC,CAAE;UAC9B,IAAMyC,CAAC,GAAGw4G,UAAU,CAAE36G,GAAC,GAAG,CAAC,CAAE,CAAEN,GAAC,CAAE;UAClC,IAAM0C,CAAC,GAAGu4G,UAAU,CAAE36G,GAAC,GAAG,CAAC,CAAE,CAAEN,GAAC,GAAG,CAAC,CAAE;UACtC,IAAM6K,CAAC,GAAGowG,UAAU,CAAE36G,GAAC,CAAE,CAAEN,GAAC,GAAG,CAAC,CAAE;;UAElC;;UAEA0oC,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;;UAEvB;;UAEA6kC,UAAU,IAAI,CAAC;QAEhB;MAED;;MAEA;;MAEAjB,KAAK,CAAC1G,QAAQ,CAAE6G,UAAU,EAAEc,UAAU,EAAE,CAAC,CAAE;;MAE3C;;MAEAd,UAAU,IAAIc,UAAU;IAEzB;IAEA,SAASyrE,WAAWA,CAAE5qF,GAAG,EAAG;MAE3B;MACA,IAAMirF,gBAAgB,GAAGn9G,KAAK;MAE9B,IAAM2X,EAAE,GAAG,IAAI5R,OAAO,EAAE;MACxB,IAAM4yE,MAAM,GAAG,IAAIt3D,OAAO,EAAE;MAE5B,IAAIgwB,UAAU,GAAG,CAAC;MAElB,IAAMttB,MAAM,GAAKmO,GAAG,KAAK,IAAI,GAAKsqF,SAAS,GAAGC,YAAY;MAC1D,IAAMxvF,IAAI,GAAKiF,GAAG,KAAK,IAAI,GAAK,CAAC,GAAG,CAAE,CAAC;;MAEvC;MACA;MACA;;MAEA,KAAM,IAAIvwB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI+5G,cAAc,EAAE/5G,CAAC,EAAG,EAAG;QAE5C;;QAEA0uC,QAAQ,CAACtgD,IAAI,CAAE,CAAC,EAAE0kF,UAAU,GAAGxnD,IAAI,EAAE,CAAC,CAAE;;QAExC;;QAEAsd,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAEk9B,IAAI,EAAE,CAAC,CAAE;;QAE1B;;QAEAud,GAAG,CAACz6C,IAAI,CAAE,GAAG,EAAE,GAAG,CAAE;;QAEpB;;QAEAiQ,KAAK,EAAG;MAET;;MAEA;MACA,IAAMo9G,cAAc,GAAGp9G,KAAK;;MAE5B;;MAEA,KAAM,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,IAAI+5G,cAAc,EAAE/5G,GAAC,EAAG,EAAG;QAE5C,IAAM8iB,CAAC,GAAG9iB,GAAC,GAAG+5G,cAAc;QAC5B,IAAMxtG,KAAK,GAAGuW,CAAC,GAAGw3F,WAAW,GAAGD,UAAU;QAE1C,IAAMkB,QAAQ,GAAGz8G,IAAI,CAAC8D,GAAG,CAAE2J,KAAK,CAAE;QAClC,IAAM+uG,QAAQ,GAAGx8G,IAAI,CAAC+D,GAAG,CAAE0J,KAAK,CAAE;;QAElC;;QAEAyqE,MAAM,CAACh3E,CAAC,GAAGoiB,MAAM,GAAGk5F,QAAQ;QAC5BtkC,MAAM,CAAC12E,CAAC,GAAGwyE,UAAU,GAAGxnD,IAAI;QAC5B0rD,MAAM,CAAC7gE,CAAC,GAAGiM,MAAM,GAAGm5F,QAAQ;QAC5B7sE,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;QAE7C;;QAEAyyB,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAEk9B,IAAI,EAAE,CAAC,CAAE;;QAE1B;;QAEAtV,EAAE,CAAChW,CAAC,GAAKu7G,QAAQ,GAAG,GAAG,GAAK,GAAG;QAC/BvlG,EAAE,CAAC1V,CAAC,GAAKg7G,QAAQ,GAAG,GAAG,GAAGhwF,IAAI,GAAK,GAAG;QACtCud,GAAG,CAACz6C,IAAI,CAAE4nB,EAAE,CAAChW,CAAC,EAAEgW,EAAE,CAAC1V,CAAC,CAAE;;QAEtB;;QAEAjC,KAAK,EAAG;MAET;;MAEA;;MAEA,KAAM,IAAI2B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG+5G,cAAc,EAAE/5G,GAAC,EAAG,EAAG;QAE3C,IAAM0C,CAAC,GAAG84G,gBAAgB,GAAGx7G,GAAC;QAC9B,IAAMpR,CAAC,GAAG6sH,cAAc,GAAGz7G,GAAC;QAE5B,IAAKuwB,GAAG,KAAK,IAAI,EAAG;UAEnB;;UAEAmY,OAAO,CAACt6C,IAAI,CAAEQ,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE8T,CAAC,CAAE;QAE5B,CAAC,MAAM;UAEN;;UAEAgmC,OAAO,CAACt6C,IAAI,CAAEQ,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE8T,CAAC,CAAE;QAE5B;QAEAgtC,UAAU,IAAI,CAAC;MAEhB;;MAEA;;MAEAjB,KAAK,CAAC1G,QAAQ,CAAE6G,UAAU,EAAEc,UAAU,EAAEnf,GAAG,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAE;;MAE9D;;MAEAqe,UAAU,IAAIc,UAAU;IAEzB;IAAC,OAAAsrE,OAAA;EAEF;EAACrpH,YAAA,CAAA+oH,gBAAA;IAAA7xH,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIgoG,gBAAgB,CAAEhoG,IAAI,CAACmoG,SAAS,EAAEnoG,IAAI,CAACooG,YAAY,EAAEpoG,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACqnG,cAAc,EAAErnG,IAAI,CAAC47B,cAAc,EAAE57B,IAAI,CAACqoG,SAAS,EAAEroG,IAAI,CAAC2nG,UAAU,EAAE3nG,IAAI,CAAC4nG,WAAW,CAAE;IAE3K;EAAC;EAAA,OAAAI,gBAAA;AAAA,EAzQ6B5zE,cAAc;AAAAz+C,OAAA,CAAAqyH,gBAAA,GAAAryH,OAAA,CAAAqzH,sBAAA,GAAAhB,gBAAA;AAAA,IA6QvCiB,YAAY,0BAAAC,iBAAA;EAAAjoG,SAAA,CAAAgoG,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAhoG,YAAA,CAAA8nG,YAAA;EAEjB,SAAAA,aAAav5F,MAAM,GAAG,CAAC,EAAErQ,MAAM,GAAG,CAAC,EAAEgoG,cAAc,GAAG,CAAC,EAAEzrE,cAAc,GAAG,CAAC,EAAEysE,SAAS,GAAG,KAAK,EAAEV,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGx7G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAA+8G,OAAA;IAAA3qH,eAAA,OAAAwqH,YAAA;IAE3IG,OAAA,GAAAD,QAAA,CAAAhxH,IAAA,OAAO,CAAC,EAAEu3B,MAAM,EAAErQ,MAAM,EAAEgoG,cAAc,EAAEzrE,cAAc,EAAEysE,SAAS,EAAEV,UAAU,EAAEC,WAAW;IAE5FwB,OAAA,CAAKlxH,IAAI,GAAG,cAAc;IAE1BkxH,OAAA,CAAK/jF,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdrQ,MAAM,EAAEA,MAAM;MACdgoG,cAAc,EAAEA,cAAc;MAC9BzrE,cAAc,EAAEA,cAAc;MAC9BysE,SAAS,EAAEA,SAAS;MACpBV,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAAC,OAAAwB,OAAA;EAEH;EAACnqH,YAAA,CAAAgqH,YAAA;IAAA9yH,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIipG,YAAY,CAAEjpG,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACqnG,cAAc,EAAErnG,IAAI,CAAC47B,cAAc,EAAE57B,IAAI,CAACqoG,SAAS,EAAEroG,IAAI,CAAC2nG,UAAU,EAAE3nG,IAAI,CAAC4nG,WAAW,CAAE;IAEjJ;EAAC;EAAA,OAAAqB,YAAA;AAAA,EAxByBjB,gBAAgB;AAAAryH,OAAA,CAAAszH,YAAA,GAAAtzH,OAAA,CAAA0zH,kBAAA,GAAAJ,YAAA;AAAA,IA4BrCK,kBAAkB,0BAAAC,gBAAA;EAAAtoG,SAAA,CAAAqoG,kBAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAroG,YAAA,CAAAmoG,kBAAA;EAEvB,SAAAA,mBAAattE,QAAQ,GAAG,EAAE,EAAEhG,OAAO,GAAG,EAAE,EAAEtmB,MAAM,GAAG,CAAC,EAAEohF,MAAM,GAAG,CAAC,EAAG;IAAA,IAAA2Y,OAAA;IAAAhrH,eAAA,OAAA6qH,kBAAA;IAElEG,OAAA,GAAAD,QAAA,CAAArxH,IAAA;IAEAsxH,OAAA,CAAKvxH,IAAI,GAAG,oBAAoB;IAEhCuxH,OAAA,CAAKpkF,UAAU,GAAG;MACjB2W,QAAQ,EAAEA,QAAQ;MAClBhG,OAAO,EAAEA,OAAO;MAChBtmB,MAAM,EAAEA,MAAM;MACdohF,MAAM,EAAEA;IACT,CAAC;;IAED;;IAEA,IAAM4Y,YAAY,GAAG,EAAE;IACvB,IAAMC,QAAQ,GAAG,EAAE;;IAEnB;;IAEAC,SAAS,CAAE9Y,MAAM,CAAE;;IAEnB;;IAEA+Y,WAAW,CAAEn6F,MAAM,CAAE;;IAErB;;IAEAo6F,WAAW,EAAE;;IAEb;;IAEAL,OAAA,CAAKv0E,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEm2E,YAAY,EAAE,CAAC,CAAE,CAAE;IAC9ED,OAAA,CAAKv0E,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAEm2E,YAAY,CAAClsH,KAAK,EAAE,EAAE,CAAC,CAAE,CAAE;IACpFisH,OAAA,CAAKv0E,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAEo2E,QAAQ,EAAE,CAAC,CAAE,CAAE;IAEpE,IAAK7Y,MAAM,KAAK,CAAC,EAAG;MAEnB2Y,OAAA,CAAKnyE,oBAAoB,EAAE,CAAC,CAAC;IAE9B,CAAC,MAAM;MAENmyE,OAAA,CAAKxxE,gBAAgB,EAAE,CAAC,CAAC;IAE1B;;IAEA;;IAEA,SAAS2xE,SAASA,CAAE9Y,MAAM,EAAG;MAE5B,IAAMhhG,CAAC,GAAG,IAAIkd,OAAO,EAAE;MACvB,IAAMjd,CAAC,GAAG,IAAIid,OAAO,EAAE;MACvB,IAAMhd,CAAC,GAAG,IAAIgd,OAAO,EAAE;;MAEvB;;MAEA,KAAM,IAAI9wB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG85C,OAAO,CAAC/5C,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAE7C;;QAEA6tH,gBAAgB,CAAE/zE,OAAO,CAAE95C,CAAC,GAAG,CAAC,CAAE,EAAE4T,CAAC,CAAE;QACvCi6G,gBAAgB,CAAE/zE,OAAO,CAAE95C,CAAC,GAAG,CAAC,CAAE,EAAE6T,CAAC,CAAE;QACvCg6G,gBAAgB,CAAE/zE,OAAO,CAAE95C,CAAC,GAAG,CAAC,CAAE,EAAE8T,CAAC,CAAE;;QAEvC;;QAEAg6G,aAAa,CAAEl6G,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE8gG,MAAM,CAAE;MAEjC;IAED;IAEA,SAASkZ,aAAaA,CAAEl6G,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE8gG,MAAM,EAAG;MAEzC,IAAMmZ,IAAI,GAAGnZ,MAAM,GAAG,CAAC;;MAEvB;;MAEA,IAAMx+F,CAAC,GAAG,EAAE;;MAEZ;;MAEA,KAAM,IAAIpW,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI+tH,IAAI,EAAE/tH,CAAC,EAAG,EAAG;QAElCoW,CAAC,CAAEpW,CAAC,CAAE,GAAG,EAAE;QAEX,IAAMguH,EAAE,GAAGp6G,CAAC,CAACsC,KAAK,EAAE,CAACvE,IAAI,CAAEmC,CAAC,EAAE9T,CAAC,GAAG+tH,IAAI,CAAE;QACxC,IAAME,EAAE,GAAGp6G,CAAC,CAACqC,KAAK,EAAE,CAACvE,IAAI,CAAEmC,CAAC,EAAE9T,CAAC,GAAG+tH,IAAI,CAAE;QAExC,IAAMG,IAAI,GAAGH,IAAI,GAAG/tH,CAAC;QAErB,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIy1F,IAAI,EAAEz1F,CAAC,EAAG,EAAG;UAElC,IAAKA,CAAC,KAAK,CAAC,IAAIz4B,CAAC,KAAK+tH,IAAI,EAAG;YAE5B33G,CAAC,CAAEpW,CAAC,CAAE,CAAEy4B,CAAC,CAAE,GAAGu1F,EAAE;UAEjB,CAAC,MAAM;YAEN53G,CAAC,CAAEpW,CAAC,CAAE,CAAEy4B,CAAC,CAAE,GAAGu1F,EAAE,CAAC93G,KAAK,EAAE,CAACvE,IAAI,CAAEs8G,EAAE,EAAEx1F,CAAC,GAAGy1F,IAAI,CAAE;UAE9C;QAED;MAED;;MAEA;;MAEA,KAAM,IAAIluH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+tH,IAAI,EAAE/tH,IAAC,EAAG,EAAG;QAEjC,KAAM,IAAIy4B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,IAAKs1F,IAAI,GAAG/tH,IAAC,CAAE,GAAG,CAAC,EAAEy4B,GAAC,EAAG,EAAG;UAEjD,IAAMizD,CAAC,GAAGx7E,IAAI,CAACsC,KAAK,CAAEimB,GAAC,GAAG,CAAC,CAAE;UAE7B,IAAKA,GAAC,GAAG,CAAC,KAAK,CAAC,EAAG;YAElB01F,UAAU,CAAE/3G,CAAC,CAAEpW,IAAC,CAAE,CAAE0rF,CAAC,GAAG,CAAC,CAAE,CAAE;YAC7ByiC,UAAU,CAAE/3G,CAAC,CAAEpW,IAAC,GAAG,CAAC,CAAE,CAAE0rF,CAAC,CAAE,CAAE;YAC7ByiC,UAAU,CAAE/3G,CAAC,CAAEpW,IAAC,CAAE,CAAE0rF,CAAC,CAAE,CAAE;UAE1B,CAAC,MAAM;YAENyiC,UAAU,CAAE/3G,CAAC,CAAEpW,IAAC,CAAE,CAAE0rF,CAAC,GAAG,CAAC,CAAE,CAAE;YAC7ByiC,UAAU,CAAE/3G,CAAC,CAAEpW,IAAC,GAAG,CAAC,CAAE,CAAE0rF,CAAC,GAAG,CAAC,CAAE,CAAE;YACjCyiC,UAAU,CAAE/3G,CAAC,CAAEpW,IAAC,GAAG,CAAC,CAAE,CAAE0rF,CAAC,CAAE,CAAE;UAE9B;QAED;MAED;IAED;IAEA,SAASiiC,WAAWA,CAAEn6F,MAAM,EAAG;MAE9B,IAAM40D,MAAM,GAAG,IAAIt3D,OAAO,EAAE;;MAE5B;;MAEA,KAAM,IAAI9wB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwtH,YAAY,CAACztH,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAElDooF,MAAM,CAACh3E,CAAC,GAAGo8G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE;QAChCooF,MAAM,CAAC12E,CAAC,GAAG87G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE;QAChCooF,MAAM,CAAC7gE,CAAC,GAAGimG,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE;QAEhCooF,MAAM,CAACjzE,SAAS,EAAE,CAAC0B,cAAc,CAAE2c,MAAM,CAAE;QAE3Cg6F,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,GAAGooF,MAAM,CAACh3E,CAAC;QAChCo8G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,GAAGooF,MAAM,CAAC12E,CAAC;QAChC87G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,GAAGooF,MAAM,CAAC7gE,CAAC;MAEjC;IAED;IAEA,SAASqmG,WAAWA,CAAA,EAAG;MAEtB,IAAMxlC,MAAM,GAAG,IAAIt3D,OAAO,EAAE;MAE5B,KAAM,IAAI9wB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwtH,YAAY,CAACztH,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAElDooF,MAAM,CAACh3E,CAAC,GAAGo8G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE;QAChCooF,MAAM,CAAC12E,CAAC,GAAG87G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE;QAChCooF,MAAM,CAAC7gE,CAAC,GAAGimG,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE;QAEhC,IAAMk0B,CAAC,GAAGk6F,OAAO,CAAEhmC,MAAM,CAAE,GAAG,CAAC,GAAGl4E,IAAI,CAACC,EAAE,GAAG,GAAG;QAC/C,IAAMiG,CAAC,GAAGi4G,WAAW,CAAEjmC,MAAM,CAAE,GAAGl4E,IAAI,CAACC,EAAE,GAAG,GAAG;QAC/Cs9G,QAAQ,CAACjuH,IAAI,CAAE00B,CAAC,EAAE,CAAC,GAAG9d,CAAC,CAAE;MAE1B;MAEAk4G,UAAU,EAAE;MAEZC,WAAW,EAAE;IAEd;IAEA,SAASA,WAAWA,CAAA,EAAG;MAEtB;;MAEA,KAAM,IAAIvuH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGytH,QAAQ,CAAC1tH,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAG;QAE9C;;QAEA,IAAMiwB,EAAE,GAAGw9F,QAAQ,CAAEztH,CAAC,GAAG,CAAC,CAAE;QAC5B,IAAMqwB,EAAE,GAAGo9F,QAAQ,CAAEztH,CAAC,GAAG,CAAC,CAAE;QAC5B,IAAM6gC,EAAE,GAAG4sF,QAAQ,CAAEztH,CAAC,GAAG,CAAC,CAAE;QAE5B,IAAM+Q,GAAG,GAAGb,IAAI,CAACa,GAAG,CAAEkf,EAAE,EAAEI,EAAE,EAAEwQ,EAAE,CAAE;QAClC,IAAM/vB,GAAG,GAAGZ,IAAI,CAACY,GAAG,CAAEmf,EAAE,EAAEI,EAAE,EAAEwQ,EAAE,CAAE;;QAElC;;QAEA,IAAK9vB,GAAG,GAAG,GAAG,IAAID,GAAG,GAAG,GAAG,EAAG;UAE7B,IAAKmf,EAAE,GAAG,GAAG,EAAGw9F,QAAQ,CAAEztH,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UACtC,IAAKqwB,EAAE,GAAG,GAAG,EAAGo9F,QAAQ,CAAEztH,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;UACtC,IAAK6gC,EAAE,GAAG,GAAG,EAAG4sF,QAAQ,CAAEztH,CAAC,GAAG,CAAC,CAAE,IAAI,CAAC;QAEvC;MAED;IAED;IAEA,SAASmuH,UAAUA,CAAE/lC,MAAM,EAAG;MAE7BolC,YAAY,CAAChuH,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;IAElD;IAEA,SAASsmG,gBAAgBA,CAAEp+G,KAAK,EAAE24E,MAAM,EAAG;MAE1C,IAAM1rC,MAAM,GAAGjtC,KAAK,GAAG,CAAC;MAExB24E,MAAM,CAACh3E,CAAC,GAAG0uC,QAAQ,CAAEpD,MAAM,GAAG,CAAC,CAAE;MACjC0rC,MAAM,CAAC12E,CAAC,GAAGouC,QAAQ,CAAEpD,MAAM,GAAG,CAAC,CAAE;MACjC0rC,MAAM,CAAC7gE,CAAC,GAAGu4B,QAAQ,CAAEpD,MAAM,GAAG,CAAC,CAAE;IAElC;IAEA,SAAS4xE,UAAUA,CAAA,EAAG;MAErB,IAAM16G,CAAC,GAAG,IAAIkd,OAAO,EAAE;MACvB,IAAMjd,CAAC,GAAG,IAAIid,OAAO,EAAE;MACvB,IAAMhd,CAAC,GAAG,IAAIgd,OAAO,EAAE;MAEvB,IAAM09F,QAAQ,GAAG,IAAI19F,OAAO,EAAE;MAE9B,IAAM2pB,GAAG,GAAG,IAAIjlC,OAAO,EAAE;MACzB,IAAMklC,GAAG,GAAG,IAAIllC,OAAO,EAAE;MACzB,IAAMmlC,GAAG,GAAG,IAAInlC,OAAO,EAAE;MAEzB,KAAM,IAAIxV,CAAC,GAAG,CAAC,EAAEy4B,CAAC,GAAG,CAAC,EAAEz4B,CAAC,GAAGwtH,YAAY,CAACztH,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAEy4B,CAAC,IAAI,CAAC,EAAG;QAEjE7kB,CAAC,CAACc,GAAG,CAAE84G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,EAAEwtH,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,EAAEwtH,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,CAAE;QAC5E6T,CAAC,CAACa,GAAG,CAAE84G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,EAAEwtH,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,EAAEwtH,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,CAAE;QAC5E8T,CAAC,CAACY,GAAG,CAAE84G,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,EAAEwtH,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,EAAEwtH,YAAY,CAAExtH,CAAC,GAAG,CAAC,CAAE,CAAE;QAE5Ey6C,GAAG,CAAC/lC,GAAG,CAAE+4G,QAAQ,CAAEh1F,CAAC,GAAG,CAAC,CAAE,EAAEg1F,QAAQ,CAAEh1F,CAAC,GAAG,CAAC,CAAE,CAAE;QAC/CiiB,GAAG,CAAChmC,GAAG,CAAE+4G,QAAQ,CAAEh1F,CAAC,GAAG,CAAC,CAAE,EAAEg1F,QAAQ,CAAEh1F,CAAC,GAAG,CAAC,CAAE,CAAE;QAC/CkiB,GAAG,CAACjmC,GAAG,CAAE+4G,QAAQ,CAAEh1F,CAAC,GAAG,CAAC,CAAE,EAAEg1F,QAAQ,CAAEh1F,CAAC,GAAG,CAAC,CAAE,CAAE;QAE/C+1F,QAAQ,CAACr4G,IAAI,CAAEvC,CAAC,CAAE,CAACyC,GAAG,CAAExC,CAAC,CAAE,CAACwC,GAAG,CAAEvC,CAAC,CAAE,CAACiD,YAAY,CAAE,CAAC,CAAE;QAEtD,IAAM03G,GAAG,GAAGL,OAAO,CAAEI,QAAQ,CAAE;QAE/BE,SAAS,CAAEj0E,GAAG,EAAEhiB,CAAC,GAAG,CAAC,EAAE7kB,CAAC,EAAE66G,GAAG,CAAE;QAC/BC,SAAS,CAAEh0E,GAAG,EAAEjiB,CAAC,GAAG,CAAC,EAAE5kB,CAAC,EAAE46G,GAAG,CAAE;QAC/BC,SAAS,CAAE/zE,GAAG,EAAEliB,CAAC,GAAG,CAAC,EAAE3kB,CAAC,EAAE26G,GAAG,CAAE;MAEhC;IAED;IAEA,SAASC,SAASA,CAAEtnG,EAAE,EAAEs1B,MAAM,EAAE3mB,MAAM,EAAEq4F,OAAO,EAAG;MAEjD,IAAOA,OAAO,GAAG,CAAC,IAAQhnG,EAAE,CAAChW,CAAC,KAAK,CAAG,EAAG;QAExCq8G,QAAQ,CAAE/wE,MAAM,CAAE,GAAGt1B,EAAE,CAAChW,CAAC,GAAG,CAAC;MAE9B;MAEA,IAAO2kB,MAAM,CAAC3kB,CAAC,KAAK,CAAC,IAAQ2kB,MAAM,CAACxO,CAAC,KAAK,CAAG,EAAG;QAE/CkmG,QAAQ,CAAE/wE,MAAM,CAAE,GAAG0xE,OAAO,GAAG,CAAC,GAAGl+G,IAAI,CAACC,EAAE,GAAG,GAAG;MAEjD;IAED;;IAEA;;IAEA,SAASi+G,OAAOA,CAAEr4F,MAAM,EAAG;MAE1B,OAAO7lB,IAAI,CAAC6H,KAAK,CAAEge,MAAM,CAACxO,CAAC,EAAE,CAAEwO,MAAM,CAAC3kB,CAAC,CAAE;IAE1C;;IAGA;;IAEA,SAASi9G,WAAWA,CAAEt4F,MAAM,EAAG;MAE9B,OAAO7lB,IAAI,CAAC6H,KAAK,CAAE,CAAEge,MAAM,CAACrkB,CAAC,EAAExB,IAAI,CAAC0H,IAAI,CAAIme,MAAM,CAAC3kB,CAAC,GAAG2kB,MAAM,CAAC3kB,CAAC,GAAO2kB,MAAM,CAACxO,CAAC,GAAGwO,MAAM,CAACxO,CAAG,CAAE,CAAE;IAEhG;IAAC,OAAAgmG,OAAA;EAEF;EAACxqH,YAAA,CAAAqqH,kBAAA;IAAAnzH,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIspG,kBAAkB,CAAEtpG,IAAI,CAACg8B,QAAQ,EAAEh8B,IAAI,CAACg2B,OAAO,EAAEh2B,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC6qG,OAAO,CAAE;IAExF;EAAC;EAAA,OAAAvB,kBAAA;AAAA,EA3S+Bl1E,cAAc;AAAAz+C,OAAA,CAAA2zH,kBAAA,GAAA3zH,OAAA,CAAAm1H,wBAAA,GAAAxB,kBAAA;AAAA,IA+SzCyB,oBAAoB,0BAAAC,mBAAA;EAAA/pG,SAAA,CAAA8pG,oBAAA,EAAAC,mBAAA;EAAA,IAAAC,QAAA,GAAA9pG,YAAA,CAAA4pG,oBAAA;EAEzB,SAAAA,qBAAar7F,MAAM,GAAG,CAAC,EAAEohF,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAoa,OAAA;IAAAzsH,eAAA,OAAAssH,oBAAA;IAErC,IAAMj9G,CAAC,GAAG,CAAE,CAAC,GAAG1B,IAAI,CAAC0H,IAAI,CAAE,CAAC,CAAE,IAAK,CAAC;IACpC,IAAMoF,CAAC,GAAG,CAAC,GAAGpL,CAAC;IAEf,IAAMkuC,QAAQ,GAAG;IAEhB;IACA,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAC1B,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EACtB,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAElB;IACA,CAAC,EAAE,CAAE9iC,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EAAEpL,CAAC,EACtB,CAAC,EAAEoL,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,EAAEpL,CAAC;IAElB;IACA,CAAEoL,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC,EACtBoL,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC;IAElB;IACA,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC,EAAE,CAAEoL,CAAC,EACtB,CAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,EAAEpL,CAAC,EAAE,CAAC,EAAEoL,CAAC,CAClB;IAED,IAAM88B,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC9B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAC/B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAC9B,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAChC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EACjC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9B;IAEDk1E,OAAA,GAAAD,QAAA,CAAA9yH,IAAA,OAAO6jD,QAAQ,EAAEhG,OAAO,EAAEtmB,MAAM,EAAEohF,MAAM;IAExCoa,OAAA,CAAKhzH,IAAI,GAAG,sBAAsB;IAElCgzH,OAAA,CAAK7lF,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdohF,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAoa,OAAA;EAEH;EAACjsH,YAAA,CAAA8rH,oBAAA;IAAA50H,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAI+qG,oBAAoB,CAAE/qG,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC8wF,MAAM,CAAE;IAE5D;EAAC;EAAA,OAAAia,oBAAA;AAAA,EA1DiCzB,kBAAkB;AAAA3zH,OAAA,CAAAo1H,oBAAA,GAAAp1H,OAAA,CAAAw1H,0BAAA,GAAAJ,oBAAA;AA8DrD,IAAMK,GAAG,GAAG,aAAc,IAAIp+F,OAAO,EAAE;AACvC,IAAMq+F,KAAK,GAAG,aAAc,IAAIr+F,OAAO,EAAE;AACzC,IAAMs+F,OAAO,GAAG,aAAc,IAAIt+F,OAAO,EAAE;AAC3C,IAAMu+F,SAAS,GAAG,aAAc,IAAI5kF,QAAQ,EAAE;AAAC,IAEzC6kF,aAAa,0BAAAC,gBAAA;EAAAxqG,SAAA,CAAAuqG,aAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAvqG,YAAA,CAAAqqG,aAAA;EAElB,SAAAA,cAAap5F,QAAQ,GAAG,IAAI,EAAEu5F,cAAc,GAAG,CAAC,EAAG;IAAA,IAAAC,OAAA;IAAAntH,eAAA,OAAA+sH,aAAA;IAElDI,OAAA,GAAAF,QAAA,CAAAvzH,IAAA;IAEAyzH,OAAA,CAAK1zH,IAAI,GAAG,eAAe;IAE3B0zH,OAAA,CAAKvmF,UAAU,GAAG;MACjBjT,QAAQ,EAAEA,QAAQ;MAClBu5F,cAAc,EAAEA;IACjB,CAAC;IAED,IAAKv5F,QAAQ,KAAK,IAAI,EAAG;MAExB,IAAMy5F,eAAe,GAAG,CAAC;MACzB,IAAMjhF,SAAS,GAAGx+B,IAAI,CAACmD,GAAG,CAAE,EAAE,EAAEs8G,eAAe,CAAE;MACjD,IAAMC,YAAY,GAAG1/G,IAAI,CAAC8D,GAAG,CAAE/D,OAAO,GAAGw/G,cAAc,CAAE;MAEzD,IAAMI,SAAS,GAAG35F,QAAQ,CAAC2iB,QAAQ,EAAE;MACrC,IAAMi3E,YAAY,GAAG55F,QAAQ,CAAC6iB,YAAY,CAAE,UAAU,CAAE;MACxD,IAAMg3E,UAAU,GAAGF,SAAS,GAAGA,SAAS,CAACjkG,KAAK,GAAGkkG,YAAY,CAAClkG,KAAK;MAEnE,IAAMokG,QAAQ,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAC5B,IAAMC,QAAQ,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;MAClC,IAAMC,MAAM,GAAG,IAAI3rG,KAAK,CAAE,CAAC,CAAE;MAE7B,IAAM4rG,QAAQ,GAAG,CAAC,CAAC;MACnB,IAAMrwE,QAAQ,GAAG,EAAE;MACnB,KAAM,IAAI9/C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+vH,UAAU,EAAE/vH,CAAC,IAAI,CAAC,EAAG;QAEzC,IAAK6vH,SAAS,EAAG;UAEhBG,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAAC72G,IAAI,CAAEhZ,CAAC,CAAE;UACnCgwH,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAAC72G,IAAI,CAAEhZ,CAAC,GAAG,CAAC,CAAE;UACvCgwH,QAAQ,CAAE,CAAC,CAAE,GAAGH,SAAS,CAAC72G,IAAI,CAAEhZ,CAAC,GAAG,CAAC,CAAE;QAExC,CAAC,MAAM;UAENgwH,QAAQ,CAAE,CAAC,CAAE,GAAGhwH,CAAC;UACjBgwH,QAAQ,CAAE,CAAC,CAAE,GAAGhwH,CAAC,GAAG,CAAC;UACrBgwH,QAAQ,CAAE,CAAC,CAAE,GAAGhwH,CAAC,GAAG,CAAC;QAEtB;QAEA,IAAQ4T,CAAC,GAAWy7G,SAAS,CAArBz7G,CAAC;UAAEC,CAAC,GAAQw7G,SAAS,CAAlBx7G,CAAC;UAAEC,CAAC,GAAKu7G,SAAS,CAAfv7G,CAAC;QACfF,CAAC,CAACkF,mBAAmB,CAAEg3G,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAE,CAAE;QACpDn8G,CAAC,CAACiF,mBAAmB,CAAEg3G,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAE,CAAE;QACpDl8G,CAAC,CAACgF,mBAAmB,CAAEg3G,YAAY,EAAEE,QAAQ,CAAE,CAAC,CAAE,CAAE;QACpDX,SAAS,CAACpkF,SAAS,CAAEmkF,OAAO,CAAE;;QAE9B;QACAc,MAAM,CAAE,CAAC,CAAE,MAAApuG,MAAA,CAAO5R,IAAI,CAACkF,KAAK,CAAExB,CAAC,CAACxC,CAAC,GAAGs9B,SAAS,CAAE,OAAA5sB,MAAA,CAAM5R,IAAI,CAACkF,KAAK,CAAExB,CAAC,CAAClC,CAAC,GAAGg9B,SAAS,CAAE,OAAA5sB,MAAA,CAAM5R,IAAI,CAACkF,KAAK,CAAExB,CAAC,CAAC2T,CAAC,GAAGmnB,SAAS,CAAE,CAAG;QACxHwhF,MAAM,CAAE,CAAC,CAAE,MAAApuG,MAAA,CAAO5R,IAAI,CAACkF,KAAK,CAAEvB,CAAC,CAACzC,CAAC,GAAGs9B,SAAS,CAAE,OAAA5sB,MAAA,CAAM5R,IAAI,CAACkF,KAAK,CAAEvB,CAAC,CAACnC,CAAC,GAAGg9B,SAAS,CAAE,OAAA5sB,MAAA,CAAM5R,IAAI,CAACkF,KAAK,CAAEvB,CAAC,CAAC0T,CAAC,GAAGmnB,SAAS,CAAE,CAAG;QACxHwhF,MAAM,CAAE,CAAC,CAAE,MAAApuG,MAAA,CAAO5R,IAAI,CAACkF,KAAK,CAAEtB,CAAC,CAAC1C,CAAC,GAAGs9B,SAAS,CAAE,OAAA5sB,MAAA,CAAM5R,IAAI,CAACkF,KAAK,CAAEtB,CAAC,CAACpC,CAAC,GAAGg9B,SAAS,CAAE,OAAA5sB,MAAA,CAAM5R,IAAI,CAACkF,KAAK,CAAEtB,CAAC,CAACyT,CAAC,GAAGmnB,SAAS,CAAE,CAAG;;QAExH;QACA,IAAKwhF,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,IAAIA,MAAM,CAAE,CAAC,CAAE,KAAKA,MAAM,CAAE,CAAC,CAAE,EAAG;UAEhG;QAED;;QAEA;QACA,KAAM,IAAIz3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;UAE9B;UACA,IAAM23F,KAAK,GAAG,CAAE33F,CAAC,GAAG,CAAC,IAAK,CAAC;UAC3B,IAAM43F,QAAQ,GAAGH,MAAM,CAAEz3F,CAAC,CAAE;UAC5B,IAAM63F,QAAQ,GAAGJ,MAAM,CAAEE,KAAK,CAAE;UAChC,IAAM73F,EAAE,GAAG82F,SAAS,CAAEY,QAAQ,CAAEx3F,CAAC,CAAE,CAAE;UACrC,IAAMjgB,EAAE,GAAG62G,SAAS,CAAEY,QAAQ,CAAEG,KAAK,CAAE,CAAE;UAEzC,IAAM1rC,IAAI,MAAA5iE,MAAA,CAAOuuG,QAAQ,OAAAvuG,MAAA,CAAMwuG,QAAQ,CAAG;UAC1C,IAAMC,WAAW,MAAAzuG,MAAA,CAAOwuG,QAAQ,OAAAxuG,MAAA,CAAMuuG,QAAQ,CAAG;UAEjD,IAAKE,WAAW,IAAIJ,QAAQ,IAAIA,QAAQ,CAAEI,WAAW,CAAE,EAAG;YAEzD;YACA;YACA,IAAKnB,OAAO,CAAC33G,GAAG,CAAE04G,QAAQ,CAAEI,WAAW,CAAE,CAACn9F,MAAM,CAAE,IAAIw8F,YAAY,EAAG;cAEpE9vE,QAAQ,CAACtgD,IAAI,CAAE+4B,EAAE,CAACnnB,CAAC,EAAEmnB,EAAE,CAAC7mB,CAAC,EAAE6mB,EAAE,CAAChR,CAAC,CAAE;cACjCu4B,QAAQ,CAACtgD,IAAI,CAAEgZ,EAAE,CAACpH,CAAC,EAAEoH,EAAE,CAAC9G,CAAC,EAAE8G,EAAE,CAAC+O,CAAC,CAAE;YAElC;YAEA4oG,QAAQ,CAAEI,WAAW,CAAE,GAAG,IAAI;UAE/B,CAAC,MAAM,IAAK,EAAI7rC,IAAI,IAAIyrC,QAAQ,CAAE,EAAG;YAEpC;YACAA,QAAQ,CAAEzrC,IAAI,CAAE,GAAG;cAElB8rC,MAAM,EAAER,QAAQ,CAAEv3F,CAAC,CAAE;cACrBqc,MAAM,EAAEk7E,QAAQ,CAAEI,KAAK,CAAE;cACzBh9F,MAAM,EAAEg8F,OAAO,CAACl5G,KAAK;YAEtB,CAAC;UAEF;QAED;MAED;;MAEA;MACA,KAAM,IAAMjc,GAAG,IAAIk2H,QAAQ,EAAG;QAE7B,IAAKA,QAAQ,CAAEl2H,GAAG,CAAE,EAAG;UAEtB,IAAAw2H,aAAA,GAA2BN,QAAQ,CAAEl2H,GAAG,CAAE;YAAlCu2H,MAAM,GAAAC,aAAA,CAAND,MAAM;YAAE17E,MAAM,GAAA27E,aAAA,CAAN37E,MAAM;UACtBo6E,GAAG,CAACp2G,mBAAmB,CAAEg3G,YAAY,EAAEU,MAAM,CAAE;UAC/CrB,KAAK,CAACr2G,mBAAmB,CAAEg3G,YAAY,EAAEh7E,MAAM,CAAE;UAEjDgL,QAAQ,CAACtgD,IAAI,CAAE0vH,GAAG,CAAC99G,CAAC,EAAE89G,GAAG,CAACx9G,CAAC,EAAEw9G,GAAG,CAAC3nG,CAAC,CAAE;UACpCu4B,QAAQ,CAACtgD,IAAI,CAAE2vH,KAAK,CAAC/9G,CAAC,EAAE+9G,KAAK,CAACz9G,CAAC,EAAEy9G,KAAK,CAAC5nG,CAAC,CAAE;QAE3C;MAED;MAEAmoG,OAAA,CAAK12E,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAE3E;IAAC,OAAA4vE,OAAA;EAEF;EAAC,OAAA3sH,YAAA,CAAAusH,aAAA;AAAA,EA9H0Bp3E,cAAc;AAAAz+C,OAAA,CAAA61H,aAAA,GAAAA,aAAA;AAAA,IAkIpCoB,KAAK,0BAAAC,KAAA;EAAA5rG,SAAA,CAAA2rG,KAAA,EAAAC,KAAA;EAAA,IAAAC,QAAA,GAAA3rG,YAAA,CAAAyrG,KAAA;EAEV,SAAAA,MAAa17F,MAAM,EAAG;IAAA,IAAA67F,OAAA;IAAAtuH,eAAA,OAAAmuH,KAAA;IAErBG,OAAA,GAAAD,QAAA,CAAA30H,IAAA,OAAO+4B,MAAM;IAEb67F,OAAA,CAAKlgH,IAAI,GAAGN,YAAY,EAAE;IAE1BwgH,OAAA,CAAK70H,IAAI,GAAG,OAAO;IAEnB60H,OAAA,CAAKC,KAAK,GAAG,EAAE;IAAC,OAAAD,OAAA;EAEjB;EAAC9tH,YAAA,CAAA2tH,KAAA;IAAAz2H,GAAA;IAAAE,KAAA,EAED,SAAA42H,eAAgB3Q,SAAS,EAAG;MAE3B,IAAM4Q,QAAQ,GAAG,EAAE;MAEnB,KAAM,IAAIhxH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACghH,KAAK,CAAC/wH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAErDgxH,QAAQ,CAAEhxH,CAAC,CAAE,GAAG,IAAI,CAAC8wH,KAAK,CAAE9wH,CAAC,CAAE,CAACmgH,SAAS,CAAEC,SAAS,CAAE;MAEvD;MAEA,OAAO4Q,QAAQ;IAEhB;;IAEA;EAAA;IAAA/2H,GAAA;IAAAE,KAAA,EAEA,SAAA82H,cAAe7Q,SAAS,EAAG;MAE1B,OAAO;QAENh3E,KAAK,EAAE,IAAI,CAAC+2E,SAAS,CAAEC,SAAS,CAAE;QAClC0Q,KAAK,EAAE,IAAI,CAACC,cAAc,CAAE3Q,SAAS;MAEtC,CAAC;IAEF;EAAC;IAAAnmH,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAu8E,KAAA,CAAA92H,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACgxG,KAAK,GAAG,EAAE;MAEf,KAAM,IAAI9wH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGgQ,MAAM,CAACgxG,KAAK,CAAC/wH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEvD,IAAMkxH,IAAI,GAAGpxG,MAAM,CAACgxG,KAAK,CAAE9wH,CAAC,CAAE;QAE9B,IAAI,CAAC8wH,KAAK,CAACtxH,IAAI,CAAE0xH,IAAI,CAACh7G,KAAK,EAAE,CAAE;MAEhC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjc,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAu8E,KAAA,CAAA92H,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACnT,IAAI,GAAG,IAAI,CAACA,IAAI;MACrBmT,IAAI,CAACgtG,KAAK,GAAG,EAAE;MAEf,KAAM,IAAI9wH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACghH,KAAK,CAAC/wH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAErD,IAAMkxH,IAAI,GAAG,IAAI,CAACJ,KAAK,CAAE9wH,CAAC,CAAE;QAC5B8jB,IAAI,CAACgtG,KAAK,CAACtxH,IAAI,CAAE0xH,IAAI,CAAC3uG,MAAM,EAAE,CAAE;MAEjC;MAEA,OAAOuB,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhBhmE,IAAA,CAAAC,eAAA,CAAAu8E,KAAA,CAAA92H,SAAA,qBAAAqC,IAAA,OAAgBi+G,IAAI;MAEpB,IAAI,CAACvpG,IAAI,GAAGupG,IAAI,CAACvpG,IAAI;MACrB,IAAI,CAACmgH,KAAK,GAAG,EAAE;MAEf,KAAM,IAAI9wH,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAAC4W,KAAK,CAAC/wH,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAErD,IAAMkxH,IAAI,GAAGhX,IAAI,CAAC4W,KAAK,CAAE9wH,CAAC,CAAE;QAC5B,IAAI,CAAC8wH,KAAK,CAACtxH,IAAI,CAAE,IAAIopH,IAAI,EAAE,CAAC7nE,QAAQ,CAAEmwE,IAAI,CAAE,CAAE;MAE/C;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAR,KAAA;AAAA,EA7FkB9H,IAAI;AAiGxB;AACA;AACA;AAFAnvH,OAAA,CAAAi3H,KAAA,GAAAA,KAAA;AAIA,IAAMS,MAAM,GAAG;EAEdC,WAAW,EAAE,SAAAA,YAAWttG,IAAI,EAAEutG,WAAW,EAAEC,GAAG,GAAG,CAAC,EAAG;IAEpD,IAAMC,QAAQ,GAAGF,WAAW,IAAIA,WAAW,CAACtxH,MAAM;IAClD,IAAMyxH,QAAQ,GAAGD,QAAQ,GAAGF,WAAW,CAAE,CAAC,CAAE,GAAGC,GAAG,GAAGxtG,IAAI,CAAC/jB,MAAM;IAChE,IAAI0xH,SAAS,GAAGC,UAAU,CAAE5tG,IAAI,EAAE,CAAC,EAAE0tG,QAAQ,EAAEF,GAAG,EAAE,IAAI,CAAE;IAC1D,IAAMrkD,SAAS,GAAG,EAAE;IAEpB,IAAK,CAAEwkD,SAAS,IAAIA,SAAS,CAAC3yH,IAAI,KAAK2yH,SAAS,CAACrwH,IAAI,EAAG,OAAO6rE,SAAS;IAExE,IAAIz4C,IAAI,EAAEC,IAAI,EAAEE,IAAI,EAAEC,IAAI,EAAExjB,CAAC,EAAEM,CAAC,EAAEigH,OAAO;IAEzC,IAAKJ,QAAQ,EAAGE,SAAS,GAAGG,cAAc,CAAE9tG,IAAI,EAAEutG,WAAW,EAAEI,SAAS,EAAEH,GAAG,CAAE;;IAE/E;IACA,IAAKxtG,IAAI,CAAC/jB,MAAM,GAAG,EAAE,GAAGuxH,GAAG,EAAG;MAE7B98F,IAAI,GAAGG,IAAI,GAAG7Q,IAAI,CAAE,CAAC,CAAE;MACvB2Q,IAAI,GAAGG,IAAI,GAAG9Q,IAAI,CAAE,CAAC,CAAE;MAEvB,KAAM,IAAI9jB,CAAC,GAAGsxH,GAAG,EAAEtxH,CAAC,GAAGwxH,QAAQ,EAAExxH,CAAC,IAAIsxH,GAAG,EAAG;QAE3ClgH,CAAC,GAAG0S,IAAI,CAAE9jB,CAAC,CAAE;QACb0R,CAAC,GAAGoS,IAAI,CAAE9jB,CAAC,GAAG,CAAC,CAAE;QACjB,IAAKoR,CAAC,GAAGojB,IAAI,EAAGA,IAAI,GAAGpjB,CAAC;QACxB,IAAKM,CAAC,GAAG+iB,IAAI,EAAGA,IAAI,GAAG/iB,CAAC;QACxB,IAAKN,CAAC,GAAGujB,IAAI,EAAGA,IAAI,GAAGvjB,CAAC;QACxB,IAAKM,CAAC,GAAGkjB,IAAI,EAAGA,IAAI,GAAGljB,CAAC;MAEzB;;MAEA;MACAigH,OAAO,GAAGzhH,IAAI,CAACa,GAAG,CAAE4jB,IAAI,GAAGH,IAAI,EAAEI,IAAI,GAAGH,IAAI,CAAE;MAC9Ck9F,OAAO,GAAGA,OAAO,KAAK,CAAC,GAAG,CAAC,GAAGA,OAAO,GAAG,CAAC;IAE1C;IAEAE,YAAY,CAAEJ,SAAS,EAAExkD,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;IAE9D,OAAO1kD,SAAS;EAEjB;AAED,CAAC;;AAED;AACA,SAASykD,UAAUA,CAAE5tG,IAAI,EAAE80B,KAAK,EAAEkG,GAAG,EAAEwyE,GAAG,EAAEQ,SAAS,EAAG;EAEvD,IAAI9xH,CAAC,EAAE2gH,IAAI;EAEX,IAAKmR,SAAS,KAAOC,UAAU,CAAEjuG,IAAI,EAAE80B,KAAK,EAAEkG,GAAG,EAAEwyE,GAAG,CAAE,GAAG,CAAG,EAAG;IAEhE,KAAMtxH,CAAC,GAAG44C,KAAK,EAAE54C,CAAC,GAAG8+C,GAAG,EAAE9+C,CAAC,IAAIsxH,GAAG,EAAG3Q,IAAI,GAAGqR,UAAU,CAAEhyH,CAAC,EAAE8jB,IAAI,CAAE9jB,CAAC,CAAE,EAAE8jB,IAAI,CAAE9jB,CAAC,GAAG,CAAC,CAAE,EAAE2gH,IAAI,CAAE;EAE5F,CAAC,MAAM;IAEN,KAAM3gH,CAAC,GAAG8+C,GAAG,GAAGwyE,GAAG,EAAEtxH,CAAC,IAAI44C,KAAK,EAAE54C,CAAC,IAAIsxH,GAAG,EAAG3Q,IAAI,GAAGqR,UAAU,CAAEhyH,CAAC,EAAE8jB,IAAI,CAAE9jB,CAAC,CAAE,EAAE8jB,IAAI,CAAE9jB,CAAC,GAAG,CAAC,CAAE,EAAE2gH,IAAI,CAAE;EAEnG;EAEA,IAAKA,IAAI,IAAIjoG,MAAM,CAAEioG,IAAI,EAAEA,IAAI,CAAC7hH,IAAI,CAAE,EAAG;IAExCmzH,UAAU,CAAEtR,IAAI,CAAE;IAClBA,IAAI,GAAGA,IAAI,CAAC7hH,IAAI;EAEjB;EAEA,OAAO6hH,IAAI;AAEZ;;AAEA;AACA,SAASuR,YAAYA,CAAEt5E,KAAK,EAAEkG,GAAG,EAAG;EAEnC,IAAK,CAAElG,KAAK,EAAG,OAAOA,KAAK;EAC3B,IAAK,CAAEkG,GAAG,EAAGA,GAAG,GAAGlG,KAAK;EAExB,IAAIh5B,CAAC,GAAGg5B,KAAK;IACZu5E,KAAK;EACN,GAAG;IAEFA,KAAK,GAAG,KAAK;IAEb,IAAK,CAAEvyG,CAAC,CAACwyG,OAAO,KAAM15G,MAAM,CAAEkH,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,CAAE,IAAIuzH,IAAI,CAAEzyG,CAAC,CAACxe,IAAI,EAAEwe,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,CAAE,KAAK,CAAC,CAAE,EAAG;MAEhFmzH,UAAU,CAAEryG,CAAC,CAAE;MACfA,CAAC,GAAGk/B,GAAG,GAAGl/B,CAAC,CAACxe,IAAI;MAChB,IAAKwe,CAAC,KAAKA,CAAC,CAAC9gB,IAAI,EAAG;MACpBqzH,KAAK,GAAG,IAAI;IAEb,CAAC,MAAM;MAENvyG,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;IAEX;EAED,CAAC,QAASqzH,KAAK,IAAIvyG,CAAC,KAAKk/B,GAAG;EAE5B,OAAOA,GAAG;AAEX;;AAEA;AACA,SAAS+yE,YAAYA,CAAES,GAAG,EAAErlD,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAEY,IAAI,EAAG;EAEvE,IAAK,CAAED,GAAG,EAAG;;EAEb;EACA,IAAK,CAAEC,IAAI,IAAIZ,OAAO,EAAGa,UAAU,CAAEF,GAAG,EAAE99F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;EAE/D,IAAIpwH,IAAI,GAAG+wH,GAAG;IACblxH,IAAI;IAAEtC,IAAI;;EAEX;EACA,OAAQwzH,GAAG,CAAClxH,IAAI,KAAKkxH,GAAG,CAACxzH,IAAI,EAAG;IAE/BsC,IAAI,GAAGkxH,GAAG,CAAClxH,IAAI;IACftC,IAAI,GAAGwzH,GAAG,CAACxzH,IAAI;IAEf,IAAK6yH,OAAO,GAAGc,WAAW,CAAEH,GAAG,EAAE99F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE,GAAGe,KAAK,CAAEJ,GAAG,CAAE,EAAG;MAEvE;MACArlD,SAAS,CAACztE,IAAI,CAAE4B,IAAI,CAACpB,CAAC,GAAGsxH,GAAG,CAAE;MAC9BrkD,SAAS,CAACztE,IAAI,CAAE8yH,GAAG,CAACtyH,CAAC,GAAGsxH,GAAG,CAAE;MAC7BrkD,SAAS,CAACztE,IAAI,CAAEV,IAAI,CAACkB,CAAC,GAAGsxH,GAAG,CAAE;MAE9BW,UAAU,CAAEK,GAAG,CAAE;;MAEjB;MACAA,GAAG,GAAGxzH,IAAI,CAACA,IAAI;MACfyC,IAAI,GAAGzC,IAAI,CAACA,IAAI;MAEhB;IAED;IAEAwzH,GAAG,GAAGxzH,IAAI;;IAEV;IACA,IAAKwzH,GAAG,KAAK/wH,IAAI,EAAG;MAEnB;MACA,IAAK,CAAEgxH,IAAI,EAAG;QAEbV,YAAY,CAAEK,YAAY,CAAEI,GAAG,CAAE,EAAErlD,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAE,CAAC,CAAE;;QAE3E;MAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;QAExBD,GAAG,GAAGK,sBAAsB,CAAET,YAAY,CAAEI,GAAG,CAAE,EAAErlD,SAAS,EAAEqkD,GAAG,CAAE;QACnEO,YAAY,CAAES,GAAG,EAAErlD,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAE,CAAC,CAAE;;QAE3D;MAED,CAAC,MAAM,IAAKY,IAAI,KAAK,CAAC,EAAG;QAExBK,WAAW,CAAEN,GAAG,EAAErlD,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;MAExD;MAEA;IAED;EAED;AAED;;AAEA;AACA,SAASe,KAAKA,CAAEJ,GAAG,EAAG;EAErB,IAAM1+G,CAAC,GAAG0+G,GAAG,CAAClxH,IAAI;IACjByS,CAAC,GAAGy+G,GAAG;IACPx+G,CAAC,GAAGw+G,GAAG,CAACxzH,IAAI;EAEb,IAAKuzH,IAAI,CAAEz+G,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;EAE1C;EACA,IAAI8L,CAAC,GAAG0yG,GAAG,CAACxzH,IAAI,CAACA,IAAI;EAErB,OAAQ8gB,CAAC,KAAK0yG,GAAG,CAAClxH,IAAI,EAAG;IAExB,IAAKyxH,eAAe,CAAEj/G,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,EAAEmC,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,EAAEoC,CAAC,CAAC1C,CAAC,EAAE0C,CAAC,CAACpC,CAAC,EAAEkO,CAAC,CAACxO,CAAC,EAAEwO,CAAC,CAAClO,CAAC,CAAE,IAC7D2gH,IAAI,CAAEzyG,CAAC,CAACxe,IAAI,EAAEwe,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9C8gB,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX;EAEA,OAAO,IAAI;AAEZ;AAEA,SAAS2zH,WAAWA,CAAEH,GAAG,EAAE99F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAG;EAEhD,IAAM/9G,CAAC,GAAG0+G,GAAG,CAAClxH,IAAI;IACjByS,CAAC,GAAGy+G,GAAG;IACPx+G,CAAC,GAAGw+G,GAAG,CAACxzH,IAAI;EAEb,IAAKuzH,IAAI,CAAEz+G,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK,CAAC,CAAC;;EAE1C;EACA,IAAMg/G,KAAK,GAAGl/G,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC,GAAKwC,CAAC,CAACxC,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAOyC,CAAC,CAACzC,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAGyC,CAAC,CAACzC,CAAC,GAAG0C,CAAC,CAAC1C,CAAG;IAC9E2hH,KAAK,GAAGn/G,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,GAAKkC,CAAC,CAAClC,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAOmC,CAAC,CAACnC,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,GAAGoC,CAAC,CAACpC,CAAG;IACzEshH,KAAK,GAAGp/G,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC,GAAKwC,CAAC,CAACxC,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAOyC,CAAC,CAACzC,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAGyC,CAAC,CAACzC,CAAC,GAAG0C,CAAC,CAAC1C,CAAG;IACzE6hH,KAAK,GAAGr/G,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,GAAKkC,CAAC,CAAClC,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAGkC,CAAC,CAAClC,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAOmC,CAAC,CAACnC,CAAC,GAAGoC,CAAC,CAACpC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,GAAGoC,CAAC,CAACpC,CAAG;;EAE1E;EACA,IAAMgjB,IAAI,GAAGw+F,MAAM,CAAEJ,KAAK,EAAEC,KAAK,EAAEv+F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;IACvD98F,IAAI,GAAGq+F,MAAM,CAAEF,KAAK,EAAEC,KAAK,EAAEz+F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;EAEnD,IAAI/xG,CAAC,GAAG0yG,GAAG,CAACa,KAAK;IAChBliH,CAAC,GAAGqhH,GAAG,CAACc,KAAK;;EAEd;EACA,OAAQxzG,CAAC,IAAIA,CAAC,CAAC2H,CAAC,IAAImN,IAAI,IAAIzjB,CAAC,IAAIA,CAAC,CAACsW,CAAC,IAAIsN,IAAI,EAAG;IAE9C,IAAKjV,CAAC,KAAK0yG,GAAG,CAAClxH,IAAI,IAAIwe,CAAC,KAAK0yG,GAAG,CAACxzH,IAAI,IACpC+zH,eAAe,CAAEj/G,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,EAAEmC,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,EAAEoC,CAAC,CAAC1C,CAAC,EAAE0C,CAAC,CAACpC,CAAC,EAAEkO,CAAC,CAACxO,CAAC,EAAEwO,CAAC,CAAClO,CAAC,CAAE,IACzD2gH,IAAI,CAAEzyG,CAAC,CAACxe,IAAI,EAAEwe,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9C8gB,CAAC,GAAGA,CAAC,CAACuzG,KAAK;IAEX,IAAKliH,CAAC,KAAKqhH,GAAG,CAAClxH,IAAI,IAAI6P,CAAC,KAAKqhH,GAAG,CAACxzH,IAAI,IACpC+zH,eAAe,CAAEj/G,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,EAAEmC,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,EAAEoC,CAAC,CAAC1C,CAAC,EAAE0C,CAAC,CAACpC,CAAC,EAAET,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACS,CAAC,CAAE,IACzD2gH,IAAI,CAAEphH,CAAC,CAAC7P,IAAI,EAAE6P,CAAC,EAAEA,CAAC,CAACnS,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9CmS,CAAC,GAAGA,CAAC,CAACmiH,KAAK;EAEZ;;EAEA;EACA,OAAQxzG,CAAC,IAAIA,CAAC,CAAC2H,CAAC,IAAImN,IAAI,EAAG;IAE1B,IAAK9U,CAAC,KAAK0yG,GAAG,CAAClxH,IAAI,IAAIwe,CAAC,KAAK0yG,GAAG,CAACxzH,IAAI,IACpC+zH,eAAe,CAAEj/G,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,EAAEmC,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,EAAEoC,CAAC,CAAC1C,CAAC,EAAE0C,CAAC,CAACpC,CAAC,EAAEkO,CAAC,CAACxO,CAAC,EAAEwO,CAAC,CAAClO,CAAC,CAAE,IACzD2gH,IAAI,CAAEzyG,CAAC,CAACxe,IAAI,EAAEwe,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9C8gB,CAAC,GAAGA,CAAC,CAACuzG,KAAK;EAEZ;;EAEA;EACA,OAAQliH,CAAC,IAAIA,CAAC,CAACsW,CAAC,IAAIsN,IAAI,EAAG;IAE1B,IAAK5jB,CAAC,KAAKqhH,GAAG,CAAClxH,IAAI,IAAI6P,CAAC,KAAKqhH,GAAG,CAACxzH,IAAI,IACpC+zH,eAAe,CAAEj/G,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,EAAEmC,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,EAAEoC,CAAC,CAAC1C,CAAC,EAAE0C,CAAC,CAACpC,CAAC,EAAET,CAAC,CAACG,CAAC,EAAEH,CAAC,CAACS,CAAC,CAAE,IACzD2gH,IAAI,CAAEphH,CAAC,CAAC7P,IAAI,EAAE6P,CAAC,EAAEA,CAAC,CAACnS,IAAI,CAAE,IAAI,CAAC,EAAG,OAAO,KAAK;IAC9CmS,CAAC,GAAGA,CAAC,CAACmiH,KAAK;EAEZ;EAEA,OAAO,IAAI;AAEZ;;AAEA;AACA,SAAST,sBAAsBA,CAAE/5E,KAAK,EAAEq0B,SAAS,EAAEqkD,GAAG,EAAG;EAExD,IAAI1xG,CAAC,GAAGg5B,KAAK;EACb,GAAG;IAEF,IAAMhlC,CAAC,GAAGgM,CAAC,CAACxe,IAAI;MACfyS,CAAC,GAAG+L,CAAC,CAAC9gB,IAAI,CAACA,IAAI;IAEhB,IAAK,CAAE4Z,MAAM,CAAE9E,CAAC,EAAEC,CAAC,CAAE,IAAI6qC,UAAU,CAAE9qC,CAAC,EAAEgM,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,EAAE+U,CAAC,CAAE,IAAIw/G,aAAa,CAAEz/G,CAAC,EAAEC,CAAC,CAAE,IAAIw/G,aAAa,CAAEx/G,CAAC,EAAED,CAAC,CAAE,EAAG;MAE1Gq5D,SAAS,CAACztE,IAAI,CAAEoU,CAAC,CAAC5T,CAAC,GAAGsxH,GAAG,CAAE;MAC3BrkD,SAAS,CAACztE,IAAI,CAAEogB,CAAC,CAAC5f,CAAC,GAAGsxH,GAAG,CAAE;MAC3BrkD,SAAS,CAACztE,IAAI,CAAEqU,CAAC,CAAC7T,CAAC,GAAGsxH,GAAG,CAAE;;MAE3B;MACAW,UAAU,CAAEryG,CAAC,CAAE;MACfqyG,UAAU,CAAEryG,CAAC,CAAC9gB,IAAI,CAAE;MAEpB8gB,CAAC,GAAGg5B,KAAK,GAAG/kC,CAAC;IAEd;IAEA+L,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAKg5B,KAAK;EAErB,OAAOs5E,YAAY,CAAEtyG,CAAC,CAAE;AAEzB;;AAEA;AACA,SAASgzG,WAAWA,CAAEh6E,KAAK,EAAEq0B,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAG;EAElE;EACA,IAAI/9G,CAAC,GAAGglC,KAAK;EACb,GAAG;IAEF,IAAI/kC,CAAC,GAAGD,CAAC,CAAC9U,IAAI,CAACA,IAAI;IACnB,OAAQ+U,CAAC,KAAKD,CAAC,CAACxS,IAAI,EAAG;MAEtB,IAAKwS,CAAC,CAAC5T,CAAC,KAAK6T,CAAC,CAAC7T,CAAC,IAAIszH,eAAe,CAAE1/G,CAAC,EAAEC,CAAC,CAAE,EAAG;QAE7C;QACA,IAAIC,CAAC,GAAGy/G,YAAY,CAAE3/G,CAAC,EAAEC,CAAC,CAAE;;QAE5B;QACAD,CAAC,GAAGs+G,YAAY,CAAEt+G,CAAC,EAAEA,CAAC,CAAC9U,IAAI,CAAE;QAC7BgV,CAAC,GAAGo+G,YAAY,CAAEp+G,CAAC,EAAEA,CAAC,CAAChV,IAAI,CAAE;;QAE7B;QACA+yH,YAAY,CAAEj+G,CAAC,EAAEq5D,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;QACtDE,YAAY,CAAE/9G,CAAC,EAAEm5D,SAAS,EAAEqkD,GAAG,EAAE98F,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;QACtD;MAED;MAEA99G,CAAC,GAAGA,CAAC,CAAC/U,IAAI;IAEX;IAEA8U,CAAC,GAAGA,CAAC,CAAC9U,IAAI;EAEX,CAAC,QAAS8U,CAAC,KAAKglC,KAAK;AAEtB;;AAEA;AACA,SAASg5E,cAAcA,CAAE9tG,IAAI,EAAEutG,WAAW,EAAEI,SAAS,EAAEH,GAAG,EAAG;EAE5D,IAAMkC,KAAK,GAAG,EAAE;EAChB,IAAIxzH,CAAC,EAAE2wB,GAAG,EAAEioB,KAAK,EAAEkG,GAAG,EAAEglC,IAAI;EAE5B,KAAM9jF,CAAC,GAAG,CAAC,EAAE2wB,GAAG,GAAG0gG,WAAW,CAACtxH,MAAM,EAAEC,CAAC,GAAG2wB,GAAG,EAAE3wB,CAAC,EAAG,EAAG;IAEtD44C,KAAK,GAAGy4E,WAAW,CAAErxH,CAAC,CAAE,GAAGsxH,GAAG;IAC9BxyE,GAAG,GAAG9+C,CAAC,GAAG2wB,GAAG,GAAG,CAAC,GAAG0gG,WAAW,CAAErxH,CAAC,GAAG,CAAC,CAAE,GAAGsxH,GAAG,GAAGxtG,IAAI,CAAC/jB,MAAM;IAC5D+jF,IAAI,GAAG4tC,UAAU,CAAE5tG,IAAI,EAAE80B,KAAK,EAAEkG,GAAG,EAAEwyE,GAAG,EAAE,KAAK,CAAE;IACjD,IAAKxtC,IAAI,KAAKA,IAAI,CAAChlF,IAAI,EAAGglF,IAAI,CAACsuC,OAAO,GAAG,IAAI;IAC7CoB,KAAK,CAACh0H,IAAI,CAAEi0H,WAAW,CAAE3vC,IAAI,CAAE,CAAE;EAElC;EAEA0vC,KAAK,CAACxkD,IAAI,CAAE0kD,QAAQ,CAAE;;EAEtB;EACA,KAAM1zH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwzH,KAAK,CAACzzH,MAAM,EAAEC,CAAC,EAAG,EAAG;IAErC2zH,aAAa,CAAEH,KAAK,CAAExzH,CAAC,CAAE,EAAEyxH,SAAS,CAAE;IACtCA,SAAS,GAAGS,YAAY,CAAET,SAAS,EAAEA,SAAS,CAAC3yH,IAAI,CAAE;EAEtD;EAEA,OAAO2yH,SAAS;AAEjB;AAEA,SAASiC,QAAQA,CAAE9/G,CAAC,EAAEC,CAAC,EAAG;EAEzB,OAAOD,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC;AAEjB;;AAEA;AACA,SAASuiH,aAAaA,CAAEzC,IAAI,EAAEO,SAAS,EAAG;EAEzCA,SAAS,GAAGmC,cAAc,CAAE1C,IAAI,EAAEO,SAAS,CAAE;EAC7C,IAAKA,SAAS,EAAG;IAEhB,IAAM59G,CAAC,GAAG0/G,YAAY,CAAE9B,SAAS,EAAEP,IAAI,CAAE;;IAEzC;IACAgB,YAAY,CAAET,SAAS,EAAEA,SAAS,CAAC3yH,IAAI,CAAE;IACzCozH,YAAY,CAAEr+G,CAAC,EAAEA,CAAC,CAAC/U,IAAI,CAAE;EAE1B;AAED;;AAEA;AACA,SAAS80H,cAAcA,CAAE1C,IAAI,EAAEO,SAAS,EAAG;EAE1C,IAAI7xG,CAAC,GAAG6xG,SAAS;EACjB,IAAMoC,EAAE,GAAG3C,IAAI,CAAC9/G,CAAC;EACjB,IAAM0iH,EAAE,GAAG5C,IAAI,CAACx/G,CAAC;EACjB,IAAI6f,EAAE,GAAG,CAAE8C,QAAQ;IAAEnjB,CAAC;;EAEtB;EACA;EACA,GAAG;IAEF,IAAK4iH,EAAE,IAAIl0G,CAAC,CAAClO,CAAC,IAAIoiH,EAAE,IAAIl0G,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,IAAIkO,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,KAAKkO,CAAC,CAAClO,CAAC,EAAG;MAEtD,IAAMN,CAAC,GAAGwO,CAAC,CAACxO,CAAC,GAAG,CAAE0iH,EAAE,GAAGl0G,CAAC,CAAClO,CAAC,KAAOkO,CAAC,CAAC9gB,IAAI,CAACsS,CAAC,GAAGwO,CAAC,CAACxO,CAAC,CAAE,IAAKwO,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,GAAGkO,CAAC,CAAClO,CAAC,CAAE;MACtE,IAAKN,CAAC,IAAIyiH,EAAE,IAAIziH,CAAC,GAAGmgB,EAAE,EAAG;QAExBA,EAAE,GAAGngB,CAAC;QACN,IAAKA,CAAC,KAAKyiH,EAAE,EAAG;UAEf,IAAKC,EAAE,KAAKl0G,CAAC,CAAClO,CAAC,EAAG,OAAOkO,CAAC;UAC1B,IAAKk0G,EAAE,KAAKl0G,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,EAAG,OAAOkO,CAAC,CAAC9gB,IAAI;QAErC;QAEAoS,CAAC,GAAG0O,CAAC,CAACxO,CAAC,GAAGwO,CAAC,CAAC9gB,IAAI,CAACsS,CAAC,GAAGwO,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;MAEhC;IAED;IAEA8gB,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAK6xG,SAAS;EAEzB,IAAK,CAAEvgH,CAAC,EAAG,OAAO,IAAI;EAEtB,IAAK2iH,EAAE,KAAKtiG,EAAE,EAAG,OAAOrgB,CAAC,CAAC,CAAC;;EAE3B;EACA;EACA;;EAEA,IAAM3P,IAAI,GAAG2P,CAAC;IACb6iH,EAAE,GAAG7iH,CAAC,CAACE,CAAC;IACR4iH,EAAE,GAAG9iH,CAAC,CAACQ,CAAC;EACT,IAAIuiH,MAAM,GAAG5/F,QAAQ;IAAEiwB,GAAG;EAE1B1kC,CAAC,GAAG1O,CAAC;EAEL,GAAG;IAEF,IAAK2iH,EAAE,IAAIj0G,CAAC,CAACxO,CAAC,IAAIwO,CAAC,CAACxO,CAAC,IAAI2iH,EAAE,IAAIF,EAAE,KAAKj0G,CAAC,CAACxO,CAAC,IACvCyhH,eAAe,CAAEiB,EAAE,GAAGE,EAAE,GAAGH,EAAE,GAAGtiG,EAAE,EAAEuiG,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEF,EAAE,GAAGE,EAAE,GAAGziG,EAAE,GAAGsiG,EAAE,EAAEC,EAAE,EAAEl0G,CAAC,CAACxO,CAAC,EAAEwO,CAAC,CAAClO,CAAC,CAAE,EAAG;MAErF4yC,GAAG,GAAGp0C,IAAI,CAACgC,GAAG,CAAE4hH,EAAE,GAAGl0G,CAAC,CAAClO,CAAC,CAAE,IAAKmiH,EAAE,GAAGj0G,CAAC,CAACxO,CAAC,CAAE,CAAC,CAAC;;MAE3C,IAAKiiH,aAAa,CAAEzzG,CAAC,EAAEsxG,IAAI,CAAE,KAAM5sE,GAAG,GAAG2vE,MAAM,IAAM3vE,GAAG,KAAK2vE,MAAM,KAAMr0G,CAAC,CAACxO,CAAC,GAAGF,CAAC,CAACE,CAAC,IAAMwO,CAAC,CAACxO,CAAC,KAAKF,CAAC,CAACE,CAAC,IAAI8iH,oBAAoB,CAAEhjH,CAAC,EAAE0O,CAAC,CAAI,CAAI,CAAE,EAAG;QAE7I1O,CAAC,GAAG0O,CAAC;QACLq0G,MAAM,GAAG3vE,GAAG;MAEb;IAED;IAEA1kC,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAKre,IAAI;EAEpB,OAAO2P,CAAC;AAET;;AAEA;AACA,SAASgjH,oBAAoBA,CAAEhjH,CAAC,EAAE0O,CAAC,EAAG;EAErC,OAAOyyG,IAAI,CAAEnhH,CAAC,CAAC9P,IAAI,EAAE8P,CAAC,EAAE0O,CAAC,CAACxe,IAAI,CAAE,GAAG,CAAC,IAAIixH,IAAI,CAAEzyG,CAAC,CAAC9gB,IAAI,EAAEoS,CAAC,EAAEA,CAAC,CAACpS,IAAI,CAAE,GAAG,CAAC;AAEtE;;AAEA;AACA,SAAS0zH,UAAUA,CAAE55E,KAAK,EAAEpkB,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAG;EAEjD,IAAI/xG,CAAC,GAAGg5B,KAAK;EACb,GAAG;IAEF,IAAKh5B,CAAC,CAAC2H,CAAC,KAAK,IAAI,EAAG3H,CAAC,CAAC2H,CAAC,GAAG2rG,MAAM,CAAEtzG,CAAC,CAACxO,CAAC,EAAEwO,CAAC,CAAClO,CAAC,EAAE8iB,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,CAAE;IACjE/xG,CAAC,CAACuzG,KAAK,GAAGvzG,CAAC,CAACxe,IAAI;IAChBwe,CAAC,CAACwzG,KAAK,GAAGxzG,CAAC,CAAC9gB,IAAI;IAChB8gB,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAKg5B,KAAK;EAErBh5B,CAAC,CAACuzG,KAAK,CAACC,KAAK,GAAG,IAAI;EACpBxzG,CAAC,CAACuzG,KAAK,GAAG,IAAI;EAEdgB,UAAU,CAAEv0G,CAAC,CAAE;AAEhB;;AAEA;AACA;AACA,SAASu0G,UAAUA,CAAErwC,IAAI,EAAG;EAE3B,IAAI9jF,CAAC;IAAE4f,CAAC;IAAEjM,CAAC;IAAEsD,CAAC;IAAEm9G,IAAI;IAAEC,SAAS;IAAEC,KAAK;IAAEC,KAAK;IAC5CC,MAAM,GAAG,CAAC;EAEX,GAAG;IAEF50G,CAAC,GAAGkkE,IAAI;IACRA,IAAI,GAAG,IAAI;IACXswC,IAAI,GAAG,IAAI;IACXC,SAAS,GAAG,CAAC;IAEb,OAAQz0G,CAAC,EAAG;MAEXy0G,SAAS,EAAG;MACZ1gH,CAAC,GAAGiM,CAAC;MACL00G,KAAK,GAAG,CAAC;MACT,KAAMt0H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGw0H,MAAM,EAAEx0H,CAAC,EAAG,EAAG;QAE/Bs0H,KAAK,EAAG;QACR3gH,CAAC,GAAGA,CAAC,CAACy/G,KAAK;QACX,IAAK,CAAEz/G,CAAC,EAAG;MAEZ;MAEA4gH,KAAK,GAAGC,MAAM;MAEd,OAAQF,KAAK,GAAG,CAAC,IAAMC,KAAK,GAAG,CAAC,IAAI5gH,CAAG,EAAG;QAEzC,IAAK2gH,KAAK,KAAK,CAAC,KAAMC,KAAK,KAAK,CAAC,IAAI,CAAE5gH,CAAC,IAAIiM,CAAC,CAAC2H,CAAC,IAAI5T,CAAC,CAAC4T,CAAC,CAAE,EAAG;UAE1DtQ,CAAC,GAAG2I,CAAC;UACLA,CAAC,GAAGA,CAAC,CAACwzG,KAAK;UACXkB,KAAK,EAAG;QAET,CAAC,MAAM;UAENr9G,CAAC,GAAGtD,CAAC;UACLA,CAAC,GAAGA,CAAC,CAACy/G,KAAK;UACXmB,KAAK,EAAG;QAET;QAEA,IAAKH,IAAI,EAAGA,IAAI,CAAChB,KAAK,GAAGn8G,CAAC,CAAC,KACtB6sE,IAAI,GAAG7sE,CAAC;QAEbA,CAAC,CAACk8G,KAAK,GAAGiB,IAAI;QACdA,IAAI,GAAGn9G,CAAC;MAET;MAEA2I,CAAC,GAAGjM,CAAC;IAEN;IAEAygH,IAAI,CAAChB,KAAK,GAAG,IAAI;IACjBoB,MAAM,IAAI,CAAC;EAEZ,CAAC,QAASH,SAAS,GAAG,CAAC;EAEvB,OAAOvwC,IAAI;AAEZ;;AAEA;AACA,SAASovC,MAAMA,CAAE9hH,CAAC,EAAEM,CAAC,EAAE8iB,IAAI,EAAEC,IAAI,EAAEk9F,OAAO,EAAG;EAE5C;EACAvgH,CAAC,GAAG,KAAK,IAAKA,CAAC,GAAGojB,IAAI,CAAE,GAAGm9F,OAAO;EAClCjgH,CAAC,GAAG,KAAK,IAAKA,CAAC,GAAG+iB,IAAI,CAAE,GAAGk9F,OAAO;EAElCvgH,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EAEnCM,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EACnCA,CAAC,GAAG,CAAEA,CAAC,GAAKA,CAAC,IAAI,CAAG,IAAK,UAAU;EAEnC,OAAON,CAAC,GAAKM,CAAC,IAAI,CAAG;AAEtB;;AAEA;AACA,SAAS+hH,WAAWA,CAAE76E,KAAK,EAAG;EAE7B,IAAIh5B,CAAC,GAAGg5B,KAAK;IACZ67E,QAAQ,GAAG77E,KAAK;EACjB,GAAG;IAEF,IAAKh5B,CAAC,CAACxO,CAAC,GAAGqjH,QAAQ,CAACrjH,CAAC,IAAMwO,CAAC,CAACxO,CAAC,KAAKqjH,QAAQ,CAACrjH,CAAC,IAAIwO,CAAC,CAAClO,CAAC,GAAG+iH,QAAQ,CAAC/iH,CAAG,EAAG+iH,QAAQ,GAAG70G,CAAC;IAClFA,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAKg5B,KAAK;EAErB,OAAO67E,QAAQ;AAEhB;;AAEA;AACA,SAAS5B,eAAeA,CAAErgG,EAAE,EAAEC,EAAE,EAAEE,EAAE,EAAEC,EAAE,EAAErV,EAAE,EAAEC,EAAE,EAAE0mG,EAAE,EAAEC,EAAE,EAAG;EAE1D,OAAO,CAAE5mG,EAAE,GAAG2mG,EAAE,KAAOzxF,EAAE,GAAG0xF,EAAE,CAAE,GAAG,CAAE3xF,EAAE,GAAG0xF,EAAE,KAAO1mG,EAAE,GAAG2mG,EAAE,CAAE,IAAI,CAAC,IAC/D,CAAE3xF,EAAE,GAAG0xF,EAAE,KAAOtxF,EAAE,GAAGuxF,EAAE,CAAE,GAAG,CAAExxF,EAAE,GAAGuxF,EAAE,KAAOzxF,EAAE,GAAG0xF,EAAE,CAAE,IAAI,CAAC,IAC1D,CAAExxF,EAAE,GAAGuxF,EAAE,KAAO1mG,EAAE,GAAG2mG,EAAE,CAAE,GAAG,CAAE5mG,EAAE,GAAG2mG,EAAE,KAAOtxF,EAAE,GAAGuxF,EAAE,CAAE,IAAI,CAAC;AAE7D;;AAEA;AACA,SAASmP,eAAeA,CAAE1/G,CAAC,EAAEC,CAAC,EAAG;EAEhC,OAAOD,CAAC,CAAC9U,IAAI,CAACkB,CAAC,KAAK6T,CAAC,CAAC7T,CAAC,IAAI4T,CAAC,CAACxS,IAAI,CAACpB,CAAC,KAAK6T,CAAC,CAAC7T,CAAC,IAAI,CAAE00H,iBAAiB,CAAE9gH,CAAC,EAAEC,CAAC,CAAE;EAAI;EAC3Ew/G,aAAa,CAAEz/G,CAAC,EAAEC,CAAC,CAAE,IAAIw/G,aAAa,CAAEx/G,CAAC,EAAED,CAAC,CAAE,IAAI+gH,YAAY,CAAE/gH,CAAC,EAAEC,CAAC,CAAE;EAAI;EAC1Ew+G,IAAI,CAAEz+G,CAAC,CAACxS,IAAI,EAAEwS,CAAC,EAAEC,CAAC,CAACzS,IAAI,CAAE,IAAIixH,IAAI,CAAEz+G,CAAC,EAAEC,CAAC,CAACzS,IAAI,EAAEyS,CAAC,CAAE,CAAE;EAAI;EACzD6E,MAAM,CAAE9E,CAAC,EAAEC,CAAC,CAAE,IAAIw+G,IAAI,CAAEz+G,CAAC,CAACxS,IAAI,EAAEwS,CAAC,EAAEA,CAAC,CAAC9U,IAAI,CAAE,GAAG,CAAC,IAAIuzH,IAAI,CAAEx+G,CAAC,CAACzS,IAAI,EAAEyS,CAAC,EAAEA,CAAC,CAAC/U,IAAI,CAAE,GAAG,CAAC,CAAE,CAAC,CAAC;AAEtF;;AAEA;AACA,SAASuzH,IAAIA,CAAEzyG,CAAC,EAAEjM,CAAC,EAAEqJ,CAAC,EAAG;EAExB,OAAO,CAAErJ,CAAC,CAACjC,CAAC,GAAGkO,CAAC,CAAClO,CAAC,KAAOsL,CAAC,CAAC5L,CAAC,GAAGuC,CAAC,CAACvC,CAAC,CAAE,GAAG,CAAEuC,CAAC,CAACvC,CAAC,GAAGwO,CAAC,CAACxO,CAAC,KAAO4L,CAAC,CAACtL,CAAC,GAAGiC,CAAC,CAACjC,CAAC,CAAE;AAErE;;AAEA;AACA,SAASgH,MAAMA,CAAEigB,EAAE,EAAEC,EAAE,EAAG;EAEzB,OAAOD,EAAE,CAACvnB,CAAC,KAAKwnB,EAAE,CAACxnB,CAAC,IAAIunB,EAAE,CAACjnB,CAAC,KAAKknB,EAAE,CAAClnB,CAAC;AAEtC;;AAEA;AACA,SAASgtC,UAAUA,CAAE/lB,EAAE,EAAEi8F,EAAE,EAAEh8F,EAAE,EAAEi8F,EAAE,EAAG;EAErC,IAAMC,EAAE,GAAGp4F,IAAI,CAAE21F,IAAI,CAAE15F,EAAE,EAAEi8F,EAAE,EAAEh8F,EAAE,CAAE,CAAE;EACrC,IAAMm8F,EAAE,GAAGr4F,IAAI,CAAE21F,IAAI,CAAE15F,EAAE,EAAEi8F,EAAE,EAAEC,EAAE,CAAE,CAAE;EACrC,IAAMG,EAAE,GAAGt4F,IAAI,CAAE21F,IAAI,CAAEz5F,EAAE,EAAEi8F,EAAE,EAAEl8F,EAAE,CAAE,CAAE;EACrC,IAAMs8F,EAAE,GAAGv4F,IAAI,CAAE21F,IAAI,CAAEz5F,EAAE,EAAEi8F,EAAE,EAAED,EAAE,CAAE,CAAE;EAErC,IAAKE,EAAE,KAAKC,EAAE,IAAIC,EAAE,KAAKC,EAAE,EAAG,OAAO,IAAI,CAAC,CAAC;;EAE3C,IAAKH,EAAE,KAAK,CAAC,IAAII,SAAS,CAAEv8F,EAAE,EAAEC,EAAE,EAAEg8F,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKG,EAAE,KAAK,CAAC,IAAIG,SAAS,CAAEv8F,EAAE,EAAEk8F,EAAE,EAAED,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKI,EAAE,KAAK,CAAC,IAAIE,SAAS,CAAEt8F,EAAE,EAAED,EAAE,EAAEk8F,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;EACxD,IAAKI,EAAE,KAAK,CAAC,IAAIC,SAAS,CAAEt8F,EAAE,EAAEg8F,EAAE,EAAEC,EAAE,CAAE,EAAG,OAAO,IAAI,CAAC,CAAC;;EAExD,OAAO,KAAK;AAEb;;AAEA;AACA,SAASK,SAASA,CAAEt1G,CAAC,EAAEjM,CAAC,EAAEqJ,CAAC,EAAG;EAE7B,OAAOrJ,CAAC,CAACvC,CAAC,IAAIlB,IAAI,CAACa,GAAG,CAAE6O,CAAC,CAACxO,CAAC,EAAE4L,CAAC,CAAC5L,CAAC,CAAE,IAAIuC,CAAC,CAACvC,CAAC,IAAIlB,IAAI,CAACY,GAAG,CAAE8O,CAAC,CAACxO,CAAC,EAAE4L,CAAC,CAAC5L,CAAC,CAAE,IAAIuC,CAAC,CAACjC,CAAC,IAAIxB,IAAI,CAACa,GAAG,CAAE6O,CAAC,CAAClO,CAAC,EAAEsL,CAAC,CAACtL,CAAC,CAAE,IAAIiC,CAAC,CAACjC,CAAC,IAAIxB,IAAI,CAACY,GAAG,CAAE8O,CAAC,CAAClO,CAAC,EAAEsL,CAAC,CAACtL,CAAC,CAAE;AAEhI;AAEA,SAASgrB,IAAIA,CAAEy4F,GAAG,EAAG;EAEpB,OAAOA,GAAG,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC;AAEvC;;AAEA;AACA,SAAST,iBAAiBA,CAAE9gH,CAAC,EAAEC,CAAC,EAAG;EAElC,IAAI+L,CAAC,GAAGhM,CAAC;EACT,GAAG;IAEF,IAAKgM,CAAC,CAAC5f,CAAC,KAAK4T,CAAC,CAAC5T,CAAC,IAAI4f,CAAC,CAAC9gB,IAAI,CAACkB,CAAC,KAAK4T,CAAC,CAAC5T,CAAC,IAAI4f,CAAC,CAAC5f,CAAC,KAAK6T,CAAC,CAAC7T,CAAC,IAAI4f,CAAC,CAAC9gB,IAAI,CAACkB,CAAC,KAAK6T,CAAC,CAAC7T,CAAC,IACrE0+C,UAAU,CAAE9+B,CAAC,EAAEA,CAAC,CAAC9gB,IAAI,EAAE8U,CAAC,EAAEC,CAAC,CAAE,EAAG,OAAO,IAAI;IAC7C+L,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAKhM,CAAC;EAEjB,OAAO,KAAK;AAEb;;AAEA;AACA,SAASy/G,aAAaA,CAAEz/G,CAAC,EAAEC,CAAC,EAAG;EAE9B,OAAOw+G,IAAI,CAAEz+G,CAAC,CAACxS,IAAI,EAAEwS,CAAC,EAAEA,CAAC,CAAC9U,IAAI,CAAE,GAAG,CAAC,GACnCuzH,IAAI,CAAEz+G,CAAC,EAAEC,CAAC,EAAED,CAAC,CAAC9U,IAAI,CAAE,IAAI,CAAC,IAAIuzH,IAAI,CAAEz+G,CAAC,EAAEA,CAAC,CAACxS,IAAI,EAAEyS,CAAC,CAAE,IAAI,CAAC,GACtDw+G,IAAI,CAAEz+G,CAAC,EAAEC,CAAC,EAAED,CAAC,CAACxS,IAAI,CAAE,GAAG,CAAC,IAAIixH,IAAI,CAAEz+G,CAAC,EAAEA,CAAC,CAAC9U,IAAI,EAAE+U,CAAC,CAAE,GAAG,CAAC;AAEtD;;AAEA;AACA,SAAS8gH,YAAYA,CAAE/gH,CAAC,EAAEC,CAAC,EAAG;EAE7B,IAAI+L,CAAC,GAAGhM,CAAC;IACRwhH,MAAM,GAAG,KAAK;EACf,IAAMlR,EAAE,GAAG,CAAEtwG,CAAC,CAACxC,CAAC,GAAGyC,CAAC,CAACzC,CAAC,IAAK,CAAC;IAC3B+yG,EAAE,GAAG,CAAEvwG,CAAC,CAAClC,CAAC,GAAGmC,CAAC,CAACnC,CAAC,IAAK,CAAC;EACvB,GAAG;IAEF,IAASkO,CAAC,CAAClO,CAAC,GAAGyyG,EAAE,KAASvkG,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,GAAGyyG,EAAI,IAAMvkG,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,KAAKkO,CAAC,CAAClO,CAAC,IAC3DwyG,EAAE,GAAG,CAAEtkG,CAAC,CAAC9gB,IAAI,CAACsS,CAAC,GAAGwO,CAAC,CAACxO,CAAC,KAAO+yG,EAAE,GAAGvkG,CAAC,CAAClO,CAAC,CAAE,IAAKkO,CAAC,CAAC9gB,IAAI,CAAC4S,CAAC,GAAGkO,CAAC,CAAClO,CAAC,CAAE,GAAGkO,CAAC,CAACxO,CAAG,EACtEgkH,MAAM,GAAG,CAAEA,MAAM;IAClBx1G,CAAC,GAAGA,CAAC,CAAC9gB,IAAI;EAEX,CAAC,QAAS8gB,CAAC,KAAKhM,CAAC;EAEjB,OAAOwhH,MAAM;AAEd;;AAEA;AACA;AACA,SAAS7B,YAAYA,CAAE3/G,CAAC,EAAEC,CAAC,EAAG;EAE7B,IAAMvC,EAAE,GAAG,IAAI+jH,IAAI,CAAEzhH,CAAC,CAAC5T,CAAC,EAAE4T,CAAC,CAACxC,CAAC,EAAEwC,CAAC,CAAClC,CAAC,CAAE;IACnCF,EAAE,GAAG,IAAI6jH,IAAI,CAAExhH,CAAC,CAAC7T,CAAC,EAAE6T,CAAC,CAACzC,CAAC,EAAEyC,CAAC,CAACnC,CAAC,CAAE;IAC9B4jH,EAAE,GAAG1hH,CAAC,CAAC9U,IAAI;IACXy2H,EAAE,GAAG1hH,CAAC,CAACzS,IAAI;EAEZwS,CAAC,CAAC9U,IAAI,GAAG+U,CAAC;EACVA,CAAC,CAACzS,IAAI,GAAGwS,CAAC;EAEVtC,EAAE,CAACxS,IAAI,GAAGw2H,EAAE;EACZA,EAAE,CAACl0H,IAAI,GAAGkQ,EAAE;EAEZE,EAAE,CAAC1S,IAAI,GAAGwS,EAAE;EACZA,EAAE,CAAClQ,IAAI,GAAGoQ,EAAE;EAEZ+jH,EAAE,CAACz2H,IAAI,GAAG0S,EAAE;EACZA,EAAE,CAACpQ,IAAI,GAAGm0H,EAAE;EAEZ,OAAO/jH,EAAE;AAEV;;AAEA;AACA,SAASwgH,UAAUA,CAAEhyH,CAAC,EAAEoR,CAAC,EAAEM,CAAC,EAAEivG,IAAI,EAAG;EAEpC,IAAM/gG,CAAC,GAAG,IAAIy1G,IAAI,CAAEr1H,CAAC,EAAEoR,CAAC,EAAEM,CAAC,CAAE;EAE7B,IAAK,CAAEivG,IAAI,EAAG;IAEb/gG,CAAC,CAACxe,IAAI,GAAGwe,CAAC;IACVA,CAAC,CAAC9gB,IAAI,GAAG8gB,CAAC;EAEX,CAAC,MAAM;IAENA,CAAC,CAAC9gB,IAAI,GAAG6hH,IAAI,CAAC7hH,IAAI;IAClB8gB,CAAC,CAACxe,IAAI,GAAGu/G,IAAI;IACbA,IAAI,CAAC7hH,IAAI,CAACsC,IAAI,GAAGwe,CAAC;IAClB+gG,IAAI,CAAC7hH,IAAI,GAAG8gB,CAAC;EAEd;EAEA,OAAOA,CAAC;AAET;AAEA,SAASqyG,UAAUA,CAAEryG,CAAC,EAAG;EAExBA,CAAC,CAAC9gB,IAAI,CAACsC,IAAI,GAAGwe,CAAC,CAACxe,IAAI;EACpBwe,CAAC,CAACxe,IAAI,CAACtC,IAAI,GAAG8gB,CAAC,CAAC9gB,IAAI;EAEpB,IAAK8gB,CAAC,CAACuzG,KAAK,EAAGvzG,CAAC,CAACuzG,KAAK,CAACC,KAAK,GAAGxzG,CAAC,CAACwzG,KAAK;EACtC,IAAKxzG,CAAC,CAACwzG,KAAK,EAAGxzG,CAAC,CAACwzG,KAAK,CAACD,KAAK,GAAGvzG,CAAC,CAACuzG,KAAK;AAEvC;AAEA,SAASkC,IAAIA,CAAEr1H,CAAC,EAAEoR,CAAC,EAAEM,CAAC,EAAG;EAExB;EACA,IAAI,CAAC1R,CAAC,GAAGA,CAAC;;EAEV;EACA,IAAI,CAACoR,CAAC,GAAGA,CAAC;EACV,IAAI,CAACM,CAAC,GAAGA,CAAC;;EAEV;EACA,IAAI,CAACtQ,IAAI,GAAG,IAAI;EAChB,IAAI,CAACtC,IAAI,GAAG,IAAI;;EAEhB;EACA,IAAI,CAACyoB,CAAC,GAAG,IAAI;;EAEb;EACA,IAAI,CAAC4rG,KAAK,GAAG,IAAI;EACjB,IAAI,CAACC,KAAK,GAAG,IAAI;;EAEjB;EACA,IAAI,CAAChB,OAAO,GAAG,KAAK;AAErB;AAEA,SAASL,UAAUA,CAAEjuG,IAAI,EAAE80B,KAAK,EAAEkG,GAAG,EAAEwyE,GAAG,EAAG;EAE5C,IAAI5mD,GAAG,GAAG,CAAC;EACX,KAAM,IAAI1qE,CAAC,GAAG44C,KAAK,EAAEngB,CAAC,GAAGqmB,GAAG,GAAGwyE,GAAG,EAAEtxH,CAAC,GAAG8+C,GAAG,EAAE9+C,CAAC,IAAIsxH,GAAG,EAAG;IAEvD5mD,GAAG,IAAI,CAAE5mD,IAAI,CAAE2U,CAAC,CAAE,GAAG3U,IAAI,CAAE9jB,CAAC,CAAE,KAAO8jB,IAAI,CAAE9jB,CAAC,GAAG,CAAC,CAAE,GAAG8jB,IAAI,CAAE2U,CAAC,GAAG,CAAC,CAAE,CAAE;IACpEA,CAAC,GAAGz4B,CAAC;EAEN;EAEA,OAAO0qE,GAAG;AAEX;AAAC,IAEK8qD,UAAU;EAAA,SAAAA,WAAA;IAAAjzH,eAAA,OAAAizH,UAAA;EAAA;EAAAzyH,YAAA,CAAAyyH,UAAA;IAAAv7H,GAAA;IAAAE,KAAA;IAEf;;IAEA,SAAAk4H,KAAaoD,OAAO,EAAG;MAEtB,IAAMxkH,CAAC,GAAGwkH,OAAO,CAAC11H,MAAM;MACxB,IAAI6T,CAAC,GAAG,GAAG;MAEX,KAAM,IAAIgM,CAAC,GAAG3O,CAAC,GAAG,CAAC,EAAE0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1C,CAAC,EAAE2O,CAAC,GAAGjM,CAAC,EAAG,EAAG;QAE7CC,CAAC,IAAI6hH,OAAO,CAAE71G,CAAC,CAAE,CAACxO,CAAC,GAAGqkH,OAAO,CAAE9hH,CAAC,CAAE,CAACjC,CAAC,GAAG+jH,OAAO,CAAE9hH,CAAC,CAAE,CAACvC,CAAC,GAAGqkH,OAAO,CAAE71G,CAAC,CAAE,CAAClO,CAAC;MAEvE;MAEA,OAAOkC,CAAC,GAAG,GAAG;IAEf;EAAC;IAAA3Z,GAAA;IAAAE,KAAA,EAED,SAAAu7H,YAAoB/M,GAAG,EAAG;MAEzB,OAAO6M,UAAU,CAACnD,IAAI,CAAE1J,GAAG,CAAE,GAAG,CAAC;IAElC;EAAC;IAAA1uH,GAAA;IAAAE,KAAA,EAED,SAAAw7H,iBAAyBF,OAAO,EAAE3E,KAAK,EAAG;MAEzC,IAAMhxE,QAAQ,GAAG,EAAE,CAAC,CAAC;MACrB,IAAMuxE,WAAW,GAAG,EAAE,CAAC,CAAC;MACxB,IAAMuE,KAAK,GAAG,EAAE,CAAC,CAAC;;MAElBC,eAAe,CAAEJ,OAAO,CAAE;MAC1BK,UAAU,CAAEh2E,QAAQ,EAAE21E,OAAO,CAAE;;MAE/B;;MAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC11H,MAAM;MAE9B+wH,KAAK,CAACl0H,OAAO,CAAEi5H,eAAe,CAAE;MAEhC,KAAM,IAAI71H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8wH,KAAK,CAAC/wH,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEzCqxH,WAAW,CAAC7xH,IAAI,CAAEu2H,SAAS,CAAE;QAC7BA,SAAS,IAAIjF,KAAK,CAAE9wH,CAAC,CAAE,CAACD,MAAM;QAC9B+1H,UAAU,CAAEh2E,QAAQ,EAAEgxE,KAAK,CAAE9wH,CAAC,CAAE,CAAE;MAEnC;;MAEA;;MAEA,IAAMitE,SAAS,GAAGkkD,MAAM,CAACC,WAAW,CAAEtxE,QAAQ,EAAEuxE,WAAW,CAAE;;MAE7D;;MAEA,KAAM,IAAIrxH,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGitE,SAAS,CAACltE,MAAM,EAAEC,IAAC,IAAI,CAAC,EAAG;QAE/C41H,KAAK,CAACp2H,IAAI,CAAEytE,SAAS,CAAC3rE,KAAK,CAAEtB,IAAC,EAAEA,IAAC,GAAG,CAAC,CAAE,CAAE;MAE1C;MAEA,OAAO41H,KAAK;IAEb;EAAC;EAAA,OAAAJ,UAAA;AAAA;AAAA/7H,OAAA,CAAA+7H,UAAA,GAAAA,UAAA;AAIF,SAASK,eAAeA,CAAE7gG,MAAM,EAAG;EAElC,IAAMllB,CAAC,GAAGklB,MAAM,CAACj1B,MAAM;EAEvB,IAAK+P,CAAC,GAAG,CAAC,IAAIklB,MAAM,CAAEllB,CAAC,GAAG,CAAC,CAAE,CAAC4I,MAAM,CAAEsc,MAAM,CAAE,CAAC,CAAE,CAAE,EAAG;IAErDA,MAAM,CAAC9zB,GAAG,EAAE;EAEb;AAED;AAEA,SAAS40H,UAAUA,CAAEh2E,QAAQ,EAAE21E,OAAO,EAAG;EAExC,KAAM,IAAIz1H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy1H,OAAO,CAAC11H,MAAM,EAAEC,CAAC,EAAG,EAAG;IAE3C8/C,QAAQ,CAACtgD,IAAI,CAAEi2H,OAAO,CAAEz1H,CAAC,CAAE,CAACoR,CAAC,CAAE;IAC/B0uC,QAAQ,CAACtgD,IAAI,CAAEi2H,OAAO,CAAEz1H,CAAC,CAAE,CAAC0R,CAAC,CAAE;EAEhC;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAsBMskH,eAAe,0BAAAC,gBAAA;EAAAlxG,SAAA,CAAAixG,eAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAjxG,YAAA,CAAA+wG,eAAA;EAEpB,SAAAA,gBAAa5tF,MAAM,GAAG,IAAIsoF,KAAK,CAAE,CAAE,IAAIl7G,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,CAAE,CAAE,EAAE8T,OAAO,GAAG,CAAC,CAAC,EAAG;IAAA,IAAA6sG,OAAA;IAAA5zH,eAAA,OAAAyzH,eAAA;IAEjKG,OAAA,GAAAD,QAAA,CAAAj6H,IAAA;IAEAk6H,OAAA,CAAKn6H,IAAI,GAAG,iBAAiB;IAE7Bm6H,OAAA,CAAKhtF,UAAU,GAAG;MACjBf,MAAM,EAAEA,MAAM;MACd9e,OAAO,EAAEA;IACV,CAAC;IAED8e,MAAM,GAAG7jB,KAAK,CAACC,OAAO,CAAE4jB,MAAM,CAAE,GAAGA,MAAM,GAAG,CAAEA,MAAM,CAAE;IAEtD,IAAMyX,KAAK,GAAA/5B,sBAAA,CAAAqwG,OAAA,CAAO;IAElB,IAAMC,aAAa,GAAG,EAAE;IACxB,IAAMC,OAAO,GAAG,EAAE;IAElB,KAAM,IAAIr2H,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGs4B,MAAM,CAACroC,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEjD,IAAMopC,KAAK,GAAGhB,MAAM,CAAEpoC,CAAC,CAAE;MACzBs2H,QAAQ,CAAEltF,KAAK,CAAE;IAElB;;IAEA;;IAEA+sF,OAAA,CAAKn9E,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE++E,aAAa,EAAE,CAAC,CAAE,CAAE;IAC/ED,OAAA,CAAKn9E,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAEg/E,OAAO,EAAE,CAAC,CAAE,CAAE;IAEnEF,OAAA,CAAK/6E,oBAAoB,EAAE;;IAE3B;;IAEA,SAASk7E,QAAQA,CAAEltF,KAAK,EAAG;MAE1B,IAAMmtF,WAAW,GAAG,EAAE;;MAEtB;;MAEA,IAAMC,aAAa,GAAGltG,OAAO,CAACktG,aAAa,KAAK/3H,SAAS,GAAG6qB,OAAO,CAACktG,aAAa,GAAG,EAAE;MACtF,IAAMC,KAAK,GAAGntG,OAAO,CAACmtG,KAAK,KAAKh4H,SAAS,GAAG6qB,OAAO,CAACmtG,KAAK,GAAG,CAAC;MAC7D,IAAMhtG,KAAK,GAAGH,OAAO,CAACG,KAAK,KAAKhrB,SAAS,GAAG6qB,OAAO,CAACG,KAAK,GAAG,CAAC;MAE7D,IAAIitG,YAAY,GAAGptG,OAAO,CAACotG,YAAY,KAAKj4H,SAAS,GAAG6qB,OAAO,CAACotG,YAAY,GAAG,IAAI;MACnF,IAAIC,cAAc,GAAGrtG,OAAO,CAACqtG,cAAc,KAAKl4H,SAAS,GAAG6qB,OAAO,CAACqtG,cAAc,GAAG,GAAG;MACxF,IAAIC,SAAS,GAAGttG,OAAO,CAACstG,SAAS,KAAKn4H,SAAS,GAAG6qB,OAAO,CAACstG,SAAS,GAAGD,cAAc,GAAG,GAAG;MAC1F,IAAIE,WAAW,GAAGvtG,OAAO,CAACutG,WAAW,KAAKp4H,SAAS,GAAG6qB,OAAO,CAACutG,WAAW,GAAG,CAAC;MAC7E,IAAIC,aAAa,GAAGxtG,OAAO,CAACwtG,aAAa,KAAKr4H,SAAS,GAAG6qB,OAAO,CAACwtG,aAAa,GAAG,CAAC;MAEnF,IAAMC,WAAW,GAAGztG,OAAO,CAACytG,WAAW;MAEvC,IAAMC,KAAK,GAAG1tG,OAAO,CAAC2tG,WAAW,KAAKx4H,SAAS,GAAG6qB,OAAO,CAAC2tG,WAAW,GAAGC,gBAAgB;;MAExF;;MAEA,IAAIC,UAAU;QAAEC,aAAa,GAAG,KAAK;MACrC,IAAIC,UAAU,EAAEC,QAAQ,EAAElkG,MAAM,EAAEmkG,SAAS;MAE3C,IAAKR,WAAW,EAAG;QAElBI,UAAU,GAAGJ,WAAW,CAAC1W,eAAe,CAAEoW,KAAK,CAAE;QAEjDW,aAAa,GAAG,IAAI;QACpBV,YAAY,GAAG,KAAK,CAAC,CAAC;;QAEtB;;QAEA;;QAEAW,UAAU,GAAGN,WAAW,CAACtV,mBAAmB,CAAEgV,KAAK,EAAE,KAAK,CAAE;;QAE5D;;QAEAa,QAAQ,GAAG,IAAIxmG,OAAO,EAAE;QACxBsC,MAAM,GAAG,IAAItC,OAAO,EAAE;QACtBymG,SAAS,GAAG,IAAIzmG,OAAO,EAAE;MAE1B;;MAEA;;MAEA,IAAK,CAAE4lG,YAAY,EAAG;QAErBI,aAAa,GAAG,CAAC;QACjBH,cAAc,GAAG,CAAC;QAClBC,SAAS,GAAG,CAAC;QACbC,WAAW,GAAG,CAAC;MAEhB;;MAEA;;MAEA,IAAMW,WAAW,GAAGpuF,KAAK,CAAC6nF,aAAa,CAAEuF,aAAa,CAAE;MAExD,IAAI12E,QAAQ,GAAG03E,WAAW,CAACpuF,KAAK;MAChC,IAAM0nF,KAAK,GAAG0G,WAAW,CAAC1G,KAAK;MAE/B,IAAM7vH,OAAO,GAAG,CAAEu0H,UAAU,CAACE,WAAW,CAAE51E,QAAQ,CAAE;MAEpD,IAAK7+C,OAAO,EAAG;QAEd6+C,QAAQ,GAAGA,QAAQ,CAAC7+C,OAAO,EAAE;;QAE7B;;QAEA,KAAM,IAAImb,CAAC,GAAG,CAAC,EAAEq7G,EAAE,GAAG3G,KAAK,CAAC/wH,MAAM,EAAEqc,CAAC,GAAGq7G,EAAE,EAAEr7G,CAAC,EAAG,EAAG;UAElD,IAAMs7G,KAAK,GAAG5G,KAAK,CAAE10G,CAAC,CAAE;UAExB,IAAKo5G,UAAU,CAACE,WAAW,CAAEgC,KAAK,CAAE,EAAG;YAEtC5G,KAAK,CAAE10G,CAAC,CAAE,GAAGs7G,KAAK,CAACz2H,OAAO,EAAE;UAE7B;QAED;MAED;MAGA,IAAM20H,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAE71E,QAAQ,EAAEgxE,KAAK,CAAE;;MAE5D;;MAEA,IAAM2E,OAAO,GAAG31E,QAAQ,CAAC,CAAC;;MAE1B,KAAM,IAAI1jC,EAAC,GAAG,CAAC,EAAEq7G,GAAE,GAAG3G,KAAK,CAAC/wH,MAAM,EAAEqc,EAAC,GAAGq7G,GAAE,EAAEr7G,EAAC,EAAG,EAAG;QAElD,IAAMs7G,MAAK,GAAG5G,KAAK,CAAE10G,EAAC,CAAE;QAExB0jC,QAAQ,GAAGA,QAAQ,CAACh+B,MAAM,CAAE41G,MAAK,CAAE;MAEpC;MAGA,SAASC,QAAQA,CAAEC,EAAE,EAAE/V,GAAG,EAAE/gG,IAAI,EAAG;QAElC,IAAK,CAAE+gG,GAAG,EAAGltG,OAAO,CAACjX,KAAK,CAAE,2CAA2C,CAAE;QAEzE,OAAOmkH,GAAG,CAAC3rG,KAAK,EAAE,CAACW,cAAc,CAAEiK,IAAI,CAAE,CAACzK,GAAG,CAAEuhH,EAAE,CAAE;MAEpD;MAEA,IAAMC,IAAI,GAAG/3E,QAAQ,CAAC//C,MAAM;QAAE+3H,IAAI,GAAGlC,KAAK,CAAC71H,MAAM;;MAGjD;;MAGA,SAASg4H,WAAWA,CAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAG;QAE5C;QACA;QACA;QACA;QACA;QACA;;QAEA,IAAIC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;;QAErC;QACA;;QAEA,IAAMC,QAAQ,GAAGN,IAAI,CAAC5mH,CAAC,GAAG6mH,MAAM,CAAC7mH,CAAC;UACjCmnH,QAAQ,GAAGP,IAAI,CAACtmH,CAAC,GAAGumH,MAAM,CAACvmH,CAAC;QAC7B,IAAM8mH,QAAQ,GAAGN,MAAM,CAAC9mH,CAAC,GAAG4mH,IAAI,CAAC5mH,CAAC;UACjCqnH,QAAQ,GAAGP,MAAM,CAACxmH,CAAC,GAAGsmH,IAAI,CAACtmH,CAAC;QAE7B,IAAMgnH,YAAY,GAAKJ,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAU;;QAElE;QACA,IAAMI,UAAU,GAAKL,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAU;QAEhE,IAAKtoH,IAAI,CAACgC,GAAG,CAAEymH,UAAU,CAAE,GAAGl1H,MAAM,CAACiqB,OAAO,EAAG;UAE9C;;UAEA;;UAEA,IAAMkrG,UAAU,GAAG1oH,IAAI,CAAC0H,IAAI,CAAE8gH,YAAY,CAAE;UAC5C,IAAMG,UAAU,GAAG3oH,IAAI,CAAC0H,IAAI,CAAE4gH,QAAQ,GAAGA,QAAQ,GAAGC,QAAQ,GAAGA,QAAQ,CAAE;;UAEzE;;UAEA,IAAMK,aAAa,GAAKb,MAAM,CAAC7mH,CAAC,GAAGmnH,QAAQ,GAAGK,UAAY;UAC1D,IAAMG,aAAa,GAAKd,MAAM,CAACvmH,CAAC,GAAG4mH,QAAQ,GAAGM,UAAY;UAE1D,IAAMI,aAAa,GAAKd,MAAM,CAAC9mH,CAAC,GAAGqnH,QAAQ,GAAGI,UAAY;UAC1D,IAAMI,aAAa,GAAKf,MAAM,CAACxmH,CAAC,GAAG8mH,QAAQ,GAAGK,UAAY;;UAE1D;;UAEA,IAAMK,EAAE,GAAG,CAAE,CAAEF,aAAa,GAAGF,aAAa,IAAKL,QAAQ,GACvD,CAAEQ,aAAa,GAAGF,aAAa,IAAKP,QAAQ,KAC3CF,QAAQ,GAAGG,QAAQ,GAAGF,QAAQ,GAAGC,QAAQ,CAAE;;UAE9C;;UAEAL,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGY,EAAE,GAAGlB,IAAI,CAAC5mH,CAAG;UACtDgnH,SAAS,GAAKW,aAAa,GAAGR,QAAQ,GAAGW,EAAE,GAAGlB,IAAI,CAACtmH,CAAG;;UAEtD;UACA;UACA,IAAMynH,aAAa,GAAKhB,SAAS,GAAGA,SAAS,GAAGC,SAAS,GAAGA,SAAW;UACvE,IAAKe,aAAa,IAAI,CAAC,EAAG;YAEzB,OAAO,IAAI3jH,OAAO,CAAE2iH,SAAS,EAAEC,SAAS,CAAE;UAE3C,CAAC,MAAM;YAENC,SAAS,GAAGnoH,IAAI,CAAC0H,IAAI,CAAEuhH,aAAa,GAAG,CAAC,CAAE;UAE3C;QAED,CAAC,MAAM;UAEN;;UAEA,IAAIC,YAAY,GAAG,KAAK,CAAC,CAAC;;UAE1B,IAAKd,QAAQ,GAAG70H,MAAM,CAACiqB,OAAO,EAAG;YAEhC,IAAK8qG,QAAQ,GAAG/0H,MAAM,CAACiqB,OAAO,EAAG;cAEhC0rG,YAAY,GAAG,IAAI;YAEpB;UAED,CAAC,MAAM;YAEN,IAAKd,QAAQ,GAAG,CAAE70H,MAAM,CAACiqB,OAAO,EAAG;cAElC,IAAK8qG,QAAQ,GAAG,CAAE/0H,MAAM,CAACiqB,OAAO,EAAG;gBAElC0rG,YAAY,GAAG,IAAI;cAEpB;YAED,CAAC,MAAM;cAEN,IAAKlpH,IAAI,CAACwsB,IAAI,CAAE67F,QAAQ,CAAE,KAAKroH,IAAI,CAACwsB,IAAI,CAAE+7F,QAAQ,CAAE,EAAG;gBAEtDW,YAAY,GAAG,IAAI;cAEpB;YAED;UAED;UAEA,IAAKA,YAAY,EAAG;YAEnB;YACAjB,SAAS,GAAG,CAAEI,QAAQ;YACtBH,SAAS,GAAGE,QAAQ;YACpBD,SAAS,GAAGnoH,IAAI,CAAC0H,IAAI,CAAE8gH,YAAY,CAAE;UAEtC,CAAC,MAAM;YAEN;YACAP,SAAS,GAAGG,QAAQ;YACpBF,SAAS,GAAGG,QAAQ;YACpBF,SAAS,GAAGnoH,IAAI,CAAC0H,IAAI,CAAE8gH,YAAY,GAAG,CAAC,CAAE;UAE1C;QAED;QAEA,OAAO,IAAIljH,OAAO,CAAE2iH,SAAS,GAAGE,SAAS,EAAED,SAAS,GAAGC,SAAS,CAAE;MAEnE;MAGA,IAAMgB,gBAAgB,GAAG,EAAE;MAE3B,KAAM,IAAIr5H,IAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG0pG,OAAO,CAAC11H,MAAM,EAAE04B,CAAC,GAAG1M,EAAE,GAAG,CAAC,EAAE2/D,CAAC,GAAG1rF,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+rB,EAAE,EAAE/rB,IAAC,EAAG,EAAEy4B,CAAC,EAAG,EAAEizD,CAAC,EAAG,EAAG;QAEvF,IAAKjzD,CAAC,KAAK1M,EAAE,EAAG0M,CAAC,GAAG,CAAC;QACrB,IAAKizD,CAAC,KAAK3/D,EAAE,EAAG2/D,CAAC,GAAG,CAAC;;QAErB;QACA;;QAEA2tC,gBAAgB,CAAEr5H,IAAC,CAAE,GAAG+3H,WAAW,CAAEtC,OAAO,CAAEz1H,IAAC,CAAE,EAAEy1H,OAAO,CAAEh9F,CAAC,CAAE,EAAEg9F,OAAO,CAAE/pC,CAAC,CAAE,CAAE;MAEhF;MAEA,IAAM4tC,cAAc,GAAG,EAAE;MACzB,IAAIC,gBAAgB;QAAEC,iBAAiB,GAAGH,gBAAgB,CAACv3G,MAAM,EAAE;MAEnE,KAAM,IAAI1F,GAAC,GAAG,CAAC,EAAEq7G,IAAE,GAAG3G,KAAK,CAAC/wH,MAAM,EAAEqc,GAAC,GAAGq7G,IAAE,EAAEr7G,GAAC,EAAG,EAAG;QAElD,IAAMs7G,OAAK,GAAG5G,KAAK,CAAE10G,GAAC,CAAE;QAExBm9G,gBAAgB,GAAG,EAAE;QAErB,KAAM,IAAIv5H,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG2rG,OAAK,CAAC33H,MAAM,EAAE04B,GAAC,GAAG1M,KAAE,GAAG,CAAC,EAAE2/D,EAAC,GAAG1rF,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAEy4B,GAAC,EAAG,EAAEizD,EAAC,EAAG,EAAG;UAErF,IAAKjzD,GAAC,KAAK1M,KAAE,EAAG0M,GAAC,GAAG,CAAC;UACrB,IAAKizD,EAAC,KAAK3/D,KAAE,EAAG2/D,EAAC,GAAG,CAAC;;UAErB;UACA6tC,gBAAgB,CAAEv5H,IAAC,CAAE,GAAG+3H,WAAW,CAAEL,OAAK,CAAE13H,IAAC,CAAE,EAAE03H,OAAK,CAAEj/F,GAAC,CAAE,EAAEi/F,OAAK,CAAEhsC,EAAC,CAAE,CAAE;QAE1E;QAEA4tC,cAAc,CAAC95H,IAAI,CAAE+5H,gBAAgB,CAAE;QACvCC,iBAAiB,GAAGA,iBAAiB,CAAC13G,MAAM,CAAEy3G,gBAAgB,CAAE;MAEjE;;MAGA;;MAEA,KAAM,IAAI1lH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGijH,aAAa,EAAEjjH,CAAC,EAAG,EAAG;QAE1C;;QAEA,IAAMjC,CAAC,GAAGiC,CAAC,GAAGijH,aAAa;QAC3B,IAAMvvG,CAAC,GAAGovG,cAAc,GAAGzmH,IAAI,CAAC8D,GAAG,CAAEpC,CAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QACtD,IAAMspH,GAAE,GAAG7C,SAAS,GAAG1mH,IAAI,CAAC+D,GAAG,CAAErC,CAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE,GAAG0mH,WAAW;;QAEhE;;QAEA,KAAM,IAAI72H,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG0pG,OAAO,CAAC11H,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;UAEpD,IAAM05H,IAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAEz1H,IAAC,CAAE,EAAEq5H,gBAAgB,CAAEr5H,IAAC,CAAE,EAAEy5H,GAAE,CAAE;UAEhErjH,CAAC,CAAEsjH,IAAI,CAACtoH,CAAC,EAAEsoH,IAAI,CAAChoH,CAAC,EAAE,CAAE6V,CAAC,CAAE;QAEzB;;QAEA;;QAEA,KAAM,IAAInL,GAAC,GAAG,CAAC,EAAEq7G,IAAE,GAAG3G,KAAK,CAAC/wH,MAAM,EAAEqc,GAAC,GAAGq7G,IAAE,EAAEr7G,GAAC,EAAG,EAAG;UAElD,IAAMs7G,OAAK,GAAG5G,KAAK,CAAE10G,GAAC,CAAE;UACxBm9G,gBAAgB,GAAGD,cAAc,CAAEl9G,GAAC,CAAE;UAEtC,KAAM,IAAIpc,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG2rG,OAAK,CAAC33H,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;YAElD,IAAM05H,KAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAE13H,IAAC,CAAE,EAAEu5H,gBAAgB,CAAEv5H,IAAC,CAAE,EAAEy5H,GAAE,CAAE;YAE9DrjH,CAAC,CAAEsjH,KAAI,CAACtoH,CAAC,EAAEsoH,KAAI,CAAChoH,CAAC,EAAE,CAAE6V,CAAC,CAAE;UAEzB;QAED;MAED;MAEA,IAAMkyG,EAAE,GAAG7C,SAAS,GAAGC,WAAW;;MAElC;;MAEA,KAAM,IAAI72H,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG63H,IAAI,EAAE73H,IAAC,EAAG,EAAG;QAEjC,IAAM05H,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAE73E,QAAQ,CAAE9/C,IAAC,CAAE,EAAEw5H,iBAAiB,CAAEx5H,IAAC,CAAE,EAAEy5H,EAAE,CAAE,GAAG35E,QAAQ,CAAE9/C,IAAC,CAAE;QAEjG,IAAK,CAAEo3H,aAAa,EAAG;UAEtBhhH,CAAC,CAAEsjH,MAAI,CAACtoH,CAAC,EAAEsoH,MAAI,CAAChoH,CAAC,EAAE,CAAC,CAAE;QAEvB,CAAC,MAAM;UAEN;;UAEA0hB,MAAM,CAACjd,IAAI,CAAEkhH,UAAU,CAACr9E,OAAO,CAAE,CAAC,CAAE,CAAE,CAACnjC,cAAc,CAAE6iH,MAAI,CAACtoH,CAAC,CAAE;UAC/DkmH,QAAQ,CAACnhH,IAAI,CAAEkhH,UAAU,CAACzV,SAAS,CAAE,CAAC,CAAE,CAAE,CAAC/qG,cAAc,CAAE6iH,MAAI,CAAChoH,CAAC,CAAE;UAEnE6lH,SAAS,CAACphH,IAAI,CAAEghH,UAAU,CAAE,CAAC,CAAE,CAAE,CAAC9gH,GAAG,CAAE+c,MAAM,CAAE,CAAC/c,GAAG,CAAEihH,QAAQ,CAAE;UAE/DlhH,CAAC,CAAEmhH,SAAS,CAACnmH,CAAC,EAAEmmH,SAAS,CAAC7lH,CAAC,EAAE6lH,SAAS,CAAChwG,CAAC,CAAE;QAE3C;MAED;;MAEA;MACA;;MAEA,KAAM,IAAI1U,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI4jH,KAAK,EAAE5jH,CAAC,EAAG,EAAG;QAEnC,KAAM,IAAI7S,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG63H,IAAI,EAAE73H,IAAC,EAAG,EAAG;UAEjC,IAAM05H,MAAI,GAAGhD,YAAY,GAAGiB,QAAQ,CAAE73E,QAAQ,CAAE9/C,IAAC,CAAE,EAAEw5H,iBAAiB,CAAEx5H,IAAC,CAAE,EAAEy5H,EAAE,CAAE,GAAG35E,QAAQ,CAAE9/C,IAAC,CAAE;UAEjG,IAAK,CAAEo3H,aAAa,EAAG;YAEtBhhH,CAAC,CAAEsjH,MAAI,CAACtoH,CAAC,EAAEsoH,MAAI,CAAChoH,CAAC,EAAE+X,KAAK,GAAGgtG,KAAK,GAAG5jH,CAAC,CAAE;UAEvC,CAAC,MAAM;YAEN;;YAEAugB,MAAM,CAACjd,IAAI,CAAEkhH,UAAU,CAACr9E,OAAO,CAAEnnC,CAAC,CAAE,CAAE,CAACgE,cAAc,CAAE6iH,MAAI,CAACtoH,CAAC,CAAE;YAC/DkmH,QAAQ,CAACnhH,IAAI,CAAEkhH,UAAU,CAACzV,SAAS,CAAE/uG,CAAC,CAAE,CAAE,CAACgE,cAAc,CAAE6iH,MAAI,CAAChoH,CAAC,CAAE;YAEnE6lH,SAAS,CAACphH,IAAI,CAAEghH,UAAU,CAAEtkH,CAAC,CAAE,CAAE,CAACwD,GAAG,CAAE+c,MAAM,CAAE,CAAC/c,GAAG,CAAEihH,QAAQ,CAAE;YAE/DlhH,CAAC,CAAEmhH,SAAS,CAACnmH,CAAC,EAAEmmH,SAAS,CAAC7lH,CAAC,EAAE6lH,SAAS,CAAChwG,CAAC,CAAE;UAE3C;QAED;MAED;;MAGA;;MAEA;MACA,KAAM,IAAI1T,GAAC,GAAGijH,aAAa,GAAG,CAAC,EAAEjjH,GAAC,IAAI,CAAC,EAAEA,GAAC,EAAG,EAAG;QAE/C,IAAMjC,EAAC,GAAGiC,GAAC,GAAGijH,aAAa;QAC3B,IAAMvvG,GAAC,GAAGovG,cAAc,GAAGzmH,IAAI,CAAC8D,GAAG,CAAEpC,EAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QACtD,IAAMspH,IAAE,GAAG7C,SAAS,GAAG1mH,IAAI,CAAC+D,GAAG,CAAErC,EAAC,GAAG1B,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE,GAAG0mH,WAAW;;QAEhE;;QAEA,KAAM,IAAI72H,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG0pG,OAAO,CAAC11H,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;UAEpD,IAAM05H,MAAI,GAAG/B,QAAQ,CAAElC,OAAO,CAAEz1H,IAAC,CAAE,EAAEq5H,gBAAgB,CAAEr5H,IAAC,CAAE,EAAEy5H,IAAE,CAAE;UAChErjH,CAAC,CAAEsjH,MAAI,CAACtoH,CAAC,EAAEsoH,MAAI,CAAChoH,CAAC,EAAE+X,KAAK,GAAGlC,GAAC,CAAE;QAE/B;;QAEA;;QAEA,KAAM,IAAInL,GAAC,GAAG,CAAC,EAAEq7G,IAAE,GAAG3G,KAAK,CAAC/wH,MAAM,EAAEqc,GAAC,GAAGq7G,IAAE,EAAEr7G,GAAC,EAAG,EAAG;UAElD,IAAMs7G,OAAK,GAAG5G,KAAK,CAAE10G,GAAC,CAAE;UACxBm9G,gBAAgB,GAAGD,cAAc,CAAEl9G,GAAC,CAAE;UAEtC,KAAM,IAAIpc,IAAC,GAAG,CAAC,EAAE+rB,KAAE,GAAG2rG,OAAK,CAAC33H,MAAM,EAAEC,IAAC,GAAG+rB,KAAE,EAAE/rB,IAAC,EAAG,EAAG;YAElD,IAAM05H,MAAI,GAAG/B,QAAQ,CAAED,OAAK,CAAE13H,IAAC,CAAE,EAAEu5H,gBAAgB,CAAEv5H,IAAC,CAAE,EAAEy5H,IAAE,CAAE;YAE9D,IAAK,CAAErC,aAAa,EAAG;cAEtBhhH,CAAC,CAAEsjH,MAAI,CAACtoH,CAAC,EAAEsoH,MAAI,CAAChoH,CAAC,EAAE+X,KAAK,GAAGlC,GAAC,CAAE;YAE/B,CAAC,MAAM;cAENnR,CAAC,CAAEsjH,MAAI,CAACtoH,CAAC,EAAEsoH,MAAI,CAAChoH,CAAC,GAAGylH,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAAC/kH,CAAC,EAAEylH,UAAU,CAAEV,KAAK,GAAG,CAAC,CAAE,CAACrlH,CAAC,GAAGmW,GAAC,CAAE;YAE/E;UAED;QAED;MAED;;MAEA;;MAEA;;MAEAoyG,aAAa,EAAE;;MAEf;;MAEAC,cAAc,EAAE;;MAGhB;;MAEA,SAASD,aAAaA,CAAA,EAAG;QAExB,IAAM/gF,KAAK,GAAGw9E,aAAa,CAACr2H,MAAM,GAAG,CAAC;QAEtC,IAAK22H,YAAY,EAAG;UAEnB,IAAIxjB,KAAK,GAAG,CAAC,CAAC,CAAC;UACf,IAAIt6F,MAAM,GAAGi/G,IAAI,GAAG3kB,KAAK;;UAEzB;;UAEA,KAAM,IAAIlzG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG83H,IAAI,EAAE93H,IAAC,EAAG,EAAG;YAEjC,IAAMi/C,IAAI,GAAG22E,KAAK,CAAE51H,IAAC,CAAE;YACvB65H,EAAE,CAAE56E,IAAI,CAAE,CAAC,CAAE,GAAGrmC,MAAM,EAAEqmC,IAAI,CAAE,CAAC,CAAE,GAAGrmC,MAAM,EAAEqmC,IAAI,CAAE,CAAC,CAAE,GAAGrmC,MAAM,CAAE;UAEjE;UAEAs6F,KAAK,GAAGujB,KAAK,GAAGK,aAAa,GAAG,CAAC;UACjCl+G,MAAM,GAAGi/G,IAAI,GAAG3kB,KAAK;;UAErB;;UAEA,KAAM,IAAIlzG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG83H,IAAI,EAAE93H,IAAC,EAAG,EAAG;YAEjC,IAAMi/C,KAAI,GAAG22E,KAAK,CAAE51H,IAAC,CAAE;YACvB65H,EAAE,CAAE56E,KAAI,CAAE,CAAC,CAAE,GAAGrmC,MAAM,EAAEqmC,KAAI,CAAE,CAAC,CAAE,GAAGrmC,MAAM,EAAEqmC,KAAI,CAAE,CAAC,CAAE,GAAGrmC,MAAM,CAAE;UAEjE;QAED,CAAC,MAAM;UAEN;;UAEA,KAAM,IAAI5Y,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG83H,IAAI,EAAE93H,IAAC,EAAG,EAAG;YAEjC,IAAMi/C,MAAI,GAAG22E,KAAK,CAAE51H,IAAC,CAAE;YACvB65H,EAAE,CAAE56E,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAE,EAAEA,MAAI,CAAE,CAAC,CAAE,CAAE;UAEtC;;UAEA;;UAEA,KAAM,IAAIj/C,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG83H,IAAI,EAAE93H,IAAC,EAAG,EAAG;YAEjC,IAAMi/C,MAAI,GAAG22E,KAAK,CAAE51H,IAAC,CAAE;YACvB65H,EAAE,CAAE56E,MAAI,CAAE,CAAC,CAAE,GAAG44E,IAAI,GAAGpB,KAAK,EAAEx3E,MAAI,CAAE,CAAC,CAAE,GAAG44E,IAAI,GAAGpB,KAAK,EAAEx3E,MAAI,CAAE,CAAC,CAAE,GAAG44E,IAAI,GAAGpB,KAAK,CAAE;UAEnF;QAED;QAEA52E,KAAK,CAAC1G,QAAQ,CAAEP,KAAK,EAAEw9E,aAAa,CAACr2H,MAAM,GAAG,CAAC,GAAG64C,KAAK,EAAE,CAAC,CAAE;MAE7D;;MAEA;;MAEA,SAASghF,cAAcA,CAAA,EAAG;QAEzB,IAAMhhF,KAAK,GAAGw9E,aAAa,CAACr2H,MAAM,GAAG,CAAC;QACtC,IAAI+5H,WAAW,GAAG,CAAC;QACnBC,SAAS,CAAEtE,OAAO,EAAEqE,WAAW,CAAE;QACjCA,WAAW,IAAIrE,OAAO,CAAC11H,MAAM;QAE7B,KAAM,IAAIqc,GAAC,GAAG,CAAC,EAAEq7G,IAAE,GAAG3G,KAAK,CAAC/wH,MAAM,EAAEqc,GAAC,GAAGq7G,IAAE,EAAEr7G,GAAC,EAAG,EAAG;UAElD,IAAMs7G,OAAK,GAAG5G,KAAK,CAAE10G,GAAC,CAAE;UACxB29G,SAAS,CAAErC,OAAK,EAAEoC,WAAW,CAAE;;UAE/B;UACAA,WAAW,IAAIpC,OAAK,CAAC33H,MAAM;QAE5B;QAGA8/C,KAAK,CAAC1G,QAAQ,CAAEP,KAAK,EAAEw9E,aAAa,CAACr2H,MAAM,GAAG,CAAC,GAAG64C,KAAK,EAAE,CAAC,CAAE;MAG7D;MAEA,SAASmhF,SAASA,CAAEtE,OAAO,EAAEqE,WAAW,EAAG;QAE1C,IAAI95H,CAAC,GAAGy1H,OAAO,CAAC11H,MAAM;QAEtB,OAAQ,EAAGC,CAAC,IAAI,CAAC,EAAG;UAEnB,IAAMy4B,GAAC,GAAGz4B,CAAC;UACX,IAAI0rF,GAAC,GAAG1rF,CAAC,GAAG,CAAC;UACb,IAAK0rF,GAAC,GAAG,CAAC,EAAGA,GAAC,GAAG+pC,OAAO,CAAC11H,MAAM,GAAG,CAAC;;UAEnC;;UAEA,KAAM,IAAI8S,GAAC,GAAG,CAAC,EAAEmnH,EAAE,GAAKvD,KAAK,GAAGK,aAAa,GAAG,CAAG,EAAEjkH,GAAC,GAAGmnH,EAAE,EAAEnnH,GAAC,EAAG,EAAG;YAEnE,IAAMonH,KAAK,GAAGpC,IAAI,GAAGhlH,GAAC;YACtB,IAAMqnH,KAAK,GAAGrC,IAAI,IAAKhlH,GAAC,GAAG,CAAC,CAAE;YAE9B,IAAMe,CAAC,GAAGkmH,WAAW,GAAGrhG,GAAC,GAAGwhG,KAAK;cAChCpmH,GAAC,GAAGimH,WAAW,GAAGpuC,GAAC,GAAGuuC,KAAK;cAC3BnmH,CAAC,GAAGgmH,WAAW,GAAGpuC,GAAC,GAAGwuC,KAAK;cAC3Bj+G,CAAC,GAAG69G,WAAW,GAAGrhG,GAAC,GAAGyhG,KAAK;YAE5BC,EAAE,CAAEvmH,CAAC,EAAEC,GAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;UAEjB;QAED;MAED;MAEA,SAAS7F,CAACA,CAAEhF,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;QAErBgvG,WAAW,CAAC/2H,IAAI,CAAE4R,CAAC,CAAE;QACrBmlH,WAAW,CAAC/2H,IAAI,CAAEkS,CAAC,CAAE;QACrB6kH,WAAW,CAAC/2H,IAAI,CAAE+nB,CAAC,CAAE;MAEtB;MAGA,SAASsyG,EAAEA,CAAEjmH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;QAEtBsmH,SAAS,CAAExmH,CAAC,CAAE;QACdwmH,SAAS,CAAEvmH,CAAC,CAAE;QACdumH,SAAS,CAAEtmH,CAAC,CAAE;QAEd,IAAMumH,SAAS,GAAGjE,aAAa,CAACr2H,MAAM,GAAG,CAAC;QAC1C,IAAMk6C,GAAG,GAAG+8E,KAAK,CAACsD,aAAa,CAAEz6E,KAAK,EAAEu2E,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,CAAE;QAEpGE,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QACjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QACjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;MAElB;MAEA,SAASkgF,EAAEA,CAAEvmH,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEmI,CAAC,EAAG;QAEzBm+G,SAAS,CAAExmH,CAAC,CAAE;QACdwmH,SAAS,CAAEvmH,CAAC,CAAE;QACdumH,SAAS,CAAEn+G,CAAC,CAAE;QAEdm+G,SAAS,CAAEvmH,CAAC,CAAE;QACdumH,SAAS,CAAEtmH,CAAC,CAAE;QACdsmH,SAAS,CAAEn+G,CAAC,CAAE;QAGd,IAAMo+G,SAAS,GAAGjE,aAAa,CAACr2H,MAAM,GAAG,CAAC;QAC1C,IAAMk6C,GAAG,GAAG+8E,KAAK,CAACwD,kBAAkB,CAAE36E,KAAK,EAAEu2E,aAAa,EAAEiE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,CAAE;QAExHE,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QACjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QACjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QAEjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QACjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;QACjBsgF,KAAK,CAAEtgF,GAAG,CAAE,CAAC,CAAE,CAAE;MAElB;MAEA,SAASmgF,SAASA,CAAE3qH,KAAK,EAAG;QAE3B2mH,aAAa,CAAC52H,IAAI,CAAE+2H,WAAW,CAAE9mH,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE;QAClD2mH,aAAa,CAAC52H,IAAI,CAAE+2H,WAAW,CAAE9mH,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE;QAClD2mH,aAAa,CAAC52H,IAAI,CAAE+2H,WAAW,CAAE9mH,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAAE;MAEnD;MAGA,SAAS8qH,KAAKA,CAAEE,OAAO,EAAG;QAEzBpE,OAAO,CAAC72H,IAAI,CAAEi7H,OAAO,CAACrpH,CAAC,CAAE;QACzBilH,OAAO,CAAC72H,IAAI,CAAEi7H,OAAO,CAAC/oH,CAAC,CAAE;MAE1B;IAED;IAAC,OAAAykH,OAAA;EAEF;EAACpzH,YAAA,CAAAizH,eAAA;IAAA/7H,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA6hF,eAAA,CAAAp8H,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B,IAAMmsC,MAAM,GAAG,IAAI,CAACe,UAAU,CAACf,MAAM;MACrC,IAAM9e,OAAO,GAAG,IAAI,CAAC6f,UAAU,CAAC7f,OAAO;MAEvC,OAAOoxG,QAAQ,CAAEtyF,MAAM,EAAE9e,OAAO,EAAExF,IAAI,CAAE;IAEzC;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAEskB,MAAM,EAAG;MAE/B,IAAMuyF,cAAc,GAAG,EAAE;MAEzB,KAAM,IAAIliG,CAAC,GAAG,CAAC,EAAEmhB,EAAE,GAAG91B,IAAI,CAACskB,MAAM,CAACroC,MAAM,EAAE04B,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,EAAG,EAAG;QAExD,IAAM2Q,KAAK,GAAGhB,MAAM,CAAEtkB,IAAI,CAACskB,MAAM,CAAE3P,CAAC,CAAE,CAAE;QAExCkiG,cAAc,CAACn7H,IAAI,CAAE4pC,KAAK,CAAE;MAE7B;MAEA,IAAM2tF,WAAW,GAAGjzG,IAAI,CAACwF,OAAO,CAACytG,WAAW;MAE5C,IAAKA,WAAW,KAAKt4H,SAAS,EAAG;QAEhCqlB,IAAI,CAACwF,OAAO,CAACytG,WAAW,GAAG,IAAIrP,MAAM,CAAEqP,WAAW,CAAC/6H,IAAI,CAAE,EAAE,CAAC+kD,QAAQ,CAAEg2E,WAAW,CAAE;MAEpF;MAEA,OAAO,IAAIf,eAAe,CAAE2E,cAAc,EAAE72G,IAAI,CAACwF,OAAO,CAAE;IAE3D;EAAC;EAAA,OAAA0sG,eAAA;AAAA,EA1qB4B99E,cAAc;AAAAz+C,OAAA,CAAAu8H,eAAA,GAAAv8H,OAAA,CAAAmhI,qBAAA,GAAA5E,eAAA;AA8qB5C,IAAMkB,gBAAgB,GAAG;EAExBoD,aAAa,EAAE,SAAAA,cAAWpkG,QAAQ,EAAE4pB,QAAQ,EAAE+6E,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAG;IAEtE,IAAMC,GAAG,GAAGl7E,QAAQ,CAAE+6E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMI,GAAG,GAAGn7E,QAAQ,CAAE+6E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMK,GAAG,GAAGp7E,QAAQ,CAAEg7E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAGr7E,QAAQ,CAAEg7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAGt7E,QAAQ,CAAEi7E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMM,GAAG,GAAGv7E,QAAQ,CAAEi7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IAEtC,OAAO,CACN,IAAIvlH,OAAO,CAAEwlH,GAAG,EAAEC,GAAG,CAAE,EACvB,IAAIzlH,OAAO,CAAE0lH,GAAG,EAAEC,GAAG,CAAE,EACvB,IAAI3lH,OAAO,CAAE4lH,GAAG,EAAEC,GAAG,CAAE,CACvB;EAEF,CAAC;EAEDb,kBAAkB,EAAE,SAAAA,mBAAWtkG,QAAQ,EAAE4pB,QAAQ,EAAE+6E,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEO,MAAM,EAAG;IAEnF,IAAMN,GAAG,GAAGl7E,QAAQ,CAAE+6E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMI,GAAG,GAAGn7E,QAAQ,CAAE+6E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAGz7E,QAAQ,CAAE+6E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMK,GAAG,GAAGp7E,QAAQ,CAAEg7E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAGr7E,QAAQ,CAAEg7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAG17E,QAAQ,CAAEg7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAGt7E,QAAQ,CAAEi7E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMM,GAAG,GAAGv7E,QAAQ,CAAEi7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMU,GAAG,GAAG37E,QAAQ,CAAEi7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMW,GAAG,GAAG57E,QAAQ,CAAEw7E,MAAM,GAAG,CAAC,CAAE;IAClC,IAAMK,GAAG,GAAG77E,QAAQ,CAAEw7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IACtC,IAAMM,GAAG,GAAG97E,QAAQ,CAAEw7E,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE;IAEtC,IAAKprH,IAAI,CAACgC,GAAG,CAAE+oH,GAAG,GAAGE,GAAG,CAAE,GAAGjrH,IAAI,CAACgC,GAAG,CAAE8oH,GAAG,GAAGE,GAAG,CAAE,EAAG;MAEpD,OAAO,CACN,IAAI1lH,OAAO,CAAEwlH,GAAG,EAAE,CAAC,GAAGO,GAAG,CAAE,EAC3B,IAAI/lH,OAAO,CAAE0lH,GAAG,EAAE,CAAC,GAAGM,GAAG,CAAE,EAC3B,IAAIhmH,OAAO,CAAE4lH,GAAG,EAAE,CAAC,GAAGK,GAAG,CAAE,EAC3B,IAAIjmH,OAAO,CAAEkmH,GAAG,EAAE,CAAC,GAAGE,GAAG,CAAE,CAC3B;IAEF,CAAC,MAAM;MAEN,OAAO,CACN,IAAIpmH,OAAO,CAAEylH,GAAG,EAAE,CAAC,GAAGM,GAAG,CAAE,EAC3B,IAAI/lH,OAAO,CAAE2lH,GAAG,EAAE,CAAC,GAAGK,GAAG,CAAE,EAC3B,IAAIhmH,OAAO,CAAE6lH,GAAG,EAAE,CAAC,GAAGI,GAAG,CAAE,EAC3B,IAAIjmH,OAAO,CAAEmmH,GAAG,EAAE,CAAC,GAAGC,GAAG,CAAE,CAC3B;IAEF;EAED;AAED,CAAC;AAED,SAASlB,QAAQA,CAAEtyF,MAAM,EAAE9e,OAAO,EAAExF,IAAI,EAAG;EAE1CA,IAAI,CAACskB,MAAM,GAAG,EAAE;EAEhB,IAAK7jB,KAAK,CAACC,OAAO,CAAE4jB,MAAM,CAAE,EAAG;IAE9B,KAAM,IAAIpoC,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGs4B,MAAM,CAACroC,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEjD,IAAMopC,KAAK,GAAGhB,MAAM,CAAEpoC,CAAC,CAAE;MAEzB8jB,IAAI,CAACskB,MAAM,CAAC5oC,IAAI,CAAE4pC,KAAK,CAACz4B,IAAI,CAAE;IAE/B;EAED,CAAC,MAAM;IAENmT,IAAI,CAACskB,MAAM,CAAC5oC,IAAI,CAAE4oC,MAAM,CAACz3B,IAAI,CAAE;EAEhC;EAEAmT,IAAI,CAACwF,OAAO,GAAG3vB,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAEb,OAAO,CAAE;EAE3C,IAAKA,OAAO,CAACytG,WAAW,KAAKt4H,SAAS,EAAGqlB,IAAI,CAACwF,OAAO,CAACytG,WAAW,GAAGztG,OAAO,CAACytG,WAAW,CAACx0G,MAAM,EAAE;EAEhG,OAAOuB,IAAI;AAEZ;AAAC,IAEK+3G,mBAAmB,0BAAAC,oBAAA;EAAA/2G,SAAA,CAAA82G,mBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAA92G,YAAA,CAAA42G,mBAAA;EAExB,SAAAA,oBAAaroG,MAAM,GAAG,CAAC,EAAEohF,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAonB,OAAA;IAAAz5H,eAAA,OAAAs5H,mBAAA;IAErC,IAAMjqH,CAAC,GAAG,CAAE,CAAC,GAAG1B,IAAI,CAAC0H,IAAI,CAAE,CAAC,CAAE,IAAK,CAAC;IAEpC,IAAMkoC,QAAQ,GAAG,CAChB,CAAE,CAAC,EAAEluC,CAAC,EAAE,CAAC,EAAG,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAEA,CAAC,EAAE,CAAC,EAC7C,CAAC,EAAE,CAAE,CAAC,EAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAEA,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAEA,CAAC,EAC5CA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAEA,CAAC,EAAE,CAAC,EAAE,CAAC,CAC7C;IAED,IAAMkoC,OAAO,GAAG,CACf,CAAC,EAAE,EAAE,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EACnD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAChD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC9C;IAEDkiF,OAAA,GAAAD,QAAA,CAAA9/H,IAAA,OAAO6jD,QAAQ,EAAEhG,OAAO,EAAEtmB,MAAM,EAAEohF,MAAM;IAExConB,OAAA,CAAKhgI,IAAI,GAAG,qBAAqB;IAEjCggI,OAAA,CAAK7yF,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdohF,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAonB,OAAA;EAEH;EAACj5H,YAAA,CAAA84H,mBAAA;IAAA5hI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAI+3G,mBAAmB,CAAE/3G,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC8wF,MAAM,CAAE;IAE3D;EAAC;EAAA,OAAAinB,mBAAA;AAAA,EAlCgCzO,kBAAkB;AAAA3zH,OAAA,CAAAoiI,mBAAA,GAAApiI,OAAA,CAAAwiI,yBAAA,GAAAJ,mBAAA;AAAA,IAsC9CK,kBAAkB,0BAAAC,oBAAA;EAAAp3G,SAAA,CAAAm3G,kBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAAn3G,YAAA,CAAAi3G,kBAAA;EAEvB,SAAAA,mBAAa1oG,MAAM,GAAG,CAAC,EAAEohF,MAAM,GAAG,CAAC,EAAG;IAAA,IAAAynB,OAAA;IAAA95H,eAAA,OAAA25H,kBAAA;IAErC,IAAMp8E,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC5B,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAC9B;IAED,IAAMhG,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAChB;IAEDuiF,OAAA,GAAAD,QAAA,CAAAngI,IAAA,OAAO6jD,QAAQ,EAAEhG,OAAO,EAAEtmB,MAAM,EAAEohF,MAAM;IAExCynB,OAAA,CAAKrgI,IAAI,GAAG,oBAAoB;IAEhCqgI,OAAA,CAAKlzF,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdohF,MAAM,EAAEA;IACT,CAAC;IAAC,OAAAynB,OAAA;EAEH;EAACt5H,YAAA,CAAAm5H,kBAAA;IAAAjiI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIo4G,kBAAkB,CAAEp4G,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC8wF,MAAM,CAAE;IAE1D;EAAC;EAAA,OAAAsnB,kBAAA;AAAA,EA9B+B9O,kBAAkB;AAAA3zH,OAAA,CAAAyiI,kBAAA,GAAAziI,OAAA,CAAA6iI,wBAAA,GAAAJ,kBAAA;AAAA,IAkC7CK,YAAY,0BAAAC,gBAAA;EAAAz3G,SAAA,CAAAw3G,YAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAAx3G,YAAA,CAAAs3G,YAAA;EAEjB,SAAAA,aAAaG,WAAW,GAAG,GAAG,EAAEC,WAAW,GAAG,CAAC,EAAEC,aAAa,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAEpR,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGx7G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAA2sH,OAAA;IAAAv6H,eAAA,OAAAg6H,YAAA;IAEhIO,OAAA,GAAAL,QAAA,CAAAxgI,IAAA;IAEA6gI,OAAA,CAAK9gI,IAAI,GAAG,cAAc;IAE1B8gI,OAAA,CAAK3zF,UAAU,GAAG;MACjBuzF,WAAW,EAAEA,WAAW;MACxBC,WAAW,EAAEA,WAAW;MACxBC,aAAa,EAAEA,aAAa;MAC5BC,WAAW,EAAEA,WAAW;MACxBpR,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAEDkR,aAAa,GAAG1sH,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE6rH,aAAa,CAAE;IAC5CC,WAAW,GAAG3sH,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE8rH,WAAW,CAAE;;IAExC;;IAEA,IAAM/iF,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAIzmB,MAAM,GAAGkpG,WAAW;IACxB,IAAMK,UAAU,GAAK,CAAEJ,WAAW,GAAGD,WAAW,IAAKG,WAAa;IAClE,IAAMz0C,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAM1J,EAAE,GAAG,IAAI5R,OAAO,EAAE;;IAExB;;IAEA,KAAM,IAAIijB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIokG,WAAW,EAAEpkG,CAAC,EAAG,EAAG;MAEzC,KAAM,IAAIz4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI48H,aAAa,EAAE58H,CAAC,EAAG,EAAG;QAE3C;;QAEA,IAAM4rH,OAAO,GAAGH,UAAU,GAAGzrH,CAAC,GAAG48H,aAAa,GAAGlR,WAAW;;QAE5D;;QAEAtjC,MAAM,CAACh3E,CAAC,GAAGoiB,MAAM,GAAGtjB,IAAI,CAAC8D,GAAG,CAAE43G,OAAO,CAAE;QACvCxjC,MAAM,CAAC12E,CAAC,GAAG8hB,MAAM,GAAGtjB,IAAI,CAAC+D,GAAG,CAAE23G,OAAO,CAAE;QAEvC9rE,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;QAE7C;;QAEAyyB,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;;QAEvB;;QAEA4nB,EAAE,CAAChW,CAAC,GAAG,CAAEg3E,MAAM,CAACh3E,CAAC,GAAGurH,WAAW,GAAG,CAAC,IAAK,CAAC;QACzCv1G,EAAE,CAAC1V,CAAC,GAAG,CAAE02E,MAAM,CAAC12E,CAAC,GAAGirH,WAAW,GAAG,CAAC,IAAK,CAAC;QAEzC1iF,GAAG,CAACz6C,IAAI,CAAE4nB,EAAE,CAAChW,CAAC,EAAEgW,EAAE,CAAC1V,CAAC,CAAE;MAEvB;;MAEA;;MAEA8hB,MAAM,IAAIupG,UAAU;IAErB;;IAEA;;IAEA,KAAM,IAAItkG,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGokG,WAAW,EAAEpkG,IAAC,EAAG,EAAG;MAExC,IAAMukG,iBAAiB,GAAGvkG,IAAC,IAAKmkG,aAAa,GAAG,CAAC,CAAE;MAEnD,KAAM,IAAI58H,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG48H,aAAa,EAAE58H,IAAC,EAAG,EAAG;QAE1C,IAAM4rH,QAAO,GAAG5rH,IAAC,GAAGg9H,iBAAiB;QAErC,IAAMppH,CAAC,GAAGg4G,QAAO;QACjB,IAAM/3G,CAAC,GAAG+3G,QAAO,GAAGgR,aAAa,GAAG,CAAC;QACrC,IAAM9oH,CAAC,GAAG83G,QAAO,GAAGgR,aAAa,GAAG,CAAC;QACrC,IAAM3gH,CAAC,GAAG2vG,QAAO,GAAG,CAAC;;QAErB;;QAEA9xE,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;QACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;MAExB;IAED;;IAEA;;IAEA6gH,OAAA,CAAKhkF,QAAQ,CAAEgB,OAAO,CAAE;IACxBgjF,OAAA,CAAK9jF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1Eg9E,OAAA,CAAK9jF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvE8iF,OAAA,CAAK9jF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAAC,OAAA6iF,OAAA;EAEjE;EAAC/5H,YAAA,CAAAw5H,YAAA;IAAAtiI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIy4G,YAAY,CAAEz4G,IAAI,CAAC44G,WAAW,EAAE54G,IAAI,CAAC64G,WAAW,EAAE74G,IAAI,CAAC84G,aAAa,EAAE94G,IAAI,CAAC+4G,WAAW,EAAE/4G,IAAI,CAAC2nG,UAAU,EAAE3nG,IAAI,CAAC4nG,WAAW,CAAE;IAEvI;EAAC;EAAA,OAAA6Q,YAAA;AAAA,EA3GyBrkF,cAAc;AAAAz+C,OAAA,CAAA8iI,YAAA,GAAA9iI,OAAA,CAAAwjI,kBAAA,GAAAV,YAAA;AAAA,IA+GnCW,aAAa,0BAAAC,iBAAA;EAAAp4G,SAAA,CAAAm4G,aAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAn4G,YAAA,CAAAi4G,aAAA;EAElB,SAAAA,cAAa90F,MAAM,GAAG,IAAIsoF,KAAK,CAAE,CAAE,IAAIl7G,OAAO,CAAE,CAAC,EAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,EAAE,IAAIA,OAAO,CAAE,GAAG,EAAE,CAAE,GAAG,CAAE,CAAE,CAAE,EAAEghH,aAAa,GAAG,EAAE,EAAG;IAAA,IAAA6G,OAAA;IAAA96H,eAAA,OAAA26H,aAAA;IAE1IG,OAAA,GAAAD,QAAA,CAAAnhI,IAAA;IAEAohI,OAAA,CAAKrhI,IAAI,GAAG,eAAe;IAE3BqhI,OAAA,CAAKl0F,UAAU,GAAG;MACjBf,MAAM,EAAEA,MAAM;MACdouF,aAAa,EAAEA;IAChB,CAAC;;IAED;;IAEA,IAAM18E,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAI+F,UAAU,GAAG,CAAC;IAClB,IAAIc,UAAU,GAAG,CAAC;;IAElB;;IAEA,IAAKv8B,KAAK,CAACC,OAAO,CAAE4jB,MAAM,CAAE,KAAK,KAAK,EAAG;MAExCkuF,QAAQ,CAAEluF,MAAM,CAAE;IAEnB,CAAC,MAAM;MAEN,KAAM,IAAIpoC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGooC,MAAM,CAACroC,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE1Cs2H,QAAQ,CAAEluF,MAAM,CAAEpoC,CAAC,CAAE,CAAE;QAEvBq9H,OAAA,CAAKlkF,QAAQ,CAAE6G,UAAU,EAAEc,UAAU,EAAE9gD,CAAC,CAAE,CAAC,CAAC;;QAE5CggD,UAAU,IAAIc,UAAU;QACxBA,UAAU,GAAG,CAAC;MAEf;IAED;;IAEA;;IAEAu8E,OAAA,CAAKvkF,QAAQ,CAAEgB,OAAO,CAAE;IACxBujF,OAAA,CAAKrkF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1Eu9E,OAAA,CAAKrkF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvEqjF,OAAA,CAAKrkF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;;IAG/D;;IAEA,SAASq8E,QAAQA,CAAEltF,KAAK,EAAG;MAE1B,IAAMk0F,WAAW,GAAGx9E,QAAQ,CAAC//C,MAAM,GAAG,CAAC;MACvC,IAAMi1B,MAAM,GAAGoU,KAAK,CAAC6nF,aAAa,CAAEuF,aAAa,CAAE;MAEnD,IAAI+G,aAAa,GAAGvoG,MAAM,CAACoU,KAAK;MAChC,IAAMo0F,UAAU,GAAGxoG,MAAM,CAAC87F,KAAK;;MAE/B;;MAEA,IAAK0E,UAAU,CAACE,WAAW,CAAE6H,aAAa,CAAE,KAAK,KAAK,EAAG;QAExDA,aAAa,GAAGA,aAAa,CAACt8H,OAAO,EAAE;MAExC;MAEA,KAAM,IAAIjB,IAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG0tH,UAAU,CAACz9H,MAAM,EAAEC,IAAC,GAAG8P,CAAC,EAAE9P,IAAC,EAAG,EAAG;QAErD,IAAMy9H,SAAS,GAAGD,UAAU,CAAEx9H,IAAC,CAAE;QAEjC,IAAKw1H,UAAU,CAACE,WAAW,CAAE+H,SAAS,CAAE,KAAK,IAAI,EAAG;UAEnDD,UAAU,CAAEx9H,IAAC,CAAE,GAAGy9H,SAAS,CAACx8H,OAAO,EAAE;QAEtC;MAED;MAEA,IAAM20H,KAAK,GAAGJ,UAAU,CAACG,gBAAgB,CAAE4H,aAAa,EAAEC,UAAU,CAAE;;MAEtE;;MAEA,KAAM,IAAIx9H,IAAC,GAAG,CAAC,EAAE8P,GAAC,GAAG0tH,UAAU,CAACz9H,MAAM,EAAEC,IAAC,GAAG8P,GAAC,EAAE9P,IAAC,EAAG,EAAG;QAErD,IAAMy9H,UAAS,GAAGD,UAAU,CAAEx9H,IAAC,CAAE;QACjCu9H,aAAa,GAAGA,aAAa,CAACz7G,MAAM,CAAE27G,UAAS,CAAE;MAElD;;MAEA;;MAEA,KAAM,IAAIz9H,IAAC,GAAG,CAAC,EAAE8P,GAAC,GAAGytH,aAAa,CAACx9H,MAAM,EAAEC,IAAC,GAAG8P,GAAC,EAAE9P,IAAC,EAAG,EAAG;QAExD,IAAMooF,OAAM,GAAGm1C,aAAa,CAAEv9H,IAAC,CAAE;QAEjC8/C,QAAQ,CAACtgD,IAAI,CAAE4oF,OAAM,CAACh3E,CAAC,EAAEg3E,OAAM,CAAC12E,CAAC,EAAE,CAAC,CAAE;QACtCsoC,OAAO,CAACx6C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACvBy6C,GAAG,CAACz6C,IAAI,CAAE4oF,OAAM,CAACh3E,CAAC,EAAEg3E,OAAM,CAAC12E,CAAC,CAAE,CAAC,CAAC;MAEjC;;MAEA;;MAEA,KAAM,IAAI1R,IAAC,GAAG,CAAC,EAAE8P,IAAC,GAAG8lH,KAAK,CAAC71H,MAAM,EAAEC,IAAC,GAAG8P,IAAC,EAAE9P,IAAC,EAAG,EAAG;QAEhD,IAAMi/C,IAAI,GAAG22E,KAAK,CAAE51H,IAAC,CAAE;QAEvB,IAAM4T,CAAC,GAAGqrC,IAAI,CAAE,CAAC,CAAE,GAAGq+E,WAAW;QACjC,IAAMzpH,CAAC,GAAGorC,IAAI,CAAE,CAAC,CAAE,GAAGq+E,WAAW;QACjC,IAAMxpH,CAAC,GAAGmrC,IAAI,CAAE,CAAC,CAAE,GAAGq+E,WAAW;QAEjCxjF,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAE;QACvBgtC,UAAU,IAAI,CAAC;MAEhB;IAED;IAAC,OAAAu8E,OAAA;EAEF;EAACt6H,YAAA,CAAAm6H,aAAA;IAAAjjI,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA+oF,aAAA,CAAAtjI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B,IAAMmsC,MAAM,GAAG,IAAI,CAACe,UAAU,CAACf,MAAM;MAErC,OAAO7lB,OAAM,CAAE6lB,MAAM,EAAEtkB,IAAI,CAAE;IAE9B;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAEskB,MAAM,EAAG;MAE/B,IAAMuyF,cAAc,GAAG,EAAE;MAEzB,KAAM,IAAIliG,CAAC,GAAG,CAAC,EAAEmhB,EAAE,GAAG91B,IAAI,CAACskB,MAAM,CAACroC,MAAM,EAAE04B,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,EAAG,EAAG;QAExD,IAAM2Q,KAAK,GAAGhB,MAAM,CAAEtkB,IAAI,CAACskB,MAAM,CAAE3P,CAAC,CAAE,CAAE;QAExCkiG,cAAc,CAACn7H,IAAI,CAAE4pC,KAAK,CAAE;MAE7B;MAEA,OAAO,IAAI8zF,aAAa,CAAEvC,cAAc,EAAE72G,IAAI,CAAC0yG,aAAa,CAAE;IAE/D;EAAC;EAAA,OAAA0G,aAAA;AAAA,EAtJ0BhlF,cAAc;AAAAz+C,OAAA,CAAAyjI,aAAA,GAAAzjI,OAAA,CAAAikI,mBAAA,GAAAR,aAAA;AA0J1C,SAAS36G,OAAMA,CAAE6lB,MAAM,EAAEtkB,IAAI,EAAG;EAE/BA,IAAI,CAACskB,MAAM,GAAG,EAAE;EAEhB,IAAK7jB,KAAK,CAACC,OAAO,CAAE4jB,MAAM,CAAE,EAAG;IAE9B,KAAM,IAAIpoC,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGs4B,MAAM,CAACroC,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEjD,IAAMopC,KAAK,GAAGhB,MAAM,CAAEpoC,CAAC,CAAE;MAEzB8jB,IAAI,CAACskB,MAAM,CAAC5oC,IAAI,CAAE4pC,KAAK,CAACz4B,IAAI,CAAE;IAE/B;EAED,CAAC,MAAM;IAENmT,IAAI,CAACskB,MAAM,CAAC5oC,IAAI,CAAE4oC,MAAM,CAACz3B,IAAI,CAAE;EAEhC;EAEA,OAAOmT,IAAI;AAEZ;AAAC,IAEK65G,cAAc,0BAAAC,iBAAA;EAAA74G,SAAA,CAAA44G,cAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA54G,YAAA,CAAA04G,cAAA;EAEnB,SAAAA,eAAanqG,MAAM,GAAG,CAAC,EAAEisB,aAAa,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,EAAE4qE,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAGr6G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEs7G,UAAU,GAAG,CAAC,EAAEC,WAAW,GAAGx7G,IAAI,CAACC,EAAE,EAAG;IAAA,IAAA2tH,OAAA;IAAAv7H,eAAA,OAAAo7H,cAAA;IAEhJG,OAAA,GAAAD,QAAA,CAAA5hI,IAAA;IAEA6hI,OAAA,CAAK9hI,IAAI,GAAG,gBAAgB;IAE5B8hI,OAAA,CAAK30F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdisB,aAAa,EAAEA,aAAa;MAC5BC,cAAc,EAAEA,cAAc;MAC9B4qE,QAAQ,EAAEA,QAAQ;MAClBC,SAAS,EAAEA,SAAS;MACpBkB,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;IAEDjsE,aAAa,GAAGvvC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACsC,KAAK,CAAEitC,aAAa,CAAE,CAAE;IAC1DC,cAAc,GAAGxvC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEb,IAAI,CAACsC,KAAK,CAAEktC,cAAc,CAAE,CAAE;IAE5D,IAAMq+E,QAAQ,GAAG7tH,IAAI,CAACY,GAAG,CAAE26G,UAAU,GAAGC,WAAW,EAAEx7G,IAAI,CAACC,EAAE,CAAE;IAE9D,IAAIV,KAAK,GAAG,CAAC;IACb,IAAMuuH,IAAI,GAAG,EAAE;IAEf,IAAM51C,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAMsC,MAAM,GAAG,IAAItC,OAAO,EAAE;;IAE5B;;IAEA,IAAMgpB,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,KAAM,IAAIroB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI8tB,cAAc,EAAE9tB,EAAE,EAAG,EAAG;MAE/C,IAAMqsG,WAAW,GAAG,EAAE;MAEtB,IAAM7nH,CAAC,GAAGwb,EAAE,GAAG8tB,cAAc;;MAE7B;;MAEA,IAAIw+E,OAAO,GAAG,CAAC;MAEf,IAAKtsG,EAAE,IAAI,CAAC,IAAI65F,UAAU,IAAI,CAAC,EAAG;QAEjCyS,OAAO,GAAG,GAAG,GAAGz+E,aAAa;MAE9B,CAAC,MAAM,IAAK7tB,EAAE,IAAI8tB,cAAc,IAAIq+E,QAAQ,IAAI7tH,IAAI,CAACC,EAAE,EAAG;QAEzD+tH,OAAO,GAAG,CAAE,GAAG,GAAGz+E,aAAa;MAEhC;MAEA,KAAM,IAAI9tB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI8tB,aAAa,EAAE9tB,EAAE,EAAG,EAAG;QAE9C,IAAMuC,CAAC,GAAGvC,EAAE,GAAG8tB,aAAa;;QAE5B;;QAEA2oC,MAAM,CAACh3E,CAAC,GAAG,CAAEoiB,MAAM,GAAGtjB,IAAI,CAAC8D,GAAG,CAAEs2G,QAAQ,GAAGp2F,CAAC,GAAGq2F,SAAS,CAAE,GAAGr6G,IAAI,CAAC+D,GAAG,CAAEw3G,UAAU,GAAGr1G,CAAC,GAAGs1G,WAAW,CAAE;QACrGtjC,MAAM,CAAC12E,CAAC,GAAG8hB,MAAM,GAAGtjB,IAAI,CAAC8D,GAAG,CAAEy3G,UAAU,GAAGr1G,CAAC,GAAGs1G,WAAW,CAAE;QAC5DtjC,MAAM,CAAC7gE,CAAC,GAAGiM,MAAM,GAAGtjB,IAAI,CAAC+D,GAAG,CAAEq2G,QAAQ,GAAGp2F,CAAC,GAAGq2F,SAAS,CAAE,GAAGr6G,IAAI,CAAC+D,GAAG,CAAEw3G,UAAU,GAAGr1G,CAAC,GAAGs1G,WAAW,CAAE;QAEnG5rE,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;QAE7C;;QAEA6L,MAAM,CAACjd,IAAI,CAAEiyE,MAAM,CAAE,CAACjzE,SAAS,EAAE;QACjC6kC,OAAO,CAACx6C,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;;QAE5C;;QAEA0yB,GAAG,CAACz6C,IAAI,CAAE00B,CAAC,GAAGgqG,OAAO,EAAE,CAAC,GAAG9nH,CAAC,CAAE;QAE9B6nH,WAAW,CAACz+H,IAAI,CAAEiQ,KAAK,EAAG,CAAE;MAE7B;MAEAuuH,IAAI,CAACx+H,IAAI,CAAEy+H,WAAW,CAAE;IAEzB;;IAEA;;IAEA,KAAM,IAAIrsG,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG8tB,cAAc,EAAE9tB,IAAE,EAAG,EAAG;MAE9C,KAAM,IAAID,IAAE,GAAG,CAAC,EAAEA,IAAE,GAAG8tB,aAAa,EAAE9tB,IAAE,EAAG,EAAG;QAE7C,IAAM/d,CAAC,GAAGoqH,IAAI,CAAEpsG,IAAE,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;QAC9B,IAAM9d,CAAC,GAAGmqH,IAAI,CAAEpsG,IAAE,CAAE,CAAED,IAAE,CAAE;QAC1B,IAAM7d,CAAC,GAAGkqH,IAAI,CAAEpsG,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,CAAE;QAC9B,IAAM1V,CAAC,GAAG+hH,IAAI,CAAEpsG,IAAE,GAAG,CAAC,CAAE,CAAED,IAAE,GAAG,CAAC,CAAE;QAElC,IAAKC,IAAE,KAAK,CAAC,IAAI65F,UAAU,GAAG,CAAC,EAAG3xE,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;QACzD,IAAK2V,IAAE,KAAK8tB,cAAc,GAAG,CAAC,IAAIq+E,QAAQ,GAAG7tH,IAAI,CAACC,EAAE,EAAG2pC,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;MAE/E;IAED;;IAEA;;IAEA6hH,OAAA,CAAKhlF,QAAQ,CAAEgB,OAAO,CAAE;IACxBgkF,OAAA,CAAK9kF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1Eg+E,OAAA,CAAK9kF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvE8jF,OAAA,CAAK9kF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAAC,OAAA6jF,OAAA;EAEjE;EAAC/6H,YAAA,CAAA46H,cAAA;IAAA1jI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAI65G,cAAc,CAAE75G,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC27B,aAAa,EAAE37B,IAAI,CAAC47B,cAAc,EAAE57B,IAAI,CAACwmG,QAAQ,EAAExmG,IAAI,CAACymG,SAAS,EAAEzmG,IAAI,CAAC2nG,UAAU,EAAE3nG,IAAI,CAAC4nG,WAAW,CAAE;IAEpJ;EAAC;EAAA,OAAAiS,cAAA;AAAA,EAtH2BzlF,cAAc;AAAAz+C,OAAA,CAAAkkI,cAAA,GAAAlkI,OAAA,CAAA0kI,oBAAA,GAAAR,cAAA;AAAA,IA0HrCS,mBAAmB,0BAAAC,oBAAA;EAAAt5G,SAAA,CAAAq5G,mBAAA,EAAAC,oBAAA;EAAA,IAAAC,QAAA,GAAAr5G,YAAA,CAAAm5G,mBAAA;EAExB,SAAAA,oBAAa5qG,MAAM,GAAG,CAAC,EAAEohF,MAAM,GAAG,CAAC,EAAG;IAAA,IAAA2pB,OAAA;IAAAh8H,eAAA,OAAA67H,mBAAA;IAErC,IAAMt+E,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CACjD;IAED,IAAMhG,OAAO,GAAG,CACf,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACnC;IAEDykF,OAAA,GAAAD,QAAA,CAAAriI,IAAA,OAAO6jD,QAAQ,EAAEhG,OAAO,EAAEtmB,MAAM,EAAEohF,MAAM;IAExC2pB,OAAA,CAAKviI,IAAI,GAAG,qBAAqB;IAEjCuiI,OAAA,CAAKp1F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdohF,MAAM,EAAEA;IACT,CAAC;IAAC,OAAA2pB,OAAA;EAEH;EAACx7H,YAAA,CAAAq7H,mBAAA;IAAAnkI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIs6G,mBAAmB,CAAEt6G,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC8wF,MAAM,CAAE;IAE3D;EAAC;EAAA,OAAAwpB,mBAAA;AAAA,EA3BgChR,kBAAkB;AAAA3zH,OAAA,CAAA2kI,mBAAA,GAAA3kI,OAAA,CAAA+kI,yBAAA,GAAAJ,mBAAA;AAAA,IA+B9CK,aAAa,0BAAAC,iBAAA;EAAA35G,SAAA,CAAA05G,aAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA15G,YAAA,CAAAw5G,aAAA;EAElB,SAAAA,cAAajrG,MAAM,GAAG,CAAC,EAAEorG,IAAI,GAAG,GAAG,EAAEzT,cAAc,GAAG,CAAC,EAAE0T,eAAe,GAAG,CAAC,EAAEhV,GAAG,GAAG35G,IAAI,CAACC,EAAE,GAAG,CAAC,EAAG;IAAA,IAAA2uH,OAAA;IAAAv8H,eAAA,OAAAk8H,aAAA;IAEjGK,OAAA,GAAAH,QAAA,CAAA1iI,IAAA;IAEA6iI,OAAA,CAAK9iI,IAAI,GAAG,eAAe;IAE3B8iI,OAAA,CAAK31F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdorG,IAAI,EAAEA,IAAI;MACVzT,cAAc,EAAEA,cAAc;MAC9B0T,eAAe,EAAEA,eAAe;MAChChV,GAAG,EAAEA;IACN,CAAC;IAEDsB,cAAc,GAAGj7G,IAAI,CAACsC,KAAK,CAAE24G,cAAc,CAAE;IAC7C0T,eAAe,GAAG3uH,IAAI,CAACsC,KAAK,CAAEqsH,eAAe,CAAE;;IAE/C;;IAEA,IAAM/kF,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAM9gC,MAAM,GAAG,IAAI2X,OAAO,EAAE;IAC5B,IAAMs3D,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAMsC,MAAM,GAAG,IAAItC,OAAO,EAAE;;IAE5B;;IAEA,KAAM,IAAI2H,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0yF,cAAc,EAAE1yF,CAAC,EAAG,EAAG;MAE5C,KAAM,IAAIz4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6+H,eAAe,EAAE7+H,CAAC,EAAG,EAAG;QAE7C,IAAMk0B,CAAC,GAAGl0B,CAAC,GAAG6+H,eAAe,GAAGhV,GAAG;QACnC,IAAMzzG,CAAC,GAAGqiB,CAAC,GAAG0yF,cAAc,GAAGj7G,IAAI,CAACC,EAAE,GAAG,CAAC;;QAE1C;;QAEAi4E,MAAM,CAACh3E,CAAC,GAAG,CAAEoiB,MAAM,GAAGorG,IAAI,GAAG1uH,IAAI,CAAC8D,GAAG,CAAEoC,CAAC,CAAE,IAAKlG,IAAI,CAAC8D,GAAG,CAAEkgB,CAAC,CAAE;QAC5Dk0D,MAAM,CAAC12E,CAAC,GAAG,CAAE8hB,MAAM,GAAGorG,IAAI,GAAG1uH,IAAI,CAAC8D,GAAG,CAAEoC,CAAC,CAAE,IAAKlG,IAAI,CAAC+D,GAAG,CAAEigB,CAAC,CAAE;QAC5Dk0D,MAAM,CAAC7gE,CAAC,GAAGq3G,IAAI,GAAG1uH,IAAI,CAAC+D,GAAG,CAAEmC,CAAC,CAAE;QAE/B0pC,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;QAE7C;;QAEApO,MAAM,CAAC/H,CAAC,GAAGoiB,MAAM,GAAGtjB,IAAI,CAAC8D,GAAG,CAAEkgB,CAAC,CAAE;QACjC/a,MAAM,CAACzH,CAAC,GAAG8hB,MAAM,GAAGtjB,IAAI,CAAC+D,GAAG,CAAEigB,CAAC,CAAE;QACjCd,MAAM,CAACzc,UAAU,CAAEyxE,MAAM,EAAEjvE,MAAM,CAAE,CAAChE,SAAS,EAAE;QAE/C6kC,OAAO,CAACx6C,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;;QAE5C;;QAEA0yB,GAAG,CAACz6C,IAAI,CAAEQ,CAAC,GAAG6+H,eAAe,CAAE;QAC/B5kF,GAAG,CAACz6C,IAAI,CAAEi5B,CAAC,GAAG0yF,cAAc,CAAE;MAE/B;IAED;;IAEA;;IAEA,KAAM,IAAI1yF,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI0yF,cAAc,EAAE1yF,IAAC,EAAG,EAAG;MAE5C,KAAM,IAAIz4B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAI6+H,eAAe,EAAE7+H,IAAC,EAAG,EAAG;QAE7C;;QAEA,IAAM4T,CAAC,GAAG,CAAEirH,eAAe,GAAG,CAAC,IAAKpmG,IAAC,GAAGz4B,IAAC,GAAG,CAAC;QAC7C,IAAM6T,CAAC,GAAG,CAAEgrH,eAAe,GAAG,CAAC,KAAOpmG,IAAC,GAAG,CAAC,CAAE,GAAGz4B,IAAC,GAAG,CAAC;QACrD,IAAM8T,CAAC,GAAG,CAAE+qH,eAAe,GAAG,CAAC,KAAOpmG,IAAC,GAAG,CAAC,CAAE,GAAGz4B,IAAC;QACjD,IAAMic,CAAC,GAAG,CAAE4iH,eAAe,GAAG,CAAC,IAAKpmG,IAAC,GAAGz4B,IAAC;;QAEzC;;QAEA85C,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;QACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;MAExB;IAED;;IAEA;;IAEA6iH,OAAA,CAAKhmF,QAAQ,CAAEgB,OAAO,CAAE;IACxBglF,OAAA,CAAK9lF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1Eg/E,OAAA,CAAK9lF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvE8kF,OAAA,CAAK9lF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;IAAC,OAAA6kF,OAAA;EAEjE;EAAC/7H,YAAA,CAAA07H,aAAA;IAAAxkI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAI26G,aAAa,CAAE36G,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC86G,IAAI,EAAE96G,IAAI,CAACqnG,cAAc,EAAErnG,IAAI,CAAC+6G,eAAe,EAAE/6G,IAAI,CAAC+lG,GAAG,CAAE;IAExG;EAAC;EAAA,OAAA4U,aAAA;AAAA,EArG0BvmF,cAAc;AAAAz+C,OAAA,CAAAglI,aAAA,GAAAhlI,OAAA,CAAAslI,mBAAA,GAAAN,aAAA;AAAA,IAyGpCO,iBAAiB,0BAAAC,iBAAA;EAAAl6G,SAAA,CAAAi6G,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAj6G,YAAA,CAAA+5G,iBAAA;EAEtB,SAAAA,kBAAaxrG,MAAM,GAAG,CAAC,EAAEorG,IAAI,GAAG,GAAG,EAAEC,eAAe,GAAG,EAAE,EAAE1T,cAAc,GAAG,CAAC,EAAEvrG,CAAC,GAAG,CAAC,EAAEjM,CAAC,GAAG,CAAC,EAAG;IAAA,IAAAwrH,OAAA;IAAA58H,eAAA,OAAAy8H,iBAAA;IAE7FG,OAAA,GAAAD,QAAA,CAAAjjI,IAAA;IAEAkjI,OAAA,CAAKnjI,IAAI,GAAG,mBAAmB;IAE/BmjI,OAAA,CAAKh2F,UAAU,GAAG;MACjB3V,MAAM,EAAEA,MAAM;MACdorG,IAAI,EAAEA,IAAI;MACVC,eAAe,EAAEA,eAAe;MAChC1T,cAAc,EAAEA,cAAc;MAC9BvrG,CAAC,EAAEA,CAAC;MACJjM,CAAC,EAAEA;IACJ,CAAC;IAEDkrH,eAAe,GAAG3uH,IAAI,CAACsC,KAAK,CAAEqsH,eAAe,CAAE;IAC/C1T,cAAc,GAAGj7G,IAAI,CAACsC,KAAK,CAAE24G,cAAc,CAAE;;IAE7C;;IAEA,IAAMrxE,OAAO,GAAG,EAAE;IAClB,IAAMgG,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;;IAEd;;IAEA,IAAMmuC,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAMsC,MAAM,GAAG,IAAItC,OAAO,EAAE;IAE5B,IAAMsuG,EAAE,GAAG,IAAItuG,OAAO,EAAE;IACxB,IAAMuuG,EAAE,GAAG,IAAIvuG,OAAO,EAAE;IAExB,IAAMwuG,CAAC,GAAG,IAAIxuG,OAAO,EAAE;IACvB,IAAMyuG,CAAC,GAAG,IAAIzuG,OAAO,EAAE;IACvB,IAAM0uG,CAAC,GAAG,IAAI1uG,OAAO,EAAE;;IAEvB;;IAEA,KAAM,IAAI9wB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6+H,eAAe,EAAE,EAAG7+H,CAAC,EAAG;MAE7C;;MAEA,IAAMk0B,CAAC,GAAGl0B,CAAC,GAAG6+H,eAAe,GAAGj/G,CAAC,GAAG1P,IAAI,CAACC,EAAE,GAAG,CAAC;;MAE/C;MACA;;MAEAsvH,wBAAwB,CAAEvrG,CAAC,EAAEtU,CAAC,EAAEjM,CAAC,EAAE6f,MAAM,EAAE4rG,EAAE,CAAE;MAC/CK,wBAAwB,CAAEvrG,CAAC,GAAG,IAAI,EAAEtU,CAAC,EAAEjM,CAAC,EAAE6f,MAAM,EAAE6rG,EAAE,CAAE;;MAEtD;;MAEAE,CAAC,CAAC5oH,UAAU,CAAE0oH,EAAE,EAAED,EAAE,CAAE;MACtBI,CAAC,CAACjpH,UAAU,CAAE8oH,EAAE,EAAED,EAAE,CAAE;MACtBE,CAAC,CAAC/sG,YAAY,CAAEgtG,CAAC,EAAEC,CAAC,CAAE;MACtBA,CAAC,CAACjtG,YAAY,CAAE+sG,CAAC,EAAEC,CAAC,CAAE;;MAEtB;;MAEAD,CAAC,CAACnqH,SAAS,EAAE;MACbqqH,CAAC,CAACrqH,SAAS,EAAE;MAEb,KAAM,IAAIsjB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0yF,cAAc,EAAE,EAAG1yF,CAAC,EAAG;QAE5C;QACA;;QAEA,IAAMriB,CAAC,GAAGqiB,CAAC,GAAG0yF,cAAc,GAAGj7G,IAAI,CAACC,EAAE,GAAG,CAAC;QAC1C,IAAMoN,EAAE,GAAG,CAAEqhH,IAAI,GAAG1uH,IAAI,CAAC8D,GAAG,CAAEoC,CAAC,CAAE;QACjC,IAAMoH,EAAE,GAAGohH,IAAI,GAAG1uH,IAAI,CAAC+D,GAAG,CAAEmC,CAAC,CAAE;;QAE/B;QACA;;QAEAgyE,MAAM,CAACh3E,CAAC,GAAGguH,EAAE,CAAChuH,CAAC,IAAKmM,EAAE,GAAGiiH,CAAC,CAACpuH,CAAC,GAAGoM,EAAE,GAAG8hH,CAAC,CAACluH,CAAC,CAAE;QACzCg3E,MAAM,CAAC12E,CAAC,GAAG0tH,EAAE,CAAC1tH,CAAC,IAAK6L,EAAE,GAAGiiH,CAAC,CAAC9tH,CAAC,GAAG8L,EAAE,GAAG8hH,CAAC,CAAC5tH,CAAC,CAAE;QACzC02E,MAAM,CAAC7gE,CAAC,GAAG63G,EAAE,CAAC73G,CAAC,IAAKhK,EAAE,GAAGiiH,CAAC,CAACj4G,CAAC,GAAG/J,EAAE,GAAG8hH,CAAC,CAAC/3G,CAAC,CAAE;QAEzCu4B,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;;QAE7C;;QAEA6L,MAAM,CAACzc,UAAU,CAAEyxE,MAAM,EAAEg3C,EAAE,CAAE,CAACjqH,SAAS,EAAE;QAE3C6kC,OAAO,CAACx6C,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;;QAE5C;;QAEA0yB,GAAG,CAACz6C,IAAI,CAAEQ,CAAC,GAAG6+H,eAAe,CAAE;QAC/B5kF,GAAG,CAACz6C,IAAI,CAAEi5B,CAAC,GAAG0yF,cAAc,CAAE;MAE/B;IAED;;IAEA;;IAEA,KAAM,IAAI1yF,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIomG,eAAe,EAAEpmG,IAAC,EAAG,EAAG;MAE7C,KAAM,IAAIz4B,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAImrH,cAAc,EAAEnrH,IAAC,EAAG,EAAG;QAE5C;;QAEA,IAAM4T,CAAC,GAAG,CAAEu3G,cAAc,GAAG,CAAC,KAAO1yF,IAAC,GAAG,CAAC,CAAE,IAAKz4B,IAAC,GAAG,CAAC,CAAE;QACxD,IAAM6T,CAAC,GAAG,CAAEs3G,cAAc,GAAG,CAAC,IAAK1yF,IAAC,IAAKz4B,IAAC,GAAG,CAAC,CAAE;QAChD,IAAM8T,CAAC,GAAG,CAAEq3G,cAAc,GAAG,CAAC,IAAK1yF,IAAC,GAAGz4B,IAAC;QACxC,IAAMic,CAAC,GAAG,CAAEkvG,cAAc,GAAG,CAAC,KAAO1yF,IAAC,GAAG,CAAC,CAAE,GAAGz4B,IAAC;;QAEhD;;QAEA85C,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;QACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;MAExB;IAED;;IAEA;;IAEAkjH,OAAA,CAAKrmF,QAAQ,CAAEgB,OAAO,CAAE;IACxBqlF,OAAA,CAAKnmF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1Eq/E,OAAA,CAAKnmF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvEmlF,OAAA,CAAKnmF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;;IAE/D;;IAEA,SAASwlF,wBAAwBA,CAAEvrG,CAAC,EAAEtU,CAAC,EAAEjM,CAAC,EAAE6f,MAAM,EAAE4C,QAAQ,EAAG;MAE9D,IAAMspG,EAAE,GAAGxvH,IAAI,CAAC8D,GAAG,CAAEkgB,CAAC,CAAE;MACxB,IAAMyrG,EAAE,GAAGzvH,IAAI,CAAC+D,GAAG,CAAEigB,CAAC,CAAE;MACxB,IAAM0rG,OAAO,GAAGjsH,CAAC,GAAGiM,CAAC,GAAGsU,CAAC;MACzB,IAAM2rG,EAAE,GAAG3vH,IAAI,CAAC8D,GAAG,CAAE4rH,OAAO,CAAE;MAE9BxpG,QAAQ,CAAChlB,CAAC,GAAGoiB,MAAM,IAAK,CAAC,GAAGqsG,EAAE,CAAE,GAAG,GAAG,GAAGH,EAAE;MAC3CtpG,QAAQ,CAAC1kB,CAAC,GAAG8hB,MAAM,IAAK,CAAC,GAAGqsG,EAAE,CAAE,GAAGF,EAAE,GAAG,GAAG;MAC3CvpG,QAAQ,CAAC7O,CAAC,GAAGiM,MAAM,GAAGtjB,IAAI,CAAC+D,GAAG,CAAE2rH,OAAO,CAAE,GAAG,GAAG;IAEhD;IAAC,OAAAT,OAAA;EAEF;EAACp8H,YAAA,CAAAi8H,iBAAA;IAAA/kI,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB,OAAO,IAAIk7G,iBAAiB,CAAEl7G,IAAI,CAAC0P,MAAM,EAAE1P,IAAI,CAAC86G,IAAI,EAAE96G,IAAI,CAAC+6G,eAAe,EAAE/6G,IAAI,CAACqnG,cAAc,EAAErnG,IAAI,CAAClE,CAAC,EAAEkE,IAAI,CAACnQ,CAAC,CAAE;IAElH;EAAC;EAAA,OAAAqrH,iBAAA;AAAA,EApJ8B9mF,cAAc;AAAAz+C,OAAA,CAAAulI,iBAAA,GAAAvlI,OAAA,CAAAqmI,uBAAA,GAAAd,iBAAA;AAAA,IAwJxCe,YAAY,0BAAAC,iBAAA;EAAAj7G,SAAA,CAAAg7G,YAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAAh7G,YAAA,CAAA86G,YAAA;EAEjB,SAAAA,aAAa1qD,IAAI,GAAG,IAAI2xC,qBAAqB,CAAE,IAAIl2F,OAAO,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE,EAAE+tG,eAAe,GAAG,EAAE,EAAErrG,MAAM,GAAG,CAAC,EAAE23F,cAAc,GAAG,CAAC,EAAExJ,MAAM,GAAG,KAAK,EAAG;IAAA,IAAAue,OAAA;IAAA39H,eAAA,OAAAw9H,YAAA;IAErMG,OAAA,GAAAD,QAAA,CAAAhkI,IAAA;IAEAikI,OAAA,CAAKlkI,IAAI,GAAG,cAAc;IAE1BkkI,OAAA,CAAK/2F,UAAU,GAAG;MACjBksC,IAAI,EAAEA,IAAI;MACVwpD,eAAe,EAAEA,eAAe;MAChCrrG,MAAM,EAAEA,MAAM;MACd23F,cAAc,EAAEA,cAAc;MAC9BxJ,MAAM,EAAEA;IACT,CAAC;IAED,IAAMwe,MAAM,GAAG9qD,IAAI,CAACosC,mBAAmB,CAAEod,eAAe,EAAEld,MAAM,CAAE;;IAElE;;IAEAue,OAAA,CAAK/lF,QAAQ,GAAGgmF,MAAM,CAAChmF,QAAQ;IAC/B+lF,OAAA,CAAKlmF,OAAO,GAAGmmF,MAAM,CAACnmF,OAAO;IAC7BkmF,OAAA,CAAKte,SAAS,GAAGue,MAAM,CAACve,SAAS;;IAEjC;;IAEA,IAAMx5B,MAAM,GAAG,IAAIt3D,OAAO,EAAE;IAC5B,IAAMsC,MAAM,GAAG,IAAItC,OAAO,EAAE;IAC5B,IAAM1J,EAAE,GAAG,IAAI5R,OAAO,EAAE;IACxB,IAAI4qH,CAAC,GAAG,IAAItvG,OAAO,EAAE;;IAErB;;IAEA,IAAMgvB,QAAQ,GAAG,EAAE;IACnB,IAAM9F,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IACd,IAAMH,OAAO,GAAG,EAAE;;IAElB;;IAEAumF,kBAAkB,EAAE;;IAEpB;;IAEAH,OAAA,CAAKpnF,QAAQ,CAAEgB,OAAO,CAAE;IACxBomF,OAAA,CAAKlnF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC1EogF,OAAA,CAAKlnF,YAAY,CAAE,QAAQ,EAAE,IAAI3B,sBAAsB,CAAE2C,OAAO,EAAE,CAAC,CAAE,CAAE;IACvEkmF,OAAA,CAAKlnF,YAAY,CAAE,IAAI,EAAE,IAAI3B,sBAAsB,CAAE4C,GAAG,EAAE,CAAC,CAAE,CAAE;;IAE/D;;IAEA,SAASomF,kBAAkBA,CAAA,EAAG;MAE7B,KAAM,IAAIrgI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6+H,eAAe,EAAE7+H,CAAC,EAAG,EAAG;QAE5CsgI,eAAe,CAAEtgI,CAAC,CAAE;MAErB;;MAEA;MACA;MACA;MACA;;MAEAsgI,eAAe,CAAI3e,MAAM,KAAK,KAAK,GAAKkd,eAAe,GAAG,CAAC,CAAE;;MAE7D;MACA;;MAEAjR,WAAW,EAAE;;MAEb;;MAEA2S,eAAe,EAAE;IAElB;IAEA,SAASD,eAAeA,CAAEtgI,CAAC,EAAG;MAE7B;;MAEAogI,CAAC,GAAG/qD,IAAI,CAAC2qC,UAAU,CAAEhgH,CAAC,GAAG6+H,eAAe,EAAEuB,CAAC,CAAE;;MAE7C;;MAEA,IAAMZ,CAAC,GAAGW,MAAM,CAACnmF,OAAO,CAAEh6C,CAAC,CAAE;MAC7B,IAAMs/H,CAAC,GAAGa,MAAM,CAACve,SAAS,CAAE5hH,CAAC,CAAE;;MAE/B;;MAEA,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0yF,cAAc,EAAE1yF,CAAC,EAAG,EAAG;QAE5C,IAAMriB,CAAC,GAAGqiB,CAAC,GAAG0yF,cAAc,GAAGj7G,IAAI,CAACC,EAAE,GAAG,CAAC;QAE1C,IAAM8D,GAAG,GAAG/D,IAAI,CAAC+D,GAAG,CAAEmC,CAAC,CAAE;QACzB,IAAMpC,GAAG,GAAG,CAAE9D,IAAI,CAAC8D,GAAG,CAAEoC,CAAC,CAAE;;QAE3B;;QAEAgd,MAAM,CAAChiB,CAAC,GAAK4C,GAAG,GAAGwrH,CAAC,CAACpuH,CAAC,GAAG6C,GAAG,GAAGqrH,CAAC,CAACluH,CAAG;QACpCgiB,MAAM,CAAC1hB,CAAC,GAAKsC,GAAG,GAAGwrH,CAAC,CAAC9tH,CAAC,GAAGuC,GAAG,GAAGqrH,CAAC,CAAC5tH,CAAG;QACpC0hB,MAAM,CAAC7L,CAAC,GAAKvT,GAAG,GAAGwrH,CAAC,CAACj4G,CAAC,GAAGtT,GAAG,GAAGqrH,CAAC,CAAC/3G,CAAG;QACpC6L,MAAM,CAACje,SAAS,EAAE;QAElB6kC,OAAO,CAACx6C,IAAI,CAAE4zB,MAAM,CAAChiB,CAAC,EAAEgiB,MAAM,CAAC1hB,CAAC,EAAE0hB,MAAM,CAAC7L,CAAC,CAAE;;QAE5C;;QAEA6gE,MAAM,CAACh3E,CAAC,GAAGgvH,CAAC,CAAChvH,CAAC,GAAGoiB,MAAM,GAAGJ,MAAM,CAAChiB,CAAC;QAClCg3E,MAAM,CAAC12E,CAAC,GAAG0uH,CAAC,CAAC1uH,CAAC,GAAG8hB,MAAM,GAAGJ,MAAM,CAAC1hB,CAAC;QAClC02E,MAAM,CAAC7gE,CAAC,GAAG64G,CAAC,CAAC74G,CAAC,GAAGiM,MAAM,GAAGJ,MAAM,CAAC7L,CAAC;QAElCu4B,QAAQ,CAACtgD,IAAI,CAAE4oF,MAAM,CAACh3E,CAAC,EAAEg3E,MAAM,CAAC12E,CAAC,EAAE02E,MAAM,CAAC7gE,CAAC,CAAE;MAE9C;IAED;IAEA,SAASg5G,eAAeA,CAAA,EAAG;MAE1B,KAAM,IAAI9nG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIomG,eAAe,EAAEpmG,CAAC,EAAG,EAAG;QAE7C,KAAM,IAAIz4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAImrH,cAAc,EAAEnrH,CAAC,EAAG,EAAG;UAE5C,IAAM4T,CAAC,GAAG,CAAEu3G,cAAc,GAAG,CAAC,KAAO1yF,CAAC,GAAG,CAAC,CAAE,IAAKz4B,CAAC,GAAG,CAAC,CAAE;UACxD,IAAM6T,CAAC,GAAG,CAAEs3G,cAAc,GAAG,CAAC,IAAK1yF,CAAC,IAAKz4B,CAAC,GAAG,CAAC,CAAE;UAChD,IAAM8T,CAAC,GAAG,CAAEq3G,cAAc,GAAG,CAAC,IAAK1yF,CAAC,GAAGz4B,CAAC;UACxC,IAAMic,CAAC,GAAG,CAAEkvG,cAAc,GAAG,CAAC,KAAO1yF,CAAC,GAAG,CAAC,CAAE,GAAGz4B,CAAC;;UAEhD;;UAEA85C,OAAO,CAACt6C,IAAI,CAAEoU,CAAC,EAAEC,CAAC,EAAEoI,CAAC,CAAE;UACvB69B,OAAO,CAACt6C,IAAI,CAAEqU,CAAC,EAAEC,CAAC,EAAEmI,CAAC,CAAE;QAExB;MAED;IAED;IAEA,SAAS2xG,WAAWA,CAAA,EAAG;MAEtB,KAAM,IAAI5tH,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI6+H,eAAe,EAAE7+H,CAAC,EAAG,EAAG;QAE7C,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0yF,cAAc,EAAE1yF,CAAC,EAAG,EAAG;UAE5CrR,EAAE,CAAChW,CAAC,GAAGpR,CAAC,GAAG6+H,eAAe;UAC1Bz3G,EAAE,CAAC1V,CAAC,GAAG+mB,CAAC,GAAG0yF,cAAc;UAEzBlxE,GAAG,CAACz6C,IAAI,CAAE4nB,EAAE,CAAChW,CAAC,EAAEgW,EAAE,CAAC1V,CAAC,CAAE;QAEvB;MAED;IAED;IAAC,OAAAwuH,OAAA;EAEF;EAACn9H,YAAA,CAAAg9H,YAAA;IAAA9lI,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA4rF,YAAA,CAAAnmI,SAAA,mBAAAqC,IAAA,MAAiB;MAE3B6nB,IAAI,CAACuxD,IAAI,GAAG,IAAI,CAAClsC,UAAU,CAACksC,IAAI,CAAC9yD,MAAM,EAAE;MAEzC,OAAOuB,IAAI;IAEZ;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAiBj9B,IAAI,EAAG;MAEvB;MACA;MACA,OAAO,IAAIi8G,YAAY,CACtB,IAAIrY,MAAM,CAAE5jG,IAAI,CAACuxD,IAAI,CAACr5E,IAAI,CAAE,EAAE,CAAC+kD,QAAQ,CAAEj9B,IAAI,CAACuxD,IAAI,CAAE,EACpDvxD,IAAI,CAAC+6G,eAAe,EACpB/6G,IAAI,CAAC0P,MAAM,EACX1P,IAAI,CAACqnG,cAAc,EACnBrnG,IAAI,CAAC69F,MAAM,CACX;IAEF;EAAC;EAAA,OAAAoe,YAAA;AAAA,EArLyB7nF,cAAc;AAAAz+C,OAAA,CAAAsmI,YAAA,GAAAtmI,OAAA,CAAA+mI,kBAAA,GAAAT,YAAA;AAAA,IAyLnCU,iBAAiB,0BAAAC,iBAAA;EAAA37G,SAAA,CAAA07G,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA17G,YAAA,CAAAw7G,iBAAA;EAEtB,SAAAA,kBAAavqG,QAAQ,GAAG,IAAI,EAAG;IAAA,IAAA0qG,OAAA;IAAAr+H,eAAA,OAAAk+H,iBAAA;IAE9BG,OAAA,GAAAD,QAAA,CAAA1kI,IAAA;IAEA2kI,OAAA,CAAK5kI,IAAI,GAAG,mBAAmB;IAE/B4kI,OAAA,CAAKz3F,UAAU,GAAG;MACjBjT,QAAQ,EAAEA;IACX,CAAC;IAED,IAAKA,QAAQ,KAAK,IAAI,EAAG;MAExB;;MAEA,IAAM4pB,QAAQ,GAAG,EAAE;MACnB,IAAM+gF,KAAK,GAAG,IAAI7gD,GAAG,EAAE;;MAEvB;;MAEA,IAAMpnC,KAAK,GAAG,IAAI9nB,OAAO,EAAE;MAC3B,IAAMguB,GAAG,GAAG,IAAIhuB,OAAO,EAAE;MAEzB,IAAKoF,QAAQ,CAACzmB,KAAK,KAAK,IAAI,EAAG;QAE9B;;QAEA,IAAM2mB,QAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAC7C,IAAM0jB,OAAO,GAAG5jB,QAAQ,CAACzmB,KAAK;QAC9B,IAAIgpC,MAAM,GAAGviB,QAAQ,CAACuiB,MAAM;QAE5B,IAAKA,MAAM,CAAC14C,MAAM,KAAK,CAAC,EAAG;UAE1B04C,MAAM,GAAG,CAAE;YAAEG,KAAK,EAAE,CAAC;YAAEhtB,KAAK,EAAEkuB,OAAO,CAACluB,KAAK;YAAEwtB,aAAa,EAAE;UAAE,CAAC,CAAE;QAElE;;QAEA;;QAEA,KAAM,IAAI0nF,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGtoF,MAAM,CAAC14C,MAAM,EAAE+gI,CAAC,GAAGC,EAAE,EAAE,EAAGD,CAAC,EAAG;UAEnD,IAAM9lF,KAAK,GAAGvC,MAAM,CAAEqoF,CAAC,CAAE;UAEzB,IAAM9gF,UAAU,GAAGhF,KAAK,CAACpC,KAAK;UAC9B,IAAMkI,UAAU,GAAG9F,KAAK,CAACpvB,KAAK;UAE9B,KAAM,IAAI5rB,CAAC,GAAGggD,UAAU,EAAElwC,CAAC,GAAKkwC,UAAU,GAAGc,UAAY,EAAE9gD,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,IAAI,CAAC,EAAG;YAE1E,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;cAE9B,IAAMqc,MAAM,GAAGgF,OAAO,CAAC9gC,IAAI,CAAEhZ,CAAC,GAAGy4B,CAAC,CAAE;cACpC,IAAMsc,MAAM,GAAG+E,OAAO,CAAC9gC,IAAI,CAAEhZ,CAAC,GAAG,CAAEy4B,CAAC,GAAG,CAAC,IAAK,CAAC,CAAE;cAEhDmgB,KAAK,CAAC9/B,mBAAmB,CAAEsd,QAAQ,EAAE0e,MAAM,CAAE;cAC7CgK,GAAG,CAAChmC,mBAAmB,CAAEsd,QAAQ,EAAE2e,MAAM,CAAE;cAE3C,IAAKisF,YAAY,CAAEpoF,KAAK,EAAEkG,GAAG,EAAE+hF,KAAK,CAAE,KAAK,IAAI,EAAG;gBAEjD/gF,QAAQ,CAACtgD,IAAI,CAAEo5C,KAAK,CAACxnC,CAAC,EAAEwnC,KAAK,CAAClnC,CAAC,EAAEknC,KAAK,CAACrxB,CAAC,CAAE;gBAC1Cu4B,QAAQ,CAACtgD,IAAI,CAAEs/C,GAAG,CAAC1tC,CAAC,EAAE0tC,GAAG,CAACptC,CAAC,EAAEotC,GAAG,CAACv3B,CAAC,CAAE;cAErC;YAED;UAED;QAED;MAED,CAAC,MAAM;QAEN;;QAEA,IAAM6O,UAAQ,GAAGF,QAAQ,CAACC,UAAU,CAACC,QAAQ;QAE7C,KAAM,IAAIp2B,IAAC,GAAG,CAAC,EAAE8P,IAAC,GAAKsmB,UAAQ,CAACxK,KAAK,GAAG,CAAG,EAAE5rB,IAAC,GAAG8P,IAAC,EAAE9P,IAAC,EAAG,EAAG;UAE1D,KAAM,IAAIy4B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;YAE9B;YACA;;YAEA,IAAMqc,MAAM,GAAG,CAAC,GAAG90C,IAAC,GAAGy4B,IAAC;YACxB,IAAMsc,OAAM,GAAG,CAAC,GAAG/0C,IAAC,GAAK,CAAEy4B,IAAC,GAAG,CAAC,IAAK,CAAG;YAExCmgB,KAAK,CAAC9/B,mBAAmB,CAAEsd,UAAQ,EAAE0e,MAAM,CAAE;YAC7CgK,GAAG,CAAChmC,mBAAmB,CAAEsd,UAAQ,EAAE2e,OAAM,CAAE;YAE3C,IAAKisF,YAAY,CAAEpoF,KAAK,EAAEkG,GAAG,EAAE+hF,KAAK,CAAE,KAAK,IAAI,EAAG;cAEjD/gF,QAAQ,CAACtgD,IAAI,CAAEo5C,KAAK,CAACxnC,CAAC,EAAEwnC,KAAK,CAAClnC,CAAC,EAAEknC,KAAK,CAACrxB,CAAC,CAAE;cAC1Cu4B,QAAQ,CAACtgD,IAAI,CAAEs/C,GAAG,CAAC1tC,CAAC,EAAE0tC,GAAG,CAACptC,CAAC,EAAEotC,GAAG,CAACv3B,CAAC,CAAE;YAErC;UAED;QAED;MAED;;MAEA;;MAEAq5G,OAAA,CAAK5nF,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAE3E;IAAC,OAAA8gF,OAAA;EAEF;EAAC,OAAA79H,YAAA,CAAA09H,iBAAA;AAAA,EA5G8BvoF,cAAc;AAAAz+C,OAAA,CAAAgnI,iBAAA,GAAAA,iBAAA;AAgH9C,SAASO,YAAYA,CAAEpoF,KAAK,EAAEkG,GAAG,EAAE+hF,KAAK,EAAG;EAE1C,IAAMI,KAAK,MAAAn/G,MAAA,CAAM82B,KAAK,CAACxnC,CAAC,OAAA0Q,MAAA,CAAI82B,KAAK,CAAClnC,CAAC,OAAAoQ,MAAA,CAAI82B,KAAK,CAACrxB,CAAC,OAAAzF,MAAA,CAAIg9B,GAAG,CAAC1tC,CAAC,OAAA0Q,MAAA,CAAIg9B,GAAG,CAACptC,CAAC,OAAAoQ,MAAA,CAAIg9B,GAAG,CAACv3B,CAAC,CAAE;EAC3E,IAAM25G,KAAK,MAAAp/G,MAAA,CAAMg9B,GAAG,CAAC1tC,CAAC,OAAA0Q,MAAA,CAAIg9B,GAAG,CAACptC,CAAC,OAAAoQ,MAAA,CAAIg9B,GAAG,CAACv3B,CAAC,OAAAzF,MAAA,CAAI82B,KAAK,CAACxnC,CAAC,OAAA0Q,MAAA,CAAI82B,KAAK,CAAClnC,CAAC,OAAAoQ,MAAA,CAAI82B,KAAK,CAACrxB,CAAC,CAAE,CAAC,CAAC;;EAE7E,IAAKs5G,KAAK,CAAC1+D,GAAG,CAAE8+D,KAAK,CAAE,KAAK,IAAI,IAAIJ,KAAK,CAAC1+D,GAAG,CAAE++D,KAAK,CAAE,KAAK,IAAI,EAAG;IAEjE,OAAO,KAAK;EAEb,CAAC,MAAM;IAENL,KAAK,CAACxqH,GAAG,CAAE4qH,KAAK,CAAE;IAClBJ,KAAK,CAACxqH,GAAG,CAAE6qH,KAAK,CAAE;IAClB,OAAO,IAAI;EAEZ;AAED;AAEA,IAAIC,UAAU,GAAG,aAAaxnI,MAAM,CAAC2b,MAAM,CAAC;EAC3C7U,SAAS,EAAE,IAAI;EACf6+C,WAAW,EAAEA,WAAW;EACxB0B,iBAAiB,EAAE1B,WAAW;EAC9ByrE,eAAe,EAAEA,eAAe;EAChCM,qBAAqB,EAAEN,eAAe;EACtCO,cAAc,EAAEA,cAAc;EAC9BO,oBAAoB,EAAEP,cAAc;EACpCyB,YAAY,EAAEA,YAAY;EAC1BI,kBAAkB,EAAEJ,YAAY;EAChCjB,gBAAgB,EAAEA,gBAAgB;EAClCgB,sBAAsB,EAAEhB,gBAAgB;EACxC+C,oBAAoB,EAAEA,oBAAoB;EAC1CI,0BAA0B,EAAEJ,oBAAoB;EAChDS,aAAa,EAAEA,aAAa;EAC5B0G,eAAe,EAAEA,eAAe;EAChC4E,qBAAqB,EAAE5E,eAAe;EACtC6F,mBAAmB,EAAEA,mBAAmB;EACxCI,yBAAyB,EAAEJ,mBAAmB;EAC9C1R,aAAa,EAAEA,aAAa;EAC5BW,mBAAmB,EAAEX,aAAa;EAClC+R,kBAAkB,EAAEA,kBAAkB;EACtCI,wBAAwB,EAAEJ,kBAAkB;EAC5C7vE,aAAa,EAAEA,aAAa;EAC5BQ,mBAAmB,EAAER,aAAa;EAClC+gE,kBAAkB,EAAEA,kBAAkB;EACtCwB,wBAAwB,EAAExB,kBAAkB;EAC5CmP,YAAY,EAAEA,YAAY;EAC1BU,kBAAkB,EAAEV,YAAY;EAChCW,aAAa,EAAEA,aAAa;EAC5BQ,mBAAmB,EAAER,aAAa;EAClCS,cAAc,EAAEA,cAAc;EAC9BQ,oBAAoB,EAAER,cAAc;EACpCS,mBAAmB,EAAEA,mBAAmB;EACxCI,yBAAyB,EAAEJ,mBAAmB;EAC9CK,aAAa,EAAEA,aAAa;EAC5BM,mBAAmB,EAAEN,aAAa;EAClCO,iBAAiB,EAAEA,iBAAiB;EACpCc,uBAAuB,EAAEd,iBAAiB;EAC1Ce,YAAY,EAAEA,YAAY;EAC1BS,kBAAkB,EAAET,YAAY;EAChCU,iBAAiB,EAAEA;AACpB,CAAC,CAAC;AAAC,IAEGr/C,cAAc,0BAAAggD,UAAA;EAAAr8G,SAAA,CAAAq8D,cAAA,EAAAggD,UAAA;EAAA,IAAAC,QAAA,GAAAp8G,YAAA,CAAAm8D,cAAA;EAEnB,SAAAA,eAAaj4C,UAAU,EAAG;IAAA,IAAAm4F,OAAA;IAAA/+H,eAAA,OAAA6+E,cAAA;IAEzBkgD,OAAA,GAAAD,QAAA,CAAAplI,IAAA;IAEAqlI,OAAA,CAAKz4B,gBAAgB,GAAG,IAAI;IAE5By4B,OAAA,CAAKtlI,IAAI,GAAG,gBAAgB;IAE5BslI,OAAA,CAAKpiH,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE;IAClCuhH,OAAA,CAAKn0F,WAAW,GAAG,IAAI;IAEvBm0F,OAAA,CAAK5tF,GAAG,GAAG,IAAI;IAEf4tF,OAAA,CAAKhyF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAm4F,OAAA;EAE9B;EAACv+H,YAAA,CAAAq+E,cAAA;IAAAnnF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAitC,cAAA,CAAAxnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAACw0B,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA0tC,cAAA;AAAA,EA7B2B10C,QAAQ;AAAAjzC,OAAA,CAAA2nF,cAAA,GAAAA,cAAA;AAAA,IAiC/BmgD,iBAAiB,0BAAAC,eAAA;EAAAz8G,SAAA,CAAAw8G,iBAAA,EAAAC,eAAA;EAAA,IAAAC,QAAA,GAAAx8G,YAAA,CAAAs8G,iBAAA;EAEtB,SAAAA,kBAAap4F,UAAU,EAAG;IAAA,IAAAu4F,OAAA;IAAAn/H,eAAA,OAAAg/H,iBAAA;IAEzBG,OAAA,GAAAD,QAAA,CAAAxlI,IAAA,OAAOktC,UAAU;IAEjBu4F,OAAA,CAAK3lD,mBAAmB,GAAG,IAAI;IAE/B2lD,OAAA,CAAK1lI,IAAI,GAAG,mBAAmB;IAAC,OAAA0lI,OAAA;EAEjC;EAAC,OAAA3+H,YAAA,CAAAw+H,iBAAA;AAAA,EAV8B7/E,cAAc;AAAAjoD,OAAA,CAAA8nI,iBAAA,GAAAA,iBAAA;AAAA,IAcxCzgD,oBAAoB,0BAAA6gD,UAAA;EAAA58G,SAAA,CAAA+7D,oBAAA,EAAA6gD,UAAA;EAAA,IAAAC,QAAA,GAAA38G,YAAA,CAAA67D,oBAAA;EAEzB,SAAAA,qBAAa33C,UAAU,EAAG;IAAA,IAAA04F,OAAA;IAAAt/H,eAAA,OAAAu+E,oBAAA;IAEzB+gD,OAAA,GAAAD,QAAA,CAAA3lI,IAAA;IAEA4lI,OAAA,CAAKrgD,sBAAsB,GAAG,IAAI;IAElCqgD,OAAA,CAAK9/E,OAAO,GAAG;MAAE,UAAU,EAAE;IAAG,CAAC;IAEjC8/E,OAAA,CAAK7lI,IAAI,GAAG,sBAAsB;IAElC6lI,OAAA,CAAK3iH,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;IACpC8hH,OAAA,CAAKnyF,SAAS,GAAG,GAAG;IACpBmyF,OAAA,CAAKlyF,SAAS,GAAG,GAAG;IAEpBkyF,OAAA,CAAK7wF,GAAG,GAAG,IAAI;IAEf6wF,OAAA,CAAK1wF,QAAQ,GAAG,IAAI;IACpB0wF,OAAA,CAAKzwF,iBAAiB,GAAG,GAAG;IAE5BywF,OAAA,CAAKxwF,KAAK,GAAG,IAAI;IACjBwwF,OAAA,CAAKvwF,cAAc,GAAG,GAAG;IAEzBuwF,OAAA,CAAK9xF,QAAQ,GAAG,IAAIhwB,KAAK,CAAE,QAAQ,CAAE;IACrC8hH,OAAA,CAAK7xF,iBAAiB,GAAG,GAAG;IAC5B6xF,OAAA,CAAK5vF,WAAW,GAAG,IAAI;IAEvB4vF,OAAA,CAAKtwF,OAAO,GAAG,IAAI;IACnBswF,OAAA,CAAKrwF,SAAS,GAAG,CAAC;IAElBqwF,OAAA,CAAKpwF,SAAS,GAAG,IAAI;IACrBowF,OAAA,CAAKnwF,aAAa,GAAG3kC,qBAAqB;IAC1C80H,OAAA,CAAKlwF,WAAW,GAAG,IAAIn8B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAEtCqsH,OAAA,CAAKjwF,eAAe,GAAG,IAAI;IAC3BiwF,OAAA,CAAKhwF,iBAAiB,GAAG,CAAC;IAC1BgwF,OAAA,CAAK/vF,gBAAgB,GAAG,CAAC;IAEzB+vF,OAAA,CAAK9vF,YAAY,GAAG,IAAI;IAExB8vF,OAAA,CAAK7vF,YAAY,GAAG,IAAI;IAExB6vF,OAAA,CAAK3wF,QAAQ,GAAG,IAAI;IAEpB2wF,OAAA,CAAKxvF,MAAM,GAAG,IAAI;IAClBwvF,OAAA,CAAKtvF,eAAe,GAAG,GAAG;IAE1BsvF,OAAA,CAAKvuF,SAAS,GAAG,KAAK;IACtBuuF,OAAA,CAAKtuF,kBAAkB,GAAG,CAAC;IAC3BsuF,OAAA,CAAKruF,gBAAgB,GAAG,OAAO;IAC/BquF,OAAA,CAAKpuF,iBAAiB,GAAG,OAAO;IAEhCouF,OAAA,CAAKryF,WAAW,GAAG,KAAK;IAExBqyF,OAAA,CAAKnuF,GAAG,GAAG,IAAI;IAEfmuF,OAAA,CAAKvyF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA04F,OAAA;EAE9B;EAAC9+H,YAAA,CAAA+9E,oBAAA;IAAA7mF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA2sC,oBAAA,CAAAlnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACiiC,OAAO,GAAG;QAAE,UAAU,EAAE;MAAG,CAAC;MAEjC,IAAI,CAAC7iC,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAC/B,IAAI,CAACwwB,SAAS,GAAG5vB,MAAM,CAAC4vB,SAAS;MACjC,IAAI,CAACC,SAAS,GAAG7vB,MAAM,CAAC6vB,SAAS;MAEjC,IAAI,CAACqB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGrxB,MAAM,CAACqxB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGtxB,MAAM,CAACsxB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGvxB,MAAM,CAACuxB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGxxB,MAAM,CAACwxB,cAAc;MAE3C,IAAI,CAACvB,QAAQ,CAAC55B,IAAI,CAAE2J,MAAM,CAACiwB,QAAQ,CAAE;MACrC,IAAI,CAACkC,WAAW,GAAGnyB,MAAM,CAACmyB,WAAW;MACrC,IAAI,CAACjC,iBAAiB,GAAGlwB,MAAM,CAACkwB,iBAAiB;MAEjD,IAAI,CAACuB,OAAO,GAAGzxB,MAAM,CAACyxB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAG1xB,MAAM,CAAC0xB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAG3xB,MAAM,CAAC2xB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG5xB,MAAM,CAAC4xB,aAAa;MACzC,IAAI,CAACC,WAAW,CAACx7B,IAAI,CAAE2J,MAAM,CAAC6xB,WAAW,CAAE;MAE3C,IAAI,CAACC,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,IAAI,CAACC,YAAY,GAAGjyB,MAAM,CAACiyB,YAAY;MAEvC,IAAI,CAACC,YAAY,GAAGlyB,MAAM,CAACkyB,YAAY;MAEvC,IAAI,CAACd,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGvyB,MAAM,CAACuyB,MAAM;MAC3B,IAAI,CAACE,eAAe,GAAGzyB,MAAM,CAACyyB,eAAe;MAE7C,IAAI,CAACe,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAG1zB,MAAM,CAAC0zB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAG3zB,MAAM,CAAC2zB,iBAAiB;MAEjD,IAAI,CAACjE,WAAW,GAAG1vB,MAAM,CAAC0vB,WAAW;MAErC,IAAI,CAACkE,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAotC,oBAAA;AAAA,EAlHiCp0C,QAAQ;AAAAjzC,OAAA,CAAAqnF,oBAAA,GAAAA,oBAAA;AAAA,IAsHrCC,oBAAoB,0BAAA+gD,qBAAA;EAAA/8G,SAAA,CAAAg8D,oBAAA,EAAA+gD,qBAAA;EAAA,IAAAC,QAAA,GAAA98G,YAAA,CAAA87D,oBAAA;EAEzB,SAAAA,qBAAa53C,UAAU,EAAG;IAAA,IAAA64F,OAAA;IAAAz/H,eAAA,OAAAw+E,oBAAA;IAEzBihD,OAAA,GAAAD,QAAA,CAAA9lI,IAAA;IAEA+lI,OAAA,CAAKj6B,sBAAsB,GAAG,IAAI;IAElCi6B,OAAA,CAAKjgF,OAAO,GAAG;MAEd,UAAU,EAAE,EAAE;MACd,UAAU,EAAE;IAEb,CAAC;IAEDigF,OAAA,CAAKhmI,IAAI,GAAG,sBAAsB;IAElCgmI,OAAA,CAAKzxF,YAAY,GAAG,IAAI;IACxByxF,OAAA,CAAK1xF,kBAAkB,GAAG,GAAG;IAC7B0xF,OAAA,CAAKxxF,qBAAqB,GAAG,IAAI;IACjCwxF,OAAA,CAAKtxF,oBAAoB,GAAG,IAAIl7B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAC/CwsH,OAAA,CAAKvxF,kBAAkB,GAAG,IAAI;IAE9BuxF,OAAA,CAAKjqE,GAAG,GAAG,GAAG;IAEdp+D,MAAM,CAACI,cAAc,CAAA+rB,sBAAA,CAAAk8G,OAAA,GAAQ,cAAc,EAAE;MAC5CrsH,GAAG,EAAE,SAAAA,IAAA,EAAY;QAEhB,OAAS9E,KAAK,CAAE,GAAG,IAAK,IAAI,CAACknD,GAAG,GAAG,CAAC,CAAE,IAAK,IAAI,CAACA,GAAG,GAAG,CAAC,CAAE,EAAE,CAAC,EAAE,CAAC,CAAE;MAElE,CAAC;MACDrjD,GAAG,EAAE,SAAAA,IAAW89B,YAAY,EAAG;QAE9B,IAAI,CAACulB,GAAG,GAAG,CAAE,CAAC,GAAG,GAAG,GAAGvlB,YAAY,KAAO,CAAC,GAAG,GAAG,GAAGA,YAAY,CAAE;MAEnE;IACD,CAAC,CAAE;IAEHwvF,OAAA,CAAKlxF,cAAc,GAAG,IAAI;IAC1BkxF,OAAA,CAAKpxF,cAAc,GAAG,GAAG;IACzBoxF,OAAA,CAAKnxF,yBAAyB,GAAG,CAAE,GAAG,EAAE,GAAG,CAAE;IAC7CmxF,OAAA,CAAKjxF,uBAAuB,GAAG,IAAI;IAEnCixF,OAAA,CAAKnyF,UAAU,GAAG,IAAI9vB,KAAK,CAAE,QAAQ,CAAE;IACvCiiH,OAAA,CAAKlmE,aAAa,GAAG,IAAI;IACzBkmE,OAAA,CAAKlyF,cAAc,GAAG,GAAG;IACzBkyF,OAAA,CAAKjmE,iBAAiB,GAAG,IAAI;IAE7BimE,OAAA,CAAKpvF,eAAe,GAAG,IAAI;IAE3BovF,OAAA,CAAKnvF,SAAS,GAAG,CAAC;IAClBmvF,OAAA,CAAKlvF,YAAY,GAAG,IAAI;IACxBkvF,OAAA,CAAKjvF,mBAAmB,GAAG,GAAG;IAC9BivF,OAAA,CAAKhvF,gBAAgB,GAAG,IAAIjzB,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE5CiiH,OAAA,CAAK9xF,iBAAiB,GAAG,GAAG;IAC5B8xF,OAAA,CAAK7vF,oBAAoB,GAAG,IAAI;IAChC6vF,OAAA,CAAK7xF,aAAa,GAAG,IAAIpwB,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACzCiiH,OAAA,CAAK5vF,gBAAgB,GAAG,IAAI;IAE5B4vF,OAAA,CAAKC,MAAM,GAAG,GAAG;IACjBD,OAAA,CAAKE,UAAU,GAAG,CAAC;IACnBF,OAAA,CAAKG,YAAY,GAAG,CAAC;IACrBH,OAAA,CAAKI,aAAa,GAAG,CAAC;IAEtBJ,OAAA,CAAK1yF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA64F,OAAA;EAE9B;EAACj/H,YAAA,CAAAg+E,oBAAA;IAAA9mF,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX,OAAO,IAAI,CAACssH,MAAM;IAEnB,CAAC;IAAAvtH,GAAA,EAED,SAAAA,IAAWva,KAAK,EAAG;MAElB,IAAK,IAAI,CAAC8nI,MAAM,GAAG,CAAC,KAAK9nI,KAAK,GAAG,CAAC,EAAG;QAEpC,IAAI,CAAC8pB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACg+G,MAAM,GAAG9nI,KAAK;IAEpB;EAAC;IAAAF,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAgB;MAEf,OAAO,IAAI,CAACusH,UAAU;IAEvB,CAAC;IAAAxtH,GAAA,EAED,SAAAA,IAAeva,KAAK,EAAG;MAEtB,IAAK,IAAI,CAAC+nI,UAAU,GAAG,CAAC,KAAK/nI,KAAK,GAAG,CAAC,EAAG;QAExC,IAAI,CAAC8pB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACi+G,UAAU,GAAG/nI,KAAK;IAExB;EAAC;IAAAF,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAkB;MAEjB,OAAO,IAAI,CAACwsH,YAAY;IAEzB,CAAC;IAAAztH,GAAA,EAED,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAK,IAAI,CAACgoI,YAAY,GAAG,CAAC,KAAKhoI,KAAK,GAAG,CAAC,EAAG;QAE1C,IAAI,CAAC8pB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACk+G,YAAY,GAAGhoI,KAAK;IAE1B;EAAC;IAAAF,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAmB;MAElB,OAAO,IAAI,CAACysH,aAAa;IAE1B,CAAC;IAAA1tH,GAAA,EAED,SAAAA,IAAkBva,KAAK,EAAG;MAEzB,IAAK,IAAI,CAACioI,aAAa,GAAG,CAAC,KAAKjoI,KAAK,GAAG,CAAC,EAAG;QAE3C,IAAI,CAAC8pB,OAAO,EAAG;MAEhB;MAEA,IAAI,CAACm+G,aAAa,GAAGjoI,KAAK;IAE3B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA4sC,oBAAA,CAAAnnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACiiC,OAAO,GAAG;QAEd,UAAU,EAAE,EAAE;QACd,UAAU,EAAE;MAEb,CAAC;MAED,IAAI,CAAC1R,SAAS,GAAGvwB,MAAM,CAACuwB,SAAS;MACjC,IAAI,CAACE,YAAY,GAAGzwB,MAAM,CAACywB,YAAY;MACvC,IAAI,CAACD,kBAAkB,GAAGxwB,MAAM,CAACwwB,kBAAkB;MACnD,IAAI,CAACE,qBAAqB,GAAG1wB,MAAM,CAAC0wB,qBAAqB;MACzD,IAAI,CAACC,kBAAkB,GAAG3wB,MAAM,CAAC2wB,kBAAkB;MACnD,IAAI,CAACC,oBAAoB,CAACv6B,IAAI,CAAE2J,MAAM,CAAC4wB,oBAAoB,CAAE;MAE7D,IAAI,CAACqnB,GAAG,GAAGj4C,MAAM,CAACi4C,GAAG;MAErB,IAAI,CAACpnB,WAAW,GAAG7wB,MAAM,CAAC6wB,WAAW;MACrC,IAAI,CAACG,cAAc,GAAGhxB,MAAM,CAACgxB,cAAc;MAC3C,IAAI,CAACF,cAAc,GAAG9wB,MAAM,CAAC8wB,cAAc;MAC3C,IAAI,CAACC,yBAAyB,GAAAwxF,kBAAA,CAAQviH,MAAM,CAAC+wB,yBAAyB,CAAE;MACxE,IAAI,CAACE,uBAAuB,GAAGjxB,MAAM,CAACixB,uBAAuB;MAE7D,IAAI,CAACnB,KAAK,GAAG9vB,MAAM,CAAC8vB,KAAK;MACzB,IAAI,CAACC,UAAU,CAAC15B,IAAI,CAAE2J,MAAM,CAAC+vB,UAAU,CAAE;MACzC,IAAI,CAACisB,aAAa,GAAGh8C,MAAM,CAACg8C,aAAa;MACzC,IAAI,CAAChsB,cAAc,GAAGhwB,MAAM,CAACgwB,cAAc;MAC3C,IAAI,CAACisB,iBAAiB,GAAGj8C,MAAM,CAACi8C,iBAAiB;MAEjD,IAAI,CAACppB,YAAY,GAAG7yB,MAAM,CAAC6yB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAG9yB,MAAM,CAAC8yB,eAAe;MAE7C,IAAI,CAACC,SAAS,GAAG/yB,MAAM,CAAC+yB,SAAS;MACjC,IAAI,CAACC,YAAY,GAAGhzB,MAAM,CAACgzB,YAAY;MACvC,IAAI,CAACC,mBAAmB,GAAGjzB,MAAM,CAACizB,mBAAmB;MACrD,IAAI,CAACC,gBAAgB,CAAC78B,IAAI,CAAE2J,MAAM,CAACkzB,gBAAgB,CAAE;MAErD,IAAI,CAAC9C,iBAAiB,GAAGpwB,MAAM,CAACowB,iBAAiB;MACjD,IAAI,CAACiC,oBAAoB,GAAGryB,MAAM,CAACqyB,oBAAoB;MACvD,IAAI,CAAChC,aAAa,CAACh6B,IAAI,CAAE2J,MAAM,CAACqwB,aAAa,CAAE;MAC/C,IAAI,CAACiC,gBAAgB,GAAGtyB,MAAM,CAACsyB,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA2uC,oBAAA;AAAA,EA5LiCD,oBAAoB;AAAArnF,OAAA,CAAAsnF,oBAAA,GAAAA,oBAAA;AAAA,IAgMjDH,iBAAiB,0BAAA0hD,WAAA;EAAAv9G,SAAA,CAAA67D,iBAAA,EAAA0hD,WAAA;EAAA,IAAAC,QAAA,GAAAt9G,YAAA,CAAA27D,iBAAA;EAEtB,SAAAA,kBAAaz3C,UAAU,EAAG;IAAA,IAAAq5F,OAAA;IAAAjgI,eAAA,OAAAq+E,iBAAA;IAEzB4hD,OAAA,GAAAD,QAAA,CAAAtmI,IAAA;IAEAumI,OAAA,CAAK56B,mBAAmB,GAAG,IAAI;IAE/B46B,OAAA,CAAKxmI,IAAI,GAAG,mBAAmB;IAE/BwmI,OAAA,CAAKtjH,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;IACpCyiH,OAAA,CAAKvyF,QAAQ,GAAG,IAAIlwB,KAAK,CAAE,QAAQ,CAAE;IACrCyiH,OAAA,CAAKpyF,SAAS,GAAG,EAAE;IAEnBoyF,OAAA,CAAKxxF,GAAG,GAAG,IAAI;IAEfwxF,OAAA,CAAKrxF,QAAQ,GAAG,IAAI;IACpBqxF,OAAA,CAAKpxF,iBAAiB,GAAG,GAAG;IAE5BoxF,OAAA,CAAKnxF,KAAK,GAAG,IAAI;IACjBmxF,OAAA,CAAKlxF,cAAc,GAAG,GAAG;IAEzBkxF,OAAA,CAAKzyF,QAAQ,GAAG,IAAIhwB,KAAK,CAAE,QAAQ,CAAE;IACrCyiH,OAAA,CAAKxyF,iBAAiB,GAAG,GAAG;IAC5BwyF,OAAA,CAAKvwF,WAAW,GAAG,IAAI;IAEvBuwF,OAAA,CAAKjxF,OAAO,GAAG,IAAI;IACnBixF,OAAA,CAAKhxF,SAAS,GAAG,CAAC;IAElBgxF,OAAA,CAAK/wF,SAAS,GAAG,IAAI;IACrB+wF,OAAA,CAAK9wF,aAAa,GAAG3kC,qBAAqB;IAC1Cy1H,OAAA,CAAK7wF,WAAW,GAAG,IAAIn8B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAEtCgtH,OAAA,CAAK5wF,eAAe,GAAG,IAAI;IAC3B4wF,OAAA,CAAK3wF,iBAAiB,GAAG,CAAC;IAC1B2wF,OAAA,CAAK1wF,gBAAgB,GAAG,CAAC;IAEzB0wF,OAAA,CAAKtwF,WAAW,GAAG,IAAI;IAEvBswF,OAAA,CAAKtxF,QAAQ,GAAG,IAAI;IAEpBsxF,OAAA,CAAKnwF,MAAM,GAAG,IAAI;IAClBmwF,OAAA,CAAKlwF,OAAO,GAAGtrC,iBAAiB;IAChCw7H,OAAA,CAAKhwF,YAAY,GAAG,CAAC;IACrBgwF,OAAA,CAAK/vF,eAAe,GAAG,IAAI;IAE3B+vF,OAAA,CAAKlvF,SAAS,GAAG,KAAK;IACtBkvF,OAAA,CAAKjvF,kBAAkB,GAAG,CAAC;IAC3BivF,OAAA,CAAKhvF,gBAAgB,GAAG,OAAO;IAC/BgvF,OAAA,CAAK/uF,iBAAiB,GAAG,OAAO;IAEhC+uF,OAAA,CAAKhzF,WAAW,GAAG,KAAK;IAExBgzF,OAAA,CAAK9uF,GAAG,GAAG,IAAI;IAEf8uF,OAAA,CAAKlzF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAq5F,OAAA;EAE9B;EAACz/H,YAAA,CAAA69E,iBAAA;IAAA3mF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAysC,iBAAA,CAAAhnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAC/B,IAAI,CAAC+wB,QAAQ,CAAC95B,IAAI,CAAE2J,MAAM,CAACmwB,QAAQ,CAAE;MACrC,IAAI,CAACG,SAAS,GAAGtwB,MAAM,CAACswB,SAAS;MAEjC,IAAI,CAACY,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGrxB,MAAM,CAACqxB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGtxB,MAAM,CAACsxB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGvxB,MAAM,CAACuxB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGxxB,MAAM,CAACwxB,cAAc;MAE3C,IAAI,CAACvB,QAAQ,CAAC55B,IAAI,CAAE2J,MAAM,CAACiwB,QAAQ,CAAE;MACrC,IAAI,CAACkC,WAAW,GAAGnyB,MAAM,CAACmyB,WAAW;MACrC,IAAI,CAACjC,iBAAiB,GAAGlwB,MAAM,CAACkwB,iBAAiB;MAEjD,IAAI,CAACuB,OAAO,GAAGzxB,MAAM,CAACyxB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAG1xB,MAAM,CAAC0xB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAG3xB,MAAM,CAAC2xB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG5xB,MAAM,CAAC4xB,aAAa;MACzC,IAAI,CAACC,WAAW,CAACx7B,IAAI,CAAE2J,MAAM,CAAC6xB,WAAW,CAAE;MAE3C,IAAI,CAACC,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,IAAI,CAACI,WAAW,GAAGpyB,MAAM,CAACoyB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGvyB,MAAM,CAACuyB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGxyB,MAAM,CAACwyB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAG1yB,MAAM,CAAC0yB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAG3yB,MAAM,CAAC2yB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAG1zB,MAAM,CAAC0zB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAG3zB,MAAM,CAAC2zB,iBAAiB;MAEjD,IAAI,CAACjE,WAAW,GAAG1vB,MAAM,CAAC0vB,WAAW;MAErC,IAAI,CAACkE,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAktC,iBAAA;AAAA,EA9G8Bl0C,QAAQ;AAAAjzC,OAAA,CAAAmnF,iBAAA,GAAAA,iBAAA;AAAA,IAkHlCC,gBAAgB,0BAAA4hD,WAAA;EAAA19G,SAAA,CAAA87D,gBAAA,EAAA4hD,WAAA;EAAA,IAAAC,QAAA,GAAAz9G,YAAA,CAAA47D,gBAAA;EAErB,SAAAA,iBAAa13C,UAAU,EAAG;IAAA,IAAAw5F,OAAA;IAAApgI,eAAA,OAAAs+E,gBAAA;IAEzB8hD,OAAA,GAAAD,QAAA,CAAAzmI,IAAA;IAEA0mI,OAAA,CAAKj7B,kBAAkB,GAAG,IAAI;IAE9Bi7B,OAAA,CAAK5gF,OAAO,GAAG;MAAE,MAAM,EAAE;IAAG,CAAC;IAE7B4gF,OAAA,CAAK3mI,IAAI,GAAG,kBAAkB;IAE9B2mI,OAAA,CAAKzjH,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE;IAElC4iH,OAAA,CAAK3xF,GAAG,GAAG,IAAI;IACf2xF,OAAA,CAAKjwF,WAAW,GAAG,IAAI;IAEvBiwF,OAAA,CAAKxxF,QAAQ,GAAG,IAAI;IACpBwxF,OAAA,CAAKvxF,iBAAiB,GAAG,GAAG;IAE5BuxF,OAAA,CAAKtxF,KAAK,GAAG,IAAI;IACjBsxF,OAAA,CAAKrxF,cAAc,GAAG,GAAG;IAEzBqxF,OAAA,CAAK5yF,QAAQ,GAAG,IAAIhwB,KAAK,CAAE,QAAQ,CAAE;IACrC4iH,OAAA,CAAK3yF,iBAAiB,GAAG,GAAG;IAC5B2yF,OAAA,CAAK1wF,WAAW,GAAG,IAAI;IAEvB0wF,OAAA,CAAKpxF,OAAO,GAAG,IAAI;IACnBoxF,OAAA,CAAKnxF,SAAS,GAAG,CAAC;IAElBmxF,OAAA,CAAKlxF,SAAS,GAAG,IAAI;IACrBkxF,OAAA,CAAKjxF,aAAa,GAAG3kC,qBAAqB;IAC1C41H,OAAA,CAAKhxF,WAAW,GAAG,IAAIn8B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAEtCmtH,OAAA,CAAK/wF,eAAe,GAAG,IAAI;IAC3B+wF,OAAA,CAAK9wF,iBAAiB,GAAG,CAAC;IAC1B8wF,OAAA,CAAK7wF,gBAAgB,GAAG,CAAC;IAEzB6wF,OAAA,CAAKzxF,QAAQ,GAAG,IAAI;IAEpByxF,OAAA,CAAKrvF,SAAS,GAAG,KAAK;IACtBqvF,OAAA,CAAKpvF,kBAAkB,GAAG,CAAC;IAC3BovF,OAAA,CAAKnvF,gBAAgB,GAAG,OAAO;IAC/BmvF,OAAA,CAAKlvF,iBAAiB,GAAG,OAAO;IAEhCkvF,OAAA,CAAKjvF,GAAG,GAAG,IAAI;IAEfivF,OAAA,CAAKrzF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAw5F,OAAA;EAE9B;EAAC5/H,YAAA,CAAA89E,gBAAA;IAAA5mF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA0sC,gBAAA,CAAAjnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAAC8xB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MACrB,IAAI,CAAC0B,WAAW,GAAG5yB,MAAM,CAAC4yB,WAAW;MAErC,IAAI,CAACvB,QAAQ,GAAGrxB,MAAM,CAACqxB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGtxB,MAAM,CAACsxB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGvxB,MAAM,CAACuxB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGxxB,MAAM,CAACwxB,cAAc;MAE3C,IAAI,CAACvB,QAAQ,CAAC55B,IAAI,CAAE2J,MAAM,CAACiwB,QAAQ,CAAE;MACrC,IAAI,CAACkC,WAAW,GAAGnyB,MAAM,CAACmyB,WAAW;MACrC,IAAI,CAACjC,iBAAiB,GAAGlwB,MAAM,CAACkwB,iBAAiB;MAEjD,IAAI,CAACuB,OAAO,GAAGzxB,MAAM,CAACyxB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAG1xB,MAAM,CAAC0xB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAG3xB,MAAM,CAAC2xB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG5xB,MAAM,CAAC4xB,aAAa;MACzC,IAAI,CAACC,WAAW,CAACx7B,IAAI,CAAE2J,MAAM,CAAC6xB,WAAW,CAAE;MAE3C,IAAI,CAACC,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,IAAI,CAACZ,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACoC,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAG1zB,MAAM,CAAC0zB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAG3zB,MAAM,CAAC2zB,iBAAiB;MAEjD,IAAI,CAACC,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAmtC,gBAAA;AAAA,EA5F6Bn0C,QAAQ;AAAAjzC,OAAA,CAAAonF,gBAAA,GAAAA,gBAAA;AAAA,IAgGjCH,kBAAkB,0BAAAkiD,WAAA;EAAA79G,SAAA,CAAA27D,kBAAA,EAAAkiD,WAAA;EAAA,IAAAC,QAAA,GAAA59G,YAAA,CAAAy7D,kBAAA;EAEvB,SAAAA,mBAAav3C,UAAU,EAAG;IAAA,IAAA25F,OAAA;IAAAvgI,eAAA,OAAAm+E,kBAAA;IAEzBoiD,OAAA,GAAAD,QAAA,CAAA5mI,IAAA;IAEA6mI,OAAA,CAAK16B,oBAAoB,GAAG,IAAI;IAEhC06B,OAAA,CAAK9mI,IAAI,GAAG,oBAAoB;IAEhC8mI,OAAA,CAAKvxF,OAAO,GAAG,IAAI;IACnBuxF,OAAA,CAAKtxF,SAAS,GAAG,CAAC;IAElBsxF,OAAA,CAAKrxF,SAAS,GAAG,IAAI;IACrBqxF,OAAA,CAAKpxF,aAAa,GAAG3kC,qBAAqB;IAC1C+1H,OAAA,CAAKnxF,WAAW,GAAG,IAAIn8B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAEtCstH,OAAA,CAAKlxF,eAAe,GAAG,IAAI;IAC3BkxF,OAAA,CAAKjxF,iBAAiB,GAAG,CAAC;IAC1BixF,OAAA,CAAKhxF,gBAAgB,GAAG,CAAC;IAEzBgxF,OAAA,CAAKxvF,SAAS,GAAG,KAAK;IACtBwvF,OAAA,CAAKvvF,kBAAkB,GAAG,CAAC;IAE3BuvF,OAAA,CAAKtzF,WAAW,GAAG,KAAK;IAExBszF,OAAA,CAAKxzF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA25F,OAAA;EAE9B;EAAC//H,YAAA,CAAA29E,kBAAA;IAAAzmF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAusC,kBAAA,CAAA9mF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACyxB,OAAO,GAAGzxB,MAAM,CAACyxB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAG1xB,MAAM,CAAC0xB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAG3xB,MAAM,CAAC2xB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG5xB,MAAM,CAAC4xB,aAAa;MACzC,IAAI,CAACC,WAAW,CAACx7B,IAAI,CAAE2J,MAAM,CAAC6xB,WAAW,CAAE;MAE3C,IAAI,CAACC,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,IAAI,CAACwB,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MAEnD,IAAI,CAAC/D,WAAW,GAAG1vB,MAAM,CAAC0vB,WAAW;MAErC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAkxC,kBAAA;AAAA,EApD+Bh0C,QAAQ;AAAAjzC,OAAA,CAAAinF,kBAAA,GAAAA,kBAAA;AAAA,IAwDnCC,mBAAmB,0BAAAoiD,WAAA;EAAAh+G,SAAA,CAAA47D,mBAAA,EAAAoiD,WAAA;EAAA,IAAAC,QAAA,GAAA/9G,YAAA,CAAA07D,mBAAA;EAExB,SAAAA,oBAAax3C,UAAU,EAAG;IAAA,IAAA85F,OAAA;IAAA1gI,eAAA,OAAAo+E,mBAAA;IAEzBsiD,OAAA,GAAAD,QAAA,CAAA/mI,IAAA;IAEAgnI,OAAA,CAAKx7B,qBAAqB,GAAG,IAAI;IAEjCw7B,OAAA,CAAKjnI,IAAI,GAAG,qBAAqB;IAEjCinI,OAAA,CAAK/jH,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;IAEpCkjH,OAAA,CAAKjyF,GAAG,GAAG,IAAI;IAEfiyF,OAAA,CAAK9xF,QAAQ,GAAG,IAAI;IACpB8xF,OAAA,CAAK7xF,iBAAiB,GAAG,GAAG;IAE5B6xF,OAAA,CAAK5xF,KAAK,GAAG,IAAI;IACjB4xF,OAAA,CAAK3xF,cAAc,GAAG,GAAG;IAEzB2xF,OAAA,CAAKlzF,QAAQ,GAAG,IAAIhwB,KAAK,CAAE,QAAQ,CAAE;IACrCkjH,OAAA,CAAKjzF,iBAAiB,GAAG,GAAG;IAC5BizF,OAAA,CAAKhxF,WAAW,GAAG,IAAI;IAEvBgxF,OAAA,CAAK/wF,WAAW,GAAG,IAAI;IAEvB+wF,OAAA,CAAK/xF,QAAQ,GAAG,IAAI;IAEpB+xF,OAAA,CAAK5wF,MAAM,GAAG,IAAI;IAClB4wF,OAAA,CAAK3wF,OAAO,GAAGtrC,iBAAiB;IAChCi8H,OAAA,CAAKzwF,YAAY,GAAG,CAAC;IACrBywF,OAAA,CAAKxwF,eAAe,GAAG,IAAI;IAE3BwwF,OAAA,CAAK3vF,SAAS,GAAG,KAAK;IACtB2vF,OAAA,CAAK1vF,kBAAkB,GAAG,CAAC;IAC3B0vF,OAAA,CAAKzvF,gBAAgB,GAAG,OAAO;IAC/ByvF,OAAA,CAAKxvF,iBAAiB,GAAG,OAAO;IAEhCwvF,OAAA,CAAKvvF,GAAG,GAAG,IAAI;IAEfuvF,OAAA,CAAK3zF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAA85F,OAAA;EAE9B;EAAClgI,YAAA,CAAA49E,mBAAA;IAAA1mF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAwsC,mBAAA,CAAA/mF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACZ,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAAC8xB,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACG,QAAQ,GAAGrxB,MAAM,CAACqxB,QAAQ;MAC/B,IAAI,CAACC,iBAAiB,GAAGtxB,MAAM,CAACsxB,iBAAiB;MAEjD,IAAI,CAACC,KAAK,GAAGvxB,MAAM,CAACuxB,KAAK;MACzB,IAAI,CAACC,cAAc,GAAGxxB,MAAM,CAACwxB,cAAc;MAE3C,IAAI,CAACvB,QAAQ,CAAC55B,IAAI,CAAE2J,MAAM,CAACiwB,QAAQ,CAAE;MACrC,IAAI,CAACkC,WAAW,GAAGnyB,MAAM,CAACmyB,WAAW;MACrC,IAAI,CAACjC,iBAAiB,GAAGlwB,MAAM,CAACkwB,iBAAiB;MAEjD,IAAI,CAACkC,WAAW,GAAGpyB,MAAM,CAACoyB,WAAW;MAErC,IAAI,CAAChB,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAACmB,MAAM,GAAGvyB,MAAM,CAACuyB,MAAM;MAC3B,IAAI,CAACC,OAAO,GAAGxyB,MAAM,CAACwyB,OAAO;MAC7B,IAAI,CAACE,YAAY,GAAG1yB,MAAM,CAAC0yB,YAAY;MACvC,IAAI,CAACC,eAAe,GAAG3yB,MAAM,CAAC2yB,eAAe;MAE7C,IAAI,CAACa,SAAS,GAAGxzB,MAAM,CAACwzB,SAAS;MACjC,IAAI,CAACC,kBAAkB,GAAGzzB,MAAM,CAACyzB,kBAAkB;MACnD,IAAI,CAACC,gBAAgB,GAAG1zB,MAAM,CAAC0zB,gBAAgB;MAC/C,IAAI,CAACC,iBAAiB,GAAG3zB,MAAM,CAAC2zB,iBAAiB;MAEjD,IAAI,CAACC,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAitC,mBAAA;AAAA,EAhFgCj0C,QAAQ;AAAAjzC,OAAA,CAAAknF,mBAAA,GAAAA,mBAAA;AAAA,IAoFpCK,kBAAkB,0BAAAkiD,WAAA;EAAAn+G,SAAA,CAAAi8D,kBAAA,EAAAkiD,WAAA;EAAA,IAAAC,QAAA,GAAAl+G,YAAA,CAAA+7D,kBAAA;EAEvB,SAAAA,mBAAa73C,UAAU,EAAG;IAAA,IAAAi6F,OAAA;IAAA7gI,eAAA,OAAAy+E,kBAAA;IAEzBoiD,OAAA,GAAAD,QAAA,CAAAlnI,IAAA;IAEAmnI,OAAA,CAAKn7B,oBAAoB,GAAG,IAAI;IAEhCm7B,OAAA,CAAKrhF,OAAO,GAAG;MAAE,QAAQ,EAAE;IAAG,CAAC;IAE/BqhF,OAAA,CAAKpnI,IAAI,GAAG,oBAAoB;IAEhConI,OAAA,CAAKlkH,KAAK,GAAG,IAAIa,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;IAEpCqjH,OAAA,CAAKnyF,MAAM,GAAG,IAAI;IAElBmyF,OAAA,CAAKpyF,GAAG,GAAG,IAAI;IAEfoyF,OAAA,CAAK7xF,OAAO,GAAG,IAAI;IACnB6xF,OAAA,CAAK5xF,SAAS,GAAG,CAAC;IAElB4xF,OAAA,CAAK3xF,SAAS,GAAG,IAAI;IACrB2xF,OAAA,CAAK1xF,aAAa,GAAG3kC,qBAAqB;IAC1Cq2H,OAAA,CAAKzxF,WAAW,GAAG,IAAIn8B,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAEtC4tH,OAAA,CAAKxxF,eAAe,GAAG,IAAI;IAC3BwxF,OAAA,CAAKvxF,iBAAiB,GAAG,CAAC;IAC1BuxF,OAAA,CAAKtxF,gBAAgB,GAAG,CAAC;IAEzBsxF,OAAA,CAAKlyF,QAAQ,GAAG,IAAI;IAEpBkyF,OAAA,CAAK5zF,WAAW,GAAG,KAAK;IAExB4zF,OAAA,CAAK1vF,GAAG,GAAG,IAAI;IAEf0vF,OAAA,CAAK9zF,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAi6F,OAAA;EAE9B;EAACrgI,YAAA,CAAAi+E,kBAAA;IAAA/mF,GAAA;IAAAE,KAAA,EAGD,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA6sC,kBAAA,CAAApnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACiiC,OAAO,GAAG;QAAE,QAAQ,EAAE;MAAG,CAAC;MAE/B,IAAI,CAAC7iC,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAE/B,IAAI,CAAC+xB,MAAM,GAAGnxB,MAAM,CAACmxB,MAAM;MAE3B,IAAI,CAACD,GAAG,GAAGlxB,MAAM,CAACkxB,GAAG;MAErB,IAAI,CAACO,OAAO,GAAGzxB,MAAM,CAACyxB,OAAO;MAC7B,IAAI,CAACC,SAAS,GAAG1xB,MAAM,CAAC0xB,SAAS;MAEjC,IAAI,CAACC,SAAS,GAAG3xB,MAAM,CAAC2xB,SAAS;MACjC,IAAI,CAACC,aAAa,GAAG5xB,MAAM,CAAC4xB,aAAa;MACzC,IAAI,CAACC,WAAW,CAACx7B,IAAI,CAAE2J,MAAM,CAAC6xB,WAAW,CAAE;MAE3C,IAAI,CAACC,eAAe,GAAG9xB,MAAM,CAAC8xB,eAAe;MAC7C,IAAI,CAACC,iBAAiB,GAAG/xB,MAAM,CAAC+xB,iBAAiB;MACjD,IAAI,CAACC,gBAAgB,GAAGhyB,MAAM,CAACgyB,gBAAgB;MAE/C,IAAI,CAACZ,QAAQ,GAAGpxB,MAAM,CAACoxB,QAAQ;MAE/B,IAAI,CAAC1B,WAAW,GAAG1vB,MAAM,CAAC0vB,WAAW;MAErC,IAAI,CAACkE,GAAG,GAAG5zB,MAAM,CAAC4zB,GAAG;MAErB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAstC,kBAAA;AAAA,EAvE+Bt0C,QAAQ;AAAAjzC,OAAA,CAAAunF,kBAAA,GAAAA,kBAAA;AAAA,IA2EnCE,kBAAkB,0BAAAmiD,kBAAA;EAAAt+G,SAAA,CAAAm8D,kBAAA,EAAAmiD,kBAAA;EAAA,IAAAC,QAAA,GAAAr+G,YAAA,CAAAi8D,kBAAA;EAEvB,SAAAA,mBAAa/3C,UAAU,EAAG;IAAA,IAAAo6F,OAAA;IAAAhhI,eAAA,OAAA2+E,kBAAA;IAEzBqiD,OAAA,GAAAD,QAAA,CAAArnI,IAAA;IAEAsnI,OAAA,CAAKh7B,oBAAoB,GAAG,IAAI;IAEhCg7B,OAAA,CAAKvnI,IAAI,GAAG,oBAAoB;IAEhCunI,OAAA,CAAK9lH,KAAK,GAAG,CAAC;IACd8lH,OAAA,CAAKpwF,QAAQ,GAAG,CAAC;IACjBowF,OAAA,CAAKnwF,OAAO,GAAG,CAAC;IAEhBmwF,OAAA,CAAKj0F,SAAS,CAAEnG,UAAU,CAAE;IAAC,OAAAo6F,OAAA;EAE9B;EAACxgI,YAAA,CAAAm+E,kBAAA;IAAAjnF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA+sC,kBAAA,CAAAtnF,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACrC,KAAK,GAAGqC,MAAM,CAACrC,KAAK;MACzB,IAAI,CAAC01B,QAAQ,GAAGrzB,MAAM,CAACqzB,QAAQ;MAC/B,IAAI,CAACC,OAAO,GAAGtzB,MAAM,CAACszB,OAAO;MAE7B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA8tC,kBAAA;AAAA,EA5B+BD,iBAAiB,GAgClD;AAAAxnF,OAAA,CAAAynF,kBAAA,GAAAA,kBAAA;AACA,SAASsiD,UAAUA,CAAE3zH,KAAK,EAAE8U,IAAI,EAAEiyD,EAAE,EAAG;EAEtC,IAAK6sD,YAAY,CAAE5zH,KAAK,CAAE,EAAG;IAE5B;IACA;IACA,OAAO,IAAIA,KAAK,CAACxP,WAAW,CAAEwP,KAAK,CAACm8C,QAAQ,CAAErnC,IAAI,EAAEiyD,EAAE,KAAKn4E,SAAS,GAAGm4E,EAAE,GAAG/mE,KAAK,CAAC9P,MAAM,CAAE,CAAE;EAE7F;EAEA,OAAO8P,KAAK,CAACvO,KAAK,CAAEqjB,IAAI,EAAEiyD,EAAE,CAAE;AAE/B;;AAEA;AACA,SAAS8sD,YAAYA,CAAE7zH,KAAK,EAAE7T,IAAI,EAAE2nI,UAAU,EAAG;EAEhD,IAAK,CAAE9zH,KAAK;EAAI;EACf,CAAE8zH,UAAU,IAAI9zH,KAAK,CAACxP,WAAW,KAAKrE,IAAI,EAAG,OAAO6T,KAAK;EAE1D,IAAK,OAAO7T,IAAI,CAAC6vD,iBAAiB,KAAK,QAAQ,EAAG;IAEjD,OAAO,IAAI7vD,IAAI,CAAE6T,KAAK,CAAE,CAAC,CAAC;EAE3B;;EAEA,OAAO0U,KAAK,CAAC3qB,SAAS,CAAC0H,KAAK,CAACrF,IAAI,CAAE4T,KAAK,CAAE,CAAC,CAAC;AAE7C;;AAEA,SAAS4zH,YAAYA,CAAEziI,MAAM,EAAG;EAE/B,OAAO4iI,WAAW,CAACC,MAAM,CAAE7iI,MAAM,CAAE,IAClC,EAAIA,MAAM,YAAY8iI,QAAQ,CAAE;AAElC;;AAEA;AACA,SAASC,gBAAgBA,CAAEC,KAAK,EAAG;EAElC,SAASC,WAAWA,CAAEjkI,CAAC,EAAEy4B,CAAC,EAAG;IAE5B,OAAOurG,KAAK,CAAEhkI,CAAC,CAAE,GAAGgkI,KAAK,CAAEvrG,CAAC,CAAE;EAE/B;EAEA,IAAMxnB,CAAC,GAAG+yH,KAAK,CAACjkI,MAAM;EACtB,IAAM1C,MAAM,GAAG,IAAIknB,KAAK,CAAEtT,CAAC,CAAE;EAC7B,KAAM,IAAIjR,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG3C,MAAM,CAAE2C,CAAC,CAAE,GAAGA,CAAC;EAEhD3C,MAAM,CAAC2xE,IAAI,CAAEi1D,WAAW,CAAE;EAE1B,OAAO5mI,MAAM;AAEd;;AAEA;AACA,SAAS6mI,WAAWA,CAAEznI,MAAM,EAAEigD,MAAM,EAAE3oC,KAAK,EAAG;EAE7C,IAAMowH,OAAO,GAAG1nI,MAAM,CAACsD,MAAM;EAC7B,IAAM1C,MAAM,GAAG,IAAIZ,MAAM,CAAC4D,WAAW,CAAE8jI,OAAO,CAAE;EAEhD,KAAM,IAAInkI,CAAC,GAAG,CAAC,EAAE4vB,SAAS,GAAG,CAAC,EAAEA,SAAS,KAAKu0G,OAAO,EAAE,EAAGnkI,CAAC,EAAG;IAE7D,IAAMokI,SAAS,GAAGrwH,KAAK,CAAE/T,CAAC,CAAE,GAAG08C,MAAM;IAErC,KAAM,IAAIjkB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKikB,MAAM,EAAE,EAAGjkB,CAAC,EAAG;MAErCp7B,MAAM,CAAEuyB,SAAS,EAAG,CAAE,GAAGnzB,MAAM,CAAE2nI,SAAS,GAAG3rG,CAAC,CAAE;IAEjD;EAED;EAEA,OAAOp7B,MAAM;AAEd;;AAEA;AACA,SAASgnI,WAAWA,CAAEC,QAAQ,EAAEN,KAAK,EAAEvnI,MAAM,EAAE8nI,iBAAiB,EAAG;EAElE,IAAIvkI,CAAC,GAAG,CAAC;IAAE/F,GAAG,GAAGqqI,QAAQ,CAAE,CAAC,CAAE;EAE9B,OAAQrqI,GAAG,KAAKwE,SAAS,IAAIxE,GAAG,CAAEsqI,iBAAiB,CAAE,KAAK9lI,SAAS,EAAG;IAErExE,GAAG,GAAGqqI,QAAQ,CAAEtkI,CAAC,EAAG,CAAE;EAEvB;EAEA,IAAK/F,GAAG,KAAKwE,SAAS,EAAG,OAAO,CAAC;;EAEjC,IAAItE,KAAK,GAAGF,GAAG,CAAEsqI,iBAAiB,CAAE;EACpC,IAAKpqI,KAAK,KAAKsE,SAAS,EAAG,OAAO,CAAC;;EAEnC,IAAK8lB,KAAK,CAACC,OAAO,CAAErqB,KAAK,CAAE,EAAG;IAE7B,GAAG;MAEFA,KAAK,GAAGF,GAAG,CAAEsqI,iBAAiB,CAAE;MAEhC,IAAKpqI,KAAK,KAAKsE,SAAS,EAAG;QAE1BulI,KAAK,CAACxkI,IAAI,CAAEvF,GAAG,CAAC2wD,IAAI,CAAE;QACtBnuD,MAAM,CAAC+C,IAAI,CAACoyF,KAAK,CAAEn1F,MAAM,EAAEtC,KAAK,CAAE,CAAC,CAAC;MAErC;;MAEAF,GAAG,GAAGqqI,QAAQ,CAAEtkI,CAAC,EAAG,CAAE;IAEvB,CAAC,QAAS/F,GAAG,KAAKwE,SAAS;EAE5B,CAAC,MAAM,IAAKtE,KAAK,CAAC0e,OAAO,KAAKpa,SAAS,EAAG;IAEzC;;IAEA,GAAG;MAEFtE,KAAK,GAAGF,GAAG,CAAEsqI,iBAAiB,CAAE;MAEhC,IAAKpqI,KAAK,KAAKsE,SAAS,EAAG;QAE1BulI,KAAK,CAACxkI,IAAI,CAAEvF,GAAG,CAAC2wD,IAAI,CAAE;QACtBzwD,KAAK,CAAC0e,OAAO,CAAEpc,MAAM,EAAEA,MAAM,CAACsD,MAAM,CAAE;MAEvC;MAEA9F,GAAG,GAAGqqI,QAAQ,CAAEtkI,CAAC,EAAG,CAAE;IAEvB,CAAC,QAAS/F,GAAG,KAAKwE,SAAS;EAE5B,CAAC,MAAM;IAEN;;IAEA,GAAG;MAEFtE,KAAK,GAAGF,GAAG,CAAEsqI,iBAAiB,CAAE;MAEhC,IAAKpqI,KAAK,KAAKsE,SAAS,EAAG;QAE1BulI,KAAK,CAACxkI,IAAI,CAAEvF,GAAG,CAAC2wD,IAAI,CAAE;QACtBnuD,MAAM,CAAC+C,IAAI,CAAErF,KAAK,CAAE;MAErB;MAEAF,GAAG,GAAGqqI,QAAQ,CAAEtkI,CAAC,EAAG,CAAE;IAEvB,CAAC,QAAS/F,GAAG,KAAKwE,SAAS;EAE5B;AAED;AAEA,SAAS+lI,OAAOA,CAAEC,UAAU,EAAEnkI,IAAI,EAAEokI,UAAU,EAAEC,QAAQ,EAAEC,GAAG,GAAG,EAAE,EAAG;EAEpE,IAAMC,IAAI,GAAGJ,UAAU,CAACvuH,KAAK,EAAE;EAE/B2uH,IAAI,CAACvkI,IAAI,GAAGA,IAAI;EAEhB,IAAMwkI,MAAM,GAAG,EAAE;EAEjB,KAAM,IAAI9kI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6kI,IAAI,CAACC,MAAM,CAAC/kI,MAAM,EAAE,EAAGC,CAAC,EAAG;IAE/C,IAAM+kI,KAAK,GAAGF,IAAI,CAACC,MAAM,CAAE9kI,CAAC,CAAE;IAC9B,IAAMglI,SAAS,GAAGD,KAAK,CAACE,YAAY,EAAE;IAEtC,IAAMjB,KAAK,GAAG,EAAE;IAChB,IAAMvnI,MAAM,GAAG,EAAE;IAEjB,KAAM,IAAIg8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGssG,KAAK,CAACf,KAAK,CAACjkI,MAAM,EAAE,EAAG04B,CAAC,EAAG;MAE/C,IAAMoyB,KAAK,GAAGk6E,KAAK,CAACf,KAAK,CAAEvrG,CAAC,CAAE,GAAGmsG,GAAG;MAEpC,IAAK/5E,KAAK,GAAG65E,UAAU,IAAI75E,KAAK,IAAI85E,QAAQ,EAAG;MAE/CX,KAAK,CAACxkI,IAAI,CAAEulI,KAAK,CAACf,KAAK,CAAEvrG,CAAC,CAAE,CAAE;MAE9B,KAAM,IAAIizD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGs5C,SAAS,EAAE,EAAGt5C,CAAC,EAAG;QAEtCjvF,MAAM,CAAC+C,IAAI,CAAEulI,KAAK,CAACtoI,MAAM,CAAEg8B,CAAC,GAAGusG,SAAS,GAAGt5C,CAAC,CAAE,CAAE;MAEjD;IAED;IAEA,IAAKs4C,KAAK,CAACjkI,MAAM,KAAK,CAAC,EAAG;IAE1BglI,KAAK,CAACf,KAAK,GAAGN,YAAY,CAAEM,KAAK,EAAEe,KAAK,CAACf,KAAK,CAAC3jI,WAAW,CAAE;IAC5D0kI,KAAK,CAACtoI,MAAM,GAAGinI,YAAY,CAAEjnI,MAAM,EAAEsoI,KAAK,CAACtoI,MAAM,CAAC4D,WAAW,CAAE;IAE/DykI,MAAM,CAACtlI,IAAI,CAAEulI,KAAK,CAAE;EAErB;EAEAF,IAAI,CAACC,MAAM,GAAGA,MAAM;;EAEpB;;EAEA,IAAII,YAAY,GAAG7wG,QAAQ;EAE3B,KAAM,IAAIr0B,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6kI,IAAI,CAACC,MAAM,CAAC/kI,MAAM,EAAE,EAAGC,IAAC,EAAG;IAE/C,IAAKklI,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAE9kI,IAAC,CAAE,CAACgkI,KAAK,CAAE,CAAC,CAAE,EAAG;MAEjDkB,YAAY,GAAGL,IAAI,CAACC,MAAM,CAAE9kI,IAAC,CAAE,CAACgkI,KAAK,CAAE,CAAC,CAAE;IAE3C;EAED;;EAEA;;EAEA,KAAM,IAAIhkI,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG6kI,IAAI,CAACC,MAAM,CAAC/kI,MAAM,EAAE,EAAGC,IAAC,EAAG;IAE/C6kI,IAAI,CAACC,MAAM,CAAE9kI,IAAC,CAAE,CAACguG,KAAK,CAAE,CAAE,CAAC,GAAGk3B,YAAY,CAAE;EAE7C;EAEAL,IAAI,CAACM,aAAa,EAAE;EAEpB,OAAON,IAAI;AAEZ;AAEA,SAASO,gBAAgBA,CAAEC,UAAU,EAAEC,cAAc,GAAG,CAAC,EAAEC,aAAa,GAAGF,UAAU,EAAET,GAAG,GAAG,EAAE,EAAG;EAEjG,IAAKA,GAAG,IAAI,CAAC,EAAGA,GAAG,GAAG,EAAE;EAExB,IAAMY,SAAS,GAAGD,aAAa,CAACT,MAAM,CAAC/kI,MAAM;EAC7C,IAAM0lI,aAAa,GAAGH,cAAc,GAAGV,GAAG;;EAE1C;EAAA,IAAAc,KAAA,YAAAA,MAAA,EACuC;IAEtC,IAAMC,cAAc,GAAGJ,aAAa,CAACT,MAAM,CAAE9kI,CAAC,CAAE;IAChD,IAAM4lI,kBAAkB,GAAGD,cAAc,CAACE,aAAa;;IAEvD;IACA,IAAKD,kBAAkB,KAAK,MAAM,IAAIA,kBAAkB,KAAK,QAAQ;;IAErE;IACA,IAAME,WAAW,GAAGT,UAAU,CAACP,MAAM,CAACiB,IAAI,CAAE,UAAWhB,KAAK,EAAG;MAE9D,OAAOA,KAAK,CAACzkI,IAAI,KAAKqlI,cAAc,CAACrlI,IAAI,IACrCykI,KAAK,CAACc,aAAa,KAAKD,kBAAkB;IAE/C,CAAC,CAAE;IAEH,IAAKE,WAAW,KAAKrnI,SAAS;IAE9B,IAAIunI,eAAe,GAAG,CAAC;IACvB,IAAMC,kBAAkB,GAAGN,cAAc,CAACV,YAAY,EAAE;IAExD,IAAKU,cAAc,CAACO,iBAAiB,CAACC,yCAAyC,EAAG;MAEjFH,eAAe,GAAGC,kBAAkB,GAAG,CAAC;IAEzC;IAEA,IAAIG,YAAY,GAAG,CAAC;IACpB,IAAMC,eAAe,GAAGP,WAAW,CAACb,YAAY,EAAE;IAElD,IAAKa,WAAW,CAACI,iBAAiB,CAACC,yCAAyC,EAAG;MAE9EC,YAAY,GAAGC,eAAe,GAAG,CAAC;IAEnC;IAEA,IAAM9wD,SAAS,GAAGowD,cAAc,CAAC3B,KAAK,CAACjkI,MAAM,GAAG,CAAC;IACjD,IAAIumI,cAAc;;IAElB;IACA,IAAKb,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAE,CAAC,CAAE,EAAG;MAEjD;MACA,IAAMuC,UAAU,GAAGP,eAAe;MAClC,IAAMQ,QAAQ,GAAGP,kBAAkB,GAAGD,eAAe;MACrDM,cAAc,GAAG9C,UAAU,CAAEmC,cAAc,CAAClpI,MAAM,EAAE8pI,UAAU,EAAEC,QAAQ,CAAE;IAE3E,CAAC,MAAM,IAAKf,aAAa,IAAIE,cAAc,CAAC3B,KAAK,CAAEzuD,SAAS,CAAE,EAAG;MAEhE;MACA,IAAMgxD,WAAU,GAAGhxD,SAAS,GAAG0wD,kBAAkB,GAAGD,eAAe;MACnE,IAAMQ,SAAQ,GAAGD,WAAU,GAAGN,kBAAkB,GAAGD,eAAe;MAClEM,cAAc,GAAG9C,UAAU,CAAEmC,cAAc,CAAClpI,MAAM,EAAE8pI,WAAU,EAAEC,SAAQ,CAAE;IAE3E,CAAC,MAAM;MAEN;MACA,IAAMC,WAAW,GAAGd,cAAc,CAACO,iBAAiB,EAAE;MACtD,IAAMK,YAAU,GAAGP,eAAe;MAClC,IAAMQ,UAAQ,GAAGP,kBAAkB,GAAGD,eAAe;MACrDS,WAAW,CAACC,QAAQ,CAAEjB,aAAa,CAAE;MACrCa,cAAc,GAAG9C,UAAU,CAAEiD,WAAW,CAACE,YAAY,EAAEJ,YAAU,EAAEC,UAAQ,CAAE;IAE9E;;IAEA;IACA,IAAKZ,kBAAkB,KAAK,YAAY,EAAG;MAE1C,IAAMgB,aAAa,GAAG,IAAI56G,UAAU,EAAE,CAACrT,SAAS,CAAE2tH,cAAc,CAAE,CAACnxH,SAAS,EAAE,CAAC4Y,SAAS,EAAE;MAC1F64G,aAAa,CAAC/tH,OAAO,CAAEytH,cAAc,CAAE;IAExC;;IAEA;;IAEA,IAAMO,QAAQ,GAAGf,WAAW,CAAC9B,KAAK,CAACjkI,MAAM;IACzC,KAAM,IAAI04B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGouG,QAAQ,EAAE,EAAGpuG,CAAC,EAAG;MAErC,IAAMquG,UAAU,GAAGruG,CAAC,GAAG4tG,eAAe,GAAGD,YAAY;MAErD,IAAKR,kBAAkB,KAAK,YAAY,EAAG;QAE1C;QACA55G,UAAU,CAAC6E,uBAAuB,CACjCi1G,WAAW,CAACrpI,MAAM,EAClBqqI,UAAU,EACVR,cAAc,EACd,CAAC,EACDR,WAAW,CAACrpI,MAAM,EAClBqqI,UAAU,CACV;MAEF,CAAC,MAAM;QAEN,IAAMC,QAAQ,GAAGV,eAAe,GAAGD,YAAY,GAAG,CAAC;;QAEnD;QACA,KAAM,IAAI16C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGq7C,QAAQ,EAAE,EAAGr7C,CAAC,EAAG;UAErCo6C,WAAW,CAACrpI,MAAM,CAAEqqI,UAAU,GAAGp7C,CAAC,CAAE,IAAI46C,cAAc,CAAE56C,CAAC,CAAE;QAE5D;MAED;IAED;EAED,CAAC;EA3GD,KAAM,IAAI1rF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwlI,SAAS,EAAE,EAAGxlI,CAAC;IAAA,IAAAgnI,IAAA,GAAAtB,KAAA;IAAA,IAAAsB,IAAA,iBAMqC;EAAS;EAuGlF3B,UAAU,CAAC4B,SAAS,GAAG16H,0BAA0B;EAEjD,OAAO84H,UAAU;AAElB;AAEA,IAAI6B,cAAc,GAAG,aAAavtI,MAAM,CAAC2b,MAAM,CAAC;EAC/C7U,SAAS,EAAE,IAAI;EACf+iI,UAAU,EAAEA,UAAU;EACtBE,YAAY,EAAEA,YAAY;EAC1BD,YAAY,EAAEA,YAAY;EAC1BM,gBAAgB,EAAEA,gBAAgB;EAClCG,WAAW,EAAEA,WAAW;EACxBG,WAAW,EAAEA,WAAW;EACxBG,OAAO,EAAEA,OAAO;EAChBY,gBAAgB,EAAEA;AACnB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA3rI,OAAA,CAAAytI,cAAA,GAAAA,cAAA;AAAA,IAqBMC,WAAW;EAEhB,SAAAA,YAAaC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAApkI,eAAA,OAAA4kI,WAAA;IAEzE,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACG,YAAY,GAAG,CAAC;IAErB,IAAI,CAACZ,YAAY,GAAGA,YAAY,KAAKloI,SAAS,GAC7CkoI,YAAY,GAAG,IAAIU,YAAY,CAAChnI,WAAW,CAAEinI,UAAU,CAAE;IAC1D,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACrC,SAAS,GAAGsC,UAAU;IAE3B,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;EAE3B;EAAC1kI,YAAA,CAAAokI,WAAA;IAAAltI,GAAA;IAAAE,KAAA,EAED,SAAAusI,SAAU90H,CAAC,EAAG;MAEb,IAAM81H,EAAE,GAAG,IAAI,CAACN,kBAAkB;MAClC,IAAIx8F,EAAE,GAAG,IAAI,CAAC28F,YAAY;QACzB9rG,EAAE,GAAGisG,EAAE,CAAE98F,EAAE,CAAE;QACbpP,EAAE,GAAGksG,EAAE,CAAE98F,EAAE,GAAG,CAAC,CAAE;MAElB+8F,iBAAiB,EAAE;QAElBC,IAAI,EAAE;UAEL,IAAIlmG,KAAK;UAETmmG,WAAW,EAAE;YAEZ;YACA;YACA;YACA;YACAC,YAAY,EAAE,IAAK,EAAIl2H,CAAC,GAAG6pB,EAAE,CAAE,EAAG;cAEjC,KAAM,IAAIssG,QAAQ,GAAGn9F,EAAE,GAAG,CAAC,IAAM;gBAEhC,IAAKnP,EAAE,KAAKh9B,SAAS,EAAG;kBAEvB,IAAKmT,CAAC,GAAG4pB,EAAE,EAAG,MAAMssG,YAAY;;kBAEhC;;kBAEAl9F,EAAE,GAAG88F,EAAE,CAAC3nI,MAAM;kBACd,IAAI,CAACwnI,YAAY,GAAG38F,EAAE;kBACtB,OAAO,IAAI,CAACo9F,gBAAgB,CAAEp9F,EAAE,GAAG,CAAC,CAAE;gBAEvC;gBAEA,IAAKA,EAAE,KAAKm9F,QAAQ,EAAG,MAAM,CAAC;;gBAE9BvsG,EAAE,GAAGC,EAAE;gBACPA,EAAE,GAAGisG,EAAE,CAAE,EAAG98F,EAAE,CAAE;gBAEhB,IAAKh5B,CAAC,GAAG6pB,EAAE,EAAG;kBAEb;kBACA,MAAMmsG,IAAI;gBAEX;cAED;;cAEA;cACAlmG,KAAK,GAAGgmG,EAAE,CAAC3nI,MAAM;cACjB,MAAM8nI,WAAW;YAElB;;YAEA;YACA;YACA,IAAK,EAAIj2H,CAAC,IAAI4pB,EAAE,CAAE,EAAG;cAEpB;;cAEA,IAAMysG,QAAQ,GAAGP,EAAE,CAAE,CAAC,CAAE;cAExB,IAAK91H,CAAC,GAAGq2H,QAAQ,EAAG;gBAEnBr9F,EAAE,GAAG,CAAC,CAAC,CAAC;gBACRpP,EAAE,GAAGysG,QAAQ;cAEd;;cAEA;;cAEA,KAAM,IAAIF,SAAQ,GAAGn9F,EAAE,GAAG,CAAC,IAAM;gBAEhC,IAAKpP,EAAE,KAAK/8B,SAAS,EAAG;kBAEvB;;kBAEA,IAAI,CAAC8oI,YAAY,GAAG,CAAC;kBACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAC,CAAE;gBAElC;gBAEA,IAAKp9F,EAAE,KAAKm9F,SAAQ,EAAG,MAAM,CAAC;;gBAE9BtsG,EAAE,GAAGD,EAAE;gBACPA,EAAE,GAAGksG,EAAE,CAAE,EAAG98F,EAAE,GAAG,CAAC,CAAE;gBAEpB,IAAKh5B,CAAC,IAAI4pB,EAAE,EAAG;kBAEd;kBACA,MAAMosG,IAAI;gBAEX;cAED;;cAEA;cACAlmG,KAAK,GAAGkJ,EAAE;cACVA,EAAE,GAAG,CAAC;cACN,MAAMi9F,WAAW;YAElB;;YAEA;;YAEA,MAAMF,iBAAiB;UAExB,CAAC,CAAC;;UAEF;;UAEA,OAAQ/8F,EAAE,GAAGlJ,KAAK,EAAG;YAEpB,IAAMwmG,GAAG,GAAKt9F,EAAE,GAAGlJ,KAAK,KAAO,CAAC;YAEhC,IAAK9vB,CAAC,GAAG81H,EAAE,CAAEQ,GAAG,CAAE,EAAG;cAEpBxmG,KAAK,GAAGwmG,GAAG;YAEZ,CAAC,MAAM;cAENt9F,EAAE,GAAGs9F,GAAG,GAAG,CAAC;YAEb;UAED;UAEAzsG,EAAE,GAAGisG,EAAE,CAAE98F,EAAE,CAAE;UACbpP,EAAE,GAAGksG,EAAE,CAAE98F,EAAE,GAAG,CAAC,CAAE;;UAEjB;;UAEA,IAAKpP,EAAE,KAAK/8B,SAAS,EAAG;YAEvB,IAAI,CAAC8oI,YAAY,GAAG,CAAC;YACrB,OAAO,IAAI,CAACS,gBAAgB,CAAE,CAAC,CAAE;UAElC;UAEA,IAAKvsG,EAAE,KAAKh9B,SAAS,EAAG;YAEvBmsC,EAAE,GAAG88F,EAAE,CAAC3nI,MAAM;YACd,IAAI,CAACwnI,YAAY,GAAG38F,EAAE;YACtB,OAAO,IAAI,CAACo9F,gBAAgB,CAAEp9F,EAAE,GAAG,CAAC,CAAE;UAEvC;QAED,CAAC,CAAC;;QAEF,IAAI,CAAC28F,YAAY,GAAG38F,EAAE;QAEtB,IAAI,CAACu9F,gBAAgB,CAAEv9F,EAAE,EAAEpP,EAAE,EAAEC,EAAE,CAAE;MAEpC,CAAC,CAAC;;MAEF,OAAO,IAAI,CAAC2sG,YAAY,CAAEx9F,EAAE,EAAEpP,EAAE,EAAE5pB,CAAC,EAAE6pB,EAAE,CAAE;IAE1C;EAAC;IAAAxhC,GAAA;IAAAE,KAAA,EAED,SAAAkuI,aAAA,EAAe;MAEd,OAAO,IAAI,CAACb,QAAQ,IAAI,IAAI,CAACC,gBAAgB;IAE9C;EAAC;IAAAxtI,GAAA;IAAAE,KAAA,EAED,SAAA6tI,iBAAkBv4H,KAAK,EAAG;MAEzB;;MAEA,IAAMpS,MAAM,GAAG,IAAI,CAACspI,YAAY;QAC/BlqI,MAAM,GAAG,IAAI,CAAC4qI,YAAY;QAC1B3qF,MAAM,GAAG,IAAI,CAACsoF,SAAS;QACvBpsH,MAAM,GAAGnJ,KAAK,GAAGitC,MAAM;MAExB,KAAM,IAAI18C,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;QAErC3C,MAAM,CAAE2C,CAAC,CAAE,GAAGvD,MAAM,CAAEmc,MAAM,GAAG5Y,CAAC,CAAE;MAEnC;MAEA,OAAO3C,MAAM;IAEd;;IAEA;EAAA;IAAApD,GAAA;IAAAE,KAAA,EAEA,SAAAiuI,aAAA,CAAc;IAAA,EAAsB;MAEnC,MAAM,IAAItqI,KAAK,CAAE,yBAAyB,CAAE;MAC5C;IAED;EAAC;IAAA7D,GAAA;IAAAE,KAAA,EAED,SAAAguI,iBAAA,CAAkB;IAAA,EAAmB;;MAEpC;IAAA;EAEA;EAAA,OAAAhB,WAAA;AAAA;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AANA1tI,OAAA,CAAA0tI,WAAA,GAAAA,WAAA;AAAA,IAQMmB,gBAAgB,0BAAAC,YAAA;EAAAxjH,SAAA,CAAAujH,gBAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAvjH,YAAA,CAAAqjH,gBAAA;EAErB,SAAAA,iBAAalB,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAA,IAAA8B,OAAA;IAAAlmI,eAAA,OAAA+lI,gBAAA;IAEzEG,OAAA,GAAAD,SAAA,CAAAvsI,IAAA,OAAOmrI,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;IAEjE8B,OAAA,CAAKC,WAAW,GAAG,CAAE,CAAC;IACtBD,OAAA,CAAKE,WAAW,GAAG,CAAE,CAAC;IACtBF,OAAA,CAAKG,WAAW,GAAG,CAAE,CAAC;IACtBH,OAAA,CAAKI,WAAW,GAAG,CAAE,CAAC;IAEtBJ,OAAA,CAAKhB,gBAAgB,GAAG;MAEvBqB,WAAW,EAAE38H,mBAAmB;MAChC48H,SAAS,EAAE58H;IAEZ,CAAC;IAAC,OAAAs8H,OAAA;EAEH;EAAC1lI,YAAA,CAAAulI,gBAAA;IAAAruI,GAAA;IAAAE,KAAA,EAED,SAAAguI,iBAAkBv9F,EAAE,EAAEpP,EAAE,EAAEC,EAAE,EAAG;MAE9B,IAAMisG,EAAE,GAAG,IAAI,CAACN,kBAAkB;MAClC,IAAI4B,KAAK,GAAGp+F,EAAE,GAAG,CAAC;QACjBq+F,KAAK,GAAGr+F,EAAE,GAAG,CAAC;QAEds+F,KAAK,GAAGxB,EAAE,CAAEsB,KAAK,CAAE;QACnBG,KAAK,GAAGzB,EAAE,CAAEuB,KAAK,CAAE;MAEpB,IAAKC,KAAK,KAAKzqI,SAAS,EAAG;QAE1B,QAAS,IAAI,CAAC4pI,YAAY,EAAE,CAACS,WAAW;UAEvC,KAAK18H,eAAe;YAEnB;YACA48H,KAAK,GAAGp+F,EAAE;YACVs+F,KAAK,GAAG,CAAC,GAAG1tG,EAAE,GAAGC,EAAE;YAEnB;UAED,KAAKpvB,gBAAgB;YAEpB;YACA28H,KAAK,GAAGtB,EAAE,CAAC3nI,MAAM,GAAG,CAAC;YACrBmpI,KAAK,GAAG1tG,EAAE,GAAGksG,EAAE,CAAEsB,KAAK,CAAE,GAAGtB,EAAE,CAAEsB,KAAK,GAAG,CAAC,CAAE;YAE1C;UAED;YAAS;;YAER;YACAA,KAAK,GAAGp+F,EAAE;YACVs+F,KAAK,GAAGztG,EAAE;QAAC;MAId;MAEA,IAAK0tG,KAAK,KAAK1qI,SAAS,EAAG;QAE1B,QAAS,IAAI,CAAC4pI,YAAY,EAAE,CAACU,SAAS;UAErC,KAAK38H,eAAe;YAEnB;YACA68H,KAAK,GAAGr+F,EAAE;YACVu+F,KAAK,GAAG,CAAC,GAAG1tG,EAAE,GAAGD,EAAE;YAEnB;UAED,KAAKnvB,gBAAgB;YAEpB;YACA48H,KAAK,GAAG,CAAC;YACTE,KAAK,GAAG1tG,EAAE,GAAGisG,EAAE,CAAE,CAAC,CAAE,GAAGA,EAAE,CAAE,CAAC,CAAE;YAE9B;UAED;YAAS;;YAER;YACAuB,KAAK,GAAGr+F,EAAE,GAAG,CAAC;YACdu+F,KAAK,GAAG3tG,EAAE;QAAC;MAId;MAEA,IAAM4tG,MAAM,GAAG,CAAE3tG,EAAE,GAAGD,EAAE,IAAK,GAAG;QAC/BkhB,MAAM,GAAG,IAAI,CAACsoF,SAAS;MAExB,IAAI,CAAC0D,WAAW,GAAGU,MAAM,IAAK5tG,EAAE,GAAG0tG,KAAK,CAAE;MAC1C,IAAI,CAACN,WAAW,GAAGQ,MAAM,IAAKD,KAAK,GAAG1tG,EAAE,CAAE;MAC1C,IAAI,CAACktG,WAAW,GAAGK,KAAK,GAAGtsF,MAAM;MACjC,IAAI,CAACmsF,WAAW,GAAGI,KAAK,GAAGvsF,MAAM;IAElC;EAAC;IAAAziD,GAAA;IAAAE,KAAA,EAED,SAAAiuI,aAAcx9F,EAAE,EAAEpP,EAAE,EAAE5pB,CAAC,EAAE6pB,EAAE,EAAG;MAE7B,IAAMp+B,MAAM,GAAG,IAAI,CAACspI,YAAY;QAC/BlqI,MAAM,GAAG,IAAI,CAAC4qI,YAAY;QAC1B3qF,MAAM,GAAG,IAAI,CAACsoF,SAAS;QAEvBlQ,EAAE,GAAGlqF,EAAE,GAAG8R,MAAM;QAAG2sF,EAAE,GAAGvU,EAAE,GAAGp4E,MAAM;QACnC4sF,EAAE,GAAG,IAAI,CAACX,WAAW;QAAGY,EAAE,GAAG,IAAI,CAACV,WAAW;QAC7CW,EAAE,GAAG,IAAI,CAACd,WAAW;QAAEe,EAAE,GAAG,IAAI,CAACb,WAAW;QAE5ChpH,CAAC,GAAG,CAAEhO,CAAC,GAAG4pB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAC5BksG,EAAE,GAAG9nH,CAAC,GAAGA,CAAC;QACV8pH,GAAG,GAAGhC,EAAE,GAAG9nH,CAAC;;MAEb;;MAEA,IAAM+pH,EAAE,GAAG,CAAEH,EAAE,GAAGE,GAAG,GAAG,CAAC,GAAGF,EAAE,GAAG9B,EAAE,GAAG8B,EAAE,GAAG5pH,CAAC;MAC5C,IAAMob,EAAE,GAAG,CAAE,CAAC,GAAGwuG,EAAE,IAAKE,GAAG,GAAG,CAAE,CAAE,GAAG,GAAG,CAAC,GAAGF,EAAE,IAAK9B,EAAE,GAAG,CAAE,CAAE,GAAG,GAAG8B,EAAE,IAAK5pH,CAAC,GAAG,CAAC;MAC9E,IAAMoN,EAAE,GAAG,CAAE,CAAE,CAAC,GAAGy8G,EAAE,IAAKC,GAAG,GAAG,CAAE,GAAG,GAAGD,EAAE,IAAK/B,EAAE,GAAG,GAAG,GAAG9nH,CAAC;MAC3D,IAAMgqH,EAAE,GAAGH,EAAE,GAAGC,GAAG,GAAGD,EAAE,GAAG/B,EAAE;;MAE7B;;MAEA,KAAM,IAAI1nI,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;QAErC3C,MAAM,CAAE2C,CAAC,CAAE,GACT2pI,EAAE,GAAGltI,MAAM,CAAE6sI,EAAE,GAAGtpI,CAAC,CAAE,GACrBg7B,EAAE,GAAGv+B,MAAM,CAAE4sI,EAAE,GAAGrpI,CAAC,CAAE,GACrBgtB,EAAE,GAAGvwB,MAAM,CAAEq4H,EAAE,GAAG90H,CAAC,CAAE,GACrB4pI,EAAE,GAAGntI,MAAM,CAAE8sI,EAAE,GAAGvpI,CAAC,CAAE;MAExB;MAEA,OAAO3C,MAAM;IAEd;EAAC;EAAA,OAAAirI,gBAAA;AAAA,EAtI6BnB,WAAW;AAAA1tI,OAAA,CAAA6uI,gBAAA,GAAAA,gBAAA;AAAA,IA0IpCuB,iBAAiB,0BAAAC,aAAA;EAAA/kH,SAAA,CAAA8kH,iBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA9kH,YAAA,CAAA4kH,iBAAA;EAEtB,SAAAA,kBAAazC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAApkI,eAAA,OAAAsnI,iBAAA;IAAA,OAAAE,SAAA,CAAA9tI,IAAA,OAElEmrI,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAAC5jI,YAAA,CAAA8mI,iBAAA;IAAA5vI,GAAA;IAAAE,KAAA,EAED,SAAAiuI,aAAcx9F,EAAE,EAAEpP,EAAE,EAAE5pB,CAAC,EAAE6pB,EAAE,EAAG;MAE7B,IAAMp+B,MAAM,GAAG,IAAI,CAACspI,YAAY;QAC/BlqI,MAAM,GAAG,IAAI,CAAC4qI,YAAY;QAC1B3qF,MAAM,GAAG,IAAI,CAACsoF,SAAS;QAEvBgF,OAAO,GAAGp/F,EAAE,GAAG8R,MAAM;QACrButF,OAAO,GAAGD,OAAO,GAAGttF,MAAM;QAE1BwtF,OAAO,GAAG,CAAEt4H,CAAC,GAAG4pB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;QAClC2uG,OAAO,GAAG,CAAC,GAAGD,OAAO;MAEtB,KAAM,IAAIlqI,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;QAErC3C,MAAM,CAAE2C,CAAC,CAAE,GACTvD,MAAM,CAAEwtI,OAAO,GAAGjqI,CAAC,CAAE,GAAGmqI,OAAO,GAC/B1tI,MAAM,CAAEutI,OAAO,GAAGhqI,CAAC,CAAE,GAAGkqI,OAAO;MAElC;MAEA,OAAO7sI,MAAM;IAEd;EAAC;EAAA,OAAAwsI,iBAAA;AAAA,EA9B8B1C,WAAW;AAkC3C;AACA;AACA;AACA;AACA;AAJA1tI,OAAA,CAAAowI,iBAAA,GAAAA,iBAAA;AAAA,IAMMO,mBAAmB,0BAAAC,aAAA;EAAAtlH,SAAA,CAAAqlH,mBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAArlH,YAAA,CAAAmlH,mBAAA;EAExB,SAAAA,oBAAahD,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAApkI,eAAA,OAAA6nI,mBAAA;IAAA,OAAAE,SAAA,CAAAruI,IAAA,OAElEmrI,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAAC5jI,YAAA,CAAAqnI,mBAAA;IAAAnwI,GAAA;IAAAE,KAAA,EAED,SAAAiuI,aAAcx9F,EAAE,CAAC,kBAAmB;MAEnC,OAAO,IAAI,CAACo9F,gBAAgB,CAAEp9F,EAAE,GAAG,CAAC,CAAE;IAEvC;EAAC;EAAA,OAAAw/F,mBAAA;AAAA,EAZgCjD,WAAW;AAAA1tI,OAAA,CAAA2wI,mBAAA,GAAAA,mBAAA;AAAA,IAgBvCG,aAAa;EAElB,SAAAA,cAAajqI,IAAI,EAAE0jI,KAAK,EAAEvnI,MAAM,EAAE+tI,aAAa,EAAG;IAAAjoI,eAAA,OAAAgoI,aAAA;IAEjD,IAAKjqI,IAAI,KAAK7B,SAAS,EAAG,MAAM,IAAIX,KAAK,CAAE,8CAA8C,CAAE;IAC3F,IAAKkmI,KAAK,KAAKvlI,SAAS,IAAIulI,KAAK,CAACjkI,MAAM,KAAK,CAAC,EAAG,MAAM,IAAIjC,KAAK,CAAE,mDAAmD,GAAGwC,IAAI,CAAE;IAE9H,IAAI,CAACA,IAAI,GAAGA,IAAI;IAEhB,IAAI,CAAC0jI,KAAK,GAAGN,YAAY,CAAEM,KAAK,EAAE,IAAI,CAACyG,cAAc,CAAE;IACvD,IAAI,CAAChuI,MAAM,GAAGinI,YAAY,CAAEjnI,MAAM,EAAE,IAAI,CAACiuI,eAAe,CAAE;IAE1D,IAAI,CAACC,gBAAgB,CAAEH,aAAa,IAAI,IAAI,CAACI,oBAAoB,CAAE;EAEpE;;EAEA;EACA;EAAA7nI,YAAA,CAAAwnI,aAAA;IAAAtwI,GAAA;IAAAE,KAAA,EAwCA,SAAA0wI,iCAAkCxtI,MAAM,EAAG;MAE1C,OAAO,IAAI+sI,mBAAmB,CAAE,IAAI,CAACpG,KAAK,EAAE,IAAI,CAACvnI,MAAM,EAAE,IAAI,CAACwoI,YAAY,EAAE,EAAE5nI,MAAM,CAAE;IAEvF;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAA2wI,+BAAgCztI,MAAM,EAAG;MAExC,OAAO,IAAIwsI,iBAAiB,CAAE,IAAI,CAAC7F,KAAK,EAAE,IAAI,CAACvnI,MAAM,EAAE,IAAI,CAACwoI,YAAY,EAAE,EAAE5nI,MAAM,CAAE;IAErF;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAA4wI,+BAAgC1tI,MAAM,EAAG;MAExC,OAAO,IAAIirI,gBAAgB,CAAE,IAAI,CAACtE,KAAK,EAAE,IAAI,CAACvnI,MAAM,EAAE,IAAI,CAACwoI,YAAY,EAAE,EAAE5nI,MAAM,CAAE;IAEpF;EAAC;IAAApD,GAAA;IAAAE,KAAA,EAED,SAAAwwI,iBAAkBH,aAAa,EAAG;MAEjC,IAAIQ,aAAa;MAEjB,QAASR,aAAa;QAErB,KAAKx+H,mBAAmB;UAEvBg/H,aAAa,GAAG,IAAI,CAACH,gCAAgC;UAErD;QAED,KAAK5+H,iBAAiB;UAErB++H,aAAa,GAAG,IAAI,CAACF,8BAA8B;UAEnD;QAED,KAAK5+H,iBAAiB;UAErB8+H,aAAa,GAAG,IAAI,CAACD,8BAA8B;UAEnD;MAAM;MAIR,IAAKC,aAAa,KAAKvsI,SAAS,EAAG;QAElC,IAAMwvG,OAAO,GAAG,gCAAgC,GAC/C,IAAI,CAAC43B,aAAa,GAAG,wBAAwB,GAAG,IAAI,CAACvlI,IAAI;QAE1D,IAAK,IAAI,CAAC4lI,iBAAiB,KAAKznI,SAAS,EAAG;UAE3C;UACA,IAAK+rI,aAAa,KAAK,IAAI,CAACI,oBAAoB,EAAG;YAElD,IAAI,CAACD,gBAAgB,CAAE,IAAI,CAACC,oBAAoB,CAAE;UAEnD,CAAC,MAAM;YAEN,MAAM,IAAI9sI,KAAK,CAAEmwG,OAAO,CAAE,CAAC,CAAC;UAE7B;QAED;;QAEAt5F,OAAO,CAACC,IAAI,CAAE,sBAAsB,EAAEq5F,OAAO,CAAE;QAC/C,OAAO,IAAI;MAEZ;MAEA,IAAI,CAACi4B,iBAAiB,GAAG8E,aAAa;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAA/wI,GAAA;IAAAE,KAAA,EAED,SAAA8wI,iBAAA,EAAmB;MAElB,QAAS,IAAI,CAAC/E,iBAAiB;QAE9B,KAAK,IAAI,CAAC2E,gCAAgC;UAEzC,OAAO7+H,mBAAmB;QAE3B,KAAK,IAAI,CAAC8+H,8BAA8B;UAEvC,OAAO7+H,iBAAiB;QAEzB,KAAK,IAAI,CAAC8+H,8BAA8B;UAEvC,OAAO7+H,iBAAiB;MAAC;IAI5B;EAAC;IAAAjS,GAAA;IAAAE,KAAA,EAED,SAAA8qI,aAAA,EAAe;MAEd,OAAO,IAAI,CAACxoI,MAAM,CAACsD,MAAM,GAAG,IAAI,CAACikI,KAAK,CAACjkI,MAAM;IAE9C;;IAEA;EAAA;IAAA9F,GAAA;IAAAE,KAAA,EACA,SAAA6zG,MAAOk9B,UAAU,EAAG;MAEnB,IAAKA,UAAU,KAAK,GAAG,EAAG;QAEzB,IAAMlH,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,KAAM,IAAIhkI,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG+yH,KAAK,CAACjkI,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;UAElDgkI,KAAK,CAAEhkI,CAAC,CAAE,IAAIkrI,UAAU;QAEzB;MAED;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAjxI,GAAA;IAAAE,KAAA,EACA,SAAAsjB,MAAO0tH,SAAS,EAAG;MAElB,IAAKA,SAAS,KAAK,GAAG,EAAG;QAExB,IAAMnH,KAAK,GAAG,IAAI,CAACA,KAAK;QAExB,KAAM,IAAIhkI,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG+yH,KAAK,CAACjkI,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;UAElDgkI,KAAK,CAAEhkI,CAAC,CAAE,IAAImrI,SAAS;QAExB;MAED;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAAlxI,GAAA;IAAAE,KAAA,EACA,SAAAi9E,KAAMg0D,SAAS,EAAEC,OAAO,EAAG;MAE1B,IAAMrH,KAAK,GAAG,IAAI,CAACA,KAAK;QACvBsH,KAAK,GAAGtH,KAAK,CAACjkI,MAAM;MAErB,IAAI4kB,IAAI,GAAG,CAAC;QACXiyD,EAAE,GAAG00D,KAAK,GAAG,CAAC;MAEf,OAAQ3mH,IAAI,KAAK2mH,KAAK,IAAItH,KAAK,CAAEr/G,IAAI,CAAE,GAAGymH,SAAS,EAAG;QAErD,EAAGzmH,IAAI;MAER;MAEA,OAAQiyD,EAAE,KAAK,CAAE,CAAC,IAAIotD,KAAK,CAAEptD,EAAE,CAAE,GAAGy0D,OAAO,EAAG;QAE7C,EAAGz0D,EAAE;MAEN;MAEA,EAAGA,EAAE,CAAC,CAAC;;MAEP,IAAKjyD,IAAI,KAAK,CAAC,IAAIiyD,EAAE,KAAK00D,KAAK,EAAG;QAEjC;QACA,IAAK3mH,IAAI,IAAIiyD,EAAE,EAAG;UAEjBA,EAAE,GAAG1mE,IAAI,CAACa,GAAG,CAAE6lE,EAAE,EAAE,CAAC,CAAE;UACtBjyD,IAAI,GAAGiyD,EAAE,GAAG,CAAC;QAEd;QAEA,IAAMl6B,MAAM,GAAG,IAAI,CAACuoF,YAAY,EAAE;QAClC,IAAI,CAACjB,KAAK,GAAGR,UAAU,CAAEQ,KAAK,EAAEr/G,IAAI,EAAEiyD,EAAE,CAAE;QAC1C,IAAI,CAACn6E,MAAM,GAAG+mI,UAAU,CAAE,IAAI,CAAC/mI,MAAM,EAAEkoB,IAAI,GAAG+3B,MAAM,EAAEk6B,EAAE,GAAGl6B,MAAM,CAAE;MAEpE;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAziD,GAAA;IAAAE,KAAA,EACA,SAAAoxI,SAAA,EAAW;MAEV,IAAIC,KAAK,GAAG,IAAI;MAEhB,IAAMxG,SAAS,GAAG,IAAI,CAACC,YAAY,EAAE;MACrC,IAAKD,SAAS,GAAG90H,IAAI,CAACsC,KAAK,CAAEwyH,SAAS,CAAE,KAAK,CAAC,EAAG;QAEhDrwH,OAAO,CAACjX,KAAK,CAAE,mDAAmD,EAAE,IAAI,CAAE;QAC1E8tI,KAAK,GAAG,KAAK;MAEd;MAEA,IAAMxH,KAAK,GAAG,IAAI,CAACA,KAAK;QACvBvnI,MAAM,GAAG,IAAI,CAACA,MAAM;QAEpB6uI,KAAK,GAAGtH,KAAK,CAACjkI,MAAM;MAErB,IAAKurI,KAAK,KAAK,CAAC,EAAG;QAElB32H,OAAO,CAACjX,KAAK,CAAE,sCAAsC,EAAE,IAAI,CAAE;QAC7D8tI,KAAK,GAAG,KAAK;MAEd;MAEA,IAAIC,QAAQ,GAAG,IAAI;MAEnB,KAAM,IAAIzrI,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKsrI,KAAK,EAAEtrI,CAAC,EAAG,EAAG;QAEpC,IAAM0rI,QAAQ,GAAG1H,KAAK,CAAEhkI,CAAC,CAAE;QAE3B,IAAK,OAAO0rI,QAAQ,KAAK,QAAQ,IAAI5rI,KAAK,CAAE4rI,QAAQ,CAAE,EAAG;UAExD/2H,OAAO,CAACjX,KAAK,CAAE,kDAAkD,EAAE,IAAI,EAAEsC,CAAC,EAAE0rI,QAAQ,CAAE;UACtFF,KAAK,GAAG,KAAK;UACb;QAED;QAEA,IAAKC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,GAAGC,QAAQ,EAAG;UAE/C/2H,OAAO,CAACjX,KAAK,CAAE,yCAAyC,EAAE,IAAI,EAAEsC,CAAC,EAAE0rI,QAAQ,EAAED,QAAQ,CAAE;UACvFD,KAAK,GAAG,KAAK;UACb;QAED;QAEAC,QAAQ,GAAGC,QAAQ;MAEpB;MAEA,IAAKjvI,MAAM,KAAKgC,SAAS,EAAG;QAE3B,IAAKglI,YAAY,CAAEhnI,MAAM,CAAE,EAAG;UAE7B,KAAM,IAAIuD,IAAC,GAAG,CAAC,EAAEiR,CAAC,GAAGxU,MAAM,CAACsD,MAAM,EAAEC,IAAC,KAAKiR,CAAC,EAAE,EAAGjR,IAAC,EAAG;YAEnD,IAAM7F,OAAK,GAAGsC,MAAM,CAAEuD,IAAC,CAAE;YAEzB,IAAKF,KAAK,CAAE3F,OAAK,CAAE,EAAG;cAErBwa,OAAO,CAACjX,KAAK,CAAE,mDAAmD,EAAE,IAAI,EAAEsC,IAAC,EAAE7F,OAAK,CAAE;cACpFqxI,KAAK,GAAG,KAAK;cACb;YAED;UAED;QAED;MAED;MAEA,OAAOA,KAAK;IAEb;;IAEA;IACA;EAAA;IAAAvxI,GAAA;IAAAE,KAAA,EACA,SAAAwxI,SAAA,EAAW;MAEV;MACA,IAAM3H,KAAK,GAAGR,UAAU,CAAE,IAAI,CAACQ,KAAK,CAAE;QACrCvnI,MAAM,GAAG+mI,UAAU,CAAE,IAAI,CAAC/mI,MAAM,CAAE;QAClCigD,MAAM,GAAG,IAAI,CAACuoF,YAAY,EAAE;QAE5B2G,mBAAmB,GAAG,IAAI,CAACX,gBAAgB,EAAE,KAAK/+H,iBAAiB;QAEnEqpE,SAAS,GAAGyuD,KAAK,CAACjkI,MAAM,GAAG,CAAC;MAE7B,IAAI8rI,UAAU,GAAG,CAAC;MAElB,KAAM,IAAI7rI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGu1E,SAAS,EAAE,EAAGv1E,CAAC,EAAG;QAEtC,IAAI8rI,IAAI,GAAG,KAAK;QAEhB,IAAMlhF,IAAI,GAAGo5E,KAAK,CAAEhkI,CAAC,CAAE;QACvB,IAAM+rI,QAAQ,GAAG/H,KAAK,CAAEhkI,CAAC,GAAG,CAAC,CAAE;;QAE/B;;QAEA,IAAK4qD,IAAI,KAAKmhF,QAAQ,KAAM/rI,CAAC,KAAK,CAAC,IAAI4qD,IAAI,KAAKo5E,KAAK,CAAE,CAAC,CAAE,CAAE,EAAG;UAE9D,IAAK,CAAE4H,mBAAmB,EAAG;YAE5B;;YAEA,IAAMhzH,MAAM,GAAG5Y,CAAC,GAAG08C,MAAM;cACxBsvF,OAAO,GAAGpzH,MAAM,GAAG8jC,MAAM;cACzBuvF,OAAO,GAAGrzH,MAAM,GAAG8jC,MAAM;YAE1B,KAAM,IAAIjkB,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKikB,MAAM,EAAE,EAAGjkB,CAAC,EAAG;cAErC,IAAMt+B,OAAK,GAAGsC,MAAM,CAAEmc,MAAM,GAAG6f,CAAC,CAAE;cAElC,IAAKt+B,OAAK,KAAKsC,MAAM,CAAEuvI,OAAO,GAAGvzG,CAAC,CAAE,IACnCt+B,OAAK,KAAKsC,MAAM,CAAEwvI,OAAO,GAAGxzG,CAAC,CAAE,EAAG;gBAElCqzG,IAAI,GAAG,IAAI;gBACX;cAED;YAED;UAED,CAAC,MAAM;YAENA,IAAI,GAAG,IAAI;UAEZ;QAED;;QAEA;;QAEA,IAAKA,IAAI,EAAG;UAEX,IAAK9rI,CAAC,KAAK6rI,UAAU,EAAG;YAEvB7H,KAAK,CAAE6H,UAAU,CAAE,GAAG7H,KAAK,CAAEhkI,CAAC,CAAE;YAEhC,IAAMksI,UAAU,GAAGlsI,CAAC,GAAG08C,MAAM;cAC5ByvF,WAAW,GAAGN,UAAU,GAAGnvF,MAAM;YAElC,KAAM,IAAIjkB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKikB,MAAM,EAAE,EAAGjkB,IAAC,EAAG;cAErCh8B,MAAM,CAAE0vI,WAAW,GAAG1zG,IAAC,CAAE,GAAGh8B,MAAM,CAAEyvI,UAAU,GAAGzzG,IAAC,CAAE;YAErD;UAED;UAEA,EAAGozG,UAAU;QAEd;MAED;;MAEA;;MAEA,IAAKt2D,SAAS,GAAG,CAAC,EAAG;QAEpByuD,KAAK,CAAE6H,UAAU,CAAE,GAAG7H,KAAK,CAAEzuD,SAAS,CAAE;QAExC,KAAM,IAAI22D,WAAU,GAAG32D,SAAS,GAAG74B,MAAM,EAAEyvF,YAAW,GAAGN,UAAU,GAAGnvF,MAAM,EAAEjkB,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKikB,MAAM,EAAE,EAAGjkB,IAAC,EAAG;UAEzGh8B,MAAM,CAAE0vI,YAAW,GAAG1zG,IAAC,CAAE,GAAGh8B,MAAM,CAAEyvI,WAAU,GAAGzzG,IAAC,CAAE;QAErD;QAEA,EAAGozG,UAAU;MAEd;MAEA,IAAKA,UAAU,KAAK7H,KAAK,CAACjkI,MAAM,EAAG;QAElC,IAAI,CAACikI,KAAK,GAAGR,UAAU,CAAEQ,KAAK,EAAE,CAAC,EAAE6H,UAAU,CAAE;QAC/C,IAAI,CAACpvI,MAAM,GAAG+mI,UAAU,CAAE/mI,MAAM,EAAE,CAAC,EAAEovI,UAAU,GAAGnvF,MAAM,CAAE;MAE3D,CAAC,MAAM;QAEN,IAAI,CAACsnF,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACvnI,MAAM,GAAGA,MAAM;MAErB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAxC,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,IAAM8tH,KAAK,GAAGR,UAAU,CAAE,IAAI,CAACQ,KAAK,EAAE,CAAC,CAAE;MACzC,IAAMvnI,MAAM,GAAG+mI,UAAU,CAAE,IAAI,CAAC/mI,MAAM,EAAE,CAAC,CAAE;MAE3C,IAAM2vI,kBAAkB,GAAG,IAAI,CAAC/rI,WAAW;MAC3C,IAAM0kI,KAAK,GAAG,IAAIqH,kBAAkB,CAAE,IAAI,CAAC9rI,IAAI,EAAE0jI,KAAK,EAAEvnI,MAAM,CAAE;;MAEhE;MACAsoI,KAAK,CAACmB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MAEhD,OAAOnB,KAAK;IAEb;EAAC;IAAA9qI,GAAA;IAAAE,KAAA,EAxaD,SAAAooB,OAAewiH,KAAK,EAAG;MAEtB,IAAMsH,SAAS,GAAGtH,KAAK,CAAC1kI,WAAW;MAEnC,IAAI65G,IAAI;;MAER;MACA,IAAKmyB,SAAS,CAAC9pH,MAAM,KAAK,IAAI,CAACA,MAAM,EAAG;QAEvC23F,IAAI,GAAGmyB,SAAS,CAAC9pH,MAAM,CAAEwiH,KAAK,CAAE;MAEjC,CAAC,MAAM;QAEN;QACA7qB,IAAI,GAAG;UAEN,MAAM,EAAE6qB,KAAK,CAACzkI,IAAI;UAClB,OAAO,EAAEojI,YAAY,CAAEqB,KAAK,CAACf,KAAK,EAAEz/G,KAAK,CAAE;UAC3C,QAAQ,EAAEm/G,YAAY,CAAEqB,KAAK,CAACtoI,MAAM,EAAE8nB,KAAK;QAE5C,CAAC;QAED,IAAMimH,aAAa,GAAGzF,KAAK,CAACkG,gBAAgB,EAAE;QAE9C,IAAKT,aAAa,KAAKzF,KAAK,CAAC6F,oBAAoB,EAAG;UAEnD1wB,IAAI,CAACswB,aAAa,GAAGA,aAAa;QAEnC;MAED;MAEAtwB,IAAI,CAACl+G,IAAI,GAAG+oI,KAAK,CAACc,aAAa,CAAC,CAAC;;MAEjC,OAAO3rB,IAAI;IAEZ;EAAC;EAAA,OAAAqwB,aAAA;AAAA;AAAA9wI,OAAA,CAAA8wI,aAAA,GAAAA,aAAA;AAwYFA,aAAa,CAAC3wI,SAAS,CAAC6wI,cAAc,GAAG31H,YAAY;AACrDy1H,aAAa,CAAC3wI,SAAS,CAAC8wI,eAAe,GAAG51H,YAAY;AACtDy1H,aAAa,CAAC3wI,SAAS,CAACgxI,oBAAoB,GAAG3+H,iBAAiB;;AAEhE;AACA;AACA;AAFA,IAGMqgI,oBAAoB,0BAAAC,cAAA;EAAAxnH,SAAA,CAAAunH,oBAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAvnH,YAAA,CAAAqnH,oBAAA;EAAA,SAAAA,qBAAA;IAAA/pI,eAAA,OAAA+pI,oBAAA;IAAA,OAAAE,SAAA,CAAA56C,KAAA,OAAAhrD,SAAA;EAAA;EAAA,OAAA7jC,YAAA,CAAAupI,oBAAA;AAAA,EAAS/B,aAAa;AAAA9wI,OAAA,CAAA6yI,oBAAA,GAAAA,oBAAA;AAEhDA,oBAAoB,CAAC1yI,SAAS,CAACisI,aAAa,GAAG,MAAM;AACrDyG,oBAAoB,CAAC1yI,SAAS,CAAC8wI,eAAe,GAAGnmH,KAAK;AACtD+nH,oBAAoB,CAAC1yI,SAAS,CAACgxI,oBAAoB,GAAG5+H,mBAAmB;AACzEsgI,oBAAoB,CAAC1yI,SAAS,CAACkxI,8BAA8B,GAAGrsI,SAAS;AACzE6tI,oBAAoB,CAAC1yI,SAAS,CAACmxI,8BAA8B,GAAGtsI,SAAS;;AAEzE;AACA;AACA;AAFA,IAGMguI,kBAAkB,0BAAAC,eAAA;EAAA3nH,SAAA,CAAA0nH,kBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAA1nH,YAAA,CAAAwnH,kBAAA;EAAA,SAAAA,mBAAA;IAAAlqI,eAAA,OAAAkqI,kBAAA;IAAA,OAAAE,SAAA,CAAA/6C,KAAA,OAAAhrD,SAAA;EAAA;EAAA,OAAA7jC,YAAA,CAAA0pI,kBAAA;AAAA,EAASlC,aAAa;AAAA9wI,OAAA,CAAAgzI,kBAAA,GAAAA,kBAAA;AAE9CA,kBAAkB,CAAC7yI,SAAS,CAACisI,aAAa,GAAG,OAAO;;AAEpD;AACA;AACA;AAFA,IAGM+G,mBAAmB,0BAAAC,eAAA;EAAA9nH,SAAA,CAAA6nH,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAA7nH,YAAA,CAAA2nH,mBAAA;EAAA,SAAAA,oBAAA;IAAArqI,eAAA,OAAAqqI,mBAAA;IAAA,OAAAE,SAAA,CAAAl7C,KAAA,OAAAhrD,SAAA;EAAA;EAAA,OAAA7jC,YAAA,CAAA6pI,mBAAA;AAAA,EAASrC,aAAa;AAAA9wI,OAAA,CAAAmzI,mBAAA,GAAAA,mBAAA;AAE/CA,mBAAmB,CAAChzI,SAAS,CAACisI,aAAa,GAAG,QAAQ;;AAEtD;AACA;AACA;AAFA,IAIMkH,2BAA2B,0BAAAC,aAAA;EAAAjoH,SAAA,CAAAgoH,2BAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAhoH,YAAA,CAAA8nH,2BAAA;EAEhC,SAAAA,4BAAa3F,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY,EAAG;IAAApkI,eAAA,OAAAwqI,2BAAA;IAAA,OAAAE,SAAA,CAAAhxI,IAAA,OAElEmrI,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEX,YAAY;EAElE;EAAC5jI,YAAA,CAAAgqI,2BAAA;IAAA9yI,GAAA;IAAAE,KAAA,EAED,SAAAiuI,aAAcx9F,EAAE,EAAEpP,EAAE,EAAE5pB,CAAC,EAAE6pB,EAAE,EAAG;MAE7B,IAAMp+B,MAAM,GAAG,IAAI,CAACspI,YAAY;QAC/BlqI,MAAM,GAAG,IAAI,CAAC4qI,YAAY;QAC1B3qF,MAAM,GAAG,IAAI,CAACsoF,SAAS;QAEvB1sH,KAAK,GAAG,CAAE1G,CAAC,GAAG4pB,EAAE,KAAOC,EAAE,GAAGD,EAAE,CAAE;MAEjC,IAAI5iB,MAAM,GAAGgyB,EAAE,GAAG8R,MAAM;MAExB,KAAM,IAAIoC,GAAG,GAAGlmC,MAAM,GAAG8jC,MAAM,EAAE9jC,MAAM,KAAKkmC,GAAG,EAAElmC,MAAM,IAAI,CAAC,EAAG;QAE9DoT,UAAU,CAAC0D,SAAS,CAAEryB,MAAM,EAAE,CAAC,EAAEZ,MAAM,EAAEmc,MAAM,GAAG8jC,MAAM,EAAEjgD,MAAM,EAAEmc,MAAM,EAAEN,KAAK,CAAE;MAElF;MAEA,OAAOjb,MAAM;IAEd;EAAC;EAAA,OAAA0vI,2BAAA;AAAA,EA1BwC5F,WAAW;AA8BrD;AACA;AACA;AAFA1tI,OAAA,CAAAszI,2BAAA,GAAAA,2BAAA;AAAA,IAGMG,uBAAuB,0BAAAC,eAAA;EAAApoH,SAAA,CAAAmoH,uBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAnoH,YAAA,CAAAioH,uBAAA;EAAA,SAAAA,wBAAA;IAAA3qI,eAAA,OAAA2qI,uBAAA;IAAA,OAAAE,SAAA,CAAAx7C,KAAA,OAAAhrD,SAAA;EAAA;EAAA7jC,YAAA,CAAAmqI,uBAAA;IAAAjzI,GAAA;IAAAE,KAAA,EAE5B,SAAA2wI,+BAAgCztI,MAAM,EAAG;MAExC,OAAO,IAAI0vI,2BAA2B,CAAE,IAAI,CAAC/I,KAAK,EAAE,IAAI,CAACvnI,MAAM,EAAE,IAAI,CAACwoI,YAAY,EAAE,EAAE5nI,MAAM,CAAE;IAE/F;EAAC;EAAA,OAAA6vI,uBAAA;AAAA,EANoC3C,aAAa;AAAA9wI,OAAA,CAAAyzI,uBAAA,GAAAA,uBAAA;AAUnDA,uBAAuB,CAACtzI,SAAS,CAACisI,aAAa,GAAG,YAAY;AAC9D;AACAqH,uBAAuB,CAACtzI,SAAS,CAACgxI,oBAAoB,GAAG3+H,iBAAiB;AAC1EihI,uBAAuB,CAACtzI,SAAS,CAACmxI,8BAA8B,GAAGtsI,SAAS;;AAE5E;AACA;AACA;AAFA,IAGM4uI,mBAAmB,0BAAAC,eAAA;EAAAvoH,SAAA,CAAAsoH,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAtoH,YAAA,CAAAooH,mBAAA;EAAA,SAAAA,oBAAA;IAAA9qI,eAAA,OAAA8qI,mBAAA;IAAA,OAAAE,SAAA,CAAA37C,KAAA,OAAAhrD,SAAA;EAAA;EAAA,OAAA7jC,YAAA,CAAAsqI,mBAAA;AAAA,EAAS9C,aAAa;AAAA9wI,OAAA,CAAA4zI,mBAAA,GAAAA,mBAAA;AAE/CA,mBAAmB,CAACzzI,SAAS,CAACisI,aAAa,GAAG,QAAQ;AACtDwH,mBAAmB,CAACzzI,SAAS,CAAC8wI,eAAe,GAAGnmH,KAAK;AACrD8oH,mBAAmB,CAACzzI,SAAS,CAACgxI,oBAAoB,GAAG5+H,mBAAmB;AACxEqhI,mBAAmB,CAACzzI,SAAS,CAACkxI,8BAA8B,GAAGrsI,SAAS;AACxE4uI,mBAAmB,CAACzzI,SAAS,CAACmxI,8BAA8B,GAAGtsI,SAAS;;AAExE;AACA;AACA;AAFA,IAGM+uI,mBAAmB,0BAAAC,eAAA;EAAA1oH,SAAA,CAAAyoH,mBAAA,EAAAC,eAAA;EAAA,IAAAC,SAAA,GAAAzoH,YAAA,CAAAuoH,mBAAA;EAAA,SAAAA,oBAAA;IAAAjrI,eAAA,OAAAirI,mBAAA;IAAA,OAAAE,SAAA,CAAA97C,KAAA,OAAAhrD,SAAA;EAAA;EAAA,OAAA7jC,YAAA,CAAAyqI,mBAAA;AAAA,EAASjD,aAAa;AAAA9wI,OAAA,CAAA+zI,mBAAA,GAAAA,mBAAA;AAE/CA,mBAAmB,CAAC5zI,SAAS,CAACisI,aAAa,GAAG,QAAQ;AAAC,IAEjD8H,aAAa;EAElB,SAAAA,cAAartI,IAAI,EAAEstI,QAAQ,GAAG,CAAE,CAAC,EAAE9I,MAAM,EAAEmC,SAAS,GAAG36H,wBAAwB,EAAG;IAAA/J,eAAA,OAAAorI,aAAA;IAEjF,IAAI,CAACrtI,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACwkI,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC8I,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC3G,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAACt2H,IAAI,GAAGN,YAAY,EAAE;;IAE1B;IACA,IAAK,IAAI,CAACu9H,QAAQ,GAAG,CAAC,EAAG;MAExB,IAAI,CAACzI,aAAa,EAAE;IAErB;EAED;EAACpiI,YAAA,CAAA4qI,aAAA;IAAA1zI,GAAA;IAAAE,KAAA,EA+RD,SAAAgrI,cAAA,EAAgB;MAEf,IAAML,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI8I,QAAQ,GAAG,CAAC;MAEhB,KAAM,IAAI5tI,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG6zH,MAAM,CAAC/kI,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEnD,IAAM+kI,KAAK,GAAG,IAAI,CAACD,MAAM,CAAE9kI,CAAC,CAAE;QAE9B4tI,QAAQ,GAAG19H,IAAI,CAACa,GAAG,CAAE68H,QAAQ,EAAE7I,KAAK,CAACf,KAAK,CAAEe,KAAK,CAACf,KAAK,CAACjkI,MAAM,GAAG,CAAC,CAAE,CAAE;MAEvE;MAEA,IAAI,CAAC6tI,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA3zI,GAAA;IAAAE,KAAA,EAED,SAAAi9E,KAAA,EAAO;MAEN,KAAM,IAAIp3E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8kI,MAAM,CAAC/kI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C,IAAI,CAAC8kI,MAAM,CAAE9kI,CAAC,CAAE,CAACo3E,IAAI,CAAE,CAAC,EAAE,IAAI,CAACw2D,QAAQ,CAAE;MAE1C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3zI,GAAA;IAAAE,KAAA,EAED,SAAAoxI,SAAA,EAAW;MAEV,IAAIC,KAAK,GAAG,IAAI;MAEhB,KAAM,IAAIxrI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8kI,MAAM,CAAC/kI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/CwrI,KAAK,GAAGA,KAAK,IAAI,IAAI,CAAC1G,MAAM,CAAE9kI,CAAC,CAAE,CAACurI,QAAQ,EAAE;MAE7C;MAEA,OAAOC,KAAK;IAEb;EAAC;IAAAvxI,GAAA;IAAAE,KAAA,EAED,SAAAwxI,SAAA,EAAW;MAEV,KAAM,IAAI3rI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8kI,MAAM,CAAC/kI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C,IAAI,CAAC8kI,MAAM,CAAE9kI,CAAC,CAAE,CAAC2rI,QAAQ,EAAE;MAE5B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA1xI,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,IAAM4uH,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAI9kI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC8kI,MAAM,CAAC/kI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE/C8kI,MAAM,CAACtlI,IAAI,CAAE,IAAI,CAACslI,MAAM,CAAE9kI,CAAC,CAAE,CAACkW,KAAK,EAAE,CAAE;MAExC;MAEA,OAAO,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACstI,QAAQ,EAAE9I,MAAM,EAAE,IAAI,CAACmC,SAAS,CAAE;IAEhF;EAAC;IAAAhtI,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,OAAO,IAAI,CAACliB,WAAW,CAACkiB,MAAM,CAAE,IAAI,CAAE;IAEvC;EAAC;IAAAtoB,GAAA;IAAAE,KAAA,EAvWD,SAAA0sB,MAAcqzF,IAAI,EAAG;MAEpB,IAAM4qB,MAAM,GAAG,EAAE;QAChB+I,UAAU,GAAG3zB,IAAI,CAAC4qB,MAAM;QACxBgJ,SAAS,GAAG,GAAG,IAAK5zB,IAAI,CAAC0qB,GAAG,IAAI,GAAG,CAAE;MAEtC,KAAM,IAAI5kI,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG48H,UAAU,CAAC9tI,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEvD8kI,MAAM,CAACtlI,IAAI,CAAEuuI,kBAAkB,CAAEF,UAAU,CAAE7tI,CAAC,CAAE,CAAE,CAACyd,KAAK,CAAEqwH,SAAS,CAAE,CAAE;MAExE;MAEA,IAAMjJ,IAAI,GAAG,IAAI,IAAI,CAAE3qB,IAAI,CAAC55G,IAAI,EAAE45G,IAAI,CAAC0zB,QAAQ,EAAE9I,MAAM,EAAE5qB,IAAI,CAAC+sB,SAAS,CAAE;MACzEpC,IAAI,CAACl0H,IAAI,GAAGupG,IAAI,CAACvpG,IAAI;MAErB,OAAOk0H,IAAI;IAEZ;EAAC;IAAA5qI,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAesiH,IAAI,EAAG;MAErB,IAAMC,MAAM,GAAG,EAAE;QAChBkJ,UAAU,GAAGnJ,IAAI,CAACC,MAAM;MAEzB,IAAM5qB,IAAI,GAAG;QAEZ,MAAM,EAAE2qB,IAAI,CAACvkI,IAAI;QACjB,UAAU,EAAEukI,IAAI,CAAC+I,QAAQ;QACzB,QAAQ,EAAE9I,MAAM;QAChB,MAAM,EAAED,IAAI,CAACl0H,IAAI;QACjB,WAAW,EAAEk0H,IAAI,CAACoC;MAEnB,CAAC;MAED,KAAM,IAAIjnI,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG+8H,UAAU,CAACjuI,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEvD8kI,MAAM,CAACtlI,IAAI,CAAE+qI,aAAa,CAAChoH,MAAM,CAAEyrH,UAAU,CAAEhuI,CAAC,CAAE,CAAE,CAAE;MAEvD;MAEA,OAAOk6G,IAAI;IAEZ;EAAC;IAAAjgH,GAAA;IAAAE,KAAA,EAED,SAAA8zI,8BAAsC3tI,IAAI,EAAE4tI,mBAAmB,EAAEtJ,GAAG,EAAEuJ,MAAM,EAAG;MAE9E,IAAMC,eAAe,GAAGF,mBAAmB,CAACnuI,MAAM;MAClD,IAAM+kI,MAAM,GAAG,EAAE;MAEjB,KAAM,IAAI9kI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGouI,eAAe,EAAEpuI,CAAC,EAAG,EAAG;QAE5C,IAAIgkI,KAAK,GAAG,EAAE;QACd,IAAIvnI,MAAM,GAAG,EAAE;QAEfunI,KAAK,CAACxkI,IAAI,CACT,CAAEQ,CAAC,GAAGouI,eAAe,GAAG,CAAC,IAAKA,eAAe,EAC7CpuI,CAAC,EACD,CAAEA,CAAC,GAAG,CAAC,IAAKouI,eAAe,CAAE;QAE9B3xI,MAAM,CAAC+C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtB,IAAMuU,KAAK,GAAGgwH,gBAAgB,CAAEC,KAAK,CAAE;QACvCA,KAAK,GAAGE,WAAW,CAAEF,KAAK,EAAE,CAAC,EAAEjwH,KAAK,CAAE;QACtCtX,MAAM,GAAGynI,WAAW,CAAEznI,MAAM,EAAE,CAAC,EAAEsX,KAAK,CAAE;;QAExC;QACA;QACA,IAAK,CAAEo6H,MAAM,IAAInK,KAAK,CAAE,CAAC,CAAE,KAAK,CAAC,EAAG;UAEnCA,KAAK,CAACxkI,IAAI,CAAE4uI,eAAe,CAAE;UAC7B3xI,MAAM,CAAC+C,IAAI,CAAE/C,MAAM,CAAE,CAAC,CAAE,CAAE;QAE3B;QAEAqoI,MAAM,CAACtlI,IAAI,CACV,IAAIotI,mBAAmB,CACtB,yBAAyB,GAAGsB,mBAAmB,CAAEluI,CAAC,CAAE,CAACM,IAAI,GAAG,GAAG,EAC/D0jI,KAAK,EAAEvnI,MAAM,CACb,CAACghB,KAAK,CAAE,GAAG,GAAGmnH,GAAG,CAAE,CAAE;MAExB;MAEA,OAAO,IAAI,IAAI,CAAEtkI,IAAI,EAAE,CAAE,CAAC,EAAEwkI,MAAM,CAAE;IAErC;EAAC;IAAA7qI,GAAA;IAAAE,KAAA,EAED,SAAAk0I,WAAmBC,iBAAiB,EAAEhuI,IAAI,EAAG;MAE5C,IAAIiuI,SAAS,GAAGD,iBAAiB;MAEjC,IAAK,CAAE/pH,KAAK,CAACC,OAAO,CAAE8pH,iBAAiB,CAAE,EAAG;QAE3C,IAAMxN,CAAC,GAAGwN,iBAAiB;QAC3BC,SAAS,GAAGzN,CAAC,CAAC5qG,QAAQ,IAAI4qG,CAAC,CAAC5qG,QAAQ,CAACqP,UAAU,IAAIu7F,CAAC,CAACv7F,UAAU;MAEhE;MAEA,KAAM,IAAIvlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuuI,SAAS,CAACxuI,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE7C,IAAKuuI,SAAS,CAAEvuI,CAAC,CAAE,CAACM,IAAI,KAAKA,IAAI,EAAG;UAEnC,OAAOiuI,SAAS,CAAEvuI,CAAC,CAAE;QAEtB;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAq0I,oCAA4CtgE,YAAY,EAAE02D,GAAG,EAAEuJ,MAAM,EAAG;MAEvE,IAAMM,uBAAuB,GAAG,CAAC,CAAC;;MAElC;MACA;MACA,IAAMC,OAAO,GAAG,oBAAoB;;MAEpC;MACA;MACA,KAAM,IAAI1uI,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGmiD,YAAY,CAACnuE,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEzD,IAAMuuE,WAAW,GAAGL,YAAY,CAAEluE,CAAC,CAAE;QACrC,IAAM2uI,KAAK,GAAGpgE,WAAW,CAACjuE,IAAI,CAACk1E,KAAK,CAAEk5D,OAAO,CAAE;QAE/C,IAAKC,KAAK,IAAIA,KAAK,CAAC5uI,MAAM,GAAG,CAAC,EAAG;UAEhC,IAAMO,IAAI,GAAGquI,KAAK,CAAE,CAAC,CAAE;UAEvB,IAAIC,qBAAqB,GAAGH,uBAAuB,CAAEnuI,IAAI,CAAE;UAE3D,IAAK,CAAEsuI,qBAAqB,EAAG;YAE9BH,uBAAuB,CAAEnuI,IAAI,CAAE,GAAGsuI,qBAAqB,GAAG,EAAE;UAE7D;UAEAA,qBAAqB,CAACpvI,IAAI,CAAE+uE,WAAW,CAAE;QAE1C;MAED;MAEA,IAAMsgE,KAAK,GAAG,EAAE;MAEhB,KAAM,IAAMvuI,MAAI,IAAImuI,uBAAuB,EAAG;QAE7CI,KAAK,CAACrvI,IAAI,CAAE,IAAI,CAACyuI,6BAA6B,CAAE3tI,MAAI,EAAEmuI,uBAAuB,CAAEnuI,MAAI,CAAE,EAAEskI,GAAG,EAAEuJ,MAAM,CAAE,CAAE;MAEvG;MAEA,OAAOU,KAAK;IAEb;;IAEA;EAAA;IAAA50I,GAAA;IAAAE,KAAA,EACA,SAAA20I,eAAuBnlG,SAAS,EAAEqvE,KAAK,EAAG;MAEzC,IAAK,CAAErvE,SAAS,EAAG;QAElBh1B,OAAO,CAACjX,KAAK,CAAE,uDAAuD,CAAE;QACxE,OAAO,IAAI;MAEZ;MAEA,IAAMqxI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAc1C,SAAS,EAAE2C,SAAS,EAAEC,aAAa,EAAEC,YAAY,EAAEC,UAAU,EAAG;QAEnG;QACA,IAAKF,aAAa,CAAClvI,MAAM,KAAK,CAAC,EAAG;UAEjC,IAAMikI,KAAK,GAAG,EAAE;UAChB,IAAMvnI,MAAM,GAAG,EAAE;UAEjB4nI,WAAW,CAAE4K,aAAa,EAAEjL,KAAK,EAAEvnI,MAAM,EAAEyyI,YAAY,CAAE;;UAEzD;UACA,IAAKlL,KAAK,CAACjkI,MAAM,KAAK,CAAC,EAAG;YAEzBovI,UAAU,CAAC3vI,IAAI,CAAE,IAAI6sI,SAAS,CAAE2C,SAAS,EAAEhL,KAAK,EAAEvnI,MAAM,CAAE,CAAE;UAE7D;QAED;MAED,CAAC;MAED,IAAMqoI,MAAM,GAAG,EAAE;MAEjB,IAAMsK,QAAQ,GAAGzlG,SAAS,CAACrpC,IAAI,IAAI,SAAS;MAC5C,IAAMskI,GAAG,GAAGj7F,SAAS,CAACi7F,GAAG,IAAI,EAAE;MAC/B,IAAMqC,SAAS,GAAGt9F,SAAS,CAACs9F,SAAS;;MAErC;MACA,IAAI2G,QAAQ,GAAGjkG,SAAS,CAAC5pC,MAAM,IAAI,CAAE,CAAC;MAEtC,IAAMsvI,eAAe,GAAG1lG,SAAS,CAAC2lG,SAAS,IAAI,EAAE;MAEjD,KAAM,IAAIlzH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGizH,eAAe,CAACtvI,MAAM,EAAEqc,CAAC,EAAG,EAAG;QAEnD,IAAM6yH,aAAa,GAAGI,eAAe,CAAEjzH,CAAC,CAAE,CAACtb,IAAI;;QAE/C;QACA,IAAK,CAAEmuI,aAAa,IAAIA,aAAa,CAAClvI,MAAM,KAAK,CAAC,EAAG;;QAErD;QACA,IAAKkvI,aAAa,CAAE,CAAC,CAAE,CAAC/gE,YAAY,EAAG;UAEtC;UACA,IAAMqhE,gBAAgB,GAAG,CAAC,CAAC;UAE3B,IAAI7jD,CAAC;UAEL,KAAMA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGujD,aAAa,CAAClvI,MAAM,EAAE2rF,CAAC,EAAG,EAAG;YAE7C,IAAKujD,aAAa,CAAEvjD,CAAC,CAAE,CAACxd,YAAY,EAAG;cAEtC,KAAM,IAAIh9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+9H,aAAa,CAAEvjD,CAAC,CAAE,CAACxd,YAAY,CAACnuE,MAAM,EAAEmR,CAAC,EAAG,EAAG;gBAEnEq+H,gBAAgB,CAAEN,aAAa,CAAEvjD,CAAC,CAAE,CAACxd,YAAY,CAAEh9D,CAAC,CAAE,CAAE,GAAG,CAAE,CAAC;cAE/D;YAED;UAED;;UAEA;UACA;UACA;UACA,KAAM,IAAMs+H,eAAe,IAAID,gBAAgB,EAAG;YAEjD,IAAMvL,KAAK,GAAG,EAAE;YAChB,IAAMvnI,MAAM,GAAG,EAAE;YAEjB,KAAM,IAAIyU,EAAC,GAAG,CAAC,EAAEA,EAAC,KAAK+9H,aAAa,CAAEvjD,CAAC,CAAE,CAACxd,YAAY,CAACnuE,MAAM,EAAE,EAAGmR,EAAC,EAAG;cAErE,IAAMu+H,YAAY,GAAGR,aAAa,CAAEvjD,CAAC,CAAE;cAEvCs4C,KAAK,CAACxkI,IAAI,CAAEiwI,YAAY,CAAC7kF,IAAI,CAAE;cAC/BnuD,MAAM,CAAC+C,IAAI,CAAIiwI,YAAY,CAAClhE,WAAW,KAAKihE,eAAe,GAAK,CAAC,GAAG,CAAC,CAAE;YAExE;YAEA1K,MAAM,CAACtlI,IAAI,CAAE,IAAIotI,mBAAmB,CAAE,wBAAwB,GAAG4C,eAAe,GAAG,GAAG,EAAExL,KAAK,EAAEvnI,MAAM,CAAE,CAAE;UAE1G;UAEAmxI,QAAQ,GAAG2B,gBAAgB,CAACxvI,MAAM,GAAG6kI,GAAG;QAEzC,CAAC,MAAM;UAEN;;UAEA,IAAM8K,QAAQ,GAAG,SAAS,GAAG12B,KAAK,CAAE58F,CAAC,CAAE,CAAC9b,IAAI,GAAG,GAAG;UAElDyuI,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,WAAW,EAC3CT,aAAa,EAAE,KAAK,EAAEnK,MAAM,CAAE;UAE/BiK,gBAAgB,CACf7B,uBAAuB,EAAEwC,QAAQ,GAAG,aAAa,EACjDT,aAAa,EAAE,KAAK,EAAEnK,MAAM,CAAE;UAE/BiK,gBAAgB,CACfvB,mBAAmB,EAAEkC,QAAQ,GAAG,QAAQ,EACxCT,aAAa,EAAE,KAAK,EAAEnK,MAAM,CAAE;QAEhC;MAED;MAEA,IAAKA,MAAM,CAAC/kI,MAAM,KAAK,CAAC,EAAG;QAE1B,OAAO,IAAI;MAEZ;MAEA,IAAM8kI,IAAI,GAAG,IAAI,IAAI,CAAEuK,QAAQ,EAAExB,QAAQ,EAAE9I,MAAM,EAAEmC,SAAS,CAAE;MAE9D,OAAOpC,IAAI;IAEZ;EAAC;EAAA,OAAA8I,aAAA;AAAA;AAAAl0I,OAAA,CAAAk0I,aAAA,GAAAA,aAAA;AAiFF,SAASgC,4BAA4BA,CAAEC,QAAQ,EAAG;EAEjD,QAASA,QAAQ,CAACh/H,WAAW,EAAE;IAE9B,KAAK,QAAQ;IACb,KAAK,QAAQ;IACb,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,SAAS;MAEb,OAAOg8H,mBAAmB;IAE3B,KAAK,QAAQ;IACb,KAAK,SAAS;IACd,KAAK,SAAS;IACd,KAAK,SAAS;MAEb,OAAOY,mBAAmB;IAE3B,KAAK,OAAO;MAEX,OAAOf,kBAAkB;IAE1B,KAAK,YAAY;MAEhB,OAAOS,uBAAuB;IAE/B,KAAK,MAAM;IACX,KAAK,SAAS;MAEb,OAAOZ,oBAAoB;IAE5B,KAAK,QAAQ;MAEZ,OAAOe,mBAAmB;EAAC;EAI7B,MAAM,IAAIvvI,KAAK,CAAE,6CAA6C,GAAG8xI,QAAQ,CAAE;AAE5E;AAEA,SAAS7B,kBAAkBA,CAAE7zB,IAAI,EAAG;EAEnC,IAAKA,IAAI,CAACl+G,IAAI,KAAKyC,SAAS,EAAG;IAE9B,MAAM,IAAIX,KAAK,CAAE,0DAA0D,CAAE;EAE9E;EAEA,IAAMuuI,SAAS,GAAGsD,4BAA4B,CAAEz1B,IAAI,CAACl+G,IAAI,CAAE;EAE3D,IAAKk+G,IAAI,CAAC8pB,KAAK,KAAKvlI,SAAS,EAAG;IAE/B,IAAMulI,KAAK,GAAG,EAAE;MAAEvnI,MAAM,GAAG,EAAE;IAE7B4nI,WAAW,CAAEnqB,IAAI,CAACp5G,IAAI,EAAEkjI,KAAK,EAAEvnI,MAAM,EAAE,OAAO,CAAE;IAEhDy9G,IAAI,CAAC8pB,KAAK,GAAGA,KAAK;IAClB9pB,IAAI,CAACz9G,MAAM,GAAGA,MAAM;EAErB;;EAEA;EACA,IAAK4vI,SAAS,CAACxlH,KAAK,KAAKpoB,SAAS,EAAG;IAEpC,OAAO4tI,SAAS,CAACxlH,KAAK,CAAEqzF,IAAI,CAAE;EAE/B,CAAC,MAAM;IAEN;IACA,OAAO,IAAImyB,SAAS,CAAEnyB,IAAI,CAAC55G,IAAI,EAAE45G,IAAI,CAAC8pB,KAAK,EAAE9pB,IAAI,CAACz9G,MAAM,EAAEy9G,IAAI,CAACswB,aAAa,CAAE;EAE/E;AAED;AAEA,IAAMqF,KAAK,GAAG;EAEbjrF,OAAO,EAAE,KAAK;EAEdkrF,KAAK,EAAE,CAAC,CAAC;EAETz5H,GAAG,EAAE,SAAAA,IAAWpc,GAAG,EAAE81I,IAAI,EAAG;IAE3B,IAAK,IAAI,CAACnrF,OAAO,KAAK,KAAK,EAAG;;IAE9B;;IAEA,IAAI,CAACkrF,KAAK,CAAE71I,GAAG,CAAE,GAAG81I,IAAI;EAEzB,CAAC;EAEDp6H,GAAG,EAAE,SAAAA,IAAW1b,GAAG,EAAG;IAErB,IAAK,IAAI,CAAC2qD,OAAO,KAAK,KAAK,EAAG;;IAE9B;;IAEA,OAAO,IAAI,CAACkrF,KAAK,CAAE71I,GAAG,CAAE;EAEzB,CAAC;EAED4sC,MAAM,EAAE,SAAAA,OAAW5sC,GAAG,EAAG;IAExB,OAAO,IAAI,CAAC61I,KAAK,CAAE71I,GAAG,CAAE;EAEzB,CAAC;EAED8sC,KAAK,EAAE,SAAAA,MAAA,EAAY;IAElB,IAAI,CAAC+oG,KAAK,GAAG,CAAC,CAAC;EAEhB;AAED,CAAC;AAACr2I,OAAA,CAAAo2I,KAAA,GAAAA,KAAA;AAAA,IAEIG,cAAc,gBAAAjtI,YAAA,CAEnB,SAAAitI,eAAaC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;EAAA5tI,eAAA,OAAAytI,cAAA;EAE1C,IAAMnwF,KAAK,GAAG,IAAI;EAElB,IAAIuwF,SAAS,GAAG,KAAK;EACrB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,WAAW,GAAG9xI,SAAS;EAC3B,IAAM+xI,QAAQ,GAAG,EAAE;;EAEnB;EACA;;EAEA,IAAI,CAACC,OAAO,GAAGhyI,SAAS;EACxB,IAAI,CAACwxI,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;EAEtB,IAAI,CAACO,SAAS,GAAG,UAAWpsH,GAAG,EAAG;IAEjCgsH,UAAU,EAAG;IAEb,IAAKF,SAAS,KAAK,KAAK,EAAG;MAE1B,IAAKvwF,KAAK,CAAC4wF,OAAO,KAAKhyI,SAAS,EAAG;QAElCohD,KAAK,CAAC4wF,OAAO,CAAEnsH,GAAG,EAAE+rH,WAAW,EAAEC,UAAU,CAAE;MAE9C;IAED;IAEAF,SAAS,GAAG,IAAI;EAEjB,CAAC;EAED,IAAI,CAACO,OAAO,GAAG,UAAWrsH,GAAG,EAAG;IAE/B+rH,WAAW,EAAG;IAEd,IAAKxwF,KAAK,CAACqwF,UAAU,KAAKzxI,SAAS,EAAG;MAErCohD,KAAK,CAACqwF,UAAU,CAAE5rH,GAAG,EAAE+rH,WAAW,EAAEC,UAAU,CAAE;IAEjD;IAEA,IAAKD,WAAW,KAAKC,UAAU,EAAG;MAEjCF,SAAS,GAAG,KAAK;MAEjB,IAAKvwF,KAAK,CAACowF,MAAM,KAAKxxI,SAAS,EAAG;QAEjCohD,KAAK,CAACowF,MAAM,EAAE;MAEf;IAED;EAED,CAAC;EAED,IAAI,CAACW,SAAS,GAAG,UAAWtsH,GAAG,EAAG;IAEjC,IAAKu7B,KAAK,CAACswF,OAAO,KAAK1xI,SAAS,EAAG;MAElCohD,KAAK,CAACswF,OAAO,CAAE7rH,GAAG,CAAE;IAErB;EAED,CAAC;EAED,IAAI,CAACusH,UAAU,GAAG,UAAWvsH,GAAG,EAAG;IAElC,IAAKisH,WAAW,EAAG;MAElB,OAAOA,WAAW,CAAEjsH,GAAG,CAAE;IAE1B;IAEA,OAAOA,GAAG;EAEX,CAAC;EAED,IAAI,CAACwsH,cAAc,GAAG,UAAWlxC,SAAS,EAAG;IAE5C2wC,WAAW,GAAG3wC,SAAS;IAEvB,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACmxC,UAAU,GAAG,UAAWC,KAAK,EAAEC,MAAM,EAAG;IAE5CT,QAAQ,CAAChxI,IAAI,CAAEwxI,KAAK,EAAEC,MAAM,CAAE;IAE9B,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAACC,aAAa,GAAG,UAAWF,KAAK,EAAG;IAEvC,IAAMvhI,KAAK,GAAG+gI,QAAQ,CAACnhI,OAAO,CAAE2hI,KAAK,CAAE;IAEvC,IAAKvhI,KAAK,KAAK,CAAE,CAAC,EAAG;MAEpB+gI,QAAQ,CAAC9gI,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;IAE5B;IAEA,OAAO,IAAI;EAEZ,CAAC;EAED,IAAI,CAAC0hI,UAAU,GAAG,UAAWpB,IAAI,EAAG;IAEnC,KAAM,IAAI/vI,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG0gI,QAAQ,CAACzwI,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,IAAI,CAAC,EAAG;MAErD,IAAMgxI,KAAK,GAAGR,QAAQ,CAAExwI,CAAC,CAAE;MAC3B,IAAMixI,MAAM,GAAGT,QAAQ,CAAExwI,CAAC,GAAG,CAAC,CAAE;MAEhC,IAAKgxI,KAAK,CAACI,MAAM,EAAGJ,KAAK,CAACz7D,SAAS,GAAG,CAAC,CAAC,CAAC;;MAEzC,IAAKy7D,KAAK,CAACluH,IAAI,CAAEitH,IAAI,CAAE,EAAG;QAEzB,OAAOkB,MAAM;MAEd;IAED;IAEA,OAAO,IAAI;EAEZ,CAAC;AAEF,CAAC;AAAAx3I,OAAA,CAAAu2I,cAAA,GAAAA,cAAA;AAIF,IAAMqB,qBAAqB,GAAG,aAAc,IAAIrB,cAAc,EAAE;AAACv2I,OAAA,CAAA43I,qBAAA,GAAAA,qBAAA;AAAA,IAE3DC,MAAM;EAEX,SAAAA,OAAaC,OAAO,EAAG;IAAAhvI,eAAA,OAAA+uI,MAAA;IAEtB,IAAI,CAACC,OAAO,GAAKA,OAAO,KAAK9yI,SAAS,GAAK8yI,OAAO,GAAGF,qBAAqB;IAE1E,IAAI,CAACG,WAAW,GAAG,WAAW;IAC9B,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACp8D,IAAI,GAAG,EAAE;IACd,IAAI,CAACq8D,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EAExB;EAAC5uI,YAAA,CAAAuuI,MAAA;IAAAr3I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAA,CAAM,wCAAyC,CAAC;EAAC;IAAA33I,GAAA;IAAAE,KAAA,EAEjD,SAAA03I,UAAWvtH,GAAG,EAAE4rH,UAAU,EAAG;MAE5B,IAAMrwF,KAAK,GAAG,IAAI;MAElB,OAAO,IAAIj/C,OAAO,CAAE,UAAW1D,OAAO,EAAEC,MAAM,EAAG;QAEhD0iD,KAAK,CAAC+xF,IAAI,CAAEttH,GAAG,EAAEpnB,OAAO,EAAEgzI,UAAU,EAAE/yI,MAAM,CAAE;MAE/C,CAAC,CAAE;IAEJ;EAAC;IAAAlD,GAAA;IAAAE,KAAA,EAED,SAAA0sB,MAAA,CAAO,YAAa,CAAC;EAAC;IAAA5sB,GAAA;IAAAE,KAAA,EAEtB,SAAA23I,eAAgBN,WAAW,EAAG;MAE7B,IAAI,CAACA,WAAW,GAAGA,WAAW;MAC9B,OAAO,IAAI;IAEZ;EAAC;IAAAv3I,GAAA;IAAAE,KAAA,EAED,SAAA43I,mBAAoB53I,KAAK,EAAG;MAE3B,IAAI,CAACs3I,eAAe,GAAGt3I,KAAK;MAC5B,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA63I,QAAS38D,IAAI,EAAG;MAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,OAAO,IAAI;IAEZ;EAAC;IAAAp7E,GAAA;IAAAE,KAAA,EAED,SAAA83I,gBAAiBP,YAAY,EAAG;MAE/B,IAAI,CAACA,YAAY,GAAGA,YAAY;MAChC,OAAO,IAAI;IAEZ;EAAC;IAAAz3I,GAAA;IAAAE,KAAA,EAED,SAAA+3I,iBAAkBP,aAAa,EAAG;MAEjC,IAAI,CAACA,aAAa,GAAGA,aAAa;MAClC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAL,MAAA;AAAA;AAAA73I,OAAA,CAAA63I,MAAA,GAAAA,MAAA;AAIF,IAAMa,OAAO,GAAG,CAAC,CAAC;AAAC,IAEbC,SAAS,0BAAAC,MAAA;EAAAttH,SAAA,CAAAqtH,SAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAArtH,YAAA,CAAAmtH,SAAA;EAEd,SAAAA,UAAankC,OAAO,EAAEskC,QAAQ,EAAG;IAAA,IAAAC,OAAA;IAAAjwI,eAAA,OAAA6vI,SAAA;IAEhCI,OAAA,GAAAF,SAAA,CAAAr2I,IAAA,OAAOgyG,OAAO;IACdukC,OAAA,CAAKD,QAAQ,GAAGA,QAAQ;IAAC,OAAAC,OAAA;EAE1B;EAAC,OAAAzvI,YAAA,CAAAqvI,SAAA;AAAA,gBAAAK,gBAAA,CAPsB30I,KAAK;AAAA,IAWvB40I,UAAU,0BAAAC,OAAA;EAAA5tH,SAAA,CAAA2tH,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAA3tH,YAAA,CAAAytH,UAAA;EAEf,SAAAA,WAAanB,OAAO,EAAG;IAAAhvI,eAAA,OAAAmwI,UAAA;IAAA,OAAAE,SAAA,CAAA32I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAA2vI,UAAA;IAAAz4I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAAA,IAAA0C,OAAA;MAExC,IAAKvuH,GAAG,KAAK7lB,SAAS,EAAG6lB,GAAG,GAAG,EAAE;MAEjC,IAAK,IAAI,CAAC+wD,IAAI,KAAK52E,SAAS,EAAG6lB,GAAG,GAAG,IAAI,CAAC+wD,IAAI,GAAG/wD,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAACitH,OAAO,CAACV,UAAU,CAAEvsH,GAAG,CAAE;MAEpC,IAAM6nC,MAAM,GAAG0jF,KAAK,CAACl6H,GAAG,CAAE2O,GAAG,CAAE;MAE/B,IAAK6nC,MAAM,KAAK1tD,SAAS,EAAG;QAE3B,IAAI,CAAC8yI,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;QAE7BwuH,UAAU,CAAE,YAAM;UAEjB,IAAK7C,MAAM,EAAGA,MAAM,CAAE9jF,MAAM,CAAE;UAE9B0mF,OAAI,CAACtB,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;QAE5B,CAAC,EAAE,CAAC,CAAE;QAEN,OAAO6nC,MAAM;MAEd;;MAEA;;MAEA,IAAKgmF,OAAO,CAAE7tH,GAAG,CAAE,KAAK7lB,SAAS,EAAG;QAEnC0zI,OAAO,CAAE7tH,GAAG,CAAE,CAAC9kB,IAAI,CAAE;UAEpBywI,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU;UACtBC,OAAO,EAAEA;QAEV,CAAC,CAAE;QAEH;MAED;;MAEA;MACAgC,OAAO,CAAE7tH,GAAG,CAAE,GAAG,EAAE;MAEnB6tH,OAAO,CAAE7tH,GAAG,CAAE,CAAC9kB,IAAI,CAAE;QACpBywI,MAAM,EAAEA,MAAM;QACdC,UAAU,EAAEA,UAAU;QACtBC,OAAO,EAAEA;MACV,CAAC,CAAE;;MAEH;MACA,IAAM4C,GAAG,GAAG,IAAIC,OAAO,CAAE1uH,GAAG,EAAE;QAC7B2uH,OAAO,EAAE,IAAIC,OAAO,CAAE,IAAI,CAACvB,aAAa,CAAE;QAC1CwB,WAAW,EAAE,IAAI,CAAC1B,eAAe,GAAG,SAAS,GAAG;QAChD;MACD,CAAC,CAAE;;MAEH;MACA,IAAM2B,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMC,YAAY,GAAG,IAAI,CAACA,YAAY;;MAEtC;MACAC,KAAK,CAAEP,GAAG,CAAE,CACVv1I,IAAI,CAAE,UAAA+0I,QAAQ,EAAI;QAElB,IAAKA,QAAQ,CAACv7D,MAAM,KAAK,GAAG,IAAIu7D,QAAQ,CAACv7D,MAAM,KAAK,CAAC,EAAG;UAEvD;UACA;;UAEA,IAAKu7D,QAAQ,CAACv7D,MAAM,KAAK,CAAC,EAAG;YAE5BriE,OAAO,CAACC,IAAI,CAAE,2CAA2C,CAAE;UAE5D;;UAEA;;UAEA,IAAK,OAAO2+H,cAAc,KAAK,WAAW,IAAIhB,QAAQ,CAACiB,IAAI,KAAK/0I,SAAS,IAAI8zI,QAAQ,CAACiB,IAAI,CAACC,SAAS,KAAKh1I,SAAS,EAAG;YAEpH,OAAO8zI,QAAQ;UAEhB;UAEA,IAAMmB,SAAS,GAAGvB,OAAO,CAAE7tH,GAAG,CAAE;UAChC,IAAMqvH,MAAM,GAAGpB,QAAQ,CAACiB,IAAI,CAACC,SAAS,EAAE;UACxC,IAAMG,aAAa,GAAGrB,QAAQ,CAACU,OAAO,CAACt9H,GAAG,CAAE,gBAAgB,CAAE;UAC9D,IAAMk+H,KAAK,GAAGD,aAAa,GAAG/yH,QAAQ,CAAE+yH,aAAa,CAAE,GAAG,CAAC;UAC3D,IAAME,gBAAgB,GAAGD,KAAK,KAAK,CAAC;UACpC,IAAIE,MAAM,GAAG,CAAC;;UAEd;UACA,IAAMC,MAAM,GAAG,IAAIT,cAAc,CAAE;YAClC36F,KAAK,WAAAA,MAAEupD,UAAU,EAAG;cAEnB8xC,QAAQ,EAAE;cAEV,SAASA,QAAQA,CAAA,EAAG;gBAEnBN,MAAM,CAACO,IAAI,EAAE,CAAC12I,IAAI,CAAE,UAAE;kBAAEe,IAAI,EAAJA,IAAI;kBAAEpE,KAAK,EAALA;gBAAM,CAAC,EAAM;kBAE1C,IAAKoE,IAAI,EAAG;oBAEX4jG,UAAU,CAACgyC,KAAK,EAAE;kBAEnB,CAAC,MAAM;oBAENJ,MAAM,IAAI55I,KAAK,CAACi6I,UAAU;oBAE1B,IAAMxkI,KAAK,GAAG,IAAIykI,aAAa,CAAE,UAAU,EAAE;sBAAEP,gBAAgB,EAAhBA,gBAAgB;sBAAEC,MAAM,EAANA,MAAM;sBAAEF,KAAK,EAALA;oBAAM,CAAC,CAAE;oBAClF,KAAM,IAAI7zI,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG2nH,SAAS,CAAC3zI,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;sBAEtD,IAAMwvB,QAAQ,GAAGkkH,SAAS,CAAE1zI,CAAC,CAAE;sBAC/B,IAAKwvB,QAAQ,CAAC0gH,UAAU,EAAG1gH,QAAQ,CAAC0gH,UAAU,CAAEtgI,KAAK,CAAE;oBAExD;oBAEAuyF,UAAU,CAACmyC,OAAO,CAAEn6I,KAAK,CAAE;oBAC3B85I,QAAQ,EAAE;kBAEX;gBAED,CAAC,CAAE;cAEJ;YAED;UAED,CAAC,CAAE;UAEH,OAAO,IAAIM,QAAQ,CAAEP,MAAM,CAAE;QAE9B,CAAC,MAAM;UAEN,MAAM,IAAI5B,SAAS,gBAAAtwH,MAAA,CAAgBywH,QAAQ,CAACjuH,GAAG,wBAAAxC,MAAA,CAAoBywH,QAAQ,CAACv7D,MAAM,QAAAl1D,MAAA,CAAKywH,QAAQ,CAACiC,UAAU,GAAIjC,QAAQ,CAAE;QAEzH;MAED,CAAC,CAAE,CACF/0I,IAAI,CAAE,UAAA+0I,QAAQ,EAAI;QAElB,QAASc,YAAY;UAEpB,KAAK,aAAa;YAEjB,OAAOd,QAAQ,CAACkC,WAAW,EAAE;UAE9B,KAAK,MAAM;YAEV,OAAOlC,QAAQ,CAACmC,IAAI,EAAE;UAEvB,KAAK,UAAU;YAEd,OAAOnC,QAAQ,CAACoC,IAAI,EAAE,CACpBn3I,IAAI,CAAE,UAAAm3I,IAAI,EAAI;cAEd,IAAMC,MAAM,GAAG,IAAIC,SAAS,EAAE;cAC9B,OAAOD,MAAM,CAACE,eAAe,CAAEH,IAAI,EAAEvB,QAAQ,CAAE;YAEhD,CAAC,CAAE;UAEL,KAAK,MAAM;YAEV,OAAOb,QAAQ,CAACr4B,IAAI,EAAE;UAEvB;YAEC,IAAKk5B,QAAQ,KAAK30I,SAAS,EAAG;cAE7B,OAAO8zI,QAAQ,CAACoC,IAAI,EAAE;YAEvB,CAAC,MAAM;cAEN;cACA,IAAMI,EAAE,GAAG,yBAAyB;cACpC,IAAMp0H,IAAI,GAAGo0H,EAAE,CAACp0H,IAAI,CAAEyyH,QAAQ,CAAE;cAChC,IAAM4B,KAAK,GAAGr0H,IAAI,IAAIA,IAAI,CAAE,CAAC,CAAE,GAAGA,IAAI,CAAE,CAAC,CAAE,CAAC/P,WAAW,EAAE,GAAGnS,SAAS;cACrE,IAAMw2I,OAAO,GAAG,IAAIC,WAAW,CAAEF,KAAK,CAAE;cACxC,OAAOzC,QAAQ,CAACkC,WAAW,EAAE,CAACj3I,IAAI,CAAE,UAAAs+C,EAAE;gBAAA,OAAIm5F,OAAO,CAACE,MAAM,CAAEr5F,EAAE,CAAE;cAAA,EAAE;YAEjE;QAAC;MAIJ,CAAC,CAAE,CACFt+C,IAAI,CAAE,UAAAsmB,IAAI,EAAI;QAEd;QACA;QACA+rH,KAAK,CAACx5H,GAAG,CAAEiO,GAAG,EAAER,IAAI,CAAE;QAEtB,IAAM4vH,SAAS,GAAGvB,OAAO,CAAE7tH,GAAG,CAAE;QAChC,OAAO6tH,OAAO,CAAE7tH,GAAG,CAAE;QAErB,KAAM,IAAItkB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG2nH,SAAS,CAAC3zI,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAEtD,IAAMwvB,QAAQ,GAAGkkH,SAAS,CAAE1zI,CAAC,CAAE;UAC/B,IAAKwvB,QAAQ,CAACygH,MAAM,EAAGzgH,QAAQ,CAACygH,MAAM,CAAEnsH,IAAI,CAAE;QAE/C;MAED,CAAC,CAAE,CACF3hB,KAAK,CAAE,UAAAnH,GAAG,EAAI;QAEd;;QAEA,IAAM04I,SAAS,GAAGvB,OAAO,CAAE7tH,GAAG,CAAE;QAEhC,IAAKovH,SAAS,KAAKj1I,SAAS,EAAG;UAE9B;UACAo0I,OAAI,CAACtB,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;UAC7B,MAAMtpB,GAAG;QAEV;QAEA,OAAOm3I,OAAO,CAAE7tH,GAAG,CAAE;QAErB,KAAM,IAAItkB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG2nH,SAAS,CAAC3zI,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAEtD,IAAMwvB,QAAQ,GAAGkkH,SAAS,CAAE1zI,CAAC,CAAE;UAC/B,IAAKwvB,QAAQ,CAAC2gH,OAAO,EAAG3gH,QAAQ,CAAC2gH,OAAO,CAAEn1I,GAAG,CAAE;QAEhD;QAEA63I,OAAI,CAACtB,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;MAE9B,CAAC,CAAE,CACF8wH,OAAO,CAAE,YAAM;QAEfvC,OAAI,CAACtB,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;MAE5B,CAAC,CAAE;MAEJ,IAAI,CAACitH,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;IAE9B;EAAC;IAAArqB,GAAA;IAAAE,KAAA,EAED,SAAAk7I,gBAAiBl7I,KAAK,EAAG;MAExB,IAAI,CAACk5I,YAAY,GAAGl5I,KAAK;MACzB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAm7I,YAAan7I,KAAK,EAAG;MAEpB,IAAI,CAACi5I,QAAQ,GAAGj5I,KAAK;MACrB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAu4I,UAAA;AAAA,EAnQuBpB,MAAM;AAAA73I,OAAA,CAAAi5I,UAAA,GAAAA,UAAA;AAAA,IAuQzB6C,eAAe,0BAAAC,QAAA;EAAAzwH,SAAA,CAAAwwH,eAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAxwH,YAAA,CAAAswH,eAAA;EAEpB,SAAAA,gBAAahE,OAAO,EAAG;IAAAhvI,eAAA,OAAAgzI,eAAA;IAAA,OAAAE,SAAA,CAAAx5I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAAwyI,eAAA;IAAAt7I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMoxF,MAAM,GAAG,IAAIyB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;MAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAC3B47D,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;MAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;MACjDR,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWqwH,IAAI,EAAG;QAEnC,IAAI;UAEH1E,MAAM,CAAEpwF,KAAK,CAACh5B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE8tH,IAAI,CAAE,CAAE,CAAE;QAE5C,CAAC,CAAC,OAAQ19H,CAAC,EAAG;UAEb,IAAKk5H,OAAO,EAAG;YAEdA,OAAO,CAAEl5H,CAAC,CAAE;UAEb,CAAC,MAAM;YAENtC,OAAO,CAACjX,KAAK,CAAEuZ,CAAC,CAAE;UAEnB;UAEA4oC,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;QAE/B;MAED,CAAC,EAAE4rH,UAAU,EAAEC,OAAO,CAAE;IAEzB;EAAC;IAAAl2I,GAAA;IAAAE,KAAA,EAED,SAAA0sB,MAAOqzF,IAAI,EAAG;MAEb,IAAM30E,UAAU,GAAG,EAAE;MAErB,KAAM,IAAIvlC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk6G,IAAI,CAACn6G,MAAM,EAAEC,CAAC,EAAG,EAAG;QAExC,IAAM6kI,IAAI,GAAG8I,aAAa,CAAC9mH,KAAK,CAAEqzF,IAAI,CAAEl6G,CAAC,CAAE,CAAE;QAE7CulC,UAAU,CAAC/lC,IAAI,CAAEqlI,IAAI,CAAE;MAExB;MAEA,OAAOt/F,UAAU;IAElB;EAAC;EAAA,OAAAgwG,eAAA;AAAA,EAxD4BjE,MAAM;AA4DpC;AACA;AACA;AACA;AACA;AAJA73I,OAAA,CAAA87I,eAAA,GAAAA,eAAA;AAAA,IAMMG,uBAAuB,0BAAAC,QAAA;EAAA5wH,SAAA,CAAA2wH,uBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA3wH,YAAA,CAAAywH,uBAAA;EAE5B,SAAAA,wBAAanE,OAAO,EAAG;IAAAhvI,eAAA,OAAAmzI,uBAAA;IAAA,OAAAE,SAAA,CAAA35I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAA2yI,uBAAA;IAAAz7I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMz7B,MAAM,GAAG,EAAE;MAEjB,IAAMyF,OAAO,GAAG,IAAIu1F,iBAAiB,EAAE;MAEvC,IAAM6xB,MAAM,GAAG,IAAIyB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;MAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAC3B47D,MAAM,CAACoE,eAAe,CAAE,aAAa,CAAE;MACvCpE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;MAC7CV,MAAM,CAACc,kBAAkB,CAAElyF,KAAK,CAAC4xF,eAAe,CAAE;MAElD,IAAIsC,MAAM,GAAG,CAAC;MAEd,SAAS8B,WAAWA,CAAE71I,CAAC,EAAG;QAEzBixI,MAAM,CAACW,IAAI,CAAEttH,GAAG,CAAEtkB,CAAC,CAAE,EAAE,UAAWqe,MAAM,EAAG;UAE1C,IAAMy3H,QAAQ,GAAGj2F,KAAK,CAACh5B,KAAK,CAAExI,MAAM,EAAE,IAAI,CAAE;UAE5C+F,MAAM,CAAEpkB,CAAC,CAAE,GAAG;YACbkjB,KAAK,EAAE4yH,QAAQ,CAAC5yH,KAAK;YACrBC,MAAM,EAAE2yH,QAAQ,CAAC3yH,MAAM;YACvBsC,MAAM,EAAEqwH,QAAQ,CAACrwH,MAAM;YACvBM,OAAO,EAAE+vH,QAAQ,CAAC/vH;UACnB,CAAC;UAEDguH,MAAM,IAAI,CAAC;UAEX,IAAKA,MAAM,KAAK,CAAC,EAAG;YAEnB,IAAK+B,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAGlsH,OAAO,CAACrE,SAAS,GAAGjd,YAAY;YAElEshB,OAAO,CAAChH,KAAK,GAAGuB,MAAM;YACtByF,OAAO,CAACpE,MAAM,GAAGqwH,QAAQ,CAACrwH,MAAM;YAChCoE,OAAO,CAAC9C,WAAW,GAAG,IAAI;YAE1B,IAAKkpH,MAAM,EAAGA,MAAM,CAAEpmH,OAAO,CAAE;UAEhC;QAED,CAAC,EAAEqmH,UAAU,EAAEC,OAAO,CAAE;MAEzB;MAEA,IAAK5rH,KAAK,CAACC,OAAO,CAAEF,GAAG,CAAE,EAAG;QAE3B,KAAM,IAAItkB,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGzH,GAAG,CAACvkB,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE,EAAG/rB,CAAC,EAAG;UAEhD61I,WAAW,CAAE71I,CAAC,CAAE;QAEjB;MAED,CAAC,MAAM;QAEN;;QAEAixI,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWjG,MAAM,EAAG;UAErC,IAAMy3H,QAAQ,GAAGj2F,KAAK,CAACh5B,KAAK,CAAExI,MAAM,EAAE,IAAI,CAAE;UAE5C,IAAKy3H,QAAQ,CAACE,SAAS,EAAG;YAEzB,IAAMpgB,KAAK,GAAGkgB,QAAQ,CAAC/vH,OAAO,CAAChmB,MAAM,GAAG+1I,QAAQ,CAACC,WAAW;YAE5D,KAAM,IAAI75H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG05G,KAAK,EAAE15G,CAAC,EAAG,EAAG;cAElCkI,MAAM,CAAElI,CAAC,CAAE,GAAG;gBAAE6J,OAAO,EAAE;cAAG,CAAC;cAE7B,KAAM,IAAI/lB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG81I,QAAQ,CAACC,WAAW,EAAE/1I,IAAC,EAAG,EAAG;gBAEjDokB,MAAM,CAAElI,CAAC,CAAE,CAAC6J,OAAO,CAACvmB,IAAI,CAAEs2I,QAAQ,CAAC/vH,OAAO,CAAE7J,CAAC,GAAG45H,QAAQ,CAACC,WAAW,GAAG/1I,IAAC,CAAE,CAAE;gBAC5EokB,MAAM,CAAElI,CAAC,CAAE,CAACuJ,MAAM,GAAGqwH,QAAQ,CAACrwH,MAAM;gBACpCrB,MAAM,CAAElI,CAAC,CAAE,CAACgH,KAAK,GAAG4yH,QAAQ,CAAC5yH,KAAK;gBAClCkB,MAAM,CAAElI,CAAC,CAAE,CAACiH,MAAM,GAAG2yH,QAAQ,CAAC3yH,MAAM;cAErC;YAED;YAEA0G,OAAO,CAAChH,KAAK,GAAGuB,MAAM;UAEvB,CAAC,MAAM;YAENyF,OAAO,CAAChH,KAAK,CAACK,KAAK,GAAG4yH,QAAQ,CAAC5yH,KAAK;YACpC2G,OAAO,CAAChH,KAAK,CAACM,MAAM,GAAG2yH,QAAQ,CAAC3yH,MAAM;YACtC0G,OAAO,CAAC9D,OAAO,GAAG+vH,QAAQ,CAAC/vH,OAAO;UAEnC;UAEA,IAAK+vH,QAAQ,CAACC,WAAW,KAAK,CAAC,EAAG;YAEjClsH,OAAO,CAACrE,SAAS,GAAGjd,YAAY;UAEjC;UAEAshB,OAAO,CAACpE,MAAM,GAAGqwH,QAAQ,CAACrwH,MAAM;UAChCoE,OAAO,CAAC9C,WAAW,GAAG,IAAI;UAE1B,IAAKkpH,MAAM,EAAGA,MAAM,CAAEpmH,OAAO,CAAE;QAEhC,CAAC,EAAEqmH,UAAU,EAAEC,OAAO,CAAE;MAEzB;MAEA,OAAOtmH,OAAO;IAEf;EAAC;EAAA,OAAA6rH,uBAAA;AAAA,EArHoCpE,MAAM;AAAA73I,OAAA,CAAAi8I,uBAAA,GAAAA,uBAAA;AAAA,IAyHtCO,WAAW,0BAAAC,QAAA;EAAAnxH,SAAA,CAAAkxH,WAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAlxH,YAAA,CAAAgxH,WAAA;EAEhB,SAAAA,YAAa1E,OAAO,EAAG;IAAAhvI,eAAA,OAAA0zI,WAAA;IAAA,OAAAE,SAAA,CAAAl6I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAAkzI,WAAA;IAAAh8I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAK,IAAI,CAAC96D,IAAI,KAAK52E,SAAS,EAAG6lB,GAAG,GAAG,IAAI,CAAC+wD,IAAI,GAAG/wD,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAACitH,OAAO,CAACV,UAAU,CAAEvsH,GAAG,CAAE;MAEpC,IAAMu7B,KAAK,GAAG,IAAI;MAElB,IAAMsM,MAAM,GAAG0jF,KAAK,CAACl6H,GAAG,CAAE2O,GAAG,CAAE;MAE/B,IAAK6nC,MAAM,KAAK1tD,SAAS,EAAG;QAE3BohD,KAAK,CAAC0xF,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;QAE9BwuH,UAAU,CAAE,YAAY;UAEvB,IAAK7C,MAAM,EAAGA,MAAM,CAAE9jF,MAAM,CAAE;UAE9BtM,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;QAE7B,CAAC,EAAE,CAAC,CAAE;QAEN,OAAO6nC,MAAM;MAEd;MAEA,IAAMtpC,KAAK,GAAGvE,eAAe,CAAE,KAAK,CAAE;MAEtC,SAAS83H,WAAWA,CAAA,EAAG;QAEtBC,oBAAoB,EAAE;QAEtBxG,KAAK,CAACx5H,GAAG,CAAEiO,GAAG,EAAE,IAAI,CAAE;QAEtB,IAAK2rH,MAAM,EAAGA,MAAM,CAAE,IAAI,CAAE;QAE5BpwF,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;MAE7B;MAEA,SAASgyH,YAAYA,CAAE1mI,KAAK,EAAG;QAE9BymI,oBAAoB,EAAE;QAEtB,IAAKlG,OAAO,EAAGA,OAAO,CAAEvgI,KAAK,CAAE;QAE/BiwC,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;QAC9Bu7B,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;MAE7B;MAEA,SAAS+xH,oBAAoBA,CAAA,EAAG;QAE/BxzH,KAAK,CAACtT,mBAAmB,CAAE,MAAM,EAAE6mI,WAAW,EAAE,KAAK,CAAE;QACvDvzH,KAAK,CAACtT,mBAAmB,CAAE,OAAO,EAAE+mI,YAAY,EAAE,KAAK,CAAE;MAE1D;MAEAzzH,KAAK,CAAC5T,gBAAgB,CAAE,MAAM,EAAEmnI,WAAW,EAAE,KAAK,CAAE;MACpDvzH,KAAK,CAAC5T,gBAAgB,CAAE,OAAO,EAAEqnI,YAAY,EAAE,KAAK,CAAE;MAEtD,IAAKhyH,GAAG,CAAChjB,KAAK,CAAE,CAAC,EAAE,CAAC,CAAE,KAAK,OAAO,EAAG;QAEpC,IAAK,IAAI,CAACkwI,WAAW,KAAK/yI,SAAS,EAAGokB,KAAK,CAAC2uH,WAAW,GAAG,IAAI,CAACA,WAAW;MAE3E;MAEA3xF,KAAK,CAAC0xF,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;MAE9BzB,KAAK,CAACE,GAAG,GAAGuB,GAAG;MAEf,OAAOzB,KAAK;IAEb;EAAC;EAAA,OAAAozH,WAAA;AAAA,EAjFwB3E,MAAM;AAAA73I,OAAA,CAAAw8I,WAAA,GAAAA,WAAA;AAAA,IAqF1BM,iBAAiB,0BAAAC,QAAA;EAAAzxH,SAAA,CAAAwxH,iBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAxxH,YAAA,CAAAsxH,iBAAA;EAEtB,SAAAA,kBAAahF,OAAO,EAAG;IAAAhvI,eAAA,OAAAg0I,iBAAA;IAAA,OAAAE,SAAA,CAAAx6I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAAwzI,iBAAA;IAAAt8I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAM8E,IAAI,EAAEzG,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAEzC,IAAMtmH,OAAO,GAAG,IAAI68B,WAAW,EAAE;MAEjC,IAAMuqF,MAAM,GAAG,IAAIgF,WAAW,CAAE,IAAI,CAAC1E,OAAO,CAAE;MAC9CN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;MACzCP,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAE3B,IAAI0+D,MAAM,GAAG,CAAC;MAEd,SAAS8B,WAAWA,CAAE71I,CAAC,EAAG;QAEzBixI,MAAM,CAACW,IAAI,CAAE8E,IAAI,CAAE12I,CAAC,CAAE,EAAE,UAAW6iB,KAAK,EAAG;UAE1CgH,OAAO,CAACzF,MAAM,CAAEpkB,CAAC,CAAE,GAAG6iB,KAAK;UAE3BkxH,MAAM,EAAG;UAET,IAAKA,MAAM,KAAK,CAAC,EAAG;YAEnBlqH,OAAO,CAAC9C,WAAW,GAAG,IAAI;YAE1B,IAAKkpH,MAAM,EAAGA,MAAM,CAAEpmH,OAAO,CAAE;UAEhC;QAED,CAAC,EAAEprB,SAAS,EAAE0xI,OAAO,CAAE;MAExB;MAEA,KAAM,IAAInwI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG02I,IAAI,CAAC32I,MAAM,EAAE,EAAGC,CAAC,EAAG;QAExC61I,WAAW,CAAE71I,CAAC,CAAE;MAEjB;MAEA,OAAO6pB,OAAO;IAEf;EAAC;EAAA,OAAA0sH,iBAAA;AAAA,EA9C8BjF,MAAM;AAkDtC;AACA;AACA;AACA;AACA;AAJA73I,OAAA,CAAA88I,iBAAA,GAAAA,iBAAA;AAAA,IAMMI,iBAAiB,0BAAAC,QAAA;EAAA7xH,SAAA,CAAA4xH,iBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA5xH,YAAA,CAAA0xH,iBAAA;EAEtB,SAAAA,kBAAapF,OAAO,EAAG;IAAAhvI,eAAA,OAAAo0I,iBAAA;IAAA,OAAAE,SAAA,CAAA56I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAA4zI,iBAAA;IAAA18I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMh2B,OAAO,GAAG,IAAI0vF,WAAW,EAAE;MAEjC,IAAM03B,MAAM,GAAG,IAAIyB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;MAC7CN,MAAM,CAACoE,eAAe,CAAE,aAAa,CAAE;MACvCpE,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;MAC7CV,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAC3B47D,MAAM,CAACc,kBAAkB,CAAElyF,KAAK,CAAC4xF,eAAe,CAAE;MAClDR,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWjG,MAAM,EAAG;QAErC,IAAMy4H,OAAO,GAAGj3F,KAAK,CAACh5B,KAAK,CAAExI,MAAM,CAAE;QAErC,IAAK,CAAEy4H,OAAO,EAAG;QAEjB,IAAKA,OAAO,CAACj0H,KAAK,KAAKpkB,SAAS,EAAG;UAElCorB,OAAO,CAAChH,KAAK,GAAGi0H,OAAO,CAACj0H,KAAK;QAE9B,CAAC,MAAM,IAAKi0H,OAAO,CAAChzH,IAAI,KAAKrlB,SAAS,EAAG;UAExCorB,OAAO,CAAChH,KAAK,CAACK,KAAK,GAAG4zH,OAAO,CAAC5zH,KAAK;UACnC2G,OAAO,CAAChH,KAAK,CAACM,MAAM,GAAG2zH,OAAO,CAAC3zH,MAAM;UACrC0G,OAAO,CAAChH,KAAK,CAACiB,IAAI,GAAGgzH,OAAO,CAAChzH,IAAI;QAElC;QAEA+F,OAAO,CAACxE,KAAK,GAAGyxH,OAAO,CAACzxH,KAAK,KAAK5mB,SAAS,GAAGq4I,OAAO,CAACzxH,KAAK,GAAGrd,mBAAmB;QACjF6hB,OAAO,CAACvE,KAAK,GAAGwxH,OAAO,CAACxxH,KAAK,KAAK7mB,SAAS,GAAGq4I,OAAO,CAACxxH,KAAK,GAAGtd,mBAAmB;QAEjF6hB,OAAO,CAACtE,SAAS,GAAGuxH,OAAO,CAACvxH,SAAS,KAAK9mB,SAAS,GAAGq4I,OAAO,CAACvxH,SAAS,GAAGhd,YAAY;QACtFshB,OAAO,CAACrE,SAAS,GAAGsxH,OAAO,CAACtxH,SAAS,KAAK/mB,SAAS,GAAGq4I,OAAO,CAACtxH,SAAS,GAAGjd,YAAY;QAEtFshB,OAAO,CAACnE,UAAU,GAAGoxH,OAAO,CAACpxH,UAAU,KAAKjnB,SAAS,GAAGq4I,OAAO,CAACpxH,UAAU,GAAG,CAAC;QAE9E,IAAKoxH,OAAO,CAACnxH,QAAQ,KAAKlnB,SAAS,EAAG;UAErCorB,OAAO,CAAClE,QAAQ,GAAGmxH,OAAO,CAACnxH,QAAQ;QAEpC;QAEA,IAAKmxH,OAAO,CAACzwH,KAAK,KAAK5nB,SAAS,EAAG;UAElCorB,OAAO,CAACxD,KAAK,GAAGywH,OAAO,CAACzwH,KAAK;QAE9B;QAEA,IAAKywH,OAAO,CAACrxH,MAAM,KAAKhnB,SAAS,EAAG;UAEnCorB,OAAO,CAACpE,MAAM,GAAGqxH,OAAO,CAACrxH,MAAM;QAEhC;QAEA,IAAKqxH,OAAO,CAAC96I,IAAI,KAAKyC,SAAS,EAAG;UAEjCorB,OAAO,CAAC7tB,IAAI,GAAG86I,OAAO,CAAC96I,IAAI;QAE5B;QAEA,IAAK86I,OAAO,CAAC/wH,OAAO,KAAKtnB,SAAS,EAAG;UAEpCorB,OAAO,CAAC9D,OAAO,GAAG+wH,OAAO,CAAC/wH,OAAO;UACjC8D,OAAO,CAACrE,SAAS,GAAG9c,wBAAwB,CAAC,CAAC;QAE/C;;QAEA,IAAKouI,OAAO,CAACf,WAAW,KAAK,CAAC,EAAG;UAEhClsH,OAAO,CAACrE,SAAS,GAAGjd,YAAY;QAEjC;QAEA,IAAKuuI,OAAO,CAAC3wH,eAAe,KAAK1nB,SAAS,EAAG;UAE5CorB,OAAO,CAAC1D,eAAe,GAAG2wH,OAAO,CAAC3wH,eAAe;QAElD;QAEA0D,OAAO,CAAC9C,WAAW,GAAG,IAAI;QAE1B,IAAKkpH,MAAM,EAAGA,MAAM,CAAEpmH,OAAO,EAAEitH,OAAO,CAAE;MAEzC,CAAC,EAAE5G,UAAU,EAAEC,OAAO,CAAE;MAGxB,OAAOtmH,OAAO;IAEf;EAAC;EAAA,OAAA8sH,iBAAA;AAAA,EAjG8BrF,MAAM;AAAA73I,OAAA,CAAAk9I,iBAAA,GAAAA,iBAAA;AAAA,IAqGhCI,aAAa,0BAAAC,QAAA;EAAAjyH,SAAA,CAAAgyH,aAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAhyH,YAAA,CAAA8xH,aAAA;EAElB,SAAAA,cAAaxF,OAAO,EAAG;IAAAhvI,eAAA,OAAAw0I,aAAA;IAAA,OAAAE,SAAA,CAAAh7I,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAAg0I,aAAA;IAAA98I,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtmH,OAAO,GAAG,IAAIhF,OAAO,EAAE;MAE7B,IAAMosH,MAAM,GAAG,IAAIgF,WAAW,CAAE,IAAI,CAAC1E,OAAO,CAAE;MAC9CN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;MACzCP,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAE3B47D,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWzB,KAAK,EAAG;QAEpCgH,OAAO,CAAChH,KAAK,GAAGA,KAAK;QACrBgH,OAAO,CAAC9C,WAAW,GAAG,IAAI;QAE1B,IAAKkpH,MAAM,KAAKxxI,SAAS,EAAG;UAE3BwxI,MAAM,CAAEpmH,OAAO,CAAE;QAElB;MAED,CAAC,EAAEqmH,UAAU,EAAEC,OAAO,CAAE;MAExB,OAAOtmH,OAAO;IAEf;EAAC;EAAA,OAAAktH,aAAA;AAAA,EA/B0BzF,MAAM;AAAA73I,OAAA,CAAAs9I,aAAA,GAAAA,aAAA;AAAA,IAmC5BG,KAAK,0BAAAC,WAAA;EAAApyH,SAAA,CAAAmyH,KAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAnyH,YAAA,CAAAiyH,KAAA;EAEV,SAAAA,MAAah4H,KAAK,EAAE2mE,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAwxD,OAAA;IAAA90I,eAAA,OAAA20I,KAAA;IAEnCG,OAAA,GAAAD,SAAA,CAAAn7I,IAAA;IAEAo7I,OAAA,CAAK1wG,OAAO,GAAG,IAAI;IAEnB0wG,OAAA,CAAKr7I,IAAI,GAAG,OAAO;IAEnBq7I,OAAA,CAAKn4H,KAAK,GAAG,IAAIa,KAAK,CAAEb,KAAK,CAAE;IAC/Bm4H,OAAA,CAAKxxD,SAAS,GAAGA,SAAS;IAAC,OAAAwxD,OAAA;EAE5B;EAACt0I,YAAA,CAAAm0I,KAAA;IAAAj9I,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;;MAET;IAAA;EAEA;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAA+iG,KAAA,CAAAt9I,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAAC5qB,KAAK,CAAC/I,IAAI,CAAE2J,MAAM,CAACZ,KAAK,CAAE;MAC/B,IAAI,CAAC2mE,SAAS,GAAG/lE,MAAM,CAAC+lE,SAAS;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAA5rF,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAA+iG,KAAA,CAAAt9I,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjCJ,IAAI,CAAC9iB,MAAM,CAACke,KAAK,GAAG,IAAI,CAACA,KAAK,CAACkC,MAAM,EAAE;MACvC0C,IAAI,CAAC9iB,MAAM,CAAC6kF,SAAS,GAAG,IAAI,CAACA,SAAS;MAEtC,IAAK,IAAI,CAACtrB,WAAW,KAAK97D,SAAS,EAAGqlB,IAAI,CAAC9iB,MAAM,CAACu5D,WAAW,GAAG,IAAI,CAACA,WAAW,CAACn5C,MAAM,EAAE;MAEzF,IAAK,IAAI,CAACglB,QAAQ,KAAK3nC,SAAS,EAAGqlB,IAAI,CAAC9iB,MAAM,CAAColC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MACvE,IAAK,IAAI,CAACtuB,KAAK,KAAKrZ,SAAS,EAAGqlB,IAAI,CAAC9iB,MAAM,CAAC8W,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9D,IAAK,IAAI,CAAC6hD,KAAK,KAAKl7D,SAAS,EAAGqlB,IAAI,CAAC9iB,MAAM,CAAC24D,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9D,IAAK,IAAI,CAAC6sB,QAAQ,KAAK/nF,SAAS,EAAGqlB,IAAI,CAAC9iB,MAAM,CAACwlF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAEvE,IAAK,IAAI,CAAC9qB,MAAM,KAAKj9D,SAAS,EAAGqlB,IAAI,CAAC9iB,MAAM,CAAC06D,MAAM,GAAG,IAAI,CAACA,MAAM,CAACn5C,MAAM,EAAE;MAE1E,OAAOuB,IAAI;IAEZ;EAAC;EAAA,OAAAozH,KAAA;AAAA,EAlDkB9yG,QAAQ;AAAA3qC,OAAA,CAAAy9I,KAAA,GAAAA,KAAA;AAAA,IAsDtBI,eAAe,0BAAAC,MAAA;EAAAxyH,SAAA,CAAAuyH,eAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAvyH,YAAA,CAAAqyH,eAAA;EAEpB,SAAAA,gBAAah9E,QAAQ,EAAEC,WAAW,EAAEsrB,SAAS,EAAG;IAAA,IAAA4xD,OAAA;IAAAl1I,eAAA,OAAA+0I,eAAA;IAE/CG,OAAA,GAAAD,SAAA,CAAAv7I,IAAA,OAAOq+D,QAAQ,EAAEurB,SAAS;IAE1B4xD,OAAA,CAAK9wD,iBAAiB,GAAG,IAAI;IAE7B8wD,OAAA,CAAKz7I,IAAI,GAAG,iBAAiB;IAE7By7I,OAAA,CAAKrhH,QAAQ,CAACjgB,IAAI,CAAEiuB,QAAQ,CAACM,SAAS,CAAE;IACxC+yG,OAAA,CAAK9wH,YAAY,EAAE;IAEnB8wH,OAAA,CAAKl9E,WAAW,GAAG,IAAIx6C,KAAK,CAAEw6C,WAAW,CAAE;IAAC,OAAAk9E,OAAA;EAE7C;EAAC10I,YAAA,CAAAu0I,eAAA;IAAAr9I,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAmjG,eAAA,CAAA19I,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAACywB,WAAW,CAACpkD,IAAI,CAAE2J,MAAM,CAACy6C,WAAW,CAAE;MAE3C,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA+8E,eAAA;AAAA,EAzB4BJ,KAAK;AAAAz9I,OAAA,CAAA69I,eAAA,GAAAA,eAAA;AA6BnC,IAAMI,mBAAmB,GAAG,aAAc,IAAI56G,OAAO,EAAE;AACvD,IAAM66G,qBAAqB,GAAG,aAAc,IAAI7mH,OAAO,EAAE;AACzD,IAAM8mH,aAAa,GAAG,aAAc,IAAI9mH,OAAO,EAAE;AAAC,IAE5C+mH,WAAW;EAEhB,SAAAA,YAAa7lH,MAAM,EAAG;IAAAzvB,eAAA,OAAAs1I,WAAA;IAErB,IAAI,CAAC7lH,MAAM,GAAGA,MAAM;IAEpB,IAAI,CAACo0D,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC7yD,MAAM,GAAG,CAAC;IACf,IAAI,CAACs3D,WAAW,GAAG,CAAC;IAEpB,IAAI,CAACxE,OAAO,GAAG,IAAI9wE,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;IAEtC,IAAI,CAACw7B,GAAG,GAAG,IAAI;IACf,IAAI,CAAC+5C,OAAO,GAAG,IAAI;IACnB,IAAI,CAACltE,MAAM,GAAG,IAAIif,OAAO,EAAE;IAE3B,IAAI,CAAC2sD,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC1iE,WAAW,GAAG,KAAK;IAExB,IAAI,CAAC0hE,QAAQ,GAAG,IAAI5/B,OAAO,EAAE;IAC7B,IAAI,CAACivF,aAAa,GAAG,IAAItiI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAExC,IAAI,CAACuiI,cAAc,GAAG,CAAC;IAEvB,IAAI,CAACC,UAAU,GAAG,CAEjB,IAAI3wH,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAEzB;EAEF;EAACtkB,YAAA,CAAA80I,WAAA;IAAA59I,GAAA;IAAAE,KAAA,EAED,SAAAmwF,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACytD,cAAc;IAE3B;EAAC;IAAA99I,GAAA;IAAAE,KAAA,EAED,SAAAuwF,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACjC,QAAQ;IAErB;EAAC;IAAAxuF,GAAA;IAAAE,KAAA,EAED,SAAAswF,eAAgBzG,KAAK,EAAG;MAEvB,IAAMyH,YAAY,GAAG,IAAI,CAACz5D,MAAM;MAChC,IAAMimH,YAAY,GAAG,IAAI,CAACp6H,MAAM;MAEhC85H,qBAAqB,CAAC9jH,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;MAChEo5D,YAAY,CAACr1D,QAAQ,CAACjgB,IAAI,CAAEwhI,qBAAqB,CAAE;MAEnDC,aAAa,CAAC/jH,qBAAqB,CAAEmwD,KAAK,CAACrhF,MAAM,CAAC0vB,WAAW,CAAE;MAC/Do5D,YAAY,CAACpxD,MAAM,CAAEu9G,aAAa,CAAE;MACpCnsD,YAAY,CAAC3jD,iBAAiB,EAAE;MAEhC4vG,mBAAmB,CAACh9H,gBAAgB,CAAE+wE,YAAY,CAACv5D,gBAAgB,EAAEu5D,YAAY,CAACx5D,kBAAkB,CAAE;MACtG,IAAI,CAACw2D,QAAQ,CAACv/B,uBAAuB,CAAEwuF,mBAAmB,CAAE;MAE5DO,YAAY,CAACvjI,GAAG,CACf,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAClB;MAEDujI,YAAY,CAACrhI,QAAQ,CAAE60E,YAAY,CAACv5D,gBAAgB,CAAE;MACtD+lH,YAAY,CAACrhI,QAAQ,CAAE60E,YAAY,CAACx5D,kBAAkB,CAAE;IAEzD;EAAC;IAAAh4B,GAAA;IAAAE,KAAA,EAED,SAAAqwF,YAAa0tD,aAAa,EAAG;MAE5B,OAAO,IAAI,CAACF,UAAU,CAAEE,aAAa,CAAE;IAExC;EAAC;IAAAj+I,GAAA;IAAAE,KAAA,EAED,SAAAgwF,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAAC2tD,aAAa;IAE1B;EAAC;IAAA79I,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAK,IAAI,CAAC8pB,GAAG,EAAG;QAEf,IAAI,CAACA,GAAG,CAAC9pB,OAAO,EAAE;MAEnB;MAEA,IAAK,IAAI,CAAC6jE,OAAO,EAAG;QAEnB,IAAI,CAACA,OAAO,CAAC7jE,OAAO,EAAE;MAEvB;IAED;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACkS,MAAM,GAAGlS,MAAM,CAACkS,MAAM,CAAC9b,KAAK,EAAE;MAEnC,IAAI,CAACkwE,IAAI,GAAGtmE,MAAM,CAACsmE,IAAI;MACvB,IAAI,CAAC5yD,MAAM,GAAG1T,MAAM,CAAC0T,MAAM;MAE3B,IAAI,CAAC8yD,OAAO,CAACnwE,IAAI,CAAE2J,MAAM,CAACwmE,OAAO,CAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAArsF,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMvhB,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAK,IAAI,CAAColF,IAAI,KAAK,CAAC,EAAGplF,MAAM,CAAColF,IAAI,GAAG,IAAI,CAACA,IAAI;MAC9C,IAAK,IAAI,CAACC,UAAU,KAAK,CAAC,EAAGrlF,MAAM,CAACqlF,UAAU,GAAG,IAAI,CAACA,UAAU;MAChE,IAAK,IAAI,CAAC7yD,MAAM,KAAK,CAAC,EAAGxyB,MAAM,CAACwyB,MAAM,GAAG,IAAI,CAACA,MAAM;MACpD,IAAK,IAAI,CAAC8yD,OAAO,CAACl1E,CAAC,KAAK,GAAG,IAAI,IAAI,CAACk1E,OAAO,CAAC50E,CAAC,KAAK,GAAG,EAAG1Q,MAAM,CAACslF,OAAO,GAAG,IAAI,CAACA,OAAO,CAACztE,OAAO,EAAE;MAE/F7X,MAAM,CAACgxB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACzP,MAAM,CAAE,KAAK,CAAE,CAACvhB,MAAM;MAClD,OAAOA,MAAM,CAACgxB,MAAM,CAACnU,MAAM;MAE3B,OAAO7c,MAAM;IAEd;EAAC;EAAA,OAAA62I,WAAA;AAAA;AAAA,IAIIM,eAAe,0BAAAC,YAAA;EAAArzH,SAAA,CAAAozH,eAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAApzH,YAAA,CAAAkzH,eAAA;EAEpB,SAAAA,gBAAA,EAAc;IAAA,IAAAG,OAAA;IAAA/1I,eAAA,OAAA41I,eAAA;IAEbG,OAAA,GAAAD,SAAA,CAAAp8I,IAAA,OAAO,IAAIknD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;IAE/Cm1F,OAAA,CAAKC,iBAAiB,GAAG,IAAI;IAE7BD,OAAA,CAAK30F,KAAK,GAAG,CAAC;IAAC,OAAA20F,OAAA;EAEhB;EAACv1I,YAAA,CAAAo1I,eAAA;IAAAl+I,GAAA;IAAAE,KAAA,EAED,SAAAswF,eAAgBzG,KAAK,EAAG;MAEvB,IAAMhyD,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAMsxB,GAAG,GAAGlzC,OAAO,GAAG,CAAC,GAAG4zE,KAAK,CAAClsE,KAAK,GAAG,IAAI,CAAC6rC,KAAK;MAClD,IAAMJ,MAAM,GAAG,IAAI,CAAC+iC,OAAO,CAACpjE,KAAK,GAAG,IAAI,CAACojE,OAAO,CAACnjE,MAAM;MACvD,IAAM2e,GAAG,GAAGkiD,KAAK,CAAC59C,QAAQ,IAAIpU,MAAM,CAAC8P,GAAG;MAExC,IAAKwhB,GAAG,KAAKtxB,MAAM,CAACsxB,GAAG,IAAIC,MAAM,KAAKvxB,MAAM,CAACuxB,MAAM,IAAIzhB,GAAG,KAAK9P,MAAM,CAAC8P,GAAG,EAAG;QAE3E9P,MAAM,CAACsxB,GAAG,GAAGA,GAAG;QAChBtxB,MAAM,CAACuxB,MAAM,GAAGA,MAAM;QACtBvxB,MAAM,CAAC8P,GAAG,GAAGA,GAAG;QAChB9P,MAAM,CAAC+xB,sBAAsB,EAAE;MAEhC;MAEA7P,IAAA,CAAAC,eAAA,CAAAgkG,eAAA,CAAAv+I,SAAA,2BAAAqC,IAAA,OAAsB+nF,KAAK;IAE5B;EAAC;IAAA/pF,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAgkG,eAAA,CAAAv+I,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAAC6jC,KAAK,GAAG7jC,MAAM,CAAC6jC,KAAK;MAEzB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAw0F,eAAA;AAAA,EAzC4BN,WAAW;AAAA,IA6CnCW,SAAS,0BAAAC,OAAA;EAAA1zH,SAAA,CAAAyzH,SAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAzzH,YAAA,CAAAuzH,SAAA;EAEd,SAAAA,UAAat5H,KAAK,EAAE2mE,SAAS,EAAEz/C,QAAQ,GAAG,CAAC,EAAEtuB,KAAK,GAAG5H,IAAI,CAACC,EAAE,GAAG,CAAC,EAAEq2E,QAAQ,GAAG,CAAC,EAAE7sB,KAAK,GAAG,CAAC,EAAG;IAAA,IAAAg/E,OAAA;IAAAp2I,eAAA,OAAAi2I,SAAA;IAE3FG,OAAA,GAAAD,SAAA,CAAAz8I,IAAA,OAAOijB,KAAK,EAAE2mE,SAAS;IAEvB8yD,OAAA,CAAKpyD,WAAW,GAAG,IAAI;IAEvBoyD,OAAA,CAAK38I,IAAI,GAAG,WAAW;IAEvB28I,OAAA,CAAKviH,QAAQ,CAACjgB,IAAI,CAAEiuB,QAAQ,CAACM,SAAS,CAAE;IACxCi0G,OAAA,CAAKhyH,YAAY,EAAE;IAEnBgyH,OAAA,CAAKh2I,MAAM,GAAG,IAAIyhC,QAAQ,EAAE;IAE5Bu0G,OAAA,CAAKvyG,QAAQ,GAAGA,QAAQ;IACxBuyG,OAAA,CAAK7gI,KAAK,GAAGA,KAAK;IAClB6gI,OAAA,CAAKnyD,QAAQ,GAAGA,QAAQ;IACxBmyD,OAAA,CAAKh/E,KAAK,GAAGA,KAAK,CAAC,CAAC;;IAEpBg/E,OAAA,CAAKj9E,MAAM,GAAG,IAAIy8E,eAAe,EAAE;IAAC,OAAAQ,OAAA;EAErC;EAAC51I,YAAA,CAAAy1I,SAAA;IAAAv+I,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA;MACA,OAAO,IAAI,CAACkwE,SAAS,GAAG31E,IAAI,CAACC,EAAE;IAEhC,CAAC;IAAAuE,GAAA,EAED,SAAAA,IAAWkkI,KAAK,EAAG;MAElB;MACA,IAAI,CAAC/yD,SAAS,GAAG+yD,KAAK,GAAG1oI,IAAI,CAACC,EAAE;IAEjC;EAAC;IAAAlW,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACw0C,MAAM,CAACx0C,OAAO,EAAE;IAEtB;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAqkG,SAAA,CAAA5+I,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAAC1D,QAAQ,GAAGtmB,MAAM,CAACsmB,QAAQ;MAC/B,IAAI,CAACtuB,KAAK,GAAGgI,MAAM,CAAChI,KAAK;MACzB,IAAI,CAAC0uE,QAAQ,GAAG1mE,MAAM,CAAC0mE,QAAQ;MAC/B,IAAI,CAAC7sB,KAAK,GAAG75C,MAAM,CAAC65C,KAAK;MAEzB,IAAI,CAACh3D,MAAM,GAAGmd,MAAM,CAACnd,MAAM,CAACuT,KAAK,EAAE;MAEnC,IAAI,CAACwlD,MAAM,GAAG57C,MAAM,CAAC47C,MAAM,CAACxlD,KAAK,EAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAsiI,SAAA;AAAA,EA5DsBtB,KAAK;AAAAz9I,OAAA,CAAA++I,SAAA,GAAAA,SAAA;AAgE7B,IAAMprC,iBAAiB,GAAG,aAAc,IAAItwE,OAAO,EAAE;AACrD,IAAM+7G,mBAAmB,GAAG,aAAc,IAAI/nH,OAAO,EAAE;AACvD,IAAMgoH,WAAW,GAAG,aAAc,IAAIhoH,OAAO,EAAE;AAAC,IAE1CioH,gBAAgB,0BAAAC,aAAA;EAAAj0H,SAAA,CAAAg0H,gBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAAh0H,YAAA,CAAA8zH,gBAAA;EAErB,SAAAA,iBAAA,EAAc;IAAA,IAAAG,OAAA;IAAA32I,eAAA,OAAAw2I,gBAAA;IAEbG,OAAA,GAAAD,SAAA,CAAAh9I,IAAA,OAAO,IAAIknD,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;IAE/C+1F,OAAA,CAAKtuD,kBAAkB,GAAG,IAAI;IAE9BsuD,OAAA,CAAKpB,aAAa,GAAG,IAAItiI,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAExC0jI,OAAA,CAAKnB,cAAc,GAAG,CAAC;IAEvBmB,OAAA,CAAKlB,UAAU,GAAG;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,IAAI3wH,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACzB;IACA,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CACzB;IAED6xH,OAAA,CAAKC,eAAe,GAAG,CACtB,IAAIroH,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACxE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAC1E;IAEDooH,OAAA,CAAKE,QAAQ,GAAG,CACf,IAAItoH,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EACtE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,IAAIA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CACxE;IAAC,OAAAooH,OAAA;EAEH;EAACn2I,YAAA,CAAAg2I,gBAAA;IAAA9+I,GAAA;IAAAE,KAAA,EAED,SAAAswF,eAAgBzG,KAAK,EAAEk0D,aAAa,GAAG,CAAC,EAAG;MAE1C,IAAMlmH,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMimH,YAAY,GAAG,IAAI,CAACp6H,MAAM;MAEhC,IAAMikB,GAAG,GAAGkiD,KAAK,CAAC59C,QAAQ,IAAIpU,MAAM,CAAC8P,GAAG;MAExC,IAAKA,GAAG,KAAK9P,MAAM,CAAC8P,GAAG,EAAG;QAEzB9P,MAAM,CAAC8P,GAAG,GAAGA,GAAG;QAChB9P,MAAM,CAAC+xB,sBAAsB,EAAE;MAEhC;MAEA80F,mBAAmB,CAAChlH,qBAAqB,CAAEmwD,KAAK,CAAC3xD,WAAW,CAAE;MAC9DL,MAAM,CAACoE,QAAQ,CAACjgB,IAAI,CAAE0iI,mBAAmB,CAAE;MAE3CC,WAAW,CAAC3iI,IAAI,CAAE6b,MAAM,CAACoE,QAAQ,CAAE;MACnC0iH,WAAW,CAACziI,GAAG,CAAE,IAAI,CAAC8iI,eAAe,CAAEjB,aAAa,CAAE,CAAE;MACxDlmH,MAAM,CAAC+M,EAAE,CAAC5oB,IAAI,CAAE,IAAI,CAACijI,QAAQ,CAAElB,aAAa,CAAE,CAAE;MAChDlmH,MAAM,CAACqI,MAAM,CAAEy+G,WAAW,CAAE;MAC5B9mH,MAAM,CAAC8V,iBAAiB,EAAE;MAE1BmwG,YAAY,CAAC93G,eAAe,CAAE,CAAE04G,mBAAmB,CAACznI,CAAC,EAAE,CAAEynI,mBAAmB,CAACnnI,CAAC,EAAE,CAAEmnI,mBAAmB,CAACtxH,CAAC,CAAE;MAEzG6lF,iBAAiB,CAAC1yF,gBAAgB,CAAEsX,MAAM,CAACE,gBAAgB,EAAEF,MAAM,CAACC,kBAAkB,CAAE;MACxF,IAAI,CAACw2D,QAAQ,CAACv/B,uBAAuB,CAAEkkD,iBAAiB,CAAE;IAE3D;EAAC;EAAA,OAAA2rC,gBAAA;AAAA,EAhF6BlB,WAAW;AAAA,IAoFpCwB,UAAU,0BAAAC,OAAA;EAAAv0H,SAAA,CAAAs0H,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAt0H,YAAA,CAAAo0H,UAAA;EAEf,SAAAA,WAAan6H,KAAK,EAAE2mE,SAAS,EAAEz/C,QAAQ,GAAG,CAAC,EAAEuzB,KAAK,GAAG,CAAC,EAAG;IAAA,IAAA6/E,OAAA;IAAAj3I,eAAA,OAAA82I,UAAA;IAExDG,OAAA,GAAAD,SAAA,CAAAt9I,IAAA,OAAOijB,KAAK,EAAE2mE,SAAS;IAEvB2zD,OAAA,CAAK9yD,YAAY,GAAG,IAAI;IAExB8yD,OAAA,CAAKx9I,IAAI,GAAG,YAAY;IAExBw9I,OAAA,CAAKpzG,QAAQ,GAAGA,QAAQ;IACxBozG,OAAA,CAAK7/E,KAAK,GAAGA,KAAK,CAAC,CAAC;;IAEpB6/E,OAAA,CAAK99E,MAAM,GAAG,IAAIq9E,gBAAgB,EAAE;IAAC,OAAAS,OAAA;EAEtC;EAACz2I,YAAA,CAAAs2I,UAAA;IAAAp/I,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA;MACA,OAAO,IAAI,CAACkwE,SAAS,GAAG,CAAC,GAAG31E,IAAI,CAACC,EAAE;IAEpC,CAAC;IAAAuE,GAAA,EAED,SAAAA,IAAWkkI,KAAK,EAAG;MAElB;MACA,IAAI,CAAC/yD,SAAS,GAAG+yD,KAAK,IAAK,CAAC,GAAG1oI,IAAI,CAACC,EAAE,CAAE;IAEzC;EAAC;IAAAlW,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACw0C,MAAM,CAACx0C,OAAO,EAAE;IAEtB;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAklG,UAAA,CAAAz/I,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAAC1D,QAAQ,GAAGtmB,MAAM,CAACsmB,QAAQ;MAC/B,IAAI,CAACuzB,KAAK,GAAG75C,MAAM,CAAC65C,KAAK;MAEzB,IAAI,CAAC+B,MAAM,GAAG57C,MAAM,CAAC47C,MAAM,CAACxlD,KAAK,EAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAmjI,UAAA;AAAA,EAjDuBnC,KAAK;AAAAz9I,OAAA,CAAA4/I,UAAA,GAAAA,UAAA;AAAA,IAqDxBI,sBAAsB,0BAAAC,aAAA;EAAA30H,SAAA,CAAA00H,sBAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA10H,YAAA,CAAAw0H,sBAAA;EAE3B,SAAAA,uBAAA,EAAc;IAAA,IAAAG,QAAA;IAAAr3I,eAAA,OAAAk3I,sBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAA19I,IAAA,OAAO,IAAIopE,kBAAkB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE;IAEzDu0E,QAAA,CAAKC,wBAAwB,GAAG,IAAI;IAAC,OAAAD,QAAA;EAEtC;EAAC,OAAA72I,YAAA,CAAA02I,sBAAA;AAAA,EARmC5B,WAAW;AAAA,IAY1CiC,gBAAgB,0BAAAC,OAAA;EAAAh1H,SAAA,CAAA+0H,gBAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAA/0H,YAAA,CAAA60H,gBAAA;EAErB,SAAAA,iBAAa56H,KAAK,EAAE2mE,SAAS,EAAG;IAAA,IAAAo0D,QAAA;IAAA13I,eAAA,OAAAu3I,gBAAA;IAE/BG,QAAA,GAAAD,SAAA,CAAA/9I,IAAA,OAAOijB,KAAK,EAAE2mE,SAAS;IAEvBo0D,QAAA,CAAK/zD,kBAAkB,GAAG,IAAI;IAE9B+zD,QAAA,CAAKj+I,IAAI,GAAG,kBAAkB;IAE9Bi+I,QAAA,CAAK7jH,QAAQ,CAACjgB,IAAI,CAAEiuB,QAAQ,CAACM,SAAS,CAAE;IACxCu1G,QAAA,CAAKtzH,YAAY,EAAE;IAEnBszH,QAAA,CAAKt3I,MAAM,GAAG,IAAIyhC,QAAQ,EAAE;IAE5B61G,QAAA,CAAKv+E,MAAM,GAAG,IAAI+9E,sBAAsB,EAAE;IAAC,OAAAQ,QAAA;EAE5C;EAACl3I,YAAA,CAAA+2I,gBAAA;IAAA7/I,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACw0C,MAAM,CAACx0C,OAAO,EAAE;IAEtB;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAA2lG,gBAAA,CAAAlgJ,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACnd,MAAM,GAAGmd,MAAM,CAACnd,MAAM,CAACuT,KAAK,EAAE;MACnC,IAAI,CAACwlD,MAAM,GAAG57C,MAAM,CAAC47C,MAAM,CAACxlD,KAAK,EAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA4jI,gBAAA;AAAA,EAlC6B5C,KAAK;AAAAz9I,OAAA,CAAAqgJ,gBAAA,GAAAA,gBAAA;AAAA,IAsC9BI,YAAY,0BAAAC,OAAA;EAAAp1H,SAAA,CAAAm1H,YAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAn1H,YAAA,CAAAi1H,YAAA;EAEjB,SAAAA,aAAah7H,KAAK,EAAE2mE,SAAS,EAAG;IAAA,IAAAw0D,QAAA;IAAA93I,eAAA,OAAA23I,YAAA;IAE/BG,QAAA,GAAAD,SAAA,CAAAn+I,IAAA,OAAOijB,KAAK,EAAE2mE,SAAS;IAEvBw0D,QAAA,CAAKv0D,cAAc,GAAG,IAAI;IAE1Bu0D,QAAA,CAAKr+I,IAAI,GAAG,cAAc;IAAC,OAAAq+I,QAAA;EAE5B;EAAC,OAAAt3I,YAAA,CAAAm3I,YAAA;AAAA,EAVyBhD,KAAK;AAAAz9I,OAAA,CAAAygJ,YAAA,GAAAA,YAAA;AAAA,IAc1BI,aAAa,0BAAAC,OAAA;EAAAx1H,SAAA,CAAAu1H,aAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAv1H,YAAA,CAAAq1H,aAAA;EAElB,SAAAA,cAAap7H,KAAK,EAAE2mE,SAAS,EAAE3iE,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,EAAG;IAAA,IAAAs3H,QAAA;IAAAl4I,eAAA,OAAA+3I,aAAA;IAExDG,QAAA,GAAAD,SAAA,CAAAv+I,IAAA,OAAOijB,KAAK,EAAE2mE,SAAS;IAEvB40D,QAAA,CAAKh0D,eAAe,GAAG,IAAI;IAE3Bg0D,QAAA,CAAKz+I,IAAI,GAAG,eAAe;IAE3By+I,QAAA,CAAKv3H,KAAK,GAAGA,KAAK;IAClBu3H,QAAA,CAAKt3H,MAAM,GAAGA,MAAM;IAAC,OAAAs3H,QAAA;EAEtB;EAAC13I,YAAA,CAAAu3I,aAAA;IAAArgJ,GAAA;IAAA0b,GAAA,EAED,SAAAA,IAAA,EAAY;MAEX;MACA,OAAO,IAAI,CAACkwE,SAAS,GAAG,IAAI,CAAC3iE,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGjT,IAAI,CAACC,EAAE;IAE3D,CAAC;IAAAuE,GAAA,EAED,SAAAA,IAAWkkI,KAAK,EAAG;MAElB;MACA,IAAI,CAAC/yD,SAAS,GAAG+yD,KAAK,IAAK,IAAI,CAAC11H,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGjT,IAAI,CAACC,EAAE,CAAE;IAEhE;EAAC;IAAAlW,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAmmG,aAAA,CAAA1gJ,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACoD,KAAK,GAAGpD,MAAM,CAACoD,KAAK;MACzB,IAAI,CAACC,MAAM,GAAGrD,MAAM,CAACqD,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;IAAAlpB,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAmmG,aAAA,CAAA1gJ,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjCJ,IAAI,CAAC9iB,MAAM,CAACkiB,KAAK,GAAG,IAAI,CAACA,KAAK;MAC9BY,IAAI,CAAC9iB,MAAM,CAACmiB,MAAM,GAAG,IAAI,CAACA,MAAM;MAEhC,OAAOW,IAAI;IAEZ;EAAC;EAAA,OAAAw2H,aAAA;AAAA,EAjD0BpD,KAAK;AAqDjC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAAz9I,OAAA,CAAA6gJ,aAAA,GAAAA,aAAA;AAAA,IAEMI,mBAAmB;EAExB,SAAAA,oBAAA,EAAc;IAAAn4I,eAAA,OAAAm4I,mBAAA;IAEb,IAAI,CAACC,qBAAqB,GAAG,IAAI;IAEjC,IAAI,CAAC10D,YAAY,GAAG,EAAE;IAEtB,KAAM,IAAIjmF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;MAE9B,IAAI,CAACimF,YAAY,CAACzmF,IAAI,CAAE,IAAIsxB,OAAO,EAAE,CAAE;IAExC;EAED;EAAC/tB,YAAA,CAAA23I,mBAAA;IAAAzgJ,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKuxE,YAAY,EAAG;MAEnB,KAAM,IAAIjmF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAACmW,IAAI,CAAE8vE,YAAY,CAAEjmF,CAAC,CAAE,CAAE;MAEjD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAygJ,KAAA,EAAO;MAEN,KAAM,IAAI56I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAAC0U,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEtC;MAEA,OAAO,IAAI;IAEZ;;IAEA;IACA;EAAA;IAAAza,GAAA;IAAAE,KAAA,EACA,SAAA0gJ,MAAOznH,MAAM,EAAEzwB,MAAM,EAAG;MAEvB;;MAEA,IAAMyO,CAAC,GAAGgiB,MAAM,CAAChiB,CAAC;QAAEM,CAAC,GAAG0hB,MAAM,CAAC1hB,CAAC;QAAE6V,CAAC,GAAG6L,MAAM,CAAC7L,CAAC;MAE9C,IAAMuzH,KAAK,GAAG,IAAI,CAAC70D,YAAY;;MAE/B;MACAtjF,MAAM,CAACwT,IAAI,CAAE2kI,KAAK,CAAE,CAAC,CAAE,CAAE,CAACjkI,cAAc,CAAE,QAAQ,CAAE;;MAEpD;MACAlU,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGppI,CAAC,CAAE;MAClD/O,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGvzH,CAAC,CAAE;MAClD5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAG1pI,CAAC,CAAE;;MAElD;MACAzO,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1pI,CAAC,GAAGM,CAAC,CAAE,CAAE;MAC1D/O,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAKppI,CAAC,GAAG6V,CAAC,CAAE,CAAE;MAC1D5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK,GAAG,GAAGvzH,CAAC,GAAGA,CAAC,GAAG,GAAG,CAAE,CAAE;MACtE5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1pI,CAAC,GAAGmW,CAAC,CAAE,CAAE;MAC1D5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1pI,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE,CAAE;MAElE,OAAO/O,MAAM;IAEd;;IAEA;IACA;IACA;EAAA;IAAA1I,GAAA;IAAAE,KAAA,EACA,SAAA4gJ,gBAAiB3nH,MAAM,EAAEzwB,MAAM,EAAG;MAEjC;;MAEA,IAAMyO,CAAC,GAAGgiB,MAAM,CAAChiB,CAAC;QAAEM,CAAC,GAAG0hB,MAAM,CAAC1hB,CAAC;QAAE6V,CAAC,GAAG6L,MAAM,CAAC7L,CAAC;MAE9C,IAAMuzH,KAAK,GAAG,IAAI,CAAC70D,YAAY;;MAE/B;MACAtjF,MAAM,CAACwT,IAAI,CAAE2kI,KAAK,CAAE,CAAC,CAAE,CAAE,CAACjkI,cAAc,CAAE,QAAQ,CAAE,CAAC,CAAC;;MAEtD;MACAlU,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGppI,CAAC,CAAE,CAAC,CAAC;MAC1D/O,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGvzH,CAAC,CAAE;MACxD5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG1pI,CAAC,CAAE;;MAExD;MACAzO,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG1pI,CAAC,GAAGM,CAAC,CAAE,CAAC,CAAC;MAC9D/O,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAGppI,CAAC,GAAG6V,CAAC,CAAE;MAC5D5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,GAAGvzH,CAAC,GAAGA,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAC;MACnE5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,QAAQ,GAAG1pI,CAAC,GAAGmW,CAAC,CAAE;MAC5D5kB,MAAM,CAAC6T,eAAe,CAAEskI,KAAK,CAAE,CAAC,CAAE,EAAE,QAAQ,IAAK1pI,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE,CAAE,CAAC,CAAC;;MAEpE,OAAO/O,MAAM;IAEd;EAAC;IAAA1I,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAK2vE,EAAE,EAAG;MAET,KAAM,IAAIhmF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAACqW,GAAG,CAAE2vE,EAAE,CAACC,YAAY,CAAEjmF,CAAC,CAAE,CAAE;MAEnD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA6gJ,YAAah1D,EAAE,EAAEnzE,CAAC,EAAG;MAEpB,KAAM,IAAI7S,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAACwW,eAAe,CAAEwvE,EAAE,CAACC,YAAY,CAAEjmF,CAAC,CAAE,EAAE6S,CAAC,CAAE;MAElE;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAsjB,MAAO5K,CAAC,EAAG;MAEV,KAAM,IAAI7S,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAAC6W,cAAc,CAAEhE,CAAC,CAAE;MAE3C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAwX,KAAMq0E,EAAE,EAAE1tE,KAAK,EAAG;MAEjB,KAAM,IAAItY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAAC2R,IAAI,CAAEq0E,EAAE,CAACC,YAAY,CAAEjmF,CAAC,CAAE,EAAEsY,KAAK,CAAE;MAE3D;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAre,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQstE,EAAE,EAAG;MAEZ,KAAM,IAAIhmF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9B,IAAK,CAAE,IAAI,CAACimF,YAAY,CAAEjmF,CAAC,CAAE,CAAC0Y,MAAM,CAAEstE,EAAE,CAACC,YAAY,CAAEjmF,CAAC,CAAE,CAAE,EAAG;UAE9D,OAAO,KAAK;QAEb;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM6vE,EAAE,EAAG;MAEV,OAAO,IAAI,CAACtxE,GAAG,CAAEsxE,EAAE,CAACC,YAAY,CAAE;IAEnC;EAAC;IAAAhsF,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAwe,UAAW9I,KAAK,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAE9B,IAAMqtE,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAIjmF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BimF,YAAY,CAAEjmF,CAAC,CAAE,CAAC2Y,SAAS,CAAE9I,KAAK,EAAE+I,MAAM,GAAK5Y,CAAC,GAAG,CAAG,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA0e,QAAShJ,KAAK,GAAG,EAAE,EAAE+I,MAAM,GAAG,CAAC,EAAG;MAEjC,IAAMqtE,YAAY,GAAG,IAAI,CAACA,YAAY;MAEtC,KAAM,IAAIjmF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;QAE9BimF,YAAY,CAAEjmF,CAAC,CAAE,CAAC6Y,OAAO,CAAEhJ,KAAK,EAAE+I,MAAM,GAAK5Y,CAAC,GAAG,CAAG,CAAE;MAEvD;MAEA,OAAO6P,KAAK;IAEb;;IAEA;IACA;EAAA;IAAA5V,GAAA;IAAAE,KAAA,EACA,SAAA8gJ,WAAmB7nH,MAAM,EAAE8nH,OAAO,EAAG;MAEpC;;MAEA,IAAM9pI,CAAC,GAAGgiB,MAAM,CAAChiB,CAAC;QAAEM,CAAC,GAAG0hB,MAAM,CAAC1hB,CAAC;QAAE6V,CAAC,GAAG6L,MAAM,CAAC7L,CAAC;;MAE9C;MACA2zH,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ;;MAEvB;MACAA,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGxpI,CAAC;MAC3BwpI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG3zH,CAAC;MAC3B2zH,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG9pI,CAAC;;MAE3B;MACA8pI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG9pI,CAAC,GAAGM,CAAC;MAC/BwpI,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAGxpI,CAAC,GAAG6V,CAAC;MAC/B2zH,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAK,CAAC,GAAG3zH,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAE;MAC3C2zH,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,GAAG9pI,CAAC,GAAGmW,CAAC;MAC/B2zH,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,IAAK9pI,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,CAAE;IAE5C;EAAC;EAAA,OAAAgpI,mBAAA;AAAA;AAAAjhJ,OAAA,CAAAihJ,mBAAA,GAAAA,mBAAA;AAAA,IAIIS,UAAU,0BAAAC,OAAA;EAAAr2H,SAAA,CAAAo2H,UAAA,EAAAC,OAAA;EAAA,IAAAC,SAAA,GAAAp2H,YAAA,CAAAk2H,UAAA;EAEf,SAAAA,WAAan1D,EAAE,GAAG,IAAI00D,mBAAmB,EAAE,EAAE70D,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAy1D,QAAA;IAAA/4I,eAAA,OAAA44I,UAAA;IAE5DG,QAAA,GAAAD,SAAA,CAAAp/I,IAAA,OAAOwC,SAAS,EAAEonF,SAAS;IAE3By1D,QAAA,CAAKv1D,YAAY,GAAG,IAAI;IAExBu1D,QAAA,CAAKt1D,EAAE,GAAGA,EAAE;IAAC,OAAAs1D,QAAA;EAEd;EAACv4I,YAAA,CAAAo4I,UAAA;IAAAlhJ,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAgnG,UAAA,CAAAvhJ,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACkmE,EAAE,CAAC7vE,IAAI,CAAE2J,MAAM,CAACkmE,EAAE,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA/rF,GAAA;IAAAE,KAAA,EAED,SAAA4mD,SAAUm5D,IAAI,EAAG;MAEhB,IAAI,CAACr0B,SAAS,GAAGq0B,IAAI,CAACr0B,SAAS,CAAC,CAAC;MACjC,IAAI,CAACG,EAAE,CAACrtE,SAAS,CAAEuhG,IAAI,CAACl0B,EAAE,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA/rF,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQ2B,IAAI,EAAG;MAEd,IAAMJ,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAgnG,UAAA,CAAAvhJ,SAAA,mBAAAqC,IAAA,OAAiBioB,IAAI,CAAE;MAEjCJ,IAAI,CAAC9iB,MAAM,CAACglF,EAAE,GAAG,IAAI,CAACA,EAAE,CAACntE,OAAO,EAAE;MAElC,OAAOiL,IAAI;IAEZ;EAAC;EAAA,OAAAq3H,UAAA;AAAA,EAvCuBjE,KAAK;AAAAz9I,OAAA,CAAA0hJ,UAAA,GAAAA,UAAA;AAAA,IA2CxBI,cAAc,0BAAAC,QAAA;EAAAz2H,SAAA,CAAAw2H,cAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAAx2H,YAAA,CAAAs2H,cAAA;EAEnB,SAAAA,eAAahK,OAAO,EAAG;IAAA,IAAAmK,QAAA;IAAAn5I,eAAA,OAAAg5I,cAAA;IAEtBG,QAAA,GAAAD,SAAA,CAAAx/I,IAAA,OAAOs1I,OAAO;IACdmK,QAAA,CAAK10H,QAAQ,GAAG,CAAC,CAAC;IAAC,OAAA00H,QAAA;EAEpB;EAAC34I,YAAA,CAAAw4I,cAAA;IAAAthJ,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMoxF,MAAM,GAAG,IAAIyB,UAAU,CAAE7yF,KAAK,CAAC0xF,OAAO,CAAE;MAC9CN,MAAM,CAACe,OAAO,CAAEnyF,KAAK,CAACw1B,IAAI,CAAE;MAC5B47D,MAAM,CAACiB,gBAAgB,CAAEryF,KAAK,CAAC8xF,aAAa,CAAE;MAC9CV,MAAM,CAACc,kBAAkB,CAAElyF,KAAK,CAAC4xF,eAAe,CAAE;MAClDR,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWqwH,IAAI,EAAG;QAEnC,IAAI;UAEH1E,MAAM,CAAEpwF,KAAK,CAACh5B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE8tH,IAAI,CAAE,CAAE,CAAE;QAE5C,CAAC,CAAC,OAAQ19H,CAAC,EAAG;UAEb,IAAKk5H,OAAO,EAAG;YAEdA,OAAO,CAAEl5H,CAAC,CAAE;UAEb,CAAC,MAAM;YAENtC,OAAO,CAACjX,KAAK,CAAEuZ,CAAC,CAAE;UAEnB;UAEA4oC,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;QAE/B;MAED,CAAC,EAAE4rH,UAAU,EAAEC,OAAO,CAAE;IAEzB;EAAC;IAAAl2I,GAAA;IAAAE,KAAA,EAED,SAAA0sB,MAAOqzF,IAAI,EAAG;MAEb,IAAMlzF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,SAAS20H,UAAUA,CAAEr7I,IAAI,EAAG;QAE3B,IAAK0mB,QAAQ,CAAE1mB,IAAI,CAAE,KAAK7B,SAAS,EAAG;UAErCkW,OAAO,CAACC,IAAI,CAAE,yCAAyC,EAAEtU,IAAI,CAAE;QAEhE;QAEA,OAAO0mB,QAAQ,CAAE1mB,IAAI,CAAE;MAExB;MAEA,IAAMmpC,QAAQ,GAAG8xG,cAAc,CAACK,sBAAsB,CAAE1hC,IAAI,CAACl+G,IAAI,CAAE;MAEnE,IAAKk+G,IAAI,CAACvpG,IAAI,KAAKlS,SAAS,EAAGgrC,QAAQ,CAAC94B,IAAI,GAAGupG,IAAI,CAACvpG,IAAI;MACxD,IAAKupG,IAAI,CAAC55G,IAAI,KAAK7B,SAAS,EAAGgrC,QAAQ,CAACnpC,IAAI,GAAG45G,IAAI,CAAC55G,IAAI;MACxD,IAAK45G,IAAI,CAACh7F,KAAK,KAAKzgB,SAAS,IAAIgrC,QAAQ,CAACvqB,KAAK,KAAKzgB,SAAS,EAAGgrC,QAAQ,CAACvqB,KAAK,CAACiB,MAAM,CAAE+5F,IAAI,CAACh7F,KAAK,CAAE;MACnG,IAAKg7F,IAAI,CAACxqE,SAAS,KAAKjxC,SAAS,EAAGgrC,QAAQ,CAACiG,SAAS,GAAGwqE,IAAI,CAACxqE,SAAS;MACvE,IAAKwqE,IAAI,CAACvqE,SAAS,KAAKlxC,SAAS,EAAGgrC,QAAQ,CAACkG,SAAS,GAAGuqE,IAAI,CAACvqE,SAAS;MACvE,IAAKuqE,IAAI,CAACtqE,KAAK,KAAKnxC,SAAS,EAAGgrC,QAAQ,CAACmG,KAAK,GAAGsqE,IAAI,CAACtqE,KAAK;MAC3D,IAAKsqE,IAAI,CAACrqE,UAAU,KAAKpxC,SAAS,EAAGgrC,QAAQ,CAACoG,UAAU,GAAG,IAAI9vB,KAAK,EAAE,CAACI,MAAM,CAAE+5F,IAAI,CAACrqE,UAAU,CAAE;MAChG,IAAKqqE,IAAI,CAACpqE,cAAc,KAAKrxC,SAAS,EAAGgrC,QAAQ,CAACqG,cAAc,GAAGoqE,IAAI,CAACpqE,cAAc;MACtF,IAAKoqE,IAAI,CAACnqE,QAAQ,KAAKtxC,SAAS,IAAIgrC,QAAQ,CAACsG,QAAQ,KAAKtxC,SAAS,EAAGgrC,QAAQ,CAACsG,QAAQ,CAAC5vB,MAAM,CAAE+5F,IAAI,CAACnqE,QAAQ,CAAE;MAC/G,IAAKmqE,IAAI,CAACjqE,QAAQ,KAAKxxC,SAAS,IAAIgrC,QAAQ,CAACwG,QAAQ,KAAKxxC,SAAS,EAAGgrC,QAAQ,CAACwG,QAAQ,CAAC9vB,MAAM,CAAE+5F,IAAI,CAACjqE,QAAQ,CAAE;MAC/G,IAAKiqE,IAAI,CAAChqE,iBAAiB,KAAKzxC,SAAS,EAAGgrC,QAAQ,CAACyG,iBAAiB,GAAGgqE,IAAI,CAAChqE,iBAAiB;MAC/F,IAAKgqE,IAAI,CAAC/pE,aAAa,KAAK1xC,SAAS,IAAIgrC,QAAQ,CAAC0G,aAAa,KAAK1xC,SAAS,EAAGgrC,QAAQ,CAAC0G,aAAa,CAAChwB,MAAM,CAAE+5F,IAAI,CAAC/pE,aAAa,CAAE;MACnI,IAAK+pE,IAAI,CAAC9pE,SAAS,KAAK3xC,SAAS,EAAGgrC,QAAQ,CAAC2G,SAAS,GAAG8pE,IAAI,CAAC9pE,SAAS;MACvE,IAAK8pE,IAAI,CAAC7pE,SAAS,KAAK5xC,SAAS,EAAGgrC,QAAQ,CAAC4G,SAAS,GAAG6pE,IAAI,CAAC7pE,SAAS;MACvE,IAAK6pE,IAAI,CAAC5pE,kBAAkB,KAAK7xC,SAAS,EAAGgrC,QAAQ,CAAC6G,kBAAkB,GAAG4pE,IAAI,CAAC5pE,kBAAkB;MAClG,IAAK4pE,IAAI,CAACvpE,WAAW,KAAKlyC,SAAS,EAAGgrC,QAAQ,CAACkH,WAAW,GAAGupE,IAAI,CAACvpE,WAAW;MAC7E,IAAKupE,IAAI,CAACtpE,cAAc,KAAKnyC,SAAS,EAAGgrC,QAAQ,CAACmH,cAAc,GAAGspE,IAAI,CAACtpE,cAAc;MACtF,IAAKspE,IAAI,CAACrpE,yBAAyB,KAAKpyC,SAAS,EAAGgrC,QAAQ,CAACoH,yBAAyB,GAAGqpE,IAAI,CAACrpE,yBAAyB;MACvH,IAAKqpE,IAAI,CAACvnE,YAAY,KAAKl0C,SAAS,EAAGgrC,QAAQ,CAACkJ,YAAY,GAAGunE,IAAI,CAACvnE,YAAY;MAChF,IAAKunE,IAAI,CAACrnE,SAAS,KAAKp0C,SAAS,EAAGgrC,QAAQ,CAACoJ,SAAS,GAAGqnE,IAAI,CAACrnE,SAAS;MACvE,IAAKqnE,IAAI,CAACnnE,mBAAmB,KAAKt0C,SAAS,EAAGgrC,QAAQ,CAACsJ,mBAAmB,GAAGmnE,IAAI,CAACnnE,mBAAmB;MACrG,IAAKmnE,IAAI,CAAClnE,gBAAgB,KAAKv0C,SAAS,IAAIgrC,QAAQ,CAACuJ,gBAAgB,KAAKv0C,SAAS,EAAGgrC,QAAQ,CAACuJ,gBAAgB,CAAC7yB,MAAM,CAAE+5F,IAAI,CAAClnE,gBAAgB,CAAE;MAC/I,IAAKknE,IAAI,CAACxmE,GAAG,KAAKj1C,SAAS,EAAGgrC,QAAQ,CAACiK,GAAG,GAAGwmE,IAAI,CAACxmE,GAAG;MACrD,IAAKwmE,IAAI,CAAC1qE,WAAW,KAAK/wC,SAAS,EAAGgrC,QAAQ,CAAC+F,WAAW,GAAG0qE,IAAI,CAAC1qE,WAAW;MAC7E,IAAK0qE,IAAI,CAACntE,QAAQ,KAAKtuC,SAAS,EAAGgrC,QAAQ,CAACsD,QAAQ,GAAGmtE,IAAI,CAACntE,QAAQ;MACpE,IAAKmtE,IAAI,CAAC5nE,OAAO,KAAK7zC,SAAS,EAAGgrC,QAAQ,CAAC6I,OAAO,GAAG4nE,IAAI,CAAC5nE,OAAO;MACjE,IAAK4nE,IAAI,CAACltE,IAAI,KAAKvuC,SAAS,EAAGgrC,QAAQ,CAACuD,IAAI,GAAGktE,IAAI,CAACltE,IAAI;MACxD,IAAKktE,IAAI,CAAC1rE,UAAU,KAAK/vC,SAAS,EAAGgrC,QAAQ,CAAC+E,UAAU,GAAG0rE,IAAI,CAAC1rE,UAAU;MAC1E,IAAK0rE,IAAI,CAAChtE,OAAO,KAAKzuC,SAAS,EAAGgrC,QAAQ,CAACyD,OAAO,GAAGgtE,IAAI,CAAChtE,OAAO;MACjE,IAAKgtE,IAAI,CAAC/sE,WAAW,KAAK1uC,SAAS,EAAGgrC,QAAQ,CAAC0D,WAAW,GAAG+sE,IAAI,CAAC/sE,WAAW;MAC7E,IAAK+sE,IAAI,CAAC7mE,SAAS,KAAK50C,SAAS,EAAGgrC,QAAQ,CAAC4J,SAAS,GAAG6mE,IAAI,CAAC7mE,SAAS;MACvE,IAAK6mE,IAAI,CAACvsE,SAAS,KAAKlvC,SAAS,EAAGgrC,QAAQ,CAACkE,SAAS,GAAGusE,IAAI,CAACvsE,SAAS;MACvE,IAAKusE,IAAI,CAACtsE,UAAU,KAAKnvC,SAAS,EAAGgrC,QAAQ,CAACmE,UAAU,GAAGssE,IAAI,CAACtsE,UAAU;MAC1E,IAAKssE,IAAI,CAACzrE,UAAU,KAAKhwC,SAAS,EAAGgrC,QAAQ,CAACgF,UAAU,GAAGyrE,IAAI,CAACzrE,UAAU;MAE1E,IAAKyrE,IAAI,CAAC9rE,YAAY,KAAK3vC,SAAS,EAAGgrC,QAAQ,CAAC2E,YAAY,GAAG8rE,IAAI,CAAC9rE,YAAY;MAChF,IAAK8rE,IAAI,CAACrsE,gBAAgB,KAAKpvC,SAAS,EAAGgrC,QAAQ,CAACoE,gBAAgB,GAAGqsE,IAAI,CAACrsE,gBAAgB;MAC5F,IAAKqsE,IAAI,CAACpsE,WAAW,KAAKrvC,SAAS,EAAGgrC,QAAQ,CAACqE,WAAW,GAAGosE,IAAI,CAACpsE,WAAW;MAC7E,IAAKosE,IAAI,CAACnsE,UAAU,KAAKtvC,SAAS,EAAGgrC,QAAQ,CAACsE,UAAU,GAAGmsE,IAAI,CAACnsE,UAAU;MAC1E,IAAKmsE,IAAI,CAAClsE,eAAe,KAAKvvC,SAAS,EAAGgrC,QAAQ,CAACuE,eAAe,GAAGksE,IAAI,CAAClsE,eAAe;MACzF,IAAKksE,IAAI,CAACjsE,WAAW,KAAKxvC,SAAS,EAAGgrC,QAAQ,CAACwE,WAAW,GAAGisE,IAAI,CAACjsE,WAAW;MAC7E,IAAKisE,IAAI,CAAChsE,YAAY,KAAKzvC,SAAS,EAAGgrC,QAAQ,CAACyE,YAAY,GAAGgsE,IAAI,CAAChsE,YAAY;MAChF,IAAKgsE,IAAI,CAAC/rE,YAAY,KAAK1vC,SAAS,EAAGgrC,QAAQ,CAAC0E,YAAY,GAAG+rE,IAAI,CAAC/rE,YAAY;MAEhF,IAAK+rE,IAAI,CAAC5mE,SAAS,KAAK70C,SAAS,EAAGgrC,QAAQ,CAAC6J,SAAS,GAAG4mE,IAAI,CAAC5mE,SAAS;MACvE,IAAK4mE,IAAI,CAAC3mE,kBAAkB,KAAK90C,SAAS,EAAGgrC,QAAQ,CAAC8J,kBAAkB,GAAG2mE,IAAI,CAAC3mE,kBAAkB;MAClG,IAAK2mE,IAAI,CAAC1mE,gBAAgB,KAAK/0C,SAAS,EAAGgrC,QAAQ,CAAC+J,gBAAgB,GAAG0mE,IAAI,CAAC1mE,gBAAgB;MAC5F,IAAK0mE,IAAI,CAACzmE,iBAAiB,KAAKh1C,SAAS,EAAGgrC,QAAQ,CAACgK,iBAAiB,GAAGymE,IAAI,CAACzmE,iBAAiB;MAE/F,IAAKymE,IAAI,CAAC58F,QAAQ,KAAK7e,SAAS,EAAGgrC,QAAQ,CAACnsB,QAAQ,GAAG48F,IAAI,CAAC58F,QAAQ;MAEpE,IAAK48F,IAAI,CAAChnE,SAAS,KAAK,CAAC,EAAGzJ,QAAQ,CAACyJ,SAAS,GAAGgnE,IAAI,CAAChnE,SAAS;MAC/D,IAAKgnE,IAAI,CAAC/mE,QAAQ,KAAK10C,SAAS,EAAGgrC,QAAQ,CAAC0J,QAAQ,GAAG+mE,IAAI,CAAC/mE,QAAQ;MACpE,IAAK+mE,IAAI,CAAC9mE,OAAO,KAAK30C,SAAS,EAAGgrC,QAAQ,CAAC2J,OAAO,GAAG8mE,IAAI,CAAC9mE,OAAO;MACjE,IAAK8mE,IAAI,CAACz8F,KAAK,KAAKhf,SAAS,EAAGgrC,QAAQ,CAAChsB,KAAK,GAAGy8F,IAAI,CAACz8F,KAAK;MAE3D,IAAKy8F,IAAI,CAACvrE,aAAa,KAAKlwC,SAAS,EAAGgrC,QAAQ,CAACkF,aAAa,GAAGurE,IAAI,CAACvrE,aAAa;MACnF,IAAKurE,IAAI,CAACtrE,mBAAmB,KAAKnwC,SAAS,EAAGgrC,QAAQ,CAACmF,mBAAmB,GAAGsrE,IAAI,CAACtrE,mBAAmB;MACrG,IAAKsrE,IAAI,CAACrrE,kBAAkB,KAAKpwC,SAAS,EAAGgrC,QAAQ,CAACoF,kBAAkB,GAAGqrE,IAAI,CAACrrE,kBAAkB;MAElG,IAAKqrE,IAAI,CAACprE,SAAS,KAAKrwC,SAAS,EAAGgrC,QAAQ,CAACqF,SAAS,GAAGorE,IAAI,CAACprE,SAAS;MAEvE,IAAKorE,IAAI,CAACnrE,eAAe,KAAKtwC,SAAS,EAAGgrC,QAAQ,CAACsF,eAAe,GAAGmrE,IAAI,CAACnrE,eAAe;MACzF,IAAKmrE,IAAI,CAAClrE,kBAAkB,KAAKvwC,SAAS,EAAGgrC,QAAQ,CAACuF,kBAAkB,GAAGkrE,IAAI,CAAClrE,kBAAkB;MAElG,IAAKkrE,IAAI,CAACh1E,OAAO,KAAKzmC,SAAS,EAAGgrC,QAAQ,CAACvE,OAAO,GAAGg1E,IAAI,CAACh1E,OAAO;MAEjE,IAAKg1E,IAAI,CAACjrE,UAAU,KAAKxwC,SAAS,EAAGgrC,QAAQ,CAACwF,UAAU,GAAGirE,IAAI,CAACjrE,UAAU;MAE1E,IAAKirE,IAAI,CAAC3zF,QAAQ,KAAK9nB,SAAS,EAAGgrC,QAAQ,CAACljB,QAAQ,GAAG2zF,IAAI,CAAC3zF,QAAQ;MAEpE,IAAK2zF,IAAI,CAACjtE,YAAY,KAAKxuC,SAAS,EAAG;QAEtC,IAAK,OAAOy7G,IAAI,CAACjtE,YAAY,KAAK,QAAQ,EAAG;UAE5CxD,QAAQ,CAACwD,YAAY,GAAKitE,IAAI,CAACjtE,YAAY,GAAG,CAAC,GAAK,IAAI,GAAG,KAAK;QAEjE,CAAC,MAAM;UAENxD,QAAQ,CAACwD,YAAY,GAAGitE,IAAI,CAACjtE,YAAY;QAE1C;MAED;;MAEA;;MAEA,IAAKitE,IAAI,CAAC94D,QAAQ,KAAK3iD,SAAS,EAAG;QAElC,KAAM,IAAM6B,IAAI,IAAI45G,IAAI,CAAC94D,QAAQ,EAAG;UAEnC,IAAM0B,OAAO,GAAGo3D,IAAI,CAAC94D,QAAQ,CAAE9gD,IAAI,CAAE;UAErCmpC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,GAAG,CAAC,CAAC;UAE9B,QAASwiD,OAAO,CAAC9mD,IAAI;YAEpB,KAAK,GAAG;cACPytC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAGwhJ,UAAU,CAAE74F,OAAO,CAAC3oD,KAAK,CAAE;cAC7D;YAED,KAAK,GAAG;cACPsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAI4lB,KAAK,EAAE,CAACI,MAAM,CAAE2iC,OAAO,CAAC3oD,KAAK,CAAE;cACrE;YAED,KAAK,IAAI;cACRsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAIqb,OAAO,EAAE,CAACmD,SAAS,CAAEmqC,OAAO,CAAC3oD,KAAK,CAAE;cAC1E;YAED,KAAK,IAAI;cACRsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAI22B,OAAO,EAAE,CAACnY,SAAS,CAAEmqC,OAAO,CAAC3oD,KAAK,CAAE;cAC1E;YAED,KAAK,IAAI;cACRsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAIktB,OAAO,EAAE,CAAC1O,SAAS,CAAEmqC,OAAO,CAAC3oD,KAAK,CAAE;cAC1E;YAED,KAAK,IAAI;cACRsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAImf,OAAO,EAAE,CAACX,SAAS,CAAEmqC,OAAO,CAAC3oD,KAAK,CAAE;cAC1E;YAED,KAAK,IAAI;cACRsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG,IAAI2iC,OAAO,EAAE,CAACnkB,SAAS,CAAEmqC,OAAO,CAAC3oD,KAAK,CAAE;cAC1E;YAED;cACCsvC,QAAQ,CAAC2X,QAAQ,CAAE9gD,IAAI,CAAE,CAACnG,KAAK,GAAG2oD,OAAO,CAAC3oD,KAAK;UAAC;QAInD;MAED;MAEA,IAAK+/G,IAAI,CAACn4D,OAAO,KAAKtjD,SAAS,EAAGgrC,QAAQ,CAACsY,OAAO,GAAGm4D,IAAI,CAACn4D,OAAO;MACjE,IAAKm4D,IAAI,CAACj4D,YAAY,KAAKxjD,SAAS,EAAGgrC,QAAQ,CAACwY,YAAY,GAAGi4D,IAAI,CAACj4D,YAAY;MAChF,IAAKi4D,IAAI,CAACh4D,cAAc,KAAKzjD,SAAS,EAAGgrC,QAAQ,CAACyY,cAAc,GAAGg4D,IAAI,CAACh4D,cAAc;MAEtF,IAAKg4D,IAAI,CAAC73D,UAAU,KAAK5jD,SAAS,EAAG;QAEpC,KAAM,IAAMxE,GAAG,IAAIigH,IAAI,CAAC73D,UAAU,EAAG;UAEpC5Y,QAAQ,CAAC4Y,UAAU,CAAEpoD,GAAG,CAAE,GAAGigH,IAAI,CAAC73D,UAAU,CAAEpoD,GAAG,CAAE;QAEpD;MAED;;MAEA;;MAEA,IAAKigH,IAAI,CAAC2hC,OAAO,KAAKp9I,SAAS,EAAGgrC,QAAQ,CAAC+F,WAAW,GAAG0qE,IAAI,CAAC2hC,OAAO,KAAK,CAAC,CAAC,CAAC;;MAE7E;;MAEA,IAAK3hC,IAAI,CAACp5F,IAAI,KAAKriB,SAAS,EAAGgrC,QAAQ,CAAC3oB,IAAI,GAAGo5F,IAAI,CAACp5F,IAAI;MACxD,IAAKo5F,IAAI,CAACjnE,eAAe,KAAKx0C,SAAS,EAAGgrC,QAAQ,CAACwJ,eAAe,GAAGinE,IAAI,CAACjnE,eAAe;;MAEzF;;MAEA,IAAKinE,IAAI,CAAClpE,GAAG,KAAKvyC,SAAS,EAAGgrC,QAAQ,CAACuH,GAAG,GAAG2qG,UAAU,CAAEzhC,IAAI,CAAClpE,GAAG,CAAE;MACnE,IAAKkpE,IAAI,CAACjpE,MAAM,KAAKxyC,SAAS,EAAGgrC,QAAQ,CAACwH,MAAM,GAAG0qG,UAAU,CAAEzhC,IAAI,CAACjpE,MAAM,CAAE;MAE5E,IAAKipE,IAAI,CAAChpE,QAAQ,KAAKzyC,SAAS,EAAGgrC,QAAQ,CAACyH,QAAQ,GAAGyqG,UAAU,CAAEzhC,IAAI,CAAChpE,QAAQ,CAAE;MAElF,IAAKgpE,IAAI,CAAC3oE,OAAO,KAAK9yC,SAAS,EAAGgrC,QAAQ,CAAC8H,OAAO,GAAGoqG,UAAU,CAAEzhC,IAAI,CAAC3oE,OAAO,CAAE;MAC/E,IAAK2oE,IAAI,CAAC1oE,SAAS,KAAK/yC,SAAS,EAAGgrC,QAAQ,CAAC+H,SAAS,GAAG0oE,IAAI,CAAC1oE,SAAS;MAEvE,IAAK0oE,IAAI,CAACzoE,SAAS,KAAKhzC,SAAS,EAAGgrC,QAAQ,CAACgI,SAAS,GAAGkqG,UAAU,CAAEzhC,IAAI,CAACzoE,SAAS,CAAE;MACrF,IAAKyoE,IAAI,CAACxoE,aAAa,KAAKjzC,SAAS,EAAGgrC,QAAQ,CAACiI,aAAa,GAAGwoE,IAAI,CAACxoE,aAAa;MACnF,IAAKwoE,IAAI,CAACvoE,WAAW,KAAKlzC,SAAS,EAAG;QAErC,IAAIkzC,WAAW,GAAGuoE,IAAI,CAACvoE,WAAW;QAElC,IAAKptB,KAAK,CAACC,OAAO,CAAEmtB,WAAW,CAAE,KAAK,KAAK,EAAG;UAE7C;;UAEAA,WAAW,GAAG,CAAEA,WAAW,EAAEA,WAAW,CAAE;QAE3C;QAEAlI,QAAQ,CAACkI,WAAW,GAAG,IAAIn8B,OAAO,EAAE,CAACmD,SAAS,CAAEg5B,WAAW,CAAE;MAE9D;MAEA,IAAKuoE,IAAI,CAACtoE,eAAe,KAAKnzC,SAAS,EAAGgrC,QAAQ,CAACmI,eAAe,GAAG+pG,UAAU,CAAEzhC,IAAI,CAACtoE,eAAe,CAAE;MACvG,IAAKsoE,IAAI,CAACroE,iBAAiB,KAAKpzC,SAAS,EAAGgrC,QAAQ,CAACoI,iBAAiB,GAAGqoE,IAAI,CAACroE,iBAAiB;MAC/F,IAAKqoE,IAAI,CAACpoE,gBAAgB,KAAKrzC,SAAS,EAAGgrC,QAAQ,CAACqI,gBAAgB,GAAGooE,IAAI,CAACpoE,gBAAgB;MAE5F,IAAKooE,IAAI,CAACnoE,YAAY,KAAKtzC,SAAS,EAAGgrC,QAAQ,CAACsI,YAAY,GAAG4pG,UAAU,CAAEzhC,IAAI,CAACnoE,YAAY,CAAE;MAC9F,IAAKmoE,IAAI,CAACloE,YAAY,KAAKvzC,SAAS,EAAGgrC,QAAQ,CAACuI,YAAY,GAAG2pG,UAAU,CAAEzhC,IAAI,CAACloE,YAAY,CAAE;MAE9F,IAAKkoE,IAAI,CAACjoE,WAAW,KAAKxzC,SAAS,EAAGgrC,QAAQ,CAACwI,WAAW,GAAG0pG,UAAU,CAAEzhC,IAAI,CAACjoE,WAAW,CAAE;MAC3F,IAAKioE,IAAI,CAAClqE,iBAAiB,KAAKvxC,SAAS,EAAGgrC,QAAQ,CAACuG,iBAAiB,GAAGkqE,IAAI,CAAClqE,iBAAiB;MAE/F,IAAKkqE,IAAI,CAAChoE,WAAW,KAAKzzC,SAAS,EAAGgrC,QAAQ,CAACyI,WAAW,GAAGypG,UAAU,CAAEzhC,IAAI,CAAChoE,WAAW,CAAE;MAC3F,IAAKgoE,IAAI,CAAC/nE,oBAAoB,KAAK1zC,SAAS,EAAGgrC,QAAQ,CAAC0I,oBAAoB,GAAGwpG,UAAU,CAAEzhC,IAAI,CAAC/nE,oBAAoB,CAAE;MACtH,IAAK+nE,IAAI,CAAC9nE,gBAAgB,KAAK3zC,SAAS,EAAGgrC,QAAQ,CAAC2I,gBAAgB,GAAGupG,UAAU,CAAEzhC,IAAI,CAAC9nE,gBAAgB,CAAE;MAE1G,IAAK8nE,IAAI,CAAC7nE,MAAM,KAAK5zC,SAAS,EAAGgrC,QAAQ,CAAC4I,MAAM,GAAGspG,UAAU,CAAEzhC,IAAI,CAAC7nE,MAAM,CAAE;MAC5E,IAAK6nE,IAAI,CAAC3nE,eAAe,KAAK9zC,SAAS,EAAGgrC,QAAQ,CAAC8I,eAAe,GAAG2nE,IAAI,CAAC3nE,eAAe;MAEzF,IAAK2nE,IAAI,CAAC1nE,YAAY,KAAK/zC,SAAS,EAAGgrC,QAAQ,CAAC+I,YAAY,GAAG0nE,IAAI,CAAC1nE,YAAY;MAChF,IAAK0nE,IAAI,CAACznE,eAAe,KAAKh0C,SAAS,EAAGgrC,QAAQ,CAACgJ,eAAe,GAAGynE,IAAI,CAACznE,eAAe;MAEzF,IAAKynE,IAAI,CAAC/oE,QAAQ,KAAK1yC,SAAS,EAAGgrC,QAAQ,CAAC0H,QAAQ,GAAGwqG,UAAU,CAAEzhC,IAAI,CAAC/oE,QAAQ,CAAE;MAClF,IAAK+oE,IAAI,CAAC9oE,iBAAiB,KAAK3yC,SAAS,EAAGgrC,QAAQ,CAAC2H,iBAAiB,GAAG8oE,IAAI,CAAC9oE,iBAAiB;MAE/F,IAAK8oE,IAAI,CAAC7oE,KAAK,KAAK5yC,SAAS,EAAGgrC,QAAQ,CAAC4H,KAAK,GAAGsqG,UAAU,CAAEzhC,IAAI,CAAC7oE,KAAK,CAAE;MACzE,IAAK6oE,IAAI,CAAC5oE,cAAc,KAAK7yC,SAAS,EAAGgrC,QAAQ,CAAC6H,cAAc,GAAG4oE,IAAI,CAAC5oE,cAAc;MAEtF,IAAK4oE,IAAI,CAACxnE,WAAW,KAAKj0C,SAAS,EAAGgrC,QAAQ,CAACiJ,WAAW,GAAGipG,UAAU,CAAEzhC,IAAI,CAACxnE,WAAW,CAAE;MAE3F,IAAKwnE,IAAI,CAAC3pE,YAAY,KAAK9xC,SAAS,EAAGgrC,QAAQ,CAAC8G,YAAY,GAAGorG,UAAU,CAAEzhC,IAAI,CAAC3pE,YAAY,CAAE;MAC9F,IAAK2pE,IAAI,CAAC1pE,qBAAqB,KAAK/xC,SAAS,EAAGgrC,QAAQ,CAAC+G,qBAAqB,GAAGmrG,UAAU,CAAEzhC,IAAI,CAAC1pE,qBAAqB,CAAE;MACzH,IAAK0pE,IAAI,CAACzpE,kBAAkB,KAAKhyC,SAAS,EAAGgrC,QAAQ,CAACgH,kBAAkB,GAAGkrG,UAAU,CAAEzhC,IAAI,CAACzpE,kBAAkB,CAAE;MAChH,IAAKypE,IAAI,CAACxpE,oBAAoB,KAAKjyC,SAAS,EAAGgrC,QAAQ,CAACiH,oBAAoB,GAAG,IAAIl7B,OAAO,EAAE,CAACmD,SAAS,CAAEuhG,IAAI,CAACxpE,oBAAoB,CAAE;MAEnI,IAAKwpE,IAAI,CAACppE,cAAc,KAAKryC,SAAS,EAAGgrC,QAAQ,CAACqH,cAAc,GAAG6qG,UAAU,CAAEzhC,IAAI,CAACppE,cAAc,CAAE;MACpG,IAAKopE,IAAI,CAACnpE,uBAAuB,KAAKtyC,SAAS,EAAGgrC,QAAQ,CAACsH,uBAAuB,GAAG4qG,UAAU,CAAEzhC,IAAI,CAACnpE,uBAAuB,CAAE;MAE/H,IAAKmpE,IAAI,CAACtnE,eAAe,KAAKn0C,SAAS,EAAGgrC,QAAQ,CAACmJ,eAAe,GAAG+oG,UAAU,CAAEzhC,IAAI,CAACtnE,eAAe,CAAE;MACvG,IAAKsnE,IAAI,CAACpnE,YAAY,KAAKr0C,SAAS,EAAGgrC,QAAQ,CAACqJ,YAAY,GAAG6oG,UAAU,CAAEzhC,IAAI,CAACpnE,YAAY,CAAE;MAE9F,IAAKonE,IAAI,CAACp+C,aAAa,KAAKr9D,SAAS,EAAGgrC,QAAQ,CAACqyB,aAAa,GAAG6/E,UAAU,CAAEzhC,IAAI,CAACp+C,aAAa,CAAE;MACjG,IAAKo+C,IAAI,CAACn+C,iBAAiB,KAAKt9D,SAAS,EAAGgrC,QAAQ,CAACsyB,iBAAiB,GAAG4/E,UAAU,CAAEzhC,IAAI,CAACn+C,iBAAiB,CAAE;MAE7G,OAAOtyB,QAAQ;IAEhB;EAAC;IAAAxvC,GAAA;IAAAE,KAAA,EAED,SAAA2hJ,YAAa3hJ,KAAK,EAAG;MAEpB,IAAI,CAAC6sB,QAAQ,GAAG7sB,KAAK;MACrB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAyhJ,uBAA+B5/I,IAAI,EAAG;MAErC,IAAM+/I,WAAW,GAAG;QACnB36D,cAAc,EAAdA,cAAc;QACdC,cAAc,EAAdA,cAAc;QACdkgD,iBAAiB,EAAjBA,iBAAiB;QACjB7/E,cAAc,EAAdA,cAAc;QACdy/B,cAAc,EAAdA,cAAc;QACdJ,oBAAoB,EAApBA,oBAAoB;QACpBD,oBAAoB,EAApBA,oBAAoB;QACpBF,iBAAiB,EAAjBA,iBAAiB;QACjBC,gBAAgB,EAAhBA,gBAAgB;QAChBH,kBAAkB,EAAlBA,kBAAkB;QAClBC,mBAAmB,EAAnBA,mBAAmB;QACnBH,iBAAiB,EAAjBA,iBAAiB;QACjBC,oBAAoB,EAApBA,oBAAoB;QACpB5sC,iBAAiB,EAAjBA,iBAAiB;QACjBmtC,kBAAkB,EAAlBA,kBAAkB;QAClBE,kBAAkB,EAAlBA,kBAAkB;QAClBD,iBAAiB,EAAjBA,iBAAiB;QACjBv0C,QAAQ,EAARA;MACD,CAAC;MAED,OAAO,IAAIqvG,WAAW,CAAE//I,IAAI,CAAE,EAAE;IAEjC;EAAC;EAAA,OAAAu/I,cAAA;AAAA,EApU2BjK,MAAM;AAAA73I,OAAA,CAAA8hJ,cAAA,GAAAA,cAAA;AAAA,IAwU7BS,WAAW;EAAA,SAAAA,YAAA;IAAAz5I,eAAA,OAAAy5I,WAAA;EAAA;EAAAj5I,YAAA,CAAAi5I,WAAA;IAAA/hJ,GAAA;IAAAE,KAAA,EAEhB,SAAA8hJ,WAAmBpsI,KAAK,EAAG;MAE1B,IAAK,OAAOqlI,WAAW,KAAK,WAAW,EAAG;QAEzC,OAAO,IAAIA,WAAW,EAAE,CAACC,MAAM,CAAEtlI,KAAK,CAAE;MAEzC;;MAEA;MACA;;MAEA,IAAIgD,CAAC,GAAG,EAAE;MAEV,KAAM,IAAI7S,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGlc,KAAK,CAAC9P,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAElD;QACA6S,CAAC,IAAI1P,MAAM,CAAC+4I,YAAY,CAAErsI,KAAK,CAAE7P,CAAC,CAAE,CAAE;MAEvC;MAEA,IAAI;QAEH;;QAEA,OAAOm8I,kBAAkB,CAAEC,MAAM,CAAEvpI,CAAC,CAAE,CAAE;MAEzC,CAAC,CAAC,OAAQoE,CAAC,EAAG;QAAE;;QAEf,OAAOpE,CAAC;MAET;IAED;EAAC;IAAA5Y,GAAA;IAAAE,KAAA,EAED,SAAAkiJ,eAAuB/3H,GAAG,EAAG;MAE5B,IAAM7U,KAAK,GAAG6U,GAAG,CAACg4H,WAAW,CAAE,GAAG,CAAE;MAEpC,IAAK7sI,KAAK,KAAK,CAAE,CAAC,EAAG,OAAO,IAAI;MAEhC,OAAO6U,GAAG,CAAChjB,KAAK,CAAE,CAAC,EAAEmO,KAAK,GAAG,CAAC,CAAE;IAEjC;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA02I,WAAmBvsH,GAAG,EAAE+wD,IAAI,EAAG;MAE9B;MACA,IAAK,OAAO/wD,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,EAAE,EAAG,OAAO,EAAE;;MAEtD;MACA,IAAK,eAAe,CAACxB,IAAI,CAAEuyD,IAAI,CAAE,IAAI,KAAK,CAACvyD,IAAI,CAAEwB,GAAG,CAAE,EAAG;QAExD+wD,IAAI,GAAGA,IAAI,CAAC0D,OAAO,CAAE,yBAAyB,EAAE,IAAI,CAAE;MAEvD;;MAEA;MACA,IAAK,kBAAkB,CAACj2D,IAAI,CAAEwB,GAAG,CAAE,EAAG,OAAOA,GAAG;;MAEhD;MACA,IAAK,eAAe,CAACxB,IAAI,CAAEwB,GAAG,CAAE,EAAG,OAAOA,GAAG;;MAE7C;MACA,IAAK,YAAY,CAACxB,IAAI,CAAEwB,GAAG,CAAE,EAAG,OAAOA,GAAG;;MAE1C;MACA,OAAO+wD,IAAI,GAAG/wD,GAAG;IAElB;EAAC;EAAA,OAAA03H,WAAA;AAAA;AAAAviJ,OAAA,CAAAuiJ,WAAA,GAAAA,WAAA;AAAA,IAIIO,uBAAuB,0BAAAC,iBAAA;EAAAz3H,SAAA,CAAAw3H,uBAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAAx3H,YAAA,CAAAs3H,uBAAA;EAE5B,SAAAA,wBAAA,EAAc;IAAA,IAAAG,QAAA;IAAAn6I,eAAA,OAAAg6I,uBAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAxgJ,IAAA;IAEAygJ,QAAA,CAAK/7E,yBAAyB,GAAG,IAAI;IAErC+7E,QAAA,CAAK1gJ,IAAI,GAAG,yBAAyB;IACrC0gJ,QAAA,CAAKvvE,aAAa,GAAG94C,QAAQ;IAAC,OAAAqoH,QAAA;EAE/B;EAAC35I,YAAA,CAAAw5I,uBAAA;IAAAtiJ,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAooG,uBAAA,CAAA3iJ,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACqtD,aAAa,GAAGrtD,MAAM,CAACqtD,aAAa;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAlzE,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAA,EAAS;MAER,IAAMuB,IAAI,GAAAowB,IAAA,CAAAC,eAAA,CAAAooG,uBAAA,CAAA3iJ,SAAA,mBAAAqC,IAAA,OAAiB,IAAI,CAAE;MAEjC6nB,IAAI,CAACqpD,aAAa,GAAG,IAAI,CAACA,aAAa;MAEvCrpD,IAAI,CAAC68C,yBAAyB,GAAG,IAAI;MAErC,OAAO78C,IAAI;IAEZ;EAAC;EAAA,OAAAy4H,uBAAA;AAAA,EAvCoCrkG,cAAc;AAAAz+C,OAAA,CAAA8iJ,uBAAA,GAAAA,uBAAA;AAAA,IA2C9CI,oBAAoB,0BAAAC,QAAA;EAAA73H,SAAA,CAAA43H,oBAAA,EAAAC,QAAA;EAAA,IAAAC,SAAA,GAAA53H,YAAA,CAAA03H,oBAAA;EAEzB,SAAAA,qBAAapL,OAAO,EAAG;IAAAhvI,eAAA,OAAAo6I,oBAAA;IAAA,OAAAE,SAAA,CAAA5gJ,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAA45I,oBAAA;IAAA1iJ,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMoxF,MAAM,GAAG,IAAIyB,UAAU,CAAE7yF,KAAK,CAAC0xF,OAAO,CAAE;MAC9CN,MAAM,CAACe,OAAO,CAAEnyF,KAAK,CAACw1B,IAAI,CAAE;MAC5B47D,MAAM,CAACiB,gBAAgB,CAAEryF,KAAK,CAAC8xF,aAAa,CAAE;MAC9CV,MAAM,CAACc,kBAAkB,CAAElyF,KAAK,CAAC4xF,eAAe,CAAE;MAClDR,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWqwH,IAAI,EAAG;QAEnC,IAAI;UAEH1E,MAAM,CAAEpwF,KAAK,CAACh5B,KAAK,CAAED,IAAI,CAACC,KAAK,CAAE8tH,IAAI,CAAE,CAAE,CAAE;QAE5C,CAAC,CAAC,OAAQ19H,CAAC,EAAG;UAEb,IAAKk5H,OAAO,EAAG;YAEdA,OAAO,CAAEl5H,CAAC,CAAE;UAEb,CAAC,MAAM;YAENtC,OAAO,CAACjX,KAAK,CAAEuZ,CAAC,CAAE;UAEnB;UAEA4oC,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;QAE/B;MAED,CAAC,EAAE4rH,UAAU,EAAEC,OAAO,CAAE;IAEzB;EAAC;IAAAl2I,GAAA;IAAAE,KAAA,EAED,SAAA0sB,MAAOqzF,IAAI,EAAG;MAEb,IAAM4iC,oBAAoB,GAAG,CAAC,CAAC;MAC/B,IAAMC,cAAc,GAAG,CAAC,CAAC;MAEzB,SAASC,oBAAoBA,CAAE9iC,IAAI,EAAEvpG,IAAI,EAAG;QAE3C,IAAKmsI,oBAAoB,CAAEnsI,IAAI,CAAE,KAAKlS,SAAS,EAAG,OAAOq+I,oBAAoB,CAAEnsI,IAAI,CAAE;QAErF,IAAMmlG,kBAAkB,GAAGoE,IAAI,CAACpE,kBAAkB;QAClD,IAAMD,iBAAiB,GAAGC,kBAAkB,CAAEnlG,IAAI,CAAE;QAEpD,IAAM0N,MAAM,GAAG4+H,cAAc,CAAE/iC,IAAI,EAAErE,iBAAiB,CAACx3F,MAAM,CAAE;QAE/D,IAAMxO,KAAK,GAAGuO,aAAa,CAAEy3F,iBAAiB,CAAC75G,IAAI,EAAEqiB,MAAM,CAAE;QAC7D,IAAMq3F,EAAE,GAAG,IAAIJ,iBAAiB,CAAEzlG,KAAK,EAAEgmG,iBAAiB,CAACn5D,MAAM,CAAE;QACnEg5D,EAAE,CAAC/kG,IAAI,GAAGklG,iBAAiB,CAACllG,IAAI;QAEhCmsI,oBAAoB,CAAEnsI,IAAI,CAAE,GAAG+kG,EAAE;QAEjC,OAAOA,EAAE;MAEV;MAEA,SAASunC,cAAcA,CAAE/iC,IAAI,EAAEvpG,IAAI,EAAG;QAErC,IAAKosI,cAAc,CAAEpsI,IAAI,CAAE,KAAKlS,SAAS,EAAG,OAAOs+I,cAAc,CAAEpsI,IAAI,CAAE;QAEzE,IAAM6kG,YAAY,GAAG0E,IAAI,CAAC1E,YAAY;QACtC,IAAMi/B,WAAW,GAAGj/B,YAAY,CAAE7kG,IAAI,CAAE;QAExC,IAAMmrC,EAAE,GAAG,IAAI59B,WAAW,CAAEu2H,WAAW,CAAE,CAACp2H,MAAM;QAEhD0+H,cAAc,CAAEpsI,IAAI,CAAE,GAAGmrC,EAAE;QAE3B,OAAOA,EAAE;MAEV;MAEA,IAAM5lB,QAAQ,GAAGgkF,IAAI,CAACv5C,yBAAyB,GAAG,IAAI47E,uBAAuB,EAAE,GAAG,IAAIrkG,cAAc,EAAE;MAEtG,IAAMzoC,KAAK,GAAGyqG,IAAI,CAACp2F,IAAI,CAACrU,KAAK;MAE7B,IAAKA,KAAK,KAAKhR,SAAS,EAAG;QAE1B,IAAMy+I,UAAU,GAAG9+H,aAAa,CAAE3O,KAAK,CAACzT,IAAI,EAAEyT,KAAK,CAACI,KAAK,CAAE;QAC3DqmB,QAAQ,CAAC4iB,QAAQ,CAAE,IAAIxE,eAAe,CAAE4oG,UAAU,EAAE,CAAC,CAAE,CAAE;MAE1D;MAEA,IAAM/mH,UAAU,GAAG+jF,IAAI,CAACp2F,IAAI,CAACqS,UAAU;MAEvC,KAAM,IAAMl8B,GAAG,IAAIk8B,UAAU,EAAG;QAE/B,IAAMpd,SAAS,GAAGod,UAAU,CAAEl8B,GAAG,CAAE;QACnC,IAAIkjJ,eAAe;QAEnB,IAAKpkI,SAAS,CAAC0jC,4BAA4B,EAAG;UAE7C,IAAMo5D,iBAAiB,GAAGmnC,oBAAoB,CAAE9iC,IAAI,CAACp2F,IAAI,EAAE/K,SAAS,CAAC+K,IAAI,CAAE;UAC3Eq5H,eAAe,GAAG,IAAIvnC,0BAA0B,CAAEC,iBAAiB,EAAE98F,SAAS,CAACw7B,QAAQ,EAAEx7B,SAAS,CAACH,MAAM,EAAEG,SAAS,CAACuJ,UAAU,CAAE;QAElI,CAAC,MAAM;UAEN,IAAM46H,WAAU,GAAG9+H,aAAa,CAAErF,SAAS,CAAC/c,IAAI,EAAE+c,SAAS,CAAClJ,KAAK,CAAE;UACnE,IAAMutI,qBAAqB,GAAGrkI,SAAS,CAACioD,0BAA0B,GAAGo5C,wBAAwB,GAAG9lE,eAAe;UAC/G6oG,eAAe,GAAG,IAAIC,qBAAqB,CAAEF,WAAU,EAAEnkI,SAAS,CAACw7B,QAAQ,EAAEx7B,SAAS,CAACuJ,UAAU,CAAE;QAEpG;QAEA,IAAKvJ,SAAS,CAACzY,IAAI,KAAK7B,SAAS,EAAG0+I,eAAe,CAAC78I,IAAI,GAAGyY,SAAS,CAACzY,IAAI;QACzE,IAAKyY,SAAS,CAAC07B,KAAK,KAAKh2C,SAAS,EAAG0+I,eAAe,CAACvoG,QAAQ,CAAE77B,SAAS,CAAC07B,KAAK,CAAE;QAEhF,IAAK17B,SAAS,CAAC27B,WAAW,KAAKj2C,SAAS,EAAG;UAE1C0+I,eAAe,CAACzoG,WAAW,CAAC97B,MAAM,GAAGG,SAAS,CAAC27B,WAAW,CAAC97B,MAAM;UACjEukI,eAAe,CAACzoG,WAAW,CAAC9oB,KAAK,GAAG7S,SAAS,CAAC27B,WAAW,CAAC9oB,KAAK;QAEhE;QAEAsK,QAAQ,CAAC8iB,YAAY,CAAE/+C,GAAG,EAAEkjJ,eAAe,CAAE;MAE9C;MAEA,IAAM5kG,eAAe,GAAG2hE,IAAI,CAACp2F,IAAI,CAACy0B,eAAe;MAEjD,IAAKA,eAAe,EAAG;QAEtB,KAAM,IAAMt+C,KAAG,IAAIs+C,eAAe,EAAG;UAEpC,IAAMwE,cAAc,GAAGxE,eAAe,CAAEt+C,KAAG,CAAE;UAE7C,IAAM4V,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI7P,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGgxB,cAAc,CAACh9C,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;YAE3D,IAAM+Y,WAAS,GAAGgkC,cAAc,CAAE/8C,CAAC,CAAE;YACrC,IAAIm9I,gBAAe;YAEnB,IAAKpkI,WAAS,CAAC0jC,4BAA4B,EAAG;cAE7C,IAAMo5D,kBAAiB,GAAGmnC,oBAAoB,CAAE9iC,IAAI,CAACp2F,IAAI,EAAE/K,WAAS,CAAC+K,IAAI,CAAE;cAC3Eq5H,gBAAe,GAAG,IAAIvnC,0BAA0B,CAAEC,kBAAiB,EAAE98F,WAAS,CAACw7B,QAAQ,EAAEx7B,WAAS,CAACH,MAAM,EAAEG,WAAS,CAACuJ,UAAU,CAAE;YAElI,CAAC,MAAM;cAEN,IAAM46H,YAAU,GAAG9+H,aAAa,CAAErF,WAAS,CAAC/c,IAAI,EAAE+c,WAAS,CAAClJ,KAAK,CAAE;cACnEstI,gBAAe,GAAG,IAAI7oG,eAAe,CAAE4oG,YAAU,EAAEnkI,WAAS,CAACw7B,QAAQ,EAAEx7B,WAAS,CAACuJ,UAAU,CAAE;YAE9F;YAEA,IAAKvJ,WAAS,CAACzY,IAAI,KAAK7B,SAAS,EAAG0+I,gBAAe,CAAC78I,IAAI,GAAGyY,WAAS,CAACzY,IAAI;YACzEuP,KAAK,CAACrQ,IAAI,CAAE29I,gBAAe,CAAE;UAE9B;UAEAjnH,QAAQ,CAACqiB,eAAe,CAAEt+C,KAAG,CAAE,GAAG4V,KAAK;QAExC;MAED;MAEA,IAAM2oC,oBAAoB,GAAG0hE,IAAI,CAACp2F,IAAI,CAAC00B,oBAAoB;MAE3D,IAAKA,oBAAoB,EAAG;QAE3BtiB,QAAQ,CAACsiB,oBAAoB,GAAG,IAAI;MAErC;MAEA,IAAMC,MAAM,GAAGyhE,IAAI,CAACp2F,IAAI,CAAC20B,MAAM,IAAIyhE,IAAI,CAACp2F,IAAI,CAACu5H,SAAS,IAAInjC,IAAI,CAACp2F,IAAI,CAACw5H,OAAO;MAE3E,IAAK7kG,MAAM,KAAKh6C,SAAS,EAAG;QAE3B,KAAM,IAAIuB,IAAC,GAAG,CAAC,EAAEiR,CAAC,GAAGwnC,MAAM,CAAC14C,MAAM,EAAEC,IAAC,KAAKiR,CAAC,EAAE,EAAGjR,IAAC,EAAG;UAEnD,IAAMg7C,KAAK,GAAGvC,MAAM,CAAEz4C,IAAC,CAAE;UAEzBk2B,QAAQ,CAACijB,QAAQ,CAAE6B,KAAK,CAACpC,KAAK,EAAEoC,KAAK,CAACpvB,KAAK,EAAEovB,KAAK,CAAC5B,aAAa,CAAE;QAEnE;MAED;MAEA,IAAMV,cAAc,GAAGwhE,IAAI,CAACp2F,IAAI,CAAC40B,cAAc;MAE/C,IAAKA,cAAc,KAAKj6C,SAAS,EAAG;QAEnC,IAAM0a,MAAM,GAAG,IAAI2X,OAAO,EAAE;QAE5B,IAAK4nB,cAAc,CAACv/B,MAAM,KAAK1a,SAAS,EAAG;UAE1C0a,MAAM,CAACR,SAAS,CAAE+/B,cAAc,CAACv/B,MAAM,CAAE;QAE1C;QAEA+c,QAAQ,CAACwiB,cAAc,GAAG,IAAIzf,MAAM,CAAE9f,MAAM,EAAEu/B,cAAc,CAACllB,MAAM,CAAE;MAEtE;MAEA,IAAK0mF,IAAI,CAAC55G,IAAI,EAAG41B,QAAQ,CAAC51B,IAAI,GAAG45G,IAAI,CAAC55G,IAAI;MAC1C,IAAK45G,IAAI,CAAC3zF,QAAQ,EAAG2P,QAAQ,CAAC3P,QAAQ,GAAG2zF,IAAI,CAAC3zF,QAAQ;MAEtD,OAAO2P,QAAQ;IAEhB;EAAC;EAAA,OAAAymH,oBAAA;AAAA,EA/MiCrL,MAAM;AAAA73I,OAAA,CAAAkjJ,oBAAA,GAAAA,oBAAA;AAAA,IAmNnCY,YAAY,0BAAAC,SAAA;EAAAz4H,SAAA,CAAAw4H,YAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAAx4H,YAAA,CAAAs4H,YAAA;EAEjB,SAAAA,aAAahM,OAAO,EAAG;IAAAhvI,eAAA,OAAAg7I,YAAA;IAAA,OAAAE,SAAA,CAAAxhJ,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAAw6I,YAAA;IAAAtjJ,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMw1B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAK2mE,WAAW,CAACK,cAAc,CAAE/3H,GAAG,CAAE,GAAG,IAAI,CAAC+wD,IAAI;MACjF,IAAI,CAACq8D,YAAY,GAAG,IAAI,CAACA,YAAY,IAAIr8D,IAAI;MAE7C,IAAM47D,MAAM,GAAG,IAAIyB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;MAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAC3B47D,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;MAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;MACjDR,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWqwH,IAAI,EAAG;QAEnC,IAAIz6B,IAAI,GAAG,IAAI;QAEf,IAAI;UAEHA,IAAI,GAAGtzF,IAAI,CAACC,KAAK,CAAE8tH,IAAI,CAAE;QAE1B,CAAC,CAAC,OAAQj3I,KAAK,EAAG;UAEjB,IAAKyyI,OAAO,KAAK1xI,SAAS,EAAG0xI,OAAO,CAAEzyI,KAAK,CAAE;UAE7CiX,OAAO,CAACjX,KAAK,CAAE,mCAAmC,GAAG4mB,GAAG,GAAG,GAAG,EAAE5mB,KAAK,CAACuwG,OAAO,CAAE;UAE/E;QAED;QAEA,IAAMhnF,QAAQ,GAAGizF,IAAI,CAACjzF,QAAQ;QAE9B,IAAKA,QAAQ,KAAKxoB,SAAS,IAAIwoB,QAAQ,CAACjrB,IAAI,KAAKyC,SAAS,IAAIwoB,QAAQ,CAACjrB,IAAI,CAAC4U,WAAW,EAAE,KAAK,UAAU,EAAG;UAE1G+D,OAAO,CAACjX,KAAK,CAAE,kCAAkC,GAAG4mB,GAAG,CAAE;UACzD;QAED;QAEAu7B,KAAK,CAACh5B,KAAK,CAAEqzF,IAAI,EAAE+1B,MAAM,CAAE;MAE5B,CAAC,EAAEC,UAAU,EAAEC,OAAO,CAAE;IAEzB;EAAC;IAAAl2I,GAAA;IAAAE,KAAA;MAAA,IAAAujJ,UAAA,GAAAt6C,iBAAA,eAAA5pG,mBAAA,GAAA+G,IAAA,CAED,SAAAo9I,SAAiBr5H,GAAG,EAAE4rH,UAAU;QAAA,IAAArwF,KAAA,EAAAw1B,IAAA,EAAA47D,MAAA,EAAA0D,IAAA,EAAAz6B,IAAA,EAAAjzF,QAAA;QAAA,OAAAztB,mBAAA,GAAAyB,IAAA,UAAA2iJ,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAz8I,IAAA,GAAAy8I,SAAA,CAAA/+I,IAAA;YAAA;cAEzB+gD,KAAK,GAAG,IAAI;cAEZw1B,IAAI,GAAK,IAAI,CAACA,IAAI,KAAK,EAAE,GAAK2mE,WAAW,CAACK,cAAc,CAAE/3H,GAAG,CAAE,GAAG,IAAI,CAAC+wD,IAAI;cACjF,IAAI,CAACq8D,YAAY,GAAG,IAAI,CAACA,YAAY,IAAIr8D,IAAI;cAEvC47D,MAAM,GAAG,IAAIyB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;cAC7CN,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;cAC3B47D,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;cAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;cAACoM,SAAA,CAAA/+I,IAAA;cAAA,OAE/BmyI,MAAM,CAACY,SAAS,CAAEvtH,GAAG,EAAE4rH,UAAU,CAAE;YAAA;cAAhDyE,IAAI,GAAAkJ,SAAA,CAAA1/I,IAAA;cAEJ+7G,IAAI,GAAGtzF,IAAI,CAACC,KAAK,CAAE8tH,IAAI,CAAE;cAEzB1tH,QAAQ,GAAGizF,IAAI,CAACjzF,QAAQ;cAAA,MAEzBA,QAAQ,KAAKxoB,SAAS,IAAIwoB,QAAQ,CAACjrB,IAAI,KAAKyC,SAAS,IAAIwoB,QAAQ,CAACjrB,IAAI,CAAC4U,WAAW,EAAE,KAAK,UAAU;gBAAAitI,SAAA,CAAA/+I,IAAA;gBAAA;cAAA;cAAA,MAEjG,IAAIhB,KAAK,CAAE,kCAAkC,GAAGwmB,GAAG,CAAE;YAAA;cAAAu5H,SAAA,CAAA/+I,IAAA;cAAA,OAI/C+gD,KAAK,CAACi+F,UAAU,CAAE5jC,IAAI,CAAE;YAAA;cAAA,OAAA2jC,SAAA,CAAAv/I,MAAA,WAAAu/I,SAAA,CAAA1/I,IAAA;YAAA;YAAA;cAAA,OAAA0/I,SAAA,CAAAt8I,IAAA;UAAA;QAAA,GAAAo8I,QAAA;MAAA,CAErC;MAAA,SAAA9L,UAAAkM,GAAA,EAAAC,GAAA;QAAA,OAAAN,UAAA,CAAA9rD,KAAA,OAAAhrD,SAAA;MAAA;MAAA,OAAAirG,SAAA;IAAA;EAAA;IAAA53I,GAAA;IAAAE,KAAA,EAED,SAAA0sB,MAAOqzF,IAAI,EAAE+1B,MAAM,EAAG;MAErB,IAAM1qG,UAAU,GAAG,IAAI,CAAC04G,eAAe,CAAE/jC,IAAI,CAAC30E,UAAU,CAAE;MAC1D,IAAM6C,MAAM,GAAG,IAAI,CAAC81G,WAAW,CAAEhkC,IAAI,CAAC9xE,MAAM,CAAE;MAC9C,IAAMF,UAAU,GAAG,IAAI,CAACi2G,eAAe,CAAEjkC,IAAI,CAAChyE,UAAU,EAAEE,MAAM,CAAE;MAElE,IAAMhkB,MAAM,GAAG,IAAI,CAACg6H,WAAW,CAAElkC,IAAI,CAAC91F,MAAM,EAAE,YAAY;QAEzD,IAAK6rH,MAAM,KAAKxxI,SAAS,EAAGwxI,MAAM,CAAEjvI,MAAM,CAAE;MAE7C,CAAC,CAAE;MAEH,IAAMgmB,QAAQ,GAAG,IAAI,CAACq3H,aAAa,CAAEnkC,IAAI,CAAClzF,QAAQ,EAAE5C,MAAM,CAAE;MAC5D,IAAM+jB,SAAS,GAAG,IAAI,CAACm2G,cAAc,CAAEpkC,IAAI,CAAC/xE,SAAS,EAAEnhB,QAAQ,CAAE;MAEjE,IAAMhmB,MAAM,GAAG,IAAI,CAACu9I,WAAW,CAAErkC,IAAI,CAACl5G,MAAM,EAAEknC,UAAU,EAAEC,SAAS,EAAEnhB,QAAQ,EAAEue,UAAU,CAAE;MAC3F,IAAM8C,SAAS,GAAG,IAAI,CAACm2G,cAAc,CAAEtkC,IAAI,CAAC7xE,SAAS,EAAErnC,MAAM,CAAE;MAE/D,IAAI,CAACy9I,aAAa,CAAEz9I,MAAM,EAAEqnC,SAAS,CAAE;;MAEvC;;MAEA,IAAK4nG,MAAM,KAAKxxI,SAAS,EAAG;QAE3B,IAAIigJ,SAAS,GAAG,KAAK;QAErB,KAAM,IAAM/tI,IAAI,IAAIyT,MAAM,EAAG;UAE5B,IAAKA,MAAM,CAAEzT,IAAI,CAAE,CAACmT,IAAI,YAAYJ,gBAAgB,EAAG;YAEtDg7H,SAAS,GAAG,IAAI;YAChB;UAED;QAED;QAEA,IAAKA,SAAS,KAAK,KAAK,EAAGzO,MAAM,CAAEjvI,MAAM,CAAE;MAE5C;MAEA,OAAOA,MAAM;IAEd;EAAC;IAAA/G,GAAA;IAAAE,KAAA;MAAA,IAAAwkJ,WAAA,GAAAv7C,iBAAA,eAAA5pG,mBAAA,GAAA+G,IAAA,CAED,SAAAq+I,SAAkB1kC,IAAI;QAAA,IAAA30E,UAAA,EAAA6C,MAAA,EAAAF,UAAA,EAAA9jB,MAAA,EAAA4C,QAAA,EAAAmhB,SAAA,EAAAnnC,MAAA,EAAAqnC,SAAA;QAAA,OAAA7uC,mBAAA,GAAAyB,IAAA,UAAA4jJ,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA19I,IAAA,GAAA09I,UAAA,CAAAhgJ,IAAA;YAAA;cAEfymC,UAAU,GAAG,IAAI,CAAC04G,eAAe,CAAE/jC,IAAI,CAAC30E,UAAU,CAAE;cACpD6C,MAAM,GAAG,IAAI,CAAC81G,WAAW,CAAEhkC,IAAI,CAAC9xE,MAAM,CAAE;cACxCF,UAAU,GAAG,IAAI,CAACi2G,eAAe,CAAEjkC,IAAI,CAAChyE,UAAU,EAAEE,MAAM,CAAE;cAAA02G,UAAA,CAAAhgJ,IAAA;cAAA,OAE7C,IAAI,CAACigJ,gBAAgB,CAAE7kC,IAAI,CAAC91F,MAAM,CAAE;YAAA;cAAnDA,MAAM,GAAA06H,UAAA,CAAA3gJ,IAAA;cAEN6oB,QAAQ,GAAG,IAAI,CAACq3H,aAAa,CAAEnkC,IAAI,CAAClzF,QAAQ,EAAE5C,MAAM,CAAE;cACtD+jB,SAAS,GAAG,IAAI,CAACm2G,cAAc,CAAEpkC,IAAI,CAAC/xE,SAAS,EAAEnhB,QAAQ,CAAE;cAE3DhmB,MAAM,GAAG,IAAI,CAACu9I,WAAW,CAAErkC,IAAI,CAACl5G,MAAM,EAAEknC,UAAU,EAAEC,SAAS,EAAEnhB,QAAQ,EAAEue,UAAU,CAAE;cACrF8C,SAAS,GAAG,IAAI,CAACm2G,cAAc,CAAEtkC,IAAI,CAAC7xE,SAAS,EAAErnC,MAAM,CAAE;cAE/D,IAAI,CAACy9I,aAAa,CAAEz9I,MAAM,EAAEqnC,SAAS,CAAE;cAAC,OAAAy2G,UAAA,CAAAxgJ,MAAA,WAEjC0C,MAAM;YAAA;YAAA;cAAA,OAAA89I,UAAA,CAAAv9I,IAAA;UAAA;QAAA,GAAAq9I,QAAA;MAAA,CAEb;MAAA,SAAAd,WAAAkB,GAAA;QAAA,OAAAL,WAAA,CAAA/sD,KAAA,OAAAhrD,SAAA;MAAA;MAAA,OAAAk3G,UAAA;IAAA;EAAA;IAAA7jJ,GAAA;IAAAE,KAAA,EAED,SAAA+jJ,YAAahkC,IAAI,EAAG;MAEnB,IAAM9xE,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAK8xE,IAAI,KAAKz7G,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACn6G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE/C,IAAMopC,KAAK,GAAG,IAAIsnF,KAAK,EAAE,CAAC3vE,QAAQ,CAAEm5D,IAAI,CAAEl6G,CAAC,CAAE,CAAE;UAE/CooC,MAAM,CAAEgB,KAAK,CAACz4B,IAAI,CAAE,GAAGy4B,KAAK;QAE7B;MAED;MAEA,OAAOhB,MAAM;IAEd;EAAC;IAAAnuC,GAAA;IAAAE,KAAA,EAED,SAAAqkJ,eAAgBtkC,IAAI,EAAEl5G,MAAM,EAAG;MAE9B,IAAMqnC,SAAS,GAAG,CAAC,CAAC;MACpB,IAAM2wE,KAAK,GAAG,CAAC,CAAC;;MAEhB;;MAEAh4G,MAAM,CAAC2mC,QAAQ,CAAE,UAAWN,KAAK,EAAG;QAEnC,IAAKA,KAAK,CAACiyE,MAAM,EAAGN,KAAK,CAAE3xE,KAAK,CAAC12B,IAAI,CAAE,GAAG02B,KAAK;MAEhD,CAAC,CAAE;;MAEH;;MAEA,IAAK6yE,IAAI,KAAKz7G,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACn6G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE/C,IAAMwpC,QAAQ,GAAG,IAAIqwE,QAAQ,EAAE,CAAC94D,QAAQ,CAAEm5D,IAAI,CAAEl6G,CAAC,CAAE,EAAEg5G,KAAK,CAAE;UAE5D3wE,SAAS,CAAEmB,QAAQ,CAAC74B,IAAI,CAAE,GAAG64B,QAAQ;QAEtC;MAED;MAEA,OAAOnB,SAAS;IAEjB;EAAC;IAAApuC,GAAA;IAAAE,KAAA,EAED,SAAAgkJ,gBAAiBjkC,IAAI,EAAE9xE,MAAM,EAAG;MAE/B,IAAMF,UAAU,GAAG,CAAC,CAAC;MAErB,IAAKgyE,IAAI,KAAKz7G,SAAS,EAAG;QAEzB,IAAMwgJ,oBAAoB,GAAG,IAAItC,oBAAoB,EAAE;QAEvD,KAAM,IAAI38I,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACn6G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE/C,IAAIk2B,QAAQ;UACZ,IAAMpS,IAAI,GAAGo2F,IAAI,CAAEl6G,CAAC,CAAE;UAEtB,QAAS8jB,IAAI,CAAC9nB,IAAI;YAEjB,KAAK,gBAAgB;YACrB,KAAK,yBAAyB;cAE7Bk6B,QAAQ,GAAG+oH,oBAAoB,CAACp4H,KAAK,CAAE/C,IAAI,CAAE;cAE7C;YAED,KAAK,UAAU;cAEdnP,OAAO,CAACjX,KAAK,CAAE,sEAAsE,CAAE;cAEvF;YAED;cAEC,IAAKomB,IAAI,CAAC9nB,IAAI,IAAImlI,UAAU,EAAG;gBAE9BjrG,QAAQ,GAAGirG,UAAU,CAAEr9G,IAAI,CAAC9nB,IAAI,CAAE,CAAC+kD,QAAQ,CAAEj9B,IAAI,EAAEskB,MAAM,CAAE;cAE5D,CAAC,MAAM;gBAENzzB,OAAO,CAACC,IAAI,oDAAAkN,MAAA,CAAqDgC,IAAI,CAAC9nB,IAAI,QAAM;cAEjF;UAAC;UAIHk6B,QAAQ,CAACvlB,IAAI,GAAGmT,IAAI,CAACnT,IAAI;UAEzB,IAAKmT,IAAI,CAACxjB,IAAI,KAAK7B,SAAS,EAAGy3B,QAAQ,CAAC51B,IAAI,GAAGwjB,IAAI,CAACxjB,IAAI;UACxD,IAAK41B,QAAQ,CAACoiB,gBAAgB,KAAK,IAAI,IAAIx0B,IAAI,CAACyC,QAAQ,KAAK9nB,SAAS,EAAGy3B,QAAQ,CAAC3P,QAAQ,GAAGzC,IAAI,CAACyC,QAAQ;UAE1G2hB,UAAU,CAAEpkB,IAAI,CAACnT,IAAI,CAAE,GAAGulB,QAAQ;QAEnC;MAED;MAEA,OAAOgS,UAAU;IAElB;EAAC;IAAAjuC,GAAA;IAAAE,KAAA,EAED,SAAAmkJ,eAAgBpkC,IAAI,EAAElzF,QAAQ,EAAG;MAEhC,IAAM6iB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MAClB,IAAM1B,SAAS,GAAG,CAAC,CAAC;MAEpB,IAAK+xE,IAAI,KAAKz7G,SAAS,EAAG;QAEzB,IAAMwyI,MAAM,GAAG,IAAIsK,cAAc,EAAE;QACnCtK,MAAM,CAAC6K,WAAW,CAAE90H,QAAQ,CAAE;QAE9B,KAAM,IAAIhnB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACn6G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE/C,IAAM8jB,IAAI,GAAGo2F,IAAI,CAAEl6G,CAAC,CAAE;UAEtB,IAAK8jB,IAAI,CAAC9nB,IAAI,KAAK,eAAe,EAAG;YAEpC;;YAEA,IAAM6T,KAAK,GAAG,EAAE;YAEhB,KAAM,IAAI4oB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3U,IAAI,CAACqkB,SAAS,CAACpoC,MAAM,EAAE04B,CAAC,EAAG,EAAG;cAElD,IAAMgR,QAAQ,GAAG3lB,IAAI,CAACqkB,SAAS,CAAE1P,CAAC,CAAE;cAEpC,IAAKoR,KAAK,CAAEJ,QAAQ,CAAC94B,IAAI,CAAE,KAAKlS,SAAS,EAAG;gBAE3CorC,KAAK,CAAEJ,QAAQ,CAAC94B,IAAI,CAAE,GAAGsgI,MAAM,CAACpqH,KAAK,CAAE4iB,QAAQ,CAAE;cAElD;cAEA55B,KAAK,CAACrQ,IAAI,CAAEqqC,KAAK,CAAEJ,QAAQ,CAAC94B,IAAI,CAAE,CAAE;YAErC;YAEAw3B,SAAS,CAAErkB,IAAI,CAACnT,IAAI,CAAE,GAAGd,KAAK;UAE/B,CAAC,MAAM;YAEN,IAAKg6B,KAAK,CAAE/lB,IAAI,CAACnT,IAAI,CAAE,KAAKlS,SAAS,EAAG;cAEvCorC,KAAK,CAAE/lB,IAAI,CAACnT,IAAI,CAAE,GAAGsgI,MAAM,CAACpqH,KAAK,CAAE/C,IAAI,CAAE;YAE1C;YAEAqkB,SAAS,CAAErkB,IAAI,CAACnT,IAAI,CAAE,GAAGk5B,KAAK,CAAE/lB,IAAI,CAACnT,IAAI,CAAE;UAE5C;QAED;MAED;MAEA,OAAOw3B,SAAS;IAEjB;EAAC;IAAAluC,GAAA;IAAAE,KAAA,EAED,SAAA8jJ,gBAAiB/jC,IAAI,EAAG;MAEvB,IAAM30E,UAAU,GAAG,CAAC,CAAC;MAErB,IAAK20E,IAAI,KAAKz7G,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk6G,IAAI,CAACn6G,MAAM,EAAEC,CAAC,EAAG,EAAG;UAExC,IAAM8jB,IAAI,GAAGo2F,IAAI,CAAEl6G,CAAC,CAAE;UAEtB,IAAM6kI,IAAI,GAAG8I,aAAa,CAAC9mH,KAAK,CAAE/C,IAAI,CAAE;UAExCyhB,UAAU,CAAEs/F,IAAI,CAACl0H,IAAI,CAAE,GAAGk0H,IAAI;QAE/B;MAED;MAEA,OAAOt/F,UAAU;IAElB;EAAC;IAAAtrC,GAAA;IAAAE,KAAA,EAED,SAAAikJ,YAAalkC,IAAI,EAAE+1B,MAAM,EAAG;MAE3B,IAAMpwF,KAAK,GAAG,IAAI;MAClB,IAAMz7B,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAI6sH,MAAM;MAEV,SAASiO,SAASA,CAAE56H,GAAG,EAAG;QAEzBu7B,KAAK,CAAC0xF,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;QAE9B,OAAO2sH,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,YAAY;UAEpCu7B,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;QAE7B,CAAC,EAAE7lB,SAAS,EAAE,YAAY;UAEzBohD,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;UAC9Bu7B,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;QAE7B,CAAC,CAAE;MAEJ;MAEA,SAAS66H,gBAAgBA,CAAEt8H,KAAK,EAAG;QAElC,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;UAEhC,IAAMyB,GAAG,GAAGzB,KAAK;UAEjB,IAAMwyD,IAAI,GAAG,2BAA2B,CAACvyD,IAAI,CAAEwB,GAAG,CAAE,GAAGA,GAAG,GAAGu7B,KAAK,CAAC6xF,YAAY,GAAGptH,GAAG;UAErF,OAAO46H,SAAS,CAAE7pE,IAAI,CAAE;QAEzB,CAAC,MAAM;UAEN,IAAKxyD,KAAK,CAACiB,IAAI,EAAG;YAEjB,OAAO;cACNA,IAAI,EAAE1F,aAAa,CAAEyE,KAAK,CAAC7mB,IAAI,EAAE6mB,KAAK,CAACiB,IAAI,CAAE;cAC7CZ,KAAK,EAAEL,KAAK,CAACK,KAAK;cAClBC,MAAM,EAAEN,KAAK,CAACM;YACf,CAAC;UAEF,CAAC,MAAM;YAEN,OAAO,IAAI;UAEZ;QAED;MAED;MAEA,IAAK+2F,IAAI,KAAKz7G,SAAS,IAAIy7G,IAAI,CAACn6G,MAAM,GAAG,CAAC,EAAG;QAE5C,IAAMwxI,OAAO,GAAG,IAAIvB,cAAc,CAAEC,MAAM,CAAE;QAE5CgB,MAAM,GAAG,IAAIgF,WAAW,CAAE1E,OAAO,CAAE;QACnCN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;QAEzC,KAAM,IAAIxxI,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGmuF,IAAI,CAACn6G,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;UAEjD,IAAM6iB,KAAK,GAAGq3F,IAAI,CAAEl6G,CAAC,CAAE;UACvB,IAAMskB,GAAG,GAAGzB,KAAK,CAACyB,GAAG;UAErB,IAAKC,KAAK,CAACC,OAAO,CAAEF,GAAG,CAAE,EAAG;YAE3B;;YAEA,IAAM86H,UAAU,GAAG,EAAE;YAErB,KAAM,IAAI3mH,CAAC,GAAG,CAAC,EAAEmhB,EAAE,GAAGt1B,GAAG,CAACvkB,MAAM,EAAE04B,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,EAAG,EAAG;cAEhD,IAAM4mH,UAAU,GAAG/6H,GAAG,CAAEmU,CAAC,CAAE;cAE3B,IAAM6mH,iBAAiB,GAAGH,gBAAgB,CAAEE,UAAU,CAAE;cAExD,IAAKC,iBAAiB,KAAK,IAAI,EAAG;gBAEjC,IAAKA,iBAAiB,YAAY57H,gBAAgB,EAAG;kBAEpD07H,UAAU,CAAC5/I,IAAI,CAAE8/I,iBAAiB,CAAE;gBAErC,CAAC,MAAM;kBAEN;;kBAEAF,UAAU,CAAC5/I,IAAI,CAAE,IAAI+5G,WAAW,CAAE+lC,iBAAiB,CAACx7H,IAAI,EAAEw7H,iBAAiB,CAACp8H,KAAK,EAAEo8H,iBAAiB,CAACn8H,MAAM,CAAE,CAAE;gBAEhH;cAED;YAED;YAEAiB,MAAM,CAAEvB,KAAK,CAAClS,IAAI,CAAE,GAAG,IAAIoT,MAAM,CAAEq7H,UAAU,CAAE;UAEhD,CAAC,MAAM;YAEN;;YAEA,IAAME,kBAAiB,GAAGH,gBAAgB,CAAEt8H,KAAK,CAACyB,GAAG,CAAE;YACvDF,MAAM,CAAEvB,KAAK,CAAClS,IAAI,CAAE,GAAG,IAAIoT,MAAM,CAAEu7H,kBAAiB,CAAE;UAGvD;QAED;MAED;MAEA,OAAOl7H,MAAM;IAEd;EAAC;IAAAnqB,GAAA;IAAAE,KAAA;MAAA,IAAAolJ,iBAAA,GAAAn8C,iBAAA,eAAA5pG,mBAAA,GAAA+G,IAAA,CAED,SAAAi/I,SAAwBtlC,IAAI;QAAA,IAAAr6D,KAAA,EAAAz7B,MAAA,EAAA6sH,MAAA,EAOZkO,gBAAgB,EAAAM,iBAAA,EAAAz/I,CAAA,EAAA+rB,EAAA,EAAAlJ,KAAA,EAAAyB,GAAA,EAAA86H,UAAA,EAAA3mH,CAAA,EAAAmhB,EAAA,EAAAylG,UAAA,EAAAC,iBAAA,EAAAI,mBAAA;QAAA,OAAAlmJ,mBAAA,GAAAyB,IAAA,UAAA0kJ,UAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAx+I,IAAA,GAAAw+I,UAAA,CAAA9gJ,IAAA;YAAA;cAAA2gJ,iBAAA,YAAAI,mBAAA;gBAAAJ,iBAAA,GAAAr8C,iBAAA,eAAA5pG,mBAAA,GAAA+G,IAAA,CAA/B,SAAAu/I,SAAiCj9H,KAAK;kBAAA,IAAAk9H,IAAA,EAAA1qE,IAAA;kBAAA,OAAA77E,mBAAA,GAAAyB,IAAA,UAAA+kJ,UAAAC,UAAA;oBAAA,kBAAAA,UAAA,CAAA7+I,IAAA,GAAA6+I,UAAA,CAAAnhJ,IAAA;sBAAA;wBAAA,MAEhC,OAAO+jB,KAAK,KAAK,QAAQ;0BAAAo9H,UAAA,CAAAnhJ,IAAA;0BAAA;wBAAA;wBAEvBwlB,IAAG,GAAGzB,KAAK;wBAEXwyD,IAAI,GAAG,2BAA2B,CAACvyD,IAAI,CAAEwB,IAAG,CAAE,GAAGA,IAAG,GAAGu7B,KAAK,CAAC6xF,YAAY,GAAGptH,IAAG;wBAAA27H,UAAA,CAAAnhJ,IAAA;wBAAA,OAExEmyI,MAAM,CAACY,SAAS,CAAEx8D,IAAI,CAAE;sBAAA;wBAAA,OAAA4qE,UAAA,CAAA3hJ,MAAA,WAAA2hJ,UAAA,CAAA9hJ,IAAA;sBAAA;wBAAA,KAIhC0kB,KAAK,CAACiB,IAAI;0BAAAm8H,UAAA,CAAAnhJ,IAAA;0BAAA;wBAAA;wBAAA,OAAAmhJ,UAAA,CAAA3hJ,MAAA,WAEP;0BACNwlB,IAAI,EAAE1F,aAAa,CAAEyE,KAAK,CAAC7mB,IAAI,EAAE6mB,KAAK,CAACiB,IAAI,CAAE;0BAC7CZ,KAAK,EAAEL,KAAK,CAACK,KAAK;0BAClBC,MAAM,EAAEN,KAAK,CAACM;wBACf,CAAC;sBAAA;wBAAA,OAAA88H,UAAA,CAAA3hJ,MAAA,WAIM,IAAI;sBAAA;sBAAA;wBAAA,OAAA2hJ,UAAA,CAAA1+I,IAAA;oBAAA;kBAAA,GAAAu+I,QAAA;gBAAA,CAMb;gBAAA,OAAAL,iBAAA,CAAA7tD,KAAA,OAAAhrD,SAAA;cAAA;cA5Bcu4G,gBAAgB,YAAAe,mBAAAC,IAAA;gBAAA,OAAAV,iBAAA,CAAA7tD,KAAA,OAAAhrD,SAAA;cAAA;cALzBiZ,KAAK,GAAG,IAAI;cACZz7B,MAAM,GAAG,CAAC,CAAC;cAAA,MAkCZ81F,IAAI,KAAKz7G,SAAS,IAAIy7G,IAAI,CAACn6G,MAAM,GAAG,CAAC;gBAAA6/I,UAAA,CAAA9gJ,IAAA;gBAAA;cAAA;cAEzCmyI,MAAM,GAAG,IAAIgF,WAAW,CAAE,IAAI,CAAC1E,OAAO,CAAE;cACxCN,MAAM,CAACa,cAAc,CAAE,IAAI,CAACN,WAAW,CAAE;cAE/BxxI,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGmuF,IAAI,CAACn6G,MAAM;YAAA;cAAA,MAAEC,CAAC,GAAG+rB,EAAE;gBAAA6zH,UAAA,CAAA9gJ,IAAA;gBAAA;cAAA;cAElC+jB,KAAK,GAAGq3F,IAAI,CAAEl6G,CAAC,CAAE;cACjBskB,GAAG,GAAGzB,KAAK,CAACyB,GAAG;cAAA,KAEhBC,KAAK,CAACC,OAAO,CAAEF,GAAG,CAAE;gBAAAs7H,UAAA,CAAA9gJ,IAAA;gBAAA;cAAA;cAExB;cAEMsgJ,UAAU,GAAG,EAAE;cAEX3mH,CAAC,GAAG,CAAC,EAAEmhB,EAAE,GAAGt1B,GAAG,CAACvkB,MAAM;YAAA;cAAA,MAAE04B,CAAC,GAAGmhB,EAAE;gBAAAgmG,UAAA,CAAA9gJ,IAAA;gBAAA;cAAA;cAEjCugJ,UAAU,GAAG/6H,GAAG,CAAEmU,CAAC,CAAE;cAAAmnH,UAAA,CAAA9gJ,IAAA;cAAA,OAEKqgJ,gBAAgB,CAAEE,UAAU,CAAE;YAAA;cAAxDC,iBAAiB,GAAAM,UAAA,CAAAzhJ,IAAA;cAEvB,IAAKmhJ,iBAAiB,KAAK,IAAI,EAAG;gBAEjC,IAAKA,iBAAiB,YAAY57H,gBAAgB,EAAG;kBAEpD07H,UAAU,CAAC5/I,IAAI,CAAE8/I,iBAAiB,CAAE;gBAErC,CAAC,MAAM;kBAEN;;kBAEAF,UAAU,CAAC5/I,IAAI,CAAE,IAAI+5G,WAAW,CAAE+lC,iBAAiB,CAACx7H,IAAI,EAAEw7H,iBAAiB,CAACp8H,KAAK,EAAEo8H,iBAAiB,CAACn8H,MAAM,CAAE,CAAE;gBAEhH;cAED;YAAC;cApBwCsV,CAAC,EAAG;cAAAmnH,UAAA,CAAA9gJ,IAAA;cAAA;YAAA;cAwB9CslB,MAAM,CAAEvB,KAAK,CAAClS,IAAI,CAAE,GAAG,IAAIoT,MAAM,CAAEq7H,UAAU,CAAE;cAACQ,UAAA,CAAA9gJ,IAAA;cAAA;YAAA;cAAA8gJ,UAAA,CAAA9gJ,IAAA;cAAA,OAMhBqgJ,gBAAgB,CAAEt8H,KAAK,CAACyB,GAAG,CAAE;YAAA;cAAvDg7H,mBAAiB,GAAAM,UAAA,CAAAzhJ,IAAA;cACvBimB,MAAM,CAAEvB,KAAK,CAAClS,IAAI,CAAE,GAAG,IAAIoT,MAAM,CAAEu7H,mBAAiB,CAAE;YAAC;cA1Cdt/I,CAAC,EAAG;cAAA4/I,UAAA,CAAA9gJ,IAAA;cAAA;YAAA;cAAA,OAAA8gJ,UAAA,CAAAthJ,MAAA,WAkDzC8lB,MAAM;YAAA;YAAA;cAAA,OAAAw7H,UAAA,CAAAr+I,IAAA;UAAA;QAAA,GAAAi+I,QAAA;MAAA,CAEb;MAAA,SAAAT,iBAAAqB,IAAA;QAAA,OAAAb,iBAAA,CAAA3tD,KAAA,OAAAhrD,SAAA;MAAA;MAAA,OAAAm4G,gBAAA;IAAA;EAAA;IAAA9kJ,GAAA;IAAAE,KAAA,EAED,SAAAkkJ,cAAenkC,IAAI,EAAE91F,MAAM,EAAG;MAE7B,SAASi8H,aAAaA,CAAElmJ,KAAK,EAAE6B,IAAI,EAAG;QAErC,IAAK,OAAO7B,KAAK,KAAK,QAAQ,EAAG,OAAOA,KAAK;QAE7Cwa,OAAO,CAACC,IAAI,CAAE,sEAAsE,EAAEza,KAAK,CAAE;QAE7F,OAAO6B,IAAI,CAAE7B,KAAK,CAAE;MAErB;MAEA,IAAM6sB,QAAQ,GAAG,CAAC,CAAC;MAEnB,IAAKkzF,IAAI,KAAKz7G,SAAS,EAAG;QAEzB,KAAM,IAAIuB,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGoqG,IAAI,CAACn6G,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAE/C,IAAM8jB,IAAI,GAAGo2F,IAAI,CAAEl6G,CAAC,CAAE;UAEtB,IAAK8jB,IAAI,CAACjB,KAAK,KAAKpkB,SAAS,EAAG;YAE/BkW,OAAO,CAACC,IAAI,CAAE,8CAA8C,EAAEkP,IAAI,CAACnT,IAAI,CAAE;UAE1E;UAEA,IAAKyT,MAAM,CAAEN,IAAI,CAACjB,KAAK,CAAE,KAAKpkB,SAAS,EAAG;YAEzCkW,OAAO,CAACC,IAAI,CAAE,qCAAqC,EAAEkP,IAAI,CAACjB,KAAK,CAAE;UAElE;UAEA,IAAM/C,MAAM,GAAGsE,MAAM,CAAEN,IAAI,CAACjB,KAAK,CAAE;UACnC,IAAMA,KAAK,GAAG/C,MAAM,CAACgE,IAAI;UAEzB,IAAI+F,OAAO;UAEX,IAAKtF,KAAK,CAACC,OAAO,CAAE3B,KAAK,CAAE,EAAG;YAE7BgH,OAAO,GAAG,IAAI68B,WAAW,EAAE;YAE3B,IAAK7jC,KAAK,CAAC9iB,MAAM,KAAK,CAAC,EAAG8pB,OAAO,CAAC9C,WAAW,GAAG,IAAI;UAErD,CAAC,MAAM;YAEN,IAAKlE,KAAK,IAAIA,KAAK,CAACiB,IAAI,EAAG;cAE1B+F,OAAO,GAAG,IAAI0vF,WAAW,EAAE;YAE5B,CAAC,MAAM;cAEN1vF,OAAO,GAAG,IAAIhF,OAAO,EAAE;YAExB;YAEA,IAAKhC,KAAK,EAAGgH,OAAO,CAAC9C,WAAW,GAAG,IAAI,CAAC,CAAC;UAE1C;;UAEA8C,OAAO,CAAC/J,MAAM,GAAGA,MAAM;UAEvB+J,OAAO,CAAClZ,IAAI,GAAGmT,IAAI,CAACnT,IAAI;UAExB,IAAKmT,IAAI,CAACxjB,IAAI,KAAK7B,SAAS,EAAGorB,OAAO,CAACvpB,IAAI,GAAGwjB,IAAI,CAACxjB,IAAI;UAEvD,IAAKwjB,IAAI,CAACqB,OAAO,KAAK1mB,SAAS,EAAGorB,OAAO,CAAC1E,OAAO,GAAGk7H,aAAa,CAAEv8H,IAAI,CAACqB,OAAO,EAAEm7H,eAAe,CAAE;UAElG,IAAKx8H,IAAI,CAAClL,MAAM,KAAKna,SAAS,EAAGorB,OAAO,CAACjR,MAAM,CAACD,SAAS,CAAEmL,IAAI,CAAClL,MAAM,CAAE;UACxE,IAAKkL,IAAI,CAACmC,MAAM,KAAKxnB,SAAS,EAAGorB,OAAO,CAAC5D,MAAM,CAACtN,SAAS,CAAEmL,IAAI,CAACmC,MAAM,CAAE;UACxE,IAAKnC,IAAI,CAAC3K,MAAM,KAAK1a,SAAS,EAAGorB,OAAO,CAAC1Q,MAAM,CAACR,SAAS,CAAEmL,IAAI,CAAC3K,MAAM,CAAE;UACxE,IAAK2K,IAAI,CAACxG,QAAQ,KAAK7e,SAAS,EAAGorB,OAAO,CAACvM,QAAQ,GAAGwG,IAAI,CAACxG,QAAQ;UAEnE,IAAKwG,IAAI,CAAC7oB,IAAI,KAAKwD,SAAS,EAAG;YAE9BorB,OAAO,CAACxE,KAAK,GAAGg7H,aAAa,CAAEv8H,IAAI,CAAC7oB,IAAI,CAAE,CAAC,CAAE,EAAEslJ,gBAAgB,CAAE;YACjE12H,OAAO,CAACvE,KAAK,GAAG+6H,aAAa,CAAEv8H,IAAI,CAAC7oB,IAAI,CAAE,CAAC,CAAE,EAAEslJ,gBAAgB,CAAE;UAElE;UAEA,IAAKz8H,IAAI,CAAC2B,MAAM,KAAKhnB,SAAS,EAAGorB,OAAO,CAACpE,MAAM,GAAG3B,IAAI,CAAC2B,MAAM;UAC7D,IAAK3B,IAAI,CAAC9nB,IAAI,KAAKyC,SAAS,EAAGorB,OAAO,CAAC7tB,IAAI,GAAG8nB,IAAI,CAAC9nB,IAAI;UACvD,IAAK8nB,IAAI,CAAC6B,QAAQ,KAAKlnB,SAAS,EAAGorB,OAAO,CAAClE,QAAQ,GAAG7B,IAAI,CAAC6B,QAAQ;UAEnE,IAAK7B,IAAI,CAAC0B,SAAS,KAAK/mB,SAAS,EAAGorB,OAAO,CAACrE,SAAS,GAAG66H,aAAa,CAAEv8H,IAAI,CAAC0B,SAAS,EAAEg7H,cAAc,CAAE;UACvG,IAAK18H,IAAI,CAACyB,SAAS,KAAK9mB,SAAS,EAAGorB,OAAO,CAACtE,SAAS,GAAG86H,aAAa,CAAEv8H,IAAI,CAACyB,SAAS,EAAEi7H,cAAc,CAAE;UACvG,IAAK18H,IAAI,CAAC4B,UAAU,KAAKjnB,SAAS,EAAGorB,OAAO,CAACnE,UAAU,GAAG5B,IAAI,CAAC4B,UAAU;UAEzE,IAAK5B,IAAI,CAACuC,KAAK,KAAK5nB,SAAS,EAAGorB,OAAO,CAACxD,KAAK,GAAGvC,IAAI,CAACuC,KAAK;UAE1D,IAAKvC,IAAI,CAACsC,gBAAgB,KAAK3nB,SAAS,EAAGorB,OAAO,CAACzD,gBAAgB,GAAGtC,IAAI,CAACsC,gBAAgB;UAC3F,IAAKtC,IAAI,CAACwC,eAAe,KAAK7nB,SAAS,EAAGorB,OAAO,CAACvD,eAAe,GAAGxC,IAAI,CAACwC,eAAe;UAExF,IAAKxC,IAAI,CAACyC,QAAQ,KAAK9nB,SAAS,EAAGorB,OAAO,CAACtD,QAAQ,GAAGzC,IAAI,CAACyC,QAAQ;UAEnES,QAAQ,CAAElD,IAAI,CAACnT,IAAI,CAAE,GAAGkZ,OAAO;QAEhC;MAED;MAEA,OAAO7C,QAAQ;IAEhB;EAAC;IAAA/sB,GAAA;IAAAE,KAAA,EAED,SAAAokJ,YAAaz6H,IAAI,EAAEokB,UAAU,EAAEC,SAAS,EAAEnhB,QAAQ,EAAEue,UAAU,EAAG;MAEhE,IAAIvkC,MAAM;MAEV,SAASy/I,WAAWA,CAAEngJ,IAAI,EAAG;QAE5B,IAAK4nC,UAAU,CAAE5nC,IAAI,CAAE,KAAK7B,SAAS,EAAG;UAEvCkW,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAEtU,IAAI,CAAE;QAE/D;QAEA,OAAO4nC,UAAU,CAAE5nC,IAAI,CAAE;MAE1B;MAEA,SAASogJ,WAAWA,CAAEpgJ,IAAI,EAAG;QAE5B,IAAKA,IAAI,KAAK7B,SAAS,EAAG,OAAOA,SAAS;QAE1C,IAAK8lB,KAAK,CAACC,OAAO,CAAElkB,IAAI,CAAE,EAAG;UAE5B,IAAMuP,KAAK,GAAG,EAAE;UAEhB,KAAM,IAAI7P,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGxP,IAAI,CAACP,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;YAE/C,IAAM2Q,IAAI,GAAGrQ,IAAI,CAAEN,CAAC,CAAE;YAEtB,IAAKmoC,SAAS,CAAEx3B,IAAI,CAAE,KAAKlS,SAAS,EAAG;cAEtCkW,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAEjE,IAAI,CAAE;YAE/D;YAEAd,KAAK,CAACrQ,IAAI,CAAE2oC,SAAS,CAAEx3B,IAAI,CAAE,CAAE;UAEhC;UAEA,OAAOd,KAAK;QAEb;QAEA,IAAKs4B,SAAS,CAAE7nC,IAAI,CAAE,KAAK7B,SAAS,EAAG;UAEtCkW,OAAO,CAACC,IAAI,CAAE,wCAAwC,EAAEtU,IAAI,CAAE;QAE/D;QAEA,OAAO6nC,SAAS,CAAE7nC,IAAI,CAAE;MAEzB;MAEA,SAASq7I,UAAUA,CAAEhrI,IAAI,EAAG;QAE3B,IAAKqW,QAAQ,CAAErW,IAAI,CAAE,KAAKlS,SAAS,EAAG;UAErCkW,OAAO,CAACC,IAAI,CAAE,uCAAuC,EAAEjE,IAAI,CAAE;QAE9D;QAEA,OAAOqW,QAAQ,CAAErW,IAAI,CAAE;MAExB;MAEA,IAAIulB,QAAQ,EAAEuT,QAAQ;MAEtB,QAAS3lB,IAAI,CAAC9nB,IAAI;QAEjB,KAAK,OAAO;UAEXgF,MAAM,GAAG,IAAIk0G,KAAK,EAAE;UAEpB,IAAKpxF,IAAI,CAACglB,UAAU,KAAKrqC,SAAS,EAAG;YAEpC,IAAKgF,MAAM,CAACk9I,SAAS,CAAE78H,IAAI,CAACglB,UAAU,CAAE,EAAG;cAE1C9nC,MAAM,CAAC8nC,UAAU,GAAG,IAAI/oB,KAAK,CAAE+D,IAAI,CAACglB,UAAU,CAAE;YAEjD,CAAC,MAAM;cAEN9nC,MAAM,CAAC8nC,UAAU,GAAG6yG,UAAU,CAAE73H,IAAI,CAACglB,UAAU,CAAE;YAElD;UAED;UAEA,IAAKhlB,IAAI,CAACilB,WAAW,KAAKtqC,SAAS,EAAG;YAErCuC,MAAM,CAAC+nC,WAAW,GAAG4yG,UAAU,CAAE73H,IAAI,CAACilB,WAAW,CAAE;UAEpD;UAEA,IAAKjlB,IAAI,CAAC4vB,GAAG,KAAKj1C,SAAS,EAAG;YAE7B,IAAKqlB,IAAI,CAAC4vB,GAAG,CAAC13C,IAAI,KAAK,KAAK,EAAG;cAE9BgF,MAAM,CAAC0yC,GAAG,GAAG,IAAIuhE,GAAG,CAAEnxF,IAAI,CAAC4vB,GAAG,CAACx0B,KAAK,EAAE4E,IAAI,CAAC4vB,GAAG,CAAC7R,IAAI,EAAE/d,IAAI,CAAC4vB,GAAG,CAAC5R,GAAG,CAAE;YAEpE,CAAC,MAAM,IAAKhe,IAAI,CAAC4vB,GAAG,CAAC13C,IAAI,KAAK,SAAS,EAAG;cAEzCgF,MAAM,CAAC0yC,GAAG,GAAG,IAAIshE,OAAO,CAAElxF,IAAI,CAAC4vB,GAAG,CAACx0B,KAAK,EAAE4E,IAAI,CAAC4vB,GAAG,CAAC0zD,OAAO,CAAE;YAE7D;UAED;UAEA;QAED,KAAK,mBAAmB;UAEvBpmG,MAAM,GAAG,IAAImiD,iBAAiB,CAAEr/B,IAAI,CAACw/B,GAAG,EAAEx/B,IAAI,CAACy/B,MAAM,EAAEz/B,IAAI,CAAC+d,IAAI,EAAE/d,IAAI,CAACge,GAAG,CAAE;UAE5E,IAAKhe,IAAI,CAAC6/B,KAAK,KAAKllD,SAAS,EAAGuC,MAAM,CAAC2iD,KAAK,GAAG7/B,IAAI,CAAC6/B,KAAK;UACzD,IAAK7/B,IAAI,CAAC4/B,IAAI,KAAKjlD,SAAS,EAAGuC,MAAM,CAAC0iD,IAAI,GAAG5/B,IAAI,CAAC4/B,IAAI;UACtD,IAAK5/B,IAAI,CAAC+/B,SAAS,KAAKplD,SAAS,EAAGuC,MAAM,CAAC6iD,SAAS,GAAG//B,IAAI,CAAC+/B,SAAS;UACrE,IAAK//B,IAAI,CAACggC,UAAU,KAAKrlD,SAAS,EAAGuC,MAAM,CAAC8iD,UAAU,GAAGhgC,IAAI,CAACggC,UAAU;UACxE,IAAKhgC,IAAI,CAAC8/B,IAAI,KAAKnlD,SAAS,EAAGuC,MAAM,CAAC4iD,IAAI,GAAGjqD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErG,IAAI,CAAC8/B,IAAI,CAAE;UAE3E;QAED,KAAK,oBAAoB;UAExB5iD,MAAM,GAAG,IAAIqkE,kBAAkB,CAAEvhD,IAAI,CAAC2d,IAAI,EAAE3d,IAAI,CAAC4d,KAAK,EAAE5d,IAAI,CAAC6d,GAAG,EAAE7d,IAAI,CAAC8d,MAAM,EAAE9d,IAAI,CAAC+d,IAAI,EAAE/d,IAAI,CAACge,GAAG,CAAE;UAEpG,IAAKhe,IAAI,CAAC4/B,IAAI,KAAKjlD,SAAS,EAAGuC,MAAM,CAAC0iD,IAAI,GAAG5/B,IAAI,CAAC4/B,IAAI;UACtD,IAAK5/B,IAAI,CAAC8/B,IAAI,KAAKnlD,SAAS,EAAGuC,MAAM,CAAC4iD,IAAI,GAAGjqD,MAAM,CAACwwB,MAAM,CAAE,CAAC,CAAC,EAAErG,IAAI,CAAC8/B,IAAI,CAAE;UAE3E;QAED,KAAK,cAAc;UAElB5iD,MAAM,GAAG,IAAIk5I,YAAY,CAAEp2H,IAAI,CAAC5E,KAAK,EAAE4E,IAAI,CAAC+hE,SAAS,CAAE;UAEvD;QAED,KAAK,kBAAkB;UAEtB7kF,MAAM,GAAG,IAAI84I,gBAAgB,CAAEh2H,IAAI,CAAC5E,KAAK,EAAE4E,IAAI,CAAC+hE,SAAS,CAAE;UAE3D;QAED,KAAK,YAAY;UAEhB7kF,MAAM,GAAG,IAAIq4I,UAAU,CAAEv1H,IAAI,CAAC5E,KAAK,EAAE4E,IAAI,CAAC+hE,SAAS,EAAE/hE,IAAI,CAACsiB,QAAQ,EAAEtiB,IAAI,CAAC61C,KAAK,CAAE;UAEhF;QAED,KAAK,eAAe;UAEnB34D,MAAM,GAAG,IAAIs5I,aAAa,CAAEx2H,IAAI,CAAC5E,KAAK,EAAE4E,IAAI,CAAC+hE,SAAS,EAAE/hE,IAAI,CAACZ,KAAK,EAAEY,IAAI,CAACX,MAAM,CAAE;UAEjF;QAED,KAAK,WAAW;UAEfniB,MAAM,GAAG,IAAIw3I,SAAS,CAAE10H,IAAI,CAAC5E,KAAK,EAAE4E,IAAI,CAAC+hE,SAAS,EAAE/hE,IAAI,CAACsiB,QAAQ,EAAEtiB,IAAI,CAAChM,KAAK,EAAEgM,IAAI,CAAC0iE,QAAQ,EAAE1iE,IAAI,CAAC61C,KAAK,CAAE;UAE1G;QAED,KAAK,iBAAiB;UAErB34D,MAAM,GAAG,IAAIs2I,eAAe,CAAExzH,IAAI,CAAC5E,KAAK,EAAE4E,IAAI,CAACy2C,WAAW,EAAEz2C,IAAI,CAAC+hE,SAAS,CAAE;UAE5E;QAED,KAAK,YAAY;UAEhB7kF,MAAM,GAAG,IAAIm6I,UAAU,EAAE,CAACp6F,QAAQ,CAAEj9B,IAAI,CAAE;UAE1C;QAED,KAAK,aAAa;UAEjBoS,QAAQ,GAAGuqH,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE;UACtCuT,QAAQ,GAAGi3G,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE;UAExCzoC,MAAM,GAAG,IAAIs3G,WAAW,CAAEpiF,QAAQ,EAAEuT,QAAQ,CAAE;UAE9C,IAAK3lB,IAAI,CAACwlB,QAAQ,KAAK7qC,SAAS,EAAGuC,MAAM,CAACsoC,QAAQ,GAAGxlB,IAAI,CAACwlB,QAAQ;UAClE,IAAKxlB,IAAI,CAACylB,UAAU,KAAK9qC,SAAS,EAAGuC,MAAM,CAACuoC,UAAU,CAAC5wB,SAAS,CAAEmL,IAAI,CAACylB,UAAU,CAAE;UACnF,IAAKzlB,IAAI,CAAC0lB,QAAQ,KAAK/qC,SAAS,EAAGuC,MAAM,CAACwoC,QAAQ,GAAG1lB,IAAI,CAAC0lB,QAAQ;UAElE;QAED,KAAK,MAAM;UAEVtT,QAAQ,GAAGuqH,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE;UACvCuT,QAAQ,GAAGi3G,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE;UAEvCzoC,MAAM,GAAG,IAAIi9C,IAAI,CAAE/nB,QAAQ,EAAEuT,QAAQ,CAAE;UAEvC;QAED,KAAK,eAAe;UAEnBvT,QAAQ,GAAGuqH,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE;UACvCuT,QAAQ,GAAGi3G,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE;UACvC,IAAM7d,KAAK,GAAG9H,IAAI,CAAC8H,KAAK;UACxB,IAAM4c,cAAc,GAAG1kB,IAAI,CAAC0kB,cAAc;UAC1C,IAAMC,aAAa,GAAG3kB,IAAI,CAAC2kB,aAAa;UAExCznC,MAAM,GAAG,IAAI45G,aAAa,CAAE1kF,QAAQ,EAAEuT,QAAQ,EAAE7d,KAAK,CAAE;UACvD5qB,MAAM,CAACwnC,cAAc,GAAG,IAAI4xE,wBAAwB,CAAE,IAAItlG,YAAY,CAAE0zB,cAAc,CAAC34B,KAAK,CAAE,EAAE,EAAE,CAAE;UACpG,IAAK44B,aAAa,KAAKhqC,SAAS,EAAGuC,MAAM,CAACynC,aAAa,GAAG,IAAI2xE,wBAAwB,CAAE,IAAItlG,YAAY,CAAE2zB,aAAa,CAAC54B,KAAK,CAAE,EAAE44B,aAAa,CAAC8L,QAAQ,CAAE;UAEzJ;QAED,KAAK,KAAK;UAETvzC,MAAM,GAAG,IAAIy2G,GAAG,EAAE;UAElB;QAED,KAAK,MAAM;UAEVz2G,MAAM,GAAG,IAAIg7G,IAAI,CAAEykC,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE,EAAEwqH,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE,CAAE;UAE/E;QAED,KAAK,UAAU;UAEdzoC,MAAM,GAAG,IAAIm8G,QAAQ,CAAEsjC,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE,EAAEwqH,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE,CAAE;UAEnF;QAED,KAAK,cAAc;UAElBzoC,MAAM,GAAG,IAAI+7G,YAAY,CAAE0jC,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE,EAAEwqH,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE,CAAE;UAEvF;QAED,KAAK,YAAY;QACjB,KAAK,QAAQ;UAEZzoC,MAAM,GAAG,IAAI88G,MAAM,CAAE2iC,WAAW,CAAE38H,IAAI,CAACoS,QAAQ,CAAE,EAAEwqH,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE,CAAE;UAEjF;QAED,KAAK,QAAQ;UAEZzoC,MAAM,GAAG,IAAI+1G,MAAM,CAAE2pC,WAAW,CAAE58H,IAAI,CAAC2lB,QAAQ,CAAE,CAAE;UAEnD;QAED,KAAK,OAAO;UAEXzoC,MAAM,GAAG,IAAIu8F,KAAK,EAAE;UAEpB;QAED,KAAK,MAAM;UAEVv8F,MAAM,GAAG,IAAIk4G,IAAI,EAAE;UAEnB;QAED;UAECl4G,MAAM,GAAG,IAAIojC,QAAQ,EAAE;MAAC;MAI1BpjC,MAAM,CAAC2P,IAAI,GAAGmT,IAAI,CAACnT,IAAI;MAEvB,IAAKmT,IAAI,CAACxjB,IAAI,KAAK7B,SAAS,EAAGuC,MAAM,CAACV,IAAI,GAAGwjB,IAAI,CAACxjB,IAAI;MAEtD,IAAKwjB,IAAI,CAACjG,MAAM,KAAKpf,SAAS,EAAG;QAEhCuC,MAAM,CAAC6c,MAAM,CAAClF,SAAS,CAAEmL,IAAI,CAACjG,MAAM,CAAE;QAEtC,IAAKiG,IAAI,CAACoC,gBAAgB,KAAKznB,SAAS,EAAGuC,MAAM,CAACklB,gBAAgB,GAAGpC,IAAI,CAACoC,gBAAgB;QAC1F,IAAKllB,MAAM,CAACklB,gBAAgB,EAAGllB,MAAM,CAAC6c,MAAM,CAACsjB,SAAS,CAAEngC,MAAM,CAACo1B,QAAQ,EAAEp1B,MAAM,CAACwrB,UAAU,EAAExrB,MAAM,CAACyc,KAAK,CAAE;MAE3G,CAAC,MAAM;QAEN,IAAKqG,IAAI,CAACsS,QAAQ,KAAK33B,SAAS,EAAGuC,MAAM,CAACo1B,QAAQ,CAACzd,SAAS,CAAEmL,IAAI,CAACsS,QAAQ,CAAE;QAC7E,IAAKtS,IAAI,CAACxG,QAAQ,KAAK7e,SAAS,EAAGuC,MAAM,CAACsc,QAAQ,CAAC3E,SAAS,CAAEmL,IAAI,CAACxG,QAAQ,CAAE;QAC7E,IAAKwG,IAAI,CAAC0I,UAAU,KAAK/tB,SAAS,EAAGuC,MAAM,CAACwrB,UAAU,CAAC7T,SAAS,CAAEmL,IAAI,CAAC0I,UAAU,CAAE;QACnF,IAAK1I,IAAI,CAACrG,KAAK,KAAKhf,SAAS,EAAGuC,MAAM,CAACyc,KAAK,CAAC9E,SAAS,CAAEmL,IAAI,CAACrG,KAAK,CAAE;MAErE;MAEA,IAAKqG,IAAI,CAACqhB,UAAU,KAAK1mC,SAAS,EAAGuC,MAAM,CAACmkC,UAAU,GAAGrhB,IAAI,CAACqhB,UAAU;MACxE,IAAKrhB,IAAI,CAACshB,aAAa,KAAK3mC,SAAS,EAAGuC,MAAM,CAACokC,aAAa,GAAGthB,IAAI,CAACshB,aAAa;MAEjF,IAAKthB,IAAI,CAAC43C,MAAM,EAAG;QAElB,IAAK53C,IAAI,CAAC43C,MAAM,CAAC0qB,IAAI,KAAK3nF,SAAS,EAAGuC,MAAM,CAAC06D,MAAM,CAAC0qB,IAAI,GAAGtiE,IAAI,CAAC43C,MAAM,CAAC0qB,IAAI;QAC3E,IAAKtiE,IAAI,CAAC43C,MAAM,CAAC2qB,UAAU,KAAK5nF,SAAS,EAAGuC,MAAM,CAAC06D,MAAM,CAAC2qB,UAAU,GAAGviE,IAAI,CAAC43C,MAAM,CAAC2qB,UAAU;QAC7F,IAAKviE,IAAI,CAAC43C,MAAM,CAACloC,MAAM,KAAK/0B,SAAS,EAAGuC,MAAM,CAAC06D,MAAM,CAACloC,MAAM,GAAG1P,IAAI,CAAC43C,MAAM,CAACloC,MAAM;QACjF,IAAK1P,IAAI,CAAC43C,MAAM,CAAC4qB,OAAO,KAAK7nF,SAAS,EAAGuC,MAAM,CAAC06D,MAAM,CAAC4qB,OAAO,CAAC3tE,SAAS,CAAEmL,IAAI,CAAC43C,MAAM,CAAC4qB,OAAO,CAAE;QAC/F,IAAKxiE,IAAI,CAAC43C,MAAM,CAAC1pC,MAAM,KAAKvzB,SAAS,EAAGuC,MAAM,CAAC06D,MAAM,CAAC1pC,MAAM,GAAG,IAAI,CAACusH,WAAW,CAAEz6H,IAAI,CAAC43C,MAAM,CAAC1pC,MAAM,CAAE;MAEtG;MAEA,IAAKlO,IAAI,CAACohB,OAAO,KAAKzmC,SAAS,EAAGuC,MAAM,CAACkkC,OAAO,GAAGphB,IAAI,CAACohB,OAAO;MAC/D,IAAKphB,IAAI,CAACuhB,aAAa,KAAK5mC,SAAS,EAAGuC,MAAM,CAACqkC,aAAa,GAAGvhB,IAAI,CAACuhB,aAAa;MACjF,IAAKvhB,IAAI,CAACwhB,WAAW,KAAK7mC,SAAS,EAAGuC,MAAM,CAACskC,WAAW,GAAGxhB,IAAI,CAACwhB,WAAW;MAC3E,IAAKxhB,IAAI,CAACyC,QAAQ,KAAK9nB,SAAS,EAAGuC,MAAM,CAACulB,QAAQ,GAAGzC,IAAI,CAACyC,QAAQ;MAClE,IAAKzC,IAAI,CAACuf,MAAM,KAAK5kC,SAAS,EAAGuC,MAAM,CAACqiC,MAAM,CAACP,IAAI,GAAGhf,IAAI,CAACuf,MAAM;MAEjE,IAAKvf,IAAI,CAAC2S,QAAQ,KAAKh4B,SAAS,EAAG;QAElC,IAAMg4B,QAAQ,GAAG3S,IAAI,CAAC2S,QAAQ;QAE9B,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy2B,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,EAAG,EAAG;UAE5CgB,MAAM,CAACqV,GAAG,CAAE,IAAI,CAACkoI,WAAW,CAAE9nH,QAAQ,CAAEz2B,CAAC,CAAE,EAAEkoC,UAAU,EAAEC,SAAS,EAAEnhB,QAAQ,EAAEue,UAAU,CAAE,CAAE;QAE7F;MAED;MAEA,IAAKzhB,IAAI,CAACyhB,UAAU,KAAK9mC,SAAS,EAAG;QAEpC,IAAMmiJ,gBAAgB,GAAG98H,IAAI,CAACyhB,UAAU;QAExC,KAAM,IAAIvlC,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG4gJ,gBAAgB,CAAC7gJ,MAAM,EAAEC,IAAC,EAAG,EAAG;UAEpD,IAAM2Q,IAAI,GAAGiwI,gBAAgB,CAAE5gJ,IAAC,CAAE;UAElCgB,MAAM,CAACukC,UAAU,CAAC/lC,IAAI,CAAE+lC,UAAU,CAAE50B,IAAI,CAAE,CAAE;QAE7C;MAED;MAEA,IAAKmT,IAAI,CAAC9nB,IAAI,KAAK,KAAK,EAAG;QAE1B,IAAK8nB,IAAI,CAAC2lE,UAAU,KAAKhrF,SAAS,EAAGuC,MAAM,CAACyoF,UAAU,GAAG3lE,IAAI,CAAC2lE,UAAU;QAExE,IAAM2N,MAAM,GAAGtzE,IAAI,CAACszE,MAAM;QAE1B,KAAM,IAAItnF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsnF,MAAM,CAACr3F,MAAM,EAAE+P,CAAC,EAAG,EAAG;UAE1C,IAAM4jG,KAAK,GAAGtc,MAAM,CAAEtnF,CAAC,CAAE;UACzB,IAAMu3B,KAAK,GAAGrmC,MAAM,CAACmmC,mBAAmB,CAAE,MAAM,EAAEusE,KAAK,CAAC1yG,MAAM,CAAE;UAEhE,IAAKqmC,KAAK,KAAK5oC,SAAS,EAAG;YAE1BuC,MAAM,CAAC82G,QAAQ,CAAEzwE,KAAK,EAAEqsE,KAAK,CAACttE,QAAQ,CAAE;UAEzC;QAED;MAED;MAEA,OAAOplC,MAAM;IAEd;EAAC;IAAA/G,GAAA;IAAAE,KAAA,EAED,SAAAskJ,cAAez9I,MAAM,EAAEqnC,SAAS,EAAG;MAElC,IAAK1uC,MAAM,CAACmH,IAAI,CAAEunC,SAAS,CAAE,CAACtoC,MAAM,KAAK,CAAC,EAAG;MAE7CiB,MAAM,CAAC2mC,QAAQ,CAAE,UAAWN,KAAK,EAAG;QAEnC,IAAKA,KAAK,CAACgC,aAAa,KAAK,IAAI,IAAIhC,KAAK,CAACmC,QAAQ,KAAK/qC,SAAS,EAAG;UAEnE,IAAM+qC,QAAQ,GAAGnB,SAAS,CAAEhB,KAAK,CAACmC,QAAQ,CAAE;UAE5C,IAAKA,QAAQ,KAAK/qC,SAAS,EAAG;YAE7BkW,OAAO,CAACC,IAAI,CAAE,kDAAkD,EAAEyyB,KAAK,CAACmC,QAAQ,CAAE;UAEnF,CAAC,MAAM;YAENnC,KAAK,CAAC+hE,IAAI,CAAE5/D,QAAQ,EAAEnC,KAAK,CAACkC,UAAU,CAAE;UAEzC;QAED;MAED,CAAC,CAAE;IAEJ;EAAC;EAAA,OAAAg0G,YAAA;AAAA,EA//ByBjM,MAAM;AAAA73I,OAAA,CAAA8jJ,YAAA,GAAAA,YAAA;AAmgCjC,IAAM+C,eAAe,GAAG;EACvB74I,SAAS,EAAEA,SAAS;EACpBC,qBAAqB,EAAEA,qBAAqB;EAC5CC,qBAAqB,EAAEA,qBAAqB;EAC5CC,gCAAgC,EAAEA,gCAAgC;EAClEC,gCAAgC,EAAEA,gCAAgC;EAClEC,uBAAuB,EAAEA;AAC1B,CAAC;AAED,IAAMy4I,gBAAgB,GAAG;EACxBx4I,cAAc,EAAEA,cAAc;EAC9BC,mBAAmB,EAAEA,mBAAmB;EACxCC,sBAAsB,EAAEA;AACzB,CAAC;AAED,IAAMu4I,cAAc,GAAG;EACtBt4I,aAAa,EAAEA,aAAa;EAC5BC,0BAA0B,EAAEA,0BAA0B;EACtDE,yBAAyB,EAAEA,yBAAyB;EACpDE,YAAY,EAAEA,YAAY;EAC1BC,yBAAyB,EAAEA,yBAAyB;EACpDE,wBAAwB,EAAEA;AAC3B,CAAC;AAAC,IAEIm4I,iBAAiB,0BAAAC,SAAA;EAAA/7H,SAAA,CAAA87H,iBAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAA97H,YAAA,CAAA47H,iBAAA;EAEtB,SAAAA,kBAAatP,OAAO,EAAG;IAAA,IAAAyP,QAAA;IAAAz+I,eAAA,OAAAs+I,iBAAA;IAEtBG,QAAA,GAAAD,SAAA,CAAA9kJ,IAAA,OAAOs1I,OAAO;IAEdyP,QAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/B,IAAK,OAAOC,iBAAiB,KAAK,WAAW,EAAG;MAE/CvsI,OAAO,CAACC,IAAI,CAAE,6DAA6D,CAAE;IAE9E;IAEA,IAAK,OAAO0+H,KAAK,KAAK,WAAW,EAAG;MAEnC3+H,OAAO,CAACC,IAAI,CAAE,iDAAiD,CAAE;IAElE;IAEAosI,QAAA,CAAK13H,OAAO,GAAG;MAAElD,gBAAgB,EAAE;IAAO,CAAC;IAAC,OAAA46H,QAAA;EAE7C;EAACj+I,YAAA,CAAA89I,iBAAA;IAAA5mJ,GAAA;IAAAE,KAAA,EAED,SAAAgnJ,WAAY73H,OAAO,EAAG;MAErB,IAAI,CAACA,OAAO,GAAGA,OAAO;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAArvB,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAK7rH,GAAG,KAAK7lB,SAAS,EAAG6lB,GAAG,GAAG,EAAE;MAEjC,IAAK,IAAI,CAAC+wD,IAAI,KAAK52E,SAAS,EAAG6lB,GAAG,GAAG,IAAI,CAAC+wD,IAAI,GAAG/wD,GAAG;MAEpDA,GAAG,GAAG,IAAI,CAACitH,OAAO,CAACV,UAAU,CAAEvsH,GAAG,CAAE;MAEpC,IAAMu7B,KAAK,GAAG,IAAI;MAElB,IAAMsM,MAAM,GAAG0jF,KAAK,CAACl6H,GAAG,CAAE2O,GAAG,CAAE;MAE/B,IAAK6nC,MAAM,KAAK1tD,SAAS,EAAG;QAE3BohD,KAAK,CAAC0xF,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;QAE9BwuH,UAAU,CAAE,YAAY;UAEvB,IAAK7C,MAAM,EAAGA,MAAM,CAAE9jF,MAAM,CAAE;UAE9BtM,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;QAE7B,CAAC,EAAE,CAAC,CAAE;QAEN,OAAO6nC,MAAM;MAEd;MAEA,IAAMi1F,YAAY,GAAG,CAAC,CAAC;MACvBA,YAAY,CAACjO,WAAW,GAAK,IAAI,CAAC3B,WAAW,KAAK,WAAW,GAAK,aAAa,GAAG,SAAS;MAC3F4P,YAAY,CAACnO,OAAO,GAAG,IAAI,CAACtB,aAAa;MAEzC2B,KAAK,CAAEhvH,GAAG,EAAE88H,YAAY,CAAE,CAAC5jJ,IAAI,CAAE,UAAWgG,GAAG,EAAG;QAEjD,OAAOA,GAAG,CAACkxI,IAAI,EAAE;MAElB,CAAC,CAAE,CAACl3I,IAAI,CAAE,UAAWk3I,IAAI,EAAG;QAE3B,OAAOwM,iBAAiB,CAAExM,IAAI,EAAE/6I,MAAM,CAACwwB,MAAM,CAAE01B,KAAK,CAACv2B,OAAO,EAAE;UAAE+3H,oBAAoB,EAAE;QAAO,CAAC,CAAE,CAAE;MAEnG,CAAC,CAAE,CAAC7jJ,IAAI,CAAE,UAAW8jJ,WAAW,EAAG;QAElCzR,KAAK,CAACx5H,GAAG,CAAEiO,GAAG,EAAEg9H,WAAW,CAAE;QAE7B,IAAKrR,MAAM,EAAGA,MAAM,CAAEqR,WAAW,CAAE;QAEnCzhG,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;MAE7B,CAAC,CAAE,CAACniB,KAAK,CAAE,UAAW8U,CAAC,EAAG;QAEzB,IAAKk5H,OAAO,EAAGA,OAAO,CAAEl5H,CAAC,CAAE;QAE3B4oC,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;QAC9Bu7B,KAAK,CAAC0xF,OAAO,CAACZ,OAAO,CAAErsH,GAAG,CAAE;MAE7B,CAAC,CAAE;MAEHu7B,KAAK,CAAC0xF,OAAO,CAACb,SAAS,CAAEpsH,GAAG,CAAE;IAE/B;EAAC;EAAA,OAAAu8H,iBAAA;AAAA,EA3F8BvP,MAAM;AAAA73I,OAAA,CAAAonJ,iBAAA,GAAAA,iBAAA;AA+FtC,IAAIj2C,QAAQ;AAEZ,IAAM22C,YAAY,GAAG;EAEpBn+H,UAAU,EAAE,SAAAA,WAAA,EAAY;IAEvB,IAAKwnF,QAAQ,KAAKnsG,SAAS,EAAG;MAE7BmsG,QAAQ,GAAG,KAAM42C,MAAM,CAACD,YAAY,IAAIC,MAAM,CAACC,kBAAkB,GAAI;IAEtE;IAEA,OAAO72C,QAAQ;EAEhB,CAAC;EAED3/C,UAAU,EAAE,SAAAA,WAAW9wD,KAAK,EAAG;IAE9BywG,QAAQ,GAAGzwG,KAAK;EAEjB;AAED,CAAC;AAACV,OAAA,CAAA8nJ,YAAA,GAAAA,YAAA;AAAA,IAEIG,WAAW,0BAAAC,SAAA;EAAA58H,SAAA,CAAA28H,WAAA,EAAAC,SAAA;EAAA,IAAAC,SAAA,GAAA38H,YAAA,CAAAy8H,WAAA;EAEhB,SAAAA,YAAanQ,OAAO,EAAG;IAAAhvI,eAAA,OAAAm/I,WAAA;IAAA,OAAAE,SAAA,CAAA3lJ,IAAA,OAEfs1I,OAAO;EAEf;EAACxuI,YAAA,CAAA2+I,WAAA;IAAAznJ,GAAA;IAAAE,KAAA,EAED,SAAAy3I,KAAMttH,GAAG,EAAE2rH,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;MAExC,IAAMtwF,KAAK,GAAG,IAAI;MAElB,IAAMoxF,MAAM,GAAG,IAAIyB,UAAU,CAAE,IAAI,CAACnB,OAAO,CAAE;MAC7CN,MAAM,CAACoE,eAAe,CAAE,aAAa,CAAE;MACvCpE,MAAM,CAACe,OAAO,CAAE,IAAI,CAAC38D,IAAI,CAAE;MAC3B47D,MAAM,CAACiB,gBAAgB,CAAE,IAAI,CAACP,aAAa,CAAE;MAC7CV,MAAM,CAACc,kBAAkB,CAAE,IAAI,CAACN,eAAe,CAAE;MACjDR,MAAM,CAACW,IAAI,CAAEttH,GAAG,EAAE,UAAWjG,MAAM,EAAG;QAErC,IAAI;UAEH;UACA;UACA,IAAMwjI,UAAU,GAAGxjI,MAAM,CAAC/c,KAAK,CAAE,CAAC,CAAE;UAEpC,IAAM5F,OAAO,GAAG6lJ,YAAY,CAACn+H,UAAU,EAAE;UACzC1nB,OAAO,CAAComJ,eAAe,CAAED,UAAU,EAAE,UAAWE,WAAW,EAAG;YAE7D9R,MAAM,CAAE8R,WAAW,CAAE;UAEtB,CAAC,CAAE;QAEJ,CAAC,CAAC,OAAQ9qI,CAAC,EAAG;UAEb,IAAKk5H,OAAO,EAAG;YAEdA,OAAO,CAAEl5H,CAAC,CAAE;UAEb,CAAC,MAAM;YAENtC,OAAO,CAACjX,KAAK,CAAEuZ,CAAC,CAAE;UAEnB;UAEA4oC,KAAK,CAAC0xF,OAAO,CAACX,SAAS,CAAEtsH,GAAG,CAAE;QAE/B;MAED,CAAC,EAAE4rH,UAAU,EAAEC,OAAO,CAAE;IAEzB;EAAC;EAAA,OAAAuR,WAAA;AAAA,EAlDwBpQ,MAAM;AAAA73I,OAAA,CAAAioJ,WAAA,GAAAA,WAAA;AAAA,IAsD1BM,oBAAoB,0BAAAC,WAAA;EAAAl9H,SAAA,CAAAi9H,oBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAj9H,YAAA,CAAA+8H,oBAAA;EAEzB,SAAAA,qBAAa1nF,QAAQ,EAAEC,WAAW,EAAEsrB,SAAS,GAAG,CAAC,EAAG;IAAA,IAAAs8D,QAAA;IAAA5/I,eAAA,OAAAy/I,oBAAA;IAEnDG,QAAA,GAAAD,SAAA,CAAAjmJ,IAAA,OAAOwC,SAAS,EAAEonF,SAAS;IAE3Bs8D,QAAA,CAAKC,sBAAsB,GAAG,IAAI;IAElC,IAAMngI,MAAM,GAAG,IAAIlC,KAAK,EAAE,CAACrL,GAAG,CAAE4lD,QAAQ,CAAE;IAC1C,IAAMp4C,MAAM,GAAG,IAAInC,KAAK,EAAE,CAACrL,GAAG,CAAE6lD,WAAW,CAAE;IAE7C,IAAM8nF,GAAG,GAAG,IAAIvxH,OAAO,CAAE7O,MAAM,CAACjF,CAAC,EAAEiF,MAAM,CAAC9F,CAAC,EAAE8F,MAAM,CAACpO,CAAC,CAAE;IACvD,IAAMyuI,MAAM,GAAG,IAAIxxH,OAAO,CAAE5O,MAAM,CAAClF,CAAC,EAAEkF,MAAM,CAAC/F,CAAC,EAAE+F,MAAM,CAACrO,CAAC,CAAE;;IAE1D;IACA,IAAM2vG,EAAE,GAAGtzG,IAAI,CAAC0H,IAAI,CAAE1H,IAAI,CAACC,EAAE,CAAE;IAC/B,IAAM2c,EAAE,GAAG02F,EAAE,GAAGtzG,IAAI,CAAC0H,IAAI,CAAE,IAAI,CAAE;IAEjCuqI,QAAA,CAAKn8D,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAAC9vE,IAAI,CAAEksI,GAAG,CAAE,CAAChsI,GAAG,CAAEisI,MAAM,CAAE,CAACzrI,cAAc,CAAE2sG,EAAE,CAAE;IACxE2+B,QAAA,CAAKn8D,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAAC9vE,IAAI,CAAEksI,GAAG,CAAE,CAAC5rI,GAAG,CAAE6rI,MAAM,CAAE,CAACzrI,cAAc,CAAEiW,EAAE,CAAE;IAAC,OAAAq1H,QAAA;EAE1E;EAAC,OAAAp/I,YAAA,CAAAi/I,oBAAA;AAAA,EArBiC7G,UAAU;AAAA1hJ,OAAA,CAAAuoJ,oBAAA,GAAAA,oBAAA;AAAA,IAyBvCO,iBAAiB,0BAAAC,YAAA;EAAAz9H,SAAA,CAAAw9H,iBAAA,EAAAC,YAAA;EAAA,IAAAC,SAAA,GAAAx9H,YAAA,CAAAs9H,iBAAA;EAEtB,SAAAA,kBAAarjI,KAAK,EAAE2mE,SAAS,GAAG,CAAC,EAAG;IAAA,IAAA68D,QAAA;IAAAngJ,eAAA,OAAAggJ,iBAAA;IAEnCG,QAAA,GAAAD,SAAA,CAAAxmJ,IAAA,OAAOwC,SAAS,EAAEonF,SAAS;IAE3B68D,QAAA,CAAKC,mBAAmB,GAAG,IAAI;IAE/B,IAAM1gI,MAAM,GAAG,IAAIlC,KAAK,EAAE,CAACrL,GAAG,CAAEwK,KAAK,CAAE;;IAEvC;IACAwjI,QAAA,CAAK18D,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAACvxE,GAAG,CAAEuN,MAAM,CAACjF,CAAC,EAAEiF,MAAM,CAAC9F,CAAC,EAAE8F,MAAM,CAACpO,CAAC,CAAE,CAACgD,cAAc,CAAE,CAAC,GAAG3G,IAAI,CAAC0H,IAAI,CAAE1H,IAAI,CAACC,EAAE,CAAE,CAAE;IAAC,OAAAuyI,QAAA;EAE1G;EAAC,OAAA3/I,YAAA,CAAAw/I,iBAAA;AAAA,EAb8BpH,UAAU;AAAA1hJ,OAAA,CAAA8oJ,iBAAA,GAAAA,iBAAA;AAiB1C,IAAMK,SAAS,GAAG,aAAc,IAAI9lH,OAAO,EAAE;AAC7C,IAAM+lH,QAAQ,GAAG,aAAc,IAAI/lH,OAAO,EAAE;AAC5C,IAAMgmH,iBAAiB,GAAG,aAAc,IAAIhmH,OAAO,EAAE;AAAC,IAEhDimH,YAAY;EAEjB,SAAAA,aAAA,EAAc;IAAAxgJ,eAAA,OAAAwgJ,YAAA;IAEb,IAAI,CAAC/mJ,IAAI,GAAG,cAAc;IAE1B,IAAI,CAACunD,MAAM,GAAG,CAAC;IAEf,IAAI,CAACy/F,MAAM,GAAG,KAAK;IAEnB,IAAI,CAACrhD,OAAO,GAAG,IAAIx+C,iBAAiB,EAAE;IACtC,IAAI,CAACw+C,OAAO,CAACt+D,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;IAC/B,IAAI,CAAC2+D,OAAO,CAACz7E,gBAAgB,GAAG,KAAK;IAErC,IAAI,CAAC07E,OAAO,GAAG,IAAIz+C,iBAAiB,EAAE;IACtC,IAAI,CAACy+C,OAAO,CAACv+D,MAAM,CAACL,MAAM,CAAE,CAAC,CAAE;IAC/B,IAAI,CAAC4+D,OAAO,CAAC17E,gBAAgB,GAAG,KAAK;IAErC,IAAI,CAAC+8H,MAAM,GAAG;MACbt/F,KAAK,EAAE,IAAI;MACXL,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,IAAI;MACZ1hB,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACT4hB,IAAI,EAAE,IAAI;MACVs/F,MAAM,EAAE;IACT,CAAC;EAEF;EAACjgJ,YAAA,CAAAggJ,YAAA;IAAA9oJ,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAQqF,MAAM,EAAG;MAEhB,IAAM6X,KAAK,GAAG,IAAI,CAACo5G,MAAM;MAEzB,IAAMl8H,WAAW,GAAG8iB,KAAK,CAAC8Z,KAAK,KAAK3xB,MAAM,CAAC2xB,KAAK,IAAI9Z,KAAK,CAACyZ,GAAG,KAAKtxB,MAAM,CAACsxB,GAAG,IAC3EzZ,KAAK,CAAC0Z,MAAM,KAAKvxB,MAAM,CAACuxB,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI1Z,KAAK,CAAChI,IAAI,KAAK7P,MAAM,CAAC6P,IAAI,IAC1EgI,KAAK,CAAC/H,GAAG,KAAK9P,MAAM,CAAC8P,GAAG,IAAI+H,KAAK,CAAC6Z,IAAI,KAAK1xB,MAAM,CAAC0xB,IAAI,IAAI7Z,KAAK,CAACm5G,MAAM,KAAK,IAAI,CAACA,MAAM;MAEvF,IAAKj8H,WAAW,EAAG;QAElB8iB,KAAK,CAAC8Z,KAAK,GAAG3xB,MAAM,CAAC2xB,KAAK;QAC1B9Z,KAAK,CAACyZ,GAAG,GAAGtxB,MAAM,CAACsxB,GAAG;QACtBzZ,KAAK,CAAC0Z,MAAM,GAAGvxB,MAAM,CAACuxB,MAAM,GAAG,IAAI,CAACA,MAAM;QAC1C1Z,KAAK,CAAChI,IAAI,GAAG7P,MAAM,CAAC6P,IAAI;QACxBgI,KAAK,CAAC/H,GAAG,GAAG9P,MAAM,CAAC8P,GAAG;QACtB+H,KAAK,CAAC6Z,IAAI,GAAG1xB,MAAM,CAAC0xB,IAAI;QACxB7Z,KAAK,CAACm5G,MAAM,GAAG,IAAI,CAACA,MAAM;;QAE1B;QACA;;QAEAF,iBAAiB,CAAC3sI,IAAI,CAAE6b,MAAM,CAACE,gBAAgB,CAAE;QACjD,IAAMgxH,UAAU,GAAGr5G,KAAK,CAACm5G,MAAM,GAAG,CAAC;QACnC,IAAMG,kBAAkB,GAAGD,UAAU,GAAGr5G,KAAK,CAAChI,IAAI,GAAGgI,KAAK,CAAC8Z,KAAK;QAChE,IAAMy/F,IAAI,GAAKv5G,KAAK,CAAChI,IAAI,GAAG3xB,IAAI,CAACo0C,GAAG,CAAEr0C,OAAO,GAAG45B,KAAK,CAACyZ,GAAG,GAAG,GAAG,CAAE,GAAKzZ,KAAK,CAAC6Z,IAAI;QAChF,IAAI2/F,IAAI,EAAEC,IAAI;;QAEd;;QAEAT,QAAQ,CAAC3rI,QAAQ,CAAE,EAAE,CAAE,GAAG,CAAEgsI,UAAU;QACtCN,SAAS,CAAC1rI,QAAQ,CAAE,EAAE,CAAE,GAAGgsI,UAAU;;QAErC;;QAEAG,IAAI,GAAG,CAAED,IAAI,GAAGv5G,KAAK,CAAC0Z,MAAM,GAAG4/F,kBAAkB;QACjDG,IAAI,GAAGF,IAAI,GAAGv5G,KAAK,CAAC0Z,MAAM,GAAG4/F,kBAAkB;QAE/CL,iBAAiB,CAAC5rI,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG2yB,KAAK,CAAChI,IAAI,IAAKyhH,IAAI,GAAGD,IAAI,CAAE;QAClEP,iBAAiB,CAAC5rI,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAEosI,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;QAEnE,IAAI,CAAC1hD,OAAO,CAACzvE,gBAAgB,CAAC/b,IAAI,CAAE2sI,iBAAiB,CAAE;;QAEvD;;QAEAO,IAAI,GAAG,CAAED,IAAI,GAAGv5G,KAAK,CAAC0Z,MAAM,GAAG4/F,kBAAkB;QACjDG,IAAI,GAAGF,IAAI,GAAGv5G,KAAK,CAAC0Z,MAAM,GAAG4/F,kBAAkB;QAE/CL,iBAAiB,CAAC5rI,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG2yB,KAAK,CAAChI,IAAI,IAAKyhH,IAAI,GAAGD,IAAI,CAAE;QAClEP,iBAAiB,CAAC5rI,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAEosI,IAAI,GAAGD,IAAI,KAAOC,IAAI,GAAGD,IAAI,CAAE;QAEnE,IAAI,CAACzhD,OAAO,CAAC1vE,gBAAgB,CAAC/b,IAAI,CAAE2sI,iBAAiB,CAAE;MAExD;MAEA,IAAI,CAACnhD,OAAO,CAACtvE,WAAW,CAAClc,IAAI,CAAE6b,MAAM,CAACK,WAAW,CAAE,CAACzb,QAAQ,CAAEisI,QAAQ,CAAE;MACxE,IAAI,CAACjhD,OAAO,CAACvvE,WAAW,CAAClc,IAAI,CAAE6b,MAAM,CAACK,WAAW,CAAE,CAACzb,QAAQ,CAAEgsI,SAAS,CAAE;IAE1E;EAAC;EAAA,OAAAG,YAAA;AAAA;AAAAtpJ,OAAA,CAAAspJ,YAAA,GAAAA,YAAA;AAAA,IAIIQ,KAAK;EAEV,SAAAA,MAAaC,SAAS,GAAG,IAAI,EAAG;IAAAjhJ,eAAA,OAAAghJ,KAAA;IAE/B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAACpY,SAAS,GAAG,CAAC;IAClB,IAAI,CAACqY,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,WAAW,GAAG,CAAC;IAEpB,IAAI,CAACC,OAAO,GAAG,KAAK;EAErB;EAAC5gJ,YAAA,CAAAwgJ,KAAA;IAAAtpJ,GAAA;IAAAE,KAAA,EAED,SAAAy+C,MAAA,EAAQ;MAEP,IAAI,CAACwyF,SAAS,GAAGwY,GAAG,EAAE;MAEtB,IAAI,CAACH,OAAO,GAAG,IAAI,CAACrY,SAAS;MAC7B,IAAI,CAACsY,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEpB;EAAC;IAAA1pJ,GAAA;IAAAE,KAAA,EAED,SAAAoH,KAAA,EAAO;MAEN,IAAI,CAACsiJ,cAAc,EAAE;MACrB,IAAI,CAACF,OAAO,GAAG,KAAK;MACpB,IAAI,CAACH,SAAS,GAAG,KAAK;IAEvB;EAAC;IAAAvpJ,GAAA;IAAAE,KAAA,EAED,SAAA0pJ,eAAA,EAAiB;MAEhB,IAAI,CAACC,QAAQ,EAAE;MACf,OAAO,IAAI,CAACJ,WAAW;IAExB;EAAC;IAAAzpJ,GAAA;IAAAE,KAAA,EAED,SAAA2pJ,SAAA,EAAW;MAEV,IAAIv7B,IAAI,GAAG,CAAC;MAEZ,IAAK,IAAI,CAACi7B,SAAS,IAAI,CAAE,IAAI,CAACG,OAAO,EAAG;QAEvC,IAAI,CAAC/qG,KAAK,EAAE;QACZ,OAAO,CAAC;MAET;MAEA,IAAK,IAAI,CAAC+qG,OAAO,EAAG;QAEnB,IAAMI,OAAO,GAAGH,GAAG,EAAE;QAErBr7B,IAAI,GAAG,CAAEw7B,OAAO,GAAG,IAAI,CAACN,OAAO,IAAK,IAAI;QACxC,IAAI,CAACA,OAAO,GAAGM,OAAO;QAEtB,IAAI,CAACL,WAAW,IAAIn7B,IAAI;MAEzB;MAEA,OAAOA,IAAI;IAEZ;EAAC;EAAA,OAAAg7B,KAAA;AAAA;AAAA9pJ,OAAA,CAAA8pJ,KAAA,GAAAA,KAAA;AAIF,SAASK,GAAGA,CAAA,EAAG;EAEd,OAAO,CAAE,OAAOI,WAAW,KAAK,WAAW,GAAGC,IAAI,GAAGD,WAAW,EAAGJ,GAAG,EAAE,CAAC,CAAC;AAE3E;;AAEA,IAAMM,WAAW,GAAG,aAAc,IAAIpzH,OAAO,EAAE;AAC/C,IAAMqzH,aAAa,GAAG,aAAc,IAAIn4H,UAAU,EAAE;AACpD,IAAMo4H,QAAQ,GAAG,aAAc,IAAItzH,OAAO,EAAE;AAC5C,IAAMuzH,cAAc,GAAG,aAAc,IAAIvzH,OAAO,EAAE;AAAC,IAE7CwzH,aAAa,0BAAAC,WAAA;EAAAx/H,SAAA,CAAAu/H,aAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAv/H,YAAA,CAAAq/H,aAAA;EAElB,SAAAA,cAAA,EAAc;IAAA,IAAAG,QAAA;IAAAliJ,eAAA,OAAA+hJ,aAAA;IAEbG,QAAA,GAAAD,SAAA,CAAAvoJ,IAAA;IAEAwoJ,QAAA,CAAKzoJ,IAAI,GAAG,eAAe;IAE3ByoJ,QAAA,CAAK/oJ,OAAO,GAAG6lJ,YAAY,CAACn+H,UAAU,EAAE;IAExCqhI,QAAA,CAAKC,IAAI,GAAGD,QAAA,CAAK/oJ,OAAO,CAACipJ,UAAU,EAAE;IACrCF,QAAA,CAAKC,IAAI,CAACE,OAAO,CAAEH,QAAA,CAAK/oJ,OAAO,CAACmpJ,WAAW,CAAE;IAE7CJ,QAAA,CAAKjsE,MAAM,GAAG,IAAI;IAElBisE,QAAA,CAAKK,SAAS,GAAG,CAAC;;IAElB;;IAEAL,QAAA,CAAKM,MAAM,GAAG,IAAIxB,KAAK,EAAE;IAAC,OAAAkB,QAAA;EAE3B;EAAC1hJ,YAAA,CAAAuhJ,aAAA;IAAArqJ,GAAA;IAAAE,KAAA,EAED,SAAA6qJ,SAAA,EAAW;MAEV,OAAO,IAAI,CAACN,IAAI;IAEjB;EAAC;IAAAzqJ,GAAA;IAAAE,KAAA,EAED,SAAA8qJ,aAAA,EAAe;MAEd,IAAK,IAAI,CAACzsE,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACksE,IAAI,CAAC/lD,UAAU,CAAE,IAAI,CAACnmB,MAAM,CAAE;QACnC,IAAI,CAACA,MAAM,CAACmmB,UAAU,CAAE,IAAI,CAACjjG,OAAO,CAACmpJ,WAAW,CAAE;QAClD,IAAI,CAACH,IAAI,CAACE,OAAO,CAAE,IAAI,CAAClpJ,OAAO,CAACmpJ,WAAW,CAAE;QAC7C,IAAI,CAACrsE,MAAM,GAAG,IAAI;MAEnB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAv+E,GAAA;IAAAE,KAAA,EAED,SAAA+qJ,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC1sE,MAAM;IAEnB;EAAC;IAAAv+E,GAAA;IAAAE,KAAA,EAED,SAAAgrJ,UAAWhrJ,KAAK,EAAG;MAElB,IAAK,IAAI,CAACq+E,MAAM,KAAK,IAAI,EAAG;QAE3B,IAAI,CAACksE,IAAI,CAAC/lD,UAAU,CAAE,IAAI,CAACnmB,MAAM,CAAE;QACnC,IAAI,CAACA,MAAM,CAACmmB,UAAU,CAAE,IAAI,CAACjjG,OAAO,CAACmpJ,WAAW,CAAE;MAEnD,CAAC,MAAM;QAEN,IAAI,CAACH,IAAI,CAAC/lD,UAAU,CAAE,IAAI,CAACjjG,OAAO,CAACmpJ,WAAW,CAAE;MAEjD;MAEA,IAAI,CAACrsE,MAAM,GAAGr+E,KAAK;MACnB,IAAI,CAACuqJ,IAAI,CAACE,OAAO,CAAE,IAAI,CAACpsE,MAAM,CAAE;MAChC,IAAI,CAACA,MAAM,CAACosE,OAAO,CAAE,IAAI,CAAClpJ,OAAO,CAACmpJ,WAAW,CAAE;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAA5qJ,GAAA;IAAAE,KAAA,EAED,SAAAirJ,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAACV,IAAI,CAACA,IAAI,CAACvqJ,KAAK;IAE5B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAkrJ,gBAAiBlrJ,KAAK,EAAG;MAExB,IAAI,CAACuqJ,IAAI,CAACA,IAAI,CAACY,eAAe,CAAEnrJ,KAAK,EAAE,IAAI,CAACuB,OAAO,CAAC6pJ,WAAW,EAAE,IAAI,CAAE;MAEvE,OAAO,IAAI;IAEZ;EAAC;IAAAtrJ,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1BmM,IAAA,CAAAC,eAAA,CAAAmwG,aAAA,CAAA1qJ,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;MAE9B,IAAM74B,QAAQ,GAAG,IAAI,CAACxT,OAAO,CAACwT,QAAQ;MACtC,IAAM6vB,EAAE,GAAG,IAAI,CAACA,EAAE;MAElB,IAAI,CAAC+lH,SAAS,GAAG,IAAI,CAACC,MAAM,CAACjB,QAAQ,EAAE;MAEvC,IAAI,CAACzxH,WAAW,CAAC8O,SAAS,CAAE+iH,WAAW,EAAEC,aAAa,EAAEC,QAAQ,CAAE;MAElEC,cAAc,CAAC3vI,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CAACyc,eAAe,CAAEgzH,aAAa,CAAE;MAEhE,IAAKj1I,QAAQ,CAACs2I,SAAS,EAAG;QAEzB;;QAEA,IAAMna,OAAO,GAAG,IAAI,CAAC3vI,OAAO,CAAC6pJ,WAAW,GAAG,IAAI,CAACT,SAAS;QAEzD51I,QAAQ,CAACs2I,SAAS,CAACC,uBAAuB,CAAEvB,WAAW,CAAC9yI,CAAC,EAAEi6H,OAAO,CAAE;QACpEn8H,QAAQ,CAACw2I,SAAS,CAACD,uBAAuB,CAAEvB,WAAW,CAACxyI,CAAC,EAAE25H,OAAO,CAAE;QACpEn8H,QAAQ,CAACy2I,SAAS,CAACF,uBAAuB,CAAEvB,WAAW,CAAC38H,CAAC,EAAE8jH,OAAO,CAAE;QACpEn8H,QAAQ,CAAC02I,QAAQ,CAACH,uBAAuB,CAAEpB,cAAc,CAACjzI,CAAC,EAAEi6H,OAAO,CAAE;QACtEn8H,QAAQ,CAAC22I,QAAQ,CAACJ,uBAAuB,CAAEpB,cAAc,CAAC3yI,CAAC,EAAE25H,OAAO,CAAE;QACtEn8H,QAAQ,CAAC42I,QAAQ,CAACL,uBAAuB,CAAEpB,cAAc,CAAC98H,CAAC,EAAE8jH,OAAO,CAAE;QACtEn8H,QAAQ,CAAC62I,GAAG,CAACN,uBAAuB,CAAE1mH,EAAE,CAAC3tB,CAAC,EAAEi6H,OAAO,CAAE;QACrDn8H,QAAQ,CAAC82I,GAAG,CAACP,uBAAuB,CAAE1mH,EAAE,CAACrtB,CAAC,EAAE25H,OAAO,CAAE;QACrDn8H,QAAQ,CAAC+2I,GAAG,CAACR,uBAAuB,CAAE1mH,EAAE,CAACxX,CAAC,EAAE8jH,OAAO,CAAE;MAEtD,CAAC,MAAM;QAENn8H,QAAQ,CAAC4wB,WAAW,CAAEokH,WAAW,CAAC9yI,CAAC,EAAE8yI,WAAW,CAACxyI,CAAC,EAAEwyI,WAAW,CAAC38H,CAAC,CAAE;QACnErY,QAAQ,CAACg3I,cAAc,CAAE7B,cAAc,CAACjzI,CAAC,EAAEizI,cAAc,CAAC3yI,CAAC,EAAE2yI,cAAc,CAAC98H,CAAC,EAAEwX,EAAE,CAAC3tB,CAAC,EAAE2tB,EAAE,CAACrtB,CAAC,EAAEqtB,EAAE,CAACxX,CAAC,CAAE;MAElG;IAED;EAAC;EAAA,OAAA+8H,aAAA;AAAA,EAzH0BlgH,QAAQ;AAAA3qC,OAAA,CAAA6qJ,aAAA,GAAAA,aAAA;AAAA,IA6H9B6B,KAAK,0BAAAC,WAAA;EAAArhI,SAAA,CAAAohI,KAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAphI,YAAA,CAAAkhI,KAAA;EAEV,SAAAA,MAAaj3I,QAAQ,EAAG;IAAA,IAAAo3I,QAAA;IAAA/jJ,eAAA,OAAA4jJ,KAAA;IAEvBG,QAAA,GAAAD,SAAA,CAAApqJ,IAAA;IAEAqqJ,QAAA,CAAKtqJ,IAAI,GAAG,OAAO;IAEnBsqJ,QAAA,CAAKp3I,QAAQ,GAAGA,QAAQ;IACxBo3I,QAAA,CAAK5qJ,OAAO,GAAGwT,QAAQ,CAACxT,OAAO;IAE/B4qJ,QAAA,CAAK5B,IAAI,GAAG4B,QAAA,CAAK5qJ,OAAO,CAACipJ,UAAU,EAAE;IACrC2B,QAAA,CAAK5B,IAAI,CAACE,OAAO,CAAE11I,QAAQ,CAAC81I,QAAQ,EAAE,CAAE;IAExCsB,QAAA,CAAKC,QAAQ,GAAG,KAAK;IAErBD,QAAA,CAAKjoI,MAAM,GAAG,IAAI;IAClBioI,QAAA,CAAKE,MAAM,GAAG,CAAC;IACfF,QAAA,CAAKG,IAAI,GAAG,KAAK;IACjBH,QAAA,CAAKI,SAAS,GAAG,CAAC;IAClBJ,QAAA,CAAKK,OAAO,GAAG,CAAC;IAChBL,QAAA,CAAK1tI,MAAM,GAAG,CAAC;IACf0tI,QAAA,CAAK1Y,QAAQ,GAAGnvI,SAAS;IACzB6nJ,QAAA,CAAKM,YAAY,GAAG,CAAC;IACrBN,QAAA,CAAKO,SAAS,GAAG,KAAK;IACtBP,QAAA,CAAKQ,kBAAkB,GAAG,IAAI;IAC9BR,QAAA,CAAKxmI,MAAM,GAAG,IAAI;IAClBwmI,QAAA,CAAKS,UAAU,GAAG,OAAO;IAEzBT,QAAA,CAAKU,UAAU,GAAG,CAAC;IACnBV,QAAA,CAAKW,SAAS,GAAG,CAAC;IAClBX,QAAA,CAAKY,UAAU,GAAG,KAAK;IAEvBZ,QAAA,CAAKa,OAAO,GAAG,EAAE;IAAC,OAAAb,QAAA;EAEnB;EAACvjJ,YAAA,CAAAojJ,KAAA;IAAAlsJ,GAAA;IAAAE,KAAA,EAED,SAAAitJ,UAAA,EAAY;MAEX,OAAO,IAAI,CAAC1C,IAAI;IAEjB;EAAC;IAAAzqJ,GAAA;IAAAE,KAAA,EAED,SAAAktJ,cAAeC,SAAS,EAAG;MAE1B,IAAI,CAACR,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;MAC7B,IAAI,CAACjnI,MAAM,GAAGwnI,SAAS;MACvB,IAAI,CAAC1C,OAAO,EAAE;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAA3qJ,GAAA;IAAAE,KAAA,EAED,SAAAotJ,sBAAuBC,YAAY,EAAG;MAErC,IAAI,CAACV,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,WAAW;MAC7B,IAAI,CAACjnI,MAAM,GAAG,IAAI,CAACpkB,OAAO,CAAC+rJ,wBAAwB,CAAED,YAAY,CAAE;MACnE,IAAI,CAAC5C,OAAO,EAAE;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAA3qJ,GAAA;IAAAE,KAAA,EAED,SAAAutJ,qBAAsBC,WAAW,EAAG;MAEnC,IAAI,CAACb,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,UAAU,GAAG,iBAAiB;MACnC,IAAI,CAACjnI,MAAM,GAAG,IAAI,CAACpkB,OAAO,CAACksJ,uBAAuB,CAAED,WAAW,CAAE;MACjE,IAAI,CAAC/C,OAAO,EAAE;MAEd,OAAO,IAAI;IAEZ;EAAC;IAAA3qJ,GAAA;IAAAE,KAAA,EAED,SAAA0tJ,UAAW9F,WAAW,EAAG;MAExB,IAAI,CAAC1jI,MAAM,GAAG0jI,WAAW;MACzB,IAAI,CAACgF,UAAU,GAAG,QAAQ;MAE1B,IAAK,IAAI,CAACR,QAAQ,EAAG,IAAI,CAACuB,IAAI,EAAE;MAEhC,OAAO,IAAI;IAEZ;EAAC;IAAA7tJ,GAAA;IAAAE,KAAA,EAED,SAAA2tJ,KAAMC,KAAK,GAAG,CAAC,EAAG;MAEjB,IAAK,IAAI,CAAClB,SAAS,KAAK,IAAI,EAAG;QAE9BlyI,OAAO,CAACC,IAAI,CAAE,wCAAwC,CAAE;QACxD;MAED;MAEA,IAAK,IAAI,CAACkyI,kBAAkB,KAAK,KAAK,EAAG;QAExCnyI,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;QAClE;MAED;MAEA,IAAI,CAACoyI,UAAU,GAAG,IAAI,CAACtrJ,OAAO,CAAC6pJ,WAAW,GAAGwC,KAAK;MAElD,IAAMjoI,MAAM,GAAG,IAAI,CAACpkB,OAAO,CAACssJ,kBAAkB,EAAE;MAChDloI,MAAM,CAACzB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC3ByB,MAAM,CAAC2mI,IAAI,GAAG,IAAI,CAACA,IAAI;MACvB3mI,MAAM,CAAC4mI,SAAS,GAAG,IAAI,CAACA,SAAS;MACjC5mI,MAAM,CAAC6mI,OAAO,GAAG,IAAI,CAACA,OAAO;MAC7B7mI,MAAM,CAACmoI,OAAO,GAAG,IAAI,CAACC,OAAO,CAAC9+C,IAAI,CAAE,IAAI,CAAE;MAC1CtpF,MAAM,CAAC84B,KAAK,CAAE,IAAI,CAACouG,UAAU,EAAE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACruI,MAAM,EAAE,IAAI,CAACg1H,QAAQ,CAAE;MAE5E,IAAI,CAACiZ,SAAS,GAAG,IAAI;MAErB,IAAI,CAAC/mI,MAAM,GAAGA,MAAM;MAEpB,IAAI,CAACqoI,SAAS,CAAE,IAAI,CAAC3B,MAAM,CAAE;MAC7B,IAAI,CAAC4B,eAAe,CAAE,IAAI,CAACxB,YAAY,CAAE;MAEzC,OAAO,IAAI,CAAChC,OAAO,EAAE;IAEtB;EAAC;IAAA3qJ,GAAA;IAAAE,KAAA,EAED,SAAAkuJ,MAAA,EAAQ;MAEP,IAAK,IAAI,CAACvB,kBAAkB,KAAK,KAAK,EAAG;QAExCnyI,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;QAClE;MAED;MAEA,IAAK,IAAI,CAACiyI,SAAS,KAAK,IAAI,EAAG;QAE9B;;QAEA,IAAI,CAACI,SAAS,IAAI/2I,IAAI,CAACa,GAAG,CAAE,IAAI,CAACrV,OAAO,CAAC6pJ,WAAW,GAAG,IAAI,CAACyB,UAAU,EAAE,CAAC,CAAE,GAAG,IAAI,CAACJ,YAAY;QAE/F,IAAK,IAAI,CAACH,IAAI,KAAK,IAAI,EAAG;UAEzB;;UAEA,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACA,SAAS,IAAK,IAAI,CAACrZ,QAAQ,IAAI,IAAI,CAACvvH,MAAM,CAACuvH,QAAQ,CAAE;QAE5E;QAEA,IAAI,CAAC9tH,MAAM,CAACve,IAAI,EAAE;QAClB,IAAI,CAACue,MAAM,CAACmoI,OAAO,GAAG,IAAI;QAE1B,IAAI,CAACpB,SAAS,GAAG,KAAK;MAEvB;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA5sJ,GAAA;IAAAE,KAAA,EAED,SAAAoH,KAAA,EAAO;MAEN,IAAK,IAAI,CAACulJ,kBAAkB,KAAK,KAAK,EAAG;QAExCnyI,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;QAClE;MAED;MAEA,IAAI,CAACqyI,SAAS,GAAG,CAAC;MAElB,IAAI,CAACnnI,MAAM,CAACve,IAAI,EAAE;MAClB,IAAI,CAACue,MAAM,CAACmoI,OAAO,GAAG,IAAI;MAC1B,IAAI,CAACpB,SAAS,GAAG,KAAK;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA5sJ,GAAA;IAAAE,KAAA,EAED,SAAAyqJ,QAAA,EAAU;MAET,IAAK,IAAI,CAACuC,OAAO,CAACpnJ,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAAC+f,MAAM,CAAC8kI,OAAO,CAAE,IAAI,CAACuC,OAAO,CAAE,CAAC,CAAE,CAAE;QAExC,KAAM,IAAInnJ,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACq3I,OAAO,CAACpnJ,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAEvD,IAAI,CAACmnJ,OAAO,CAAEnnJ,CAAC,GAAG,CAAC,CAAE,CAAC4kJ,OAAO,CAAE,IAAI,CAACuC,OAAO,CAAEnnJ,CAAC,CAAE,CAAE;QAEnD;QAEA,IAAI,CAACmnJ,OAAO,CAAE,IAAI,CAACA,OAAO,CAACpnJ,MAAM,GAAG,CAAC,CAAE,CAAC6kJ,OAAO,CAAE,IAAI,CAACwC,SAAS,EAAE,CAAE;MAEpE,CAAC,MAAM;QAEN,IAAI,CAACtnI,MAAM,CAAC8kI,OAAO,CAAE,IAAI,CAACwC,SAAS,EAAE,CAAE;MAExC;MAEA,IAAI,CAACF,UAAU,GAAG,IAAI;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAjtJ,GAAA;IAAAE,KAAA,EAED,SAAAwkG,WAAA,EAAa;MAEZ,IAAK,IAAI,CAACwoD,OAAO,CAACpnJ,MAAM,GAAG,CAAC,EAAG;QAE9B,IAAI,CAAC+f,MAAM,CAAC6+E,UAAU,CAAE,IAAI,CAACwoD,OAAO,CAAE,CAAC,CAAE,CAAE;QAE3C,KAAM,IAAInnJ,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG,IAAI,CAACq3I,OAAO,CAACpnJ,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAEvD,IAAI,CAACmnJ,OAAO,CAAEnnJ,CAAC,GAAG,CAAC,CAAE,CAAC2+F,UAAU,CAAE,IAAI,CAACwoD,OAAO,CAAEnnJ,CAAC,CAAE,CAAE;QAEtD;QAEA,IAAI,CAACmnJ,OAAO,CAAE,IAAI,CAACA,OAAO,CAACpnJ,MAAM,GAAG,CAAC,CAAE,CAAC4+F,UAAU,CAAE,IAAI,CAACyoD,SAAS,EAAE,CAAE;MAEvE,CAAC,MAAM;QAEN,IAAI,CAACtnI,MAAM,CAAC6+E,UAAU,CAAE,IAAI,CAACyoD,SAAS,EAAE,CAAE;MAE3C;MAEA,IAAI,CAACF,UAAU,GAAG,KAAK;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAAjtJ,GAAA;IAAAE,KAAA,EAED,SAAAmuJ,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACnB,OAAO;IAEpB;EAAC;IAAAltJ,GAAA;IAAAE,KAAA,EAED,SAAAouJ,WAAYpuJ,KAAK,EAAG;MAEnB,IAAK,CAAEA,KAAK,EAAGA,KAAK,GAAG,EAAE;MAEzB,IAAK,IAAI,CAAC+sJ,UAAU,KAAK,IAAI,EAAG;QAE/B,IAAI,CAACvoD,UAAU,EAAE;QACjB,IAAI,CAACwoD,OAAO,GAAGhtJ,KAAK,CAACmH,KAAK,EAAE;QAC5B,IAAI,CAACsjJ,OAAO,EAAE;MAEf,CAAC,MAAM;QAEN,IAAI,CAACuC,OAAO,GAAGhtJ,KAAK,CAACmH,KAAK,EAAE;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAArH,GAAA;IAAAE,KAAA,EAED,SAAAguJ,UAAWhuJ,KAAK,EAAG;MAElB,IAAI,CAACqsJ,MAAM,GAAGrsJ,KAAK;MAEnB,IAAK,IAAI,CAAC2lB,MAAM,CAAC0mI,MAAM,KAAK/nJ,SAAS,EAAG,OAAO,CAAC;;MAEhD,IAAK,IAAI,CAACooJ,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC/mI,MAAM,CAAC0mI,MAAM,CAAClB,eAAe,CAAE,IAAI,CAACkB,MAAM,EAAE,IAAI,CAAC9qJ,OAAO,CAAC6pJ,WAAW,EAAE,IAAI,CAAE;MAElF;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtrJ,GAAA;IAAAE,KAAA,EAED,SAAAquJ,UAAA,EAAY;MAEX,OAAO,IAAI,CAAChC,MAAM;IAEnB;EAAC;IAAAvsJ,GAAA;IAAAE,KAAA,EAED,SAAA+qJ,UAAA,EAAY;MAEX,OAAO,IAAI,CAACoD,UAAU,EAAE,CAAE,CAAC,CAAE;IAE9B;EAAC;IAAAruJ,GAAA;IAAAE,KAAA,EAED,SAAAgrJ,UAAW3sE,MAAM,EAAG;MAEnB,OAAO,IAAI,CAAC+vE,UAAU,CAAE/vE,MAAM,GAAG,CAAEA,MAAM,CAAE,GAAG,EAAE,CAAE;IAEnD;EAAC;IAAAv+E,GAAA;IAAAE,KAAA,EAED,SAAAiuJ,gBAAiBjuJ,KAAK,EAAG;MAExB,IAAK,IAAI,CAAC2sJ,kBAAkB,KAAK,KAAK,EAAG;QAExCnyI,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;QAClE;MAED;MAEA,IAAI,CAACgyI,YAAY,GAAGzsJ,KAAK;MAEzB,IAAK,IAAI,CAAC0sJ,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC/mI,MAAM,CAAC8mI,YAAY,CAACtB,eAAe,CAAE,IAAI,CAACsB,YAAY,EAAE,IAAI,CAAClrJ,OAAO,CAAC6pJ,WAAW,EAAE,IAAI,CAAE;MAE9F;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAtrJ,GAAA;IAAAE,KAAA,EAED,SAAAsuJ,gBAAA,EAAkB;MAEjB,OAAO,IAAI,CAAC7B,YAAY;IAEzB;EAAC;IAAA3sJ,GAAA;IAAAE,KAAA,EAED,SAAA+tJ,QAAA,EAAU;MAET,IAAI,CAACrB,SAAS,GAAG,KAAK;IAEvB;EAAC;IAAA5sJ,GAAA;IAAAE,KAAA,EAED,SAAAuuJ,QAAA,EAAU;MAET,IAAK,IAAI,CAAC5B,kBAAkB,KAAK,KAAK,EAAG;QAExCnyI,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;QAClE,OAAO,KAAK;MAEb;MAEA,OAAO,IAAI,CAAC6xI,IAAI;IAEjB;EAAC;IAAAxsJ,GAAA;IAAAE,KAAA,EAED,SAAAwuJ,QAASxuJ,KAAK,EAAG;MAEhB,IAAK,IAAI,CAAC2sJ,kBAAkB,KAAK,KAAK,EAAG;QAExCnyI,OAAO,CAACC,IAAI,CAAE,kDAAkD,CAAE;QAClE;MAED;MAEA,IAAI,CAAC6xI,IAAI,GAAGtsJ,KAAK;MAEjB,IAAK,IAAI,CAAC0sJ,SAAS,KAAK,IAAI,EAAG;QAE9B,IAAI,CAAC/mI,MAAM,CAAC2mI,IAAI,GAAG,IAAI,CAACA,IAAI;MAE7B;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAxsJ,GAAA;IAAAE,KAAA,EAED,SAAAyuJ,aAAczuJ,KAAK,EAAG;MAErB,IAAI,CAACusJ,SAAS,GAAGvsJ,KAAK;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA0uJ,WAAY1uJ,KAAK,EAAG;MAEnB,IAAI,CAACwsJ,OAAO,GAAGxsJ,KAAK;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA2uJ,UAAA,EAAY;MAEX,OAAO,IAAI,CAACpE,IAAI,CAACA,IAAI,CAACvqJ,KAAK;IAE5B;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA4uJ,UAAW5uJ,KAAK,EAAG;MAElB,IAAI,CAACuqJ,IAAI,CAACA,IAAI,CAACY,eAAe,CAAEnrJ,KAAK,EAAE,IAAI,CAACuB,OAAO,CAAC6pJ,WAAW,EAAE,IAAI,CAAE;MAEvE,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAY,KAAA;AAAA,EAhYkB/hH,QAAQ;AAAA3qC,OAAA,CAAA0sJ,KAAA,GAAAA,KAAA;AAoY5B,IAAM6C,SAAS,GAAG,aAAc,IAAIl4H,OAAO,EAAE;AAC7C,IAAMm4H,WAAW,GAAG,aAAc,IAAIj9H,UAAU,EAAE;AAClD,IAAMk9H,MAAM,GAAG,aAAc,IAAIp4H,OAAO,EAAE;AAC1C,IAAMq4H,YAAY,GAAG,aAAc,IAAIr4H,OAAO,EAAE;AAAC,IAE3Cs4H,eAAe,0BAAAC,MAAA;EAAAtkI,SAAA,CAAAqkI,eAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAArkI,YAAA,CAAAmkI,eAAA;EAEpB,SAAAA,gBAAal6I,QAAQ,EAAG;IAAA,IAAAq6I,QAAA;IAAAhnJ,eAAA,OAAA6mJ,eAAA;IAEvBG,QAAA,GAAAD,SAAA,CAAArtJ,IAAA,OAAOiT,QAAQ;IAEfq6I,QAAA,CAAKC,MAAM,GAAGD,QAAA,CAAK7tJ,OAAO,CAAC+tJ,YAAY,EAAE;IACzCF,QAAA,CAAKC,MAAM,CAACE,YAAY,GAAG,MAAM;IACjCH,QAAA,CAAKC,MAAM,CAAC5E,OAAO,CAAE2E,QAAA,CAAK7E,IAAI,CAAE;IAAC,OAAA6E,QAAA;EAElC;EAACxmJ,YAAA,CAAAqmJ,eAAA;IAAAnvJ,GAAA;IAAAE,KAAA,EAED,SAAAwkG,WAAA,EAAa;MAEZzqD,IAAA,CAAAC,eAAA,CAAAi1G,eAAA,CAAAxvJ,SAAA,uBAAAqC,IAAA;MAEA,IAAI,CAACutJ,MAAM,CAAC7qD,UAAU,CAAE,IAAI,CAAC+lD,IAAI,CAAE;IAEpC;EAAC;IAAAzqJ,GAAA;IAAAE,KAAA,EAED,SAAAitJ,UAAA,EAAY;MAEX,OAAO,IAAI,CAACoC,MAAM;IAEnB;EAAC;IAAAvvJ,GAAA;IAAAE,KAAA,EAED,SAAAwvJ,eAAA,EAAiB;MAEhB,OAAO,IAAI,CAACH,MAAM,CAACI,WAAW;IAE/B;EAAC;IAAA3vJ,GAAA;IAAAE,KAAA,EAED,SAAA0vJ,eAAgB1vJ,KAAK,EAAG;MAEvB,IAAI,CAACqvJ,MAAM,CAACI,WAAW,GAAGzvJ,KAAK;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA2vJ,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa;IAEjC;EAAC;IAAA9vJ,GAAA;IAAAE,KAAA,EAED,SAAA6vJ,iBAAkB7vJ,KAAK,EAAG;MAEzB,IAAI,CAACqvJ,MAAM,CAACO,aAAa,GAAG5vJ,KAAK;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA8vJ,iBAAA,EAAmB;MAElB,OAAO,IAAI,CAACT,MAAM,CAACU,aAAa;IAEjC;EAAC;IAAAjwJ,GAAA;IAAAE,KAAA,EAED,SAAAgwJ,iBAAkBhwJ,KAAK,EAAG;MAEzB,IAAI,CAACqvJ,MAAM,CAACU,aAAa,GAAG/vJ,KAAK;MAEjC,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAiwJ,eAAA,EAAiB;MAEhB,OAAO,IAAI,CAACZ,MAAM,CAACa,WAAW;IAE/B;EAAC;IAAApwJ,GAAA;IAAAE,KAAA,EAED,SAAAmwJ,eAAgBnwJ,KAAK,EAAG;MAEvB,IAAI,CAACqvJ,MAAM,CAACa,WAAW,GAAGlwJ,KAAK;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAAowJ,mBAAoBC,cAAc,EAAEC,cAAc,EAAEC,aAAa,EAAG;MAEnE,IAAI,CAAClB,MAAM,CAACgB,cAAc,GAAGA,cAAc;MAC3C,IAAI,CAAChB,MAAM,CAACiB,cAAc,GAAGA,cAAc;MAC3C,IAAI,CAACjB,MAAM,CAACkB,aAAa,GAAGA,aAAa;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAAzwJ,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1BmM,IAAA,CAAAC,eAAA,CAAAi1G,eAAA,CAAAxvJ,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;MAE9B,IAAK,IAAI,CAAC++G,kBAAkB,KAAK,IAAI,IAAI,IAAI,CAACD,SAAS,KAAK,KAAK,EAAG;MAEpE,IAAI,CAACx0H,WAAW,CAAC8O,SAAS,CAAE6nH,SAAS,EAAEC,WAAW,EAAEC,MAAM,CAAE;MAE5DC,YAAY,CAACz0I,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAACyc,eAAe,CAAE83H,WAAW,CAAE;MAE1D,IAAMO,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAChE,SAAS,EAAG;QAEvB;;QAEA,IAAMna,OAAO,GAAG,IAAI,CAAC3vI,OAAO,CAAC6pJ,WAAW,GAAG,IAAI,CAACr2I,QAAQ,CAAC41I,SAAS;QAElE0E,MAAM,CAAChE,SAAS,CAACC,uBAAuB,CAAEuD,SAAS,CAAC53I,CAAC,EAAEi6H,OAAO,CAAE;QAChEme,MAAM,CAAC9D,SAAS,CAACD,uBAAuB,CAAEuD,SAAS,CAACt3I,CAAC,EAAE25H,OAAO,CAAE;QAChEme,MAAM,CAAC7D,SAAS,CAACF,uBAAuB,CAAEuD,SAAS,CAACzhI,CAAC,EAAE8jH,OAAO,CAAE;QAChEme,MAAM,CAACmB,YAAY,CAAClF,uBAAuB,CAAE0D,YAAY,CAAC/3I,CAAC,EAAEi6H,OAAO,CAAE;QACtEme,MAAM,CAACoB,YAAY,CAACnF,uBAAuB,CAAE0D,YAAY,CAACz3I,CAAC,EAAE25H,OAAO,CAAE;QACtEme,MAAM,CAACqB,YAAY,CAACpF,uBAAuB,CAAE0D,YAAY,CAAC5hI,CAAC,EAAE8jH,OAAO,CAAE;MAEvE,CAAC,MAAM;QAENme,MAAM,CAAC1pH,WAAW,CAAEkpH,SAAS,CAAC53I,CAAC,EAAE43I,SAAS,CAACt3I,CAAC,EAAEs3I,SAAS,CAACzhI,CAAC,CAAE;QAC3DiiI,MAAM,CAACtD,cAAc,CAAEiD,YAAY,CAAC/3I,CAAC,EAAE+3I,YAAY,CAACz3I,CAAC,EAAEy3I,YAAY,CAAC5hI,CAAC,CAAE;MAExE;IAED;EAAC;EAAA,OAAA6hI,eAAA;AAAA,EA5H4BjD,KAAK;AAAA1sJ,OAAA,CAAA2vJ,eAAA,GAAAA,eAAA;AAAA,IAgI7B0B,aAAa;EAElB,SAAAA,cAAaC,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAG;IAAAzoJ,eAAA,OAAAuoJ,aAAA;IAEpC,IAAI,CAACG,QAAQ,GAAGF,KAAK,CAACrvJ,OAAO,CAACwvJ,cAAc,EAAE;IAC9C,IAAI,CAACD,QAAQ,CAACD,OAAO,GAAGA,OAAO;IAE/B,IAAI,CAAClnI,IAAI,GAAG,IAAI9O,UAAU,CAAE,IAAI,CAACi2I,QAAQ,CAACE,iBAAiB,CAAE;IAE7DJ,KAAK,CAAC3D,SAAS,EAAE,CAACxC,OAAO,CAAE,IAAI,CAACqG,QAAQ,CAAE;EAE3C;EAACloJ,YAAA,CAAA+nJ,aAAA;IAAA7wJ,GAAA;IAAAE,KAAA,EAGD,SAAAixJ,iBAAA,EAAmB;MAElB,IAAI,CAACH,QAAQ,CAACI,oBAAoB,CAAE,IAAI,CAACvnI,IAAI,CAAE;MAE/C,OAAO,IAAI,CAACA,IAAI;IAEjB;EAAC;IAAA7pB,GAAA;IAAAE,KAAA,EAED,SAAAmxJ,oBAAA,EAAsB;MAErB,IAAInxJ,KAAK,GAAG,CAAC;MACb,IAAM2pB,IAAI,GAAG,IAAI,CAACsnI,gBAAgB,EAAE;MAEpC,KAAM,IAAIprJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jB,IAAI,CAAC/jB,MAAM,EAAEC,CAAC,EAAG,EAAG;QAExC7F,KAAK,IAAI2pB,IAAI,CAAE9jB,CAAC,CAAE;MAEnB;MAEA,OAAO7F,KAAK,GAAG2pB,IAAI,CAAC/jB,MAAM;IAE3B;EAAC;EAAA,OAAA+qJ,aAAA;AAAA;AAAArxJ,OAAA,CAAAqxJ,aAAA,GAAAA,aAAA;AAAA,IAIIS,aAAa;EAElB,SAAAA,cAAaC,OAAO,EAAE5b,QAAQ,EAAE5K,SAAS,EAAG;IAAAziI,eAAA,OAAAgpJ,aAAA;IAE3C,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACxmB,SAAS,GAAGA,SAAS;IAE1B,IAAIymB,WAAW,EACdC,mBAAmB,EACnBC,WAAW;;IAEZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,QAAS/b,QAAQ;MAEhB,KAAK,YAAY;QAChB6b,WAAW,GAAG,IAAI,CAACG,MAAM;QACzBF,mBAAmB,GAAG,IAAI,CAACG,cAAc;QACzCF,WAAW,GAAG,IAAI,CAACG,8BAA8B;QAEjD,IAAI,CAACztI,MAAM,GAAG,IAAIF,YAAY,CAAE6mH,SAAS,GAAG,CAAC,CAAE;QAC/C,IAAI,CAAC+mB,UAAU,GAAG,CAAC;QACnB;MAED,KAAK,QAAQ;MACb,KAAK,MAAM;QACVN,WAAW,GAAG,IAAI,CAACO,OAAO;;QAE1B;QACA;QACAN,mBAAmB,GAAG,IAAI,CAACM,OAAO;QAElCL,WAAW,GAAG,IAAI,CAACM,yBAAyB;QAE5C,IAAI,CAAC5tI,MAAM,GAAG,IAAIkG,KAAK,CAAEygH,SAAS,GAAG,CAAC,CAAE;QACxC;MAED;QACCymB,WAAW,GAAG,IAAI,CAACS,KAAK;QACxBR,mBAAmB,GAAG,IAAI,CAACS,aAAa;QACxCR,WAAW,GAAG,IAAI,CAACS,2BAA2B;QAE9C,IAAI,CAAC/tI,MAAM,GAAG,IAAIF,YAAY,CAAE6mH,SAAS,GAAG,CAAC,CAAE;IAAC;IAIlD,IAAI,CAACqnB,gBAAgB,GAAGZ,WAAW;IACnC,IAAI,CAACa,wBAAwB,GAAGZ,mBAAmB;IACnD,IAAI,CAACa,YAAY,GAAGZ,WAAW;IAC/B,IAAI,CAACa,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC;IAElB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;IAEjC,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,cAAc,GAAG,CAAC;EAExB;;EAEA;EAAA9pJ,YAAA,CAAAwoJ,aAAA;IAAAtxJ,GAAA;IAAAE,KAAA,EACA,SAAA2yJ,WAAYC,SAAS,EAAEpiF,MAAM,EAAG;MAE/B;MACA;;MAEA,IAAMtsD,MAAM,GAAG,IAAI,CAACA,MAAM;QACzBq+B,MAAM,GAAG,IAAI,CAACsoF,SAAS;QACvBpsH,MAAM,GAAGm0I,SAAS,GAAGrwG,MAAM,GAAGA,MAAM;MAErC,IAAIswG,aAAa,GAAG,IAAI,CAACN,gBAAgB;MAEzC,IAAKM,aAAa,KAAK,CAAC,EAAG;QAE1B;;QAEA,KAAM,IAAIhtJ,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;UAErCqe,MAAM,CAAEzF,MAAM,GAAG5Y,CAAC,CAAE,GAAGqe,MAAM,CAAEre,CAAC,CAAE;QAEnC;QAEAgtJ,aAAa,GAAGriF,MAAM;MAEvB,CAAC,MAAM;QAEN;;QAEAqiF,aAAa,IAAIriF,MAAM;QACvB,IAAMsiF,GAAG,GAAGtiF,MAAM,GAAGqiF,aAAa;QAClC,IAAI,CAACX,gBAAgB,CAAEhuI,MAAM,EAAEzF,MAAM,EAAE,CAAC,EAAEq0I,GAAG,EAAEvwG,MAAM,CAAE;MAExD;MAEA,IAAI,CAACgwG,gBAAgB,GAAGM,aAAa;IAEtC;;IAEA;EAAA;IAAA/yJ,GAAA;IAAAE,KAAA,EACA,SAAA+yJ,mBAAoBviF,MAAM,EAAG;MAE5B,IAAMtsD,MAAM,GAAG,IAAI,CAACA,MAAM;QACzBq+B,MAAM,GAAG,IAAI,CAACsoF,SAAS;QACvBpsH,MAAM,GAAG8jC,MAAM,GAAG,IAAI,CAAC+vG,SAAS;MAEjC,IAAK,IAAI,CAACE,wBAAwB,KAAK,CAAC,EAAG;QAE1C;;QAEA,IAAI,CAACJ,YAAY,EAAE;MAEpB;;MAEA;;MAEA,IAAI,CAACD,wBAAwB,CAAEjuI,MAAM,EAAEzF,MAAM,EAAE,CAAC,EAAE+xD,MAAM,EAAEjuB,MAAM,CAAE;MAClE,IAAI,CAACiwG,wBAAwB,IAAIhiF,MAAM;IAExC;;IAEA;EAAA;IAAA1wE,GAAA;IAAAE,KAAA,EACA,SAAAy3F,MAAOm7D,SAAS,EAAG;MAElB,IAAMrwG,MAAM,GAAG,IAAI,CAACsoF,SAAS;QAC5B3mH,MAAM,GAAG,IAAI,CAACA,MAAM;QACpBzF,MAAM,GAAGm0I,SAAS,GAAGrwG,MAAM,GAAGA,MAAM;QAEpCiuB,MAAM,GAAG,IAAI,CAAC+hF,gBAAgB;QAC9BS,cAAc,GAAG,IAAI,CAACR,wBAAwB;QAE9CnB,OAAO,GAAG,IAAI,CAACA,OAAO;MAEvB,IAAI,CAACkB,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;MAEjC,IAAKhiF,MAAM,GAAG,CAAC,EAAG;QAEjB;;QAEA,IAAMyiF,mBAAmB,GAAG1wG,MAAM,GAAG,IAAI,CAAC8vG,UAAU;QAEpD,IAAI,CAACH,gBAAgB,CACpBhuI,MAAM,EAAEzF,MAAM,EAAEw0I,mBAAmB,EAAE,CAAC,GAAGziF,MAAM,EAAEjuB,MAAM,CAAE;MAE3D;MAEA,IAAKywG,cAAc,GAAG,CAAC,EAAG;QAEzB;;QAEA,IAAI,CAACb,wBAAwB,CAAEjuI,MAAM,EAAEzF,MAAM,EAAE,IAAI,CAAC6zI,SAAS,GAAG/vG,MAAM,EAAE,CAAC,EAAEA,MAAM,CAAE;MAEpF;MAEA,KAAM,IAAI18C,CAAC,GAAG08C,MAAM,EAAEzlC,CAAC,GAAGylC,MAAM,GAAGA,MAAM,EAAE18C,CAAC,KAAKiX,CAAC,EAAE,EAAGjX,CAAC,EAAG;QAE1D,IAAKqe,MAAM,CAAEre,CAAC,CAAE,KAAKqe,MAAM,CAAEre,CAAC,GAAG08C,MAAM,CAAE,EAAG;UAE3C;;UAEA8uG,OAAO,CAAC18E,QAAQ,CAAEzwD,MAAM,EAAEzF,MAAM,CAAE;UAClC;QAED;MAED;IAED;;IAEA;EAAA;IAAA3e,GAAA;IAAAE,KAAA,EACA,SAAAkzJ,kBAAA,EAAoB;MAEnB,IAAM7B,OAAO,GAAG,IAAI,CAACA,OAAO;MAE5B,IAAMntI,MAAM,GAAG,IAAI,CAACA,MAAM;QACzBq+B,MAAM,GAAG,IAAI,CAACsoF,SAAS;QAEvBooB,mBAAmB,GAAG1wG,MAAM,GAAG,IAAI,CAAC8vG,UAAU;MAE/ChB,OAAO,CAAC8B,QAAQ,CAAEjvI,MAAM,EAAE+uI,mBAAmB,CAAE;;MAE/C;MACA,KAAM,IAAIptJ,CAAC,GAAG08C,MAAM,EAAEzlC,CAAC,GAAGm2I,mBAAmB,EAAEptJ,CAAC,KAAKiX,CAAC,EAAE,EAAGjX,CAAC,EAAG;QAE9Dqe,MAAM,CAAEre,CAAC,CAAE,GAAGqe,MAAM,CAAE+uI,mBAAmB,GAAKptJ,CAAC,GAAG08C,MAAQ,CAAE;MAE7D;;MAEA;MACA,IAAI,CAAC6vG,YAAY,EAAE;MAEnB,IAAI,CAACG,gBAAgB,GAAG,CAAC;MACzB,IAAI,CAACC,wBAAwB,GAAG,CAAC;IAElC;;IAEA;EAAA;IAAA1yJ,GAAA;IAAAE,KAAA,EACA,SAAAozJ,qBAAA,EAAuB;MAEtB,IAAMH,mBAAmB,GAAG,IAAI,CAACpoB,SAAS,GAAG,CAAC;MAC9C,IAAI,CAACwmB,OAAO,CAAC18E,QAAQ,CAAE,IAAI,CAACzwD,MAAM,EAAE+uI,mBAAmB,CAAE;IAE1D;EAAC;IAAAnzJ,GAAA;IAAAE,KAAA,EAED,SAAAiyJ,4BAAA,EAA8B;MAE7B,IAAM7lB,UAAU,GAAG,IAAI,CAACkmB,SAAS,GAAG,IAAI,CAACznB,SAAS;MAClD,IAAMwB,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACvB,SAAS;MAE5C,KAAM,IAAIhlI,CAAC,GAAGumI,UAAU,EAAEvmI,CAAC,GAAGwmI,QAAQ,EAAExmI,CAAC,EAAG,EAAG;QAE9C,IAAI,CAACqe,MAAM,CAAEre,CAAC,CAAE,GAAG,CAAC;MAErB;IAED;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA2xJ,+BAAA,EAAiC;MAEhC,IAAI,CAACM,2BAA2B,EAAE;MAClC,IAAI,CAAC/tI,MAAM,CAAE,IAAI,CAACouI,SAAS,GAAG,IAAI,CAACznB,SAAS,GAAG,CAAC,CAAE,GAAG,CAAC;IAEvD;EAAC;IAAA/qI,GAAA;IAAAE,KAAA,EAED,SAAA8xJ,0BAAA,EAA4B;MAE3B,IAAM1lB,UAAU,GAAG,IAAI,CAACimB,UAAU,GAAG,IAAI,CAACxnB,SAAS;MACnD,IAAMwoB,WAAW,GAAG,IAAI,CAACf,SAAS,GAAG,IAAI,CAACznB,SAAS;MAEnD,KAAM,IAAIhlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACglI,SAAS,EAAEhlI,CAAC,EAAG,EAAG;QAE3C,IAAI,CAACqe,MAAM,CAAEmvI,WAAW,GAAGxtJ,CAAC,CAAE,GAAG,IAAI,CAACqe,MAAM,CAAEkoH,UAAU,GAAGvmI,CAAC,CAAE;MAE/D;IAED;;IAGA;EAAA;IAAA/F,GAAA;IAAAE,KAAA,EAEA,SAAA6xJ,QAAS3tI,MAAM,EAAEuR,SAAS,EAAEw0G,SAAS,EAAExyH,CAAC,EAAE8qC,MAAM,EAAG;MAElD,IAAK9qC,CAAC,IAAI,GAAG,EAAG;QAEf,KAAM,IAAI5R,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;UAErCqe,MAAM,CAAEuR,SAAS,GAAG5vB,CAAC,CAAE,GAAGqe,MAAM,CAAE+lH,SAAS,GAAGpkI,CAAC,CAAE;QAElD;MAED;IAED;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAyxJ,OAAQvtI,MAAM,EAAEuR,SAAS,EAAEw0G,SAAS,EAAExyH,CAAC,EAAG;MAEzCoa,UAAU,CAAC0D,SAAS,CAAErR,MAAM,EAAEuR,SAAS,EAAEvR,MAAM,EAAEuR,SAAS,EAAEvR,MAAM,EAAE+lH,SAAS,EAAExyH,CAAC,CAAE;IAEnF;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAA0xJ,eAAgBxtI,MAAM,EAAEuR,SAAS,EAAEw0G,SAAS,EAAExyH,CAAC,EAAE8qC,MAAM,EAAG;MAEzD,IAAM+wG,UAAU,GAAG,IAAI,CAAC1B,UAAU,GAAGrvG,MAAM;;MAE3C;MACA1wB,UAAU,CAAC6E,uBAAuB,CAAExS,MAAM,EAAEovI,UAAU,EAAEpvI,MAAM,EAAEuR,SAAS,EAAEvR,MAAM,EAAE+lH,SAAS,CAAE;;MAE9F;MACAp4G,UAAU,CAAC0D,SAAS,CAAErR,MAAM,EAAEuR,SAAS,EAAEvR,MAAM,EAAEuR,SAAS,EAAEvR,MAAM,EAAEovI,UAAU,EAAE77I,CAAC,CAAE;IAEpF;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAA+xJ,MAAO7tI,MAAM,EAAEuR,SAAS,EAAEw0G,SAAS,EAAExyH,CAAC,EAAE8qC,MAAM,EAAG;MAEhD,IAAM7pC,CAAC,GAAG,CAAC,GAAGjB,CAAC;MAEf,KAAM,IAAI5R,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;QAErC,IAAMy4B,CAAC,GAAG7I,SAAS,GAAG5vB,CAAC;QAEvBqe,MAAM,CAAEoa,CAAC,CAAE,GAAGpa,MAAM,CAAEoa,CAAC,CAAE,GAAG5lB,CAAC,GAAGwL,MAAM,CAAE+lH,SAAS,GAAGpkI,CAAC,CAAE,GAAG4R,CAAC;MAE5D;IAED;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAAgyJ,cAAe9tI,MAAM,EAAEuR,SAAS,EAAEw0G,SAAS,EAAExyH,CAAC,EAAE8qC,MAAM,EAAG;MAExD,KAAM,IAAI18C,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK08C,MAAM,EAAE,EAAG18C,CAAC,EAAG;QAErC,IAAMy4B,CAAC,GAAG7I,SAAS,GAAG5vB,CAAC;QAEvBqe,MAAM,CAAEoa,CAAC,CAAE,GAAGpa,MAAM,CAAEoa,CAAC,CAAE,GAAGpa,MAAM,CAAE+lH,SAAS,GAAGpkI,CAAC,CAAE,GAAG4R,CAAC;MAExD;IAED;EAAC;EAAA,OAAA25I,aAAA;AAAA,KAIF;AAAA9xJ,OAAA,CAAA8xJ,aAAA,GAAAA,aAAA;AACA,IAAMmC,kBAAkB,GAAG,eAAe;AAC1C,IAAMC,WAAW,GAAG,IAAIC,MAAM,CAAE,GAAG,GAAGF,kBAAkB,GAAG,GAAG,EAAE,GAAG,CAAE;;AAErE;AACA;AACA;AACA,IAAMG,SAAS,GAAG,IAAI,GAAGH,kBAAkB,GAAG,GAAG;AACjD,IAAMI,cAAc,GAAG,IAAI,GAAGJ,kBAAkB,CAAC30E,OAAO,CAAE,KAAK,EAAE,EAAE,CAAE,GAAG,GAAG;;AAE3E;AACA;AACA,IAAMg1E,YAAY,GAAG,aAAc,kBAAiB,CAACjuI,MAAM,CAACi5D,OAAO,CAAE,IAAI,EAAE80E,SAAS,CAAE;;AAEtF;AACA,IAAMG,OAAO,GAAG,aAAc,WAAU,CAACluI,MAAM,CAACi5D,OAAO,CAAE,MAAM,EAAE+0E,cAAc,CAAE;;AAEjF;AACA;AACA,IAAMG,SAAS,GAAG,aAAc,4BAA2B,CAACnuI,MAAM,CAACi5D,OAAO,CAAE,IAAI,EAAE80E,SAAS,CAAE;;AAE7F;AACA;AACA,IAAMK,WAAW,GAAG,aAAc,uBAAsB,CAACpuI,MAAM,CAACi5D,OAAO,CAAE,IAAI,EAAE80E,SAAS,CAAE;AAE1F,IAAMM,QAAQ,GAAG,IAAIP,MAAM,CAAE,EAAE,GAC5B,GAAG,GACHG,YAAY,GACZC,OAAO,GACPC,SAAS,GACTC,WAAW,GACX,GAAG,CACL;AAED,IAAME,qBAAqB,GAAG,CAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAE;AAAC,IAE7DC,SAAS;EAEd,SAAAA,UAAaC,WAAW,EAAEj5E,IAAI,EAAEk5E,kBAAkB,EAAG;IAAAhsJ,eAAA,OAAA8rJ,SAAA;IAEpD,IAAMG,UAAU,GAAGD,kBAAkB,IAAIE,eAAe,CAACC,cAAc,CAAEr5E,IAAI,CAAE;IAE/E,IAAI,CAACs5E,YAAY,GAAGL,WAAW;IAC/B,IAAI,CAACM,SAAS,GAAGN,WAAW,CAACO,UAAU,CAAEx5E,IAAI,EAAEm5E,UAAU,CAAE;EAE5D;EAACzrJ,YAAA,CAAAsrJ,SAAA;IAAAp0J,GAAA;IAAAE,KAAA,EAED,SAAAmzJ,SAAUz9I,KAAK,EAAE+I,MAAM,EAAG;MAEzB,IAAI,CAACwwF,IAAI,EAAE,CAAC,CAAC;;MAEb,IAAM0lD,eAAe,GAAG,IAAI,CAACH,YAAY,CAACI,eAAe;QACxDvD,OAAO,GAAG,IAAI,CAACoD,SAAS,CAAEE,eAAe,CAAE;;MAE5C;MACA,IAAKtD,OAAO,KAAK/sJ,SAAS,EAAG+sJ,OAAO,CAAC8B,QAAQ,CAAEz9I,KAAK,EAAE+I,MAAM,CAAE;IAE/D;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA20E,SAAUj/D,KAAK,EAAE+I,MAAM,EAAG;MAEzB,IAAMo2I,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAI5uJ,CAAC,GAAG,IAAI,CAAC2uJ,YAAY,CAACI,eAAe,EAAE99I,CAAC,GAAG+9I,QAAQ,CAACjvJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAErFgvJ,QAAQ,CAAEhvJ,CAAC,CAAE,CAAC8uE,QAAQ,CAAEj/D,KAAK,EAAE+I,MAAM,CAAE;MAExC;IAED;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAivG,KAAA,EAAO;MAEN,IAAM4lD,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAI5uJ,CAAC,GAAG,IAAI,CAAC2uJ,YAAY,CAACI,eAAe,EAAE99I,CAAC,GAAG+9I,QAAQ,CAACjvJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAErFgvJ,QAAQ,CAAEhvJ,CAAC,CAAE,CAACopG,IAAI,EAAE;MAErB;IAED;EAAC;IAAAnvG,GAAA;IAAAE,KAAA,EAED,SAAA80J,OAAA,EAAS;MAER,IAAMD,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,KAAM,IAAI5uJ,CAAC,GAAG,IAAI,CAAC2uJ,YAAY,CAACI,eAAe,EAAE99I,CAAC,GAAG+9I,QAAQ,CAACjvJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAErFgvJ,QAAQ,CAAEhvJ,CAAC,CAAE,CAACivJ,MAAM,EAAE;MAEvB;IAED;EAAC;EAAA,OAAAZ,SAAA;AAAA,KAIF;AACA;AACA;AACA;AACA;AAAA,IACMI,eAAe;EAEpB,SAAAA,gBAAaS,QAAQ,EAAE75E,IAAI,EAAEm5E,UAAU,EAAG;IAAAjsJ,eAAA,OAAAksJ,eAAA;IAEzC,IAAI,CAACp5E,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACm5E,UAAU,GAAGA,UAAU,IAAIC,eAAe,CAACC,cAAc,CAAEr5E,IAAI,CAAE;IAEtE,IAAI,CAAC85E,IAAI,GAAGV,eAAe,CAACW,QAAQ,CAAEF,QAAQ,EAAE,IAAI,CAACV,UAAU,CAACa,QAAQ,CAAE,IAAIH,QAAQ;IAEtF,IAAI,CAACA,QAAQ,GAAGA,QAAQ;;IAExB;IACA,IAAI,CAAC5B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;IACtC,IAAI,CAACxgF,QAAQ,GAAG,IAAI,CAACygF,iBAAiB;EAEvC;EAACxsJ,YAAA,CAAA0rJ,eAAA;IAAAx0J,GAAA;IAAAE,KAAA;IA0ID;IACA,SAAAq1J,sBAAA,EAAwB,CAAC;EAAC;IAAAv1J,GAAA;IAAAE,KAAA,EAC1B,SAAAs1J,sBAAA,EAAwB,CAAC;;IAEzB;EAAA;IAAAx1J,GAAA;IAAAE,KAAA,EAEA,SAAAu1J,iBAAkBrxI,MAAM,EAAEzF,MAAM,EAAG;MAElCyF,MAAM,CAAEzF,MAAM,CAAE,GAAG,IAAI,CAAC+2I,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE;IAE1D;EAAC;IAAAj1I,GAAA;IAAAE,KAAA,EAED,SAAAy1J,gBAAiBvxI,MAAM,EAAEzF,MAAM,EAAG;MAEjC,IAAMkH,MAAM,GAAG,IAAI,CAAC+vI,gBAAgB;MAEpC,KAAM,IAAI7vJ,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG6O,MAAM,CAAC/f,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEnDqe,MAAM,CAAEzF,MAAM,EAAG,CAAE,GAAGkH,MAAM,CAAE9f,CAAC,CAAE;MAElC;IAED;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAA21J,uBAAwBzxI,MAAM,EAAEzF,MAAM,EAAG;MAExCyF,MAAM,CAAEzF,MAAM,CAAE,GAAG,IAAI,CAACi3I,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE;IAE/D;EAAC;IAAA91J,GAAA;IAAAE,KAAA,EAED,SAAA61J,kBAAmB3xI,MAAM,EAAEzF,MAAM,EAAG;MAEnC,IAAI,CAACi3I,gBAAgB,CAACh3I,OAAO,CAAEwF,MAAM,EAAEzF,MAAM,CAAE;IAEhD;;IAEA;EAAA;IAAA3e,GAAA;IAAAE,KAAA,EAEA,SAAA81J,iBAAkB5xI,MAAM,EAAEzF,MAAM,EAAG;MAElC,IAAI,CAAC+2I,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE,GAAG7wH,MAAM,CAAEzF,MAAM,CAAE;IAE1D;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAA+1J,gCAAiC7xI,MAAM,EAAEzF,MAAM,EAAG;MAEjD,IAAI,CAAC+2I,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE,GAAG7wH,MAAM,CAAEzF,MAAM,CAAE;MACzD,IAAI,CAAC+2I,YAAY,CAAC5oI,WAAW,GAAG,IAAI;IAErC;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAAg2J,2CAA4C9xI,MAAM,EAAEzF,MAAM,EAAG;MAE5D,IAAI,CAAC+2I,YAAY,CAAE,IAAI,CAACzgB,YAAY,CAAE,GAAG7wH,MAAM,CAAEzF,MAAM,CAAE;MACzD,IAAI,CAAC+2I,YAAY,CAAC1qH,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAAhrC,GAAA;IAAAE,KAAA,EAEA,SAAAi2J,gBAAiB/xI,MAAM,EAAEzF,MAAM,EAAG;MAEjC,IAAMy3I,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAI7vJ,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAGo/I,IAAI,CAACtwJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEjDqwJ,IAAI,CAAErwJ,CAAC,CAAE,GAAGqe,MAAM,CAAEzF,MAAM,EAAG,CAAE;MAEhC;IAED;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAm2J,+BAAgCjyI,MAAM,EAAEzF,MAAM,EAAG;MAEhD,IAAMy3I,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAI7vJ,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAGo/I,IAAI,CAACtwJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEjDqwJ,IAAI,CAAErwJ,CAAC,CAAE,GAAGqe,MAAM,CAAEzF,MAAM,EAAG,CAAE;MAEhC;MAEA,IAAI,CAAC+2I,YAAY,CAAC5oI,WAAW,GAAG,IAAI;IAErC;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAAo2J,0CAA2ClyI,MAAM,EAAEzF,MAAM,EAAG;MAE3D,IAAMy3I,IAAI,GAAG,IAAI,CAACR,gBAAgB;MAElC,KAAM,IAAI7vJ,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAGo/I,IAAI,CAACtwJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEjDqwJ,IAAI,CAAErwJ,CAAC,CAAE,GAAGqe,MAAM,CAAEzF,MAAM,EAAG,CAAE;MAEhC;MAEA,IAAI,CAAC+2I,YAAY,CAAC1qH,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAAhrC,GAAA;IAAAE,KAAA,EAEA,SAAAq2J,uBAAwBnyI,MAAM,EAAEzF,MAAM,EAAG;MAExC,IAAI,CAACi3I,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAG1xI,MAAM,CAAEzF,MAAM,CAAE;IAE/D;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAs2J,sCAAuCpyI,MAAM,EAAEzF,MAAM,EAAG;MAEvD,IAAI,CAACi3I,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAG1xI,MAAM,CAAEzF,MAAM,CAAE;MAC9D,IAAI,CAAC+2I,YAAY,CAAC5oI,WAAW,GAAG,IAAI;IAErC;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAAu2J,iDAAkDryI,MAAM,EAAEzF,MAAM,EAAG;MAElE,IAAI,CAACi3I,gBAAgB,CAAE,IAAI,CAACE,aAAa,CAAE,GAAG1xI,MAAM,CAAEzF,MAAM,CAAE;MAC9D,IAAI,CAAC+2I,YAAY,CAAC1qH,sBAAsB,GAAG,IAAI;IAEhD;;IAEA;EAAA;IAAAhrC,GAAA;IAAAE,KAAA,EAEA,SAAAw2J,oBAAqBtyI,MAAM,EAAEzF,MAAM,EAAG;MAErC,IAAI,CAACi3I,gBAAgB,CAACl3I,SAAS,CAAE0F,MAAM,EAAEzF,MAAM,CAAE;IAElD;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAy2J,mCAAoCvyI,MAAM,EAAEzF,MAAM,EAAG;MAEpD,IAAI,CAACi3I,gBAAgB,CAACl3I,SAAS,CAAE0F,MAAM,EAAEzF,MAAM,CAAE;MACjD,IAAI,CAAC+2I,YAAY,CAAC5oI,WAAW,GAAG,IAAI;IAErC;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAA02J,8CAA+CxyI,MAAM,EAAEzF,MAAM,EAAG;MAE/D,IAAI,CAACi3I,gBAAgB,CAACl3I,SAAS,CAAE0F,MAAM,EAAEzF,MAAM,CAAE;MACjD,IAAI,CAAC+2I,YAAY,CAAC1qH,sBAAsB,GAAG,IAAI;IAEhD;EAAC;IAAAhrC,GAAA;IAAAE,KAAA,EAED,SAAAm1J,kBAAmBwB,WAAW,EAAEl4I,MAAM,EAAG;MAExC,IAAI,CAACwwF,IAAI,EAAE;MACX,IAAI,CAACkkD,QAAQ,CAAEwD,WAAW,EAAEl4I,MAAM,CAAE;IAErC;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAo1J,kBAAmBwB,WAAW,EAAEn4I,MAAM,EAAG;MAExC,IAAI,CAACwwF,IAAI,EAAE;MACX,IAAI,CAACt6B,QAAQ,CAAEiiF,WAAW,EAAEn4I,MAAM,CAAE;IAErC;;IAEA;EAAA;IAAA3e,GAAA;IAAAE,KAAA,EACA,SAAAivG,KAAA,EAAO;MAEN,IAAIumD,YAAY,GAAG,IAAI,CAACR,IAAI;MAC5B,IAAMX,UAAU,GAAG,IAAI,CAACA,UAAU;MAElC,IAAMwC,UAAU,GAAGxC,UAAU,CAACwC,UAAU;MACxC,IAAM9hB,YAAY,GAAGsf,UAAU,CAACtf,YAAY;MAC5C,IAAI6gB,aAAa,GAAGvB,UAAU,CAACuB,aAAa;MAE5C,IAAK,CAAEJ,YAAY,EAAG;QAErBA,YAAY,GAAGlB,eAAe,CAACW,QAAQ,CAAE,IAAI,CAACF,QAAQ,EAAEV,UAAU,CAACa,QAAQ,CAAE,IAAI,IAAI,CAACH,QAAQ;QAE9F,IAAI,CAACC,IAAI,GAAGQ,YAAY;MAEzB;;MAEA;MACA,IAAI,CAACrC,QAAQ,GAAG,IAAI,CAACkC,qBAAqB;MAC1C,IAAI,CAAC1gF,QAAQ,GAAG,IAAI,CAAC2gF,qBAAqB;;MAE1C;MACA,IAAK,CAAEE,YAAY,EAAG;QAErBh7I,OAAO,CAACjX,KAAK,CAAE,0DAA0D,GAAG,IAAI,CAAC23E,IAAI,GAAG,wBAAwB,CAAE;QAClH;MAED;MAEA,IAAK27E,UAAU,EAAG;QAEjB,IAAIC,WAAW,GAAGzC,UAAU,CAACyC,WAAW;;QAExC;QACA,QAASD,UAAU;UAElB,KAAK,WAAW;YAEf,IAAK,CAAErB,YAAY,CAAClmH,QAAQ,EAAG;cAE9B90B,OAAO,CAACjX,KAAK,CAAE,mFAAmF,EAAE,IAAI,CAAE;cAC1G;YAED;YAEA,IAAK,CAAEiyJ,YAAY,CAAClmH,QAAQ,CAACtB,SAAS,EAAG;cAExCxzB,OAAO,CAACjX,KAAK,CAAE,6GAA6G,EAAE,IAAI,CAAE;cACpI;YAED;YAEAiyJ,YAAY,GAAGA,YAAY,CAAClmH,QAAQ,CAACtB,SAAS;YAE9C;UAED,KAAK,OAAO;YAEX,IAAK,CAAEwnH,YAAY,CAACnmH,QAAQ,EAAG;cAE9B70B,OAAO,CAACjX,KAAK,CAAE,gFAAgF,EAAE,IAAI,CAAE;cACvG;YAED;;YAEA;YACA;;YAEAiyJ,YAAY,GAAGA,YAAY,CAACnmH,QAAQ,CAACwvE,KAAK;;YAE1C;YACA,KAAM,IAAIh5G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2vJ,YAAY,CAAC5vJ,MAAM,EAAEC,CAAC,EAAG,EAAG;cAEhD,IAAK2vJ,YAAY,CAAE3vJ,CAAC,CAAE,CAACM,IAAI,KAAK2wJ,WAAW,EAAG;gBAE7CA,WAAW,GAAGjxJ,CAAC;gBACf;cAED;YAED;YAEA;UAED;YAEC,IAAK2vJ,YAAY,CAAEqB,UAAU,CAAE,KAAKvyJ,SAAS,EAAG;cAE/CkW,OAAO,CAACjX,KAAK,CAAE,sEAAsE,EAAE,IAAI,CAAE;cAC7F;YAED;YAEAiyJ,YAAY,GAAGA,YAAY,CAAEqB,UAAU,CAAE;QAAC;QAK5C,IAAKC,WAAW,KAAKxyJ,SAAS,EAAG;UAEhC,IAAKkxJ,YAAY,CAAEsB,WAAW,CAAE,KAAKxyJ,SAAS,EAAG;YAEhDkW,OAAO,CAACjX,KAAK,CAAE,uFAAuF,EAAE,IAAI,EAAEiyJ,YAAY,CAAE;YAC5H;UAED;UAEAA,YAAY,GAAGA,YAAY,CAAEsB,WAAW,CAAE;QAE3C;MAED;;MAEA;MACA,IAAMC,YAAY,GAAGvB,YAAY,CAAEzgB,YAAY,CAAE;MAEjD,IAAKgiB,YAAY,KAAKzyJ,SAAS,EAAG;QAEjC,IAAM4wJ,QAAQ,GAAGb,UAAU,CAACa,QAAQ;QAEpC16I,OAAO,CAACjX,KAAK,CAAE,8DAA8D,GAAG2xJ,QAAQ,GACvF,GAAG,GAAGngB,YAAY,GAAG,wBAAwB,EAAEygB,YAAY,CAAE;QAC9D;MAED;;MAEA;MACA,IAAIwB,UAAU,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI;MAErC,IAAI,CAAC1B,YAAY,GAAGA,YAAY;MAEhC,IAAKA,YAAY,CAAC5oI,WAAW,KAAKtoB,SAAS,EAAG;QAAE;;QAE/C0yJ,UAAU,GAAG,IAAI,CAACC,UAAU,CAACE,WAAW;MAEzC,CAAC,MAAM,IAAK3B,YAAY,CAAC1qH,sBAAsB,KAAKxmC,SAAS,EAAG;QAAE;;QAEjE0yJ,UAAU,GAAG,IAAI,CAACC,UAAU,CAACG,sBAAsB;MAEpD;;MAEA;MACA,IAAIC,WAAW,GAAG,IAAI,CAACC,WAAW,CAACC,MAAM;MAEzC,IAAK3B,aAAa,KAAKtxJ,SAAS,EAAG;QAElC;;QAEA,IAAKywI,YAAY,KAAK,uBAAuB,EAAG;UAE/C;;UAEA;UACA,IAAK,CAAEygB,YAAY,CAACz5H,QAAQ,EAAG;YAE9BvhB,OAAO,CAACjX,KAAK,CAAE,qGAAqG,EAAE,IAAI,CAAE;YAC5H;UAED;UAEA,IAAK,CAAEiyJ,YAAY,CAACz5H,QAAQ,CAACqiB,eAAe,EAAG;YAE9C5jC,OAAO,CAACjX,KAAK,CAAE,qHAAqH,EAAE,IAAI,CAAE;YAC5I;UAED;UAEA,IAAKiyJ,YAAY,CAACpxG,qBAAqB,CAAEwxG,aAAa,CAAE,KAAKtxJ,SAAS,EAAG;YAExEsxJ,aAAa,GAAGJ,YAAY,CAACpxG,qBAAqB,CAAEwxG,aAAa,CAAE;UAEpE;QAED;QAEAyB,WAAW,GAAG,IAAI,CAACC,WAAW,CAACE,YAAY;QAE3C,IAAI,CAAC9B,gBAAgB,GAAGqB,YAAY;QACpC,IAAI,CAACnB,aAAa,GAAGA,aAAa;MAEnC,CAAC,MAAM,IAAKmB,YAAY,CAACv4I,SAAS,KAAKla,SAAS,IAAIyyJ,YAAY,CAACr4I,OAAO,KAAKpa,SAAS,EAAG;QAExF;;QAEA+yJ,WAAW,GAAG,IAAI,CAACC,WAAW,CAACG,cAAc;QAE7C,IAAI,CAAC/B,gBAAgB,GAAGqB,YAAY;MAErC,CAAC,MAAM,IAAK3sI,KAAK,CAACC,OAAO,CAAE0sI,YAAY,CAAE,EAAG;QAE3CM,WAAW,GAAG,IAAI,CAACC,WAAW,CAACI,WAAW;QAE1C,IAAI,CAAChC,gBAAgB,GAAGqB,YAAY;MAErC,CAAC,MAAM;QAEN,IAAI,CAAChiB,YAAY,GAAGA,YAAY;MAEjC;;MAEA;MACA,IAAI,CAACoe,QAAQ,GAAG,IAAI,CAACwE,mBAAmB,CAAEN,WAAW,CAAE;MACvD,IAAI,CAAC1iF,QAAQ,GAAG,IAAI,CAACijF,gCAAgC,CAAEP,WAAW,CAAE,CAAEL,UAAU,CAAE;IAEnF;EAAC;IAAAl3J,GAAA;IAAAE,KAAA,EAED,SAAA80J,OAAA,EAAS;MAER,IAAI,CAACE,IAAI,GAAG,IAAI;;MAEhB;MACA;MACA,IAAI,CAAC7B,QAAQ,GAAG,IAAI,CAACgC,iBAAiB;MACtC,IAAI,CAACxgF,QAAQ,GAAG,IAAI,CAACygF,iBAAiB;IAEvC;EAAC;IAAAt1J,GAAA;IAAAE,KAAA,EA7fD,SAAAsB,OAAeu2J,IAAI,EAAE38E,IAAI,EAAEm5E,UAAU,EAAG;MAEvC,IAAK,EAAIwD,IAAI,IAAIA,IAAI,CAACC,sBAAsB,CAAE,EAAG;QAEhD,OAAO,IAAIxD,eAAe,CAAEuD,IAAI,EAAE38E,IAAI,EAAEm5E,UAAU,CAAE;MAErD,CAAC,MAAM;QAEN,OAAO,IAAIC,eAAe,CAACJ,SAAS,CAAE2D,IAAI,EAAE38E,IAAI,EAAEm5E,UAAU,CAAE;MAE/D;IAED;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAAv0J,GAAA;IAAAE,KAAA,EAOA,SAAA+3J,iBAAyB5xJ,IAAI,EAAG;MAE/B,OAAOA,IAAI,CAACy4E,OAAO,CAAE,KAAK,EAAE,GAAG,CAAE,CAACA,OAAO,CAAE40E,WAAW,EAAE,EAAE,CAAE;IAE7D;EAAC;IAAA1zJ,GAAA;IAAAE,KAAA,EAED,SAAAu0J,eAAuB1f,SAAS,EAAG;MAElC,IAAMmjB,OAAO,GAAGhE,QAAQ,CAACxtI,IAAI,CAAEquH,SAAS,CAAE;MAE1C,IAAKmjB,OAAO,KAAK,IAAI,EAAG;QAEvB,MAAM,IAAIr0J,KAAK,CAAE,2CAA2C,GAAGkxI,SAAS,CAAE;MAE3E;MAEA,IAAMojB,OAAO,GAAG;QACf;QACA/C,QAAQ,EAAE8C,OAAO,CAAE,CAAC,CAAE;QACtBnB,UAAU,EAAEmB,OAAO,CAAE,CAAC,CAAE;QACxBlB,WAAW,EAAEkB,OAAO,CAAE,CAAC,CAAE;QACzBjjB,YAAY,EAAEijB,OAAO,CAAE,CAAC,CAAE;QAAE;QAC5BpC,aAAa,EAAEoC,OAAO,CAAE,CAAC;MAC1B,CAAC;MAED,IAAME,OAAO,GAAGD,OAAO,CAAC/C,QAAQ,IAAI+C,OAAO,CAAC/C,QAAQ,CAAC/S,WAAW,CAAE,GAAG,CAAE;MAEvE,IAAK+V,OAAO,KAAK5zJ,SAAS,IAAI4zJ,OAAO,KAAK,CAAE,CAAC,EAAG;QAE/C,IAAMrB,UAAU,GAAGoB,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAED,OAAO,GAAG,CAAC,CAAE;;QAE5D;QACA;QACA;QACA;QACA,IAAKjE,qBAAqB,CAAC/+I,OAAO,CAAE2hJ,UAAU,CAAE,KAAK,CAAE,CAAC,EAAG;UAE1DoB,OAAO,CAAC/C,QAAQ,GAAG+C,OAAO,CAAC/C,QAAQ,CAACiD,SAAS,CAAE,CAAC,EAAED,OAAO,CAAE;UAC3DD,OAAO,CAACpB,UAAU,GAAGA,UAAU;QAEhC;MAED;MAEA,IAAKoB,OAAO,CAACljB,YAAY,KAAK,IAAI,IAAIkjB,OAAO,CAACljB,YAAY,CAACnvI,MAAM,KAAK,CAAC,EAAG;QAEzE,MAAM,IAAIjC,KAAK,CAAE,8DAA8D,GAAGkxI,SAAS,CAAE;MAE9F;MAEA,OAAOojB,OAAO;IAEf;EAAC;IAAAn4J,GAAA;IAAAE,KAAA,EAED,SAAAi1J,SAAiB4C,IAAI,EAAE3C,QAAQ,EAAG;MAEjC,IAAKA,QAAQ,KAAK5wJ,SAAS,IAAI4wJ,QAAQ,KAAK,EAAE,IAAIA,QAAQ,KAAK,GAAG,IAAIA,QAAQ,KAAK,CAAE,CAAC,IAAIA,QAAQ,KAAK2C,IAAI,CAAC1xJ,IAAI,IAAI+uJ,QAAQ,KAAK2C,IAAI,CAACrhJ,IAAI,EAAG;QAE5I,OAAOqhJ,IAAI;MAEZ;;MAEA;MACA,IAAKA,IAAI,CAACxoH,QAAQ,EAAG;QAEpB,IAAMwwE,IAAI,GAAGg4C,IAAI,CAACxoH,QAAQ,CAACywE,aAAa,CAAEo1C,QAAQ,CAAE;QAEpD,IAAKr1C,IAAI,KAAKv7G,SAAS,EAAG;UAEzB,OAAOu7G,IAAI;QAEZ;MAED;;MAEA;MACA,IAAKg4C,IAAI,CAACv7H,QAAQ,EAAG;QAEpB,IAAM87H,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAc97H,QAAQ,EAAG;UAE/C,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGy2B,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,EAAG,EAAG;YAE5C,IAAMwyJ,SAAS,GAAG/7H,QAAQ,CAAEz2B,CAAC,CAAE;YAE/B,IAAKwyJ,SAAS,CAAClyJ,IAAI,KAAK+uJ,QAAQ,IAAImD,SAAS,CAAC7hJ,IAAI,KAAK0+I,QAAQ,EAAG;cAEjE,OAAOmD,SAAS;YAEjB;YAEA,IAAMn1J,MAAM,GAAGk1J,iBAAiB,CAAEC,SAAS,CAAC/7H,QAAQ,CAAE;YAEtD,IAAKp5B,MAAM,EAAG,OAAOA,MAAM;UAE5B;UAEA,OAAO,IAAI;QAEZ,CAAC;QAED,IAAMo1J,WAAW,GAAGF,iBAAiB,CAAEP,IAAI,CAACv7H,QAAQ,CAAE;QAEtD,IAAKg8H,WAAW,EAAG;UAElB,OAAOA,WAAW;QAEnB;MAED;MAEA,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAhE,eAAA;AAAA;AAAAh1J,OAAA,CAAAg1J,eAAA,GAAAA,eAAA;AA4XFA,eAAe,CAACJ,SAAS,GAAGA,SAAS;AAErCI,eAAe,CAAC70J,SAAS,CAAC63J,WAAW,GAAG;EACvCC,MAAM,EAAE,CAAC;EACTG,WAAW,EAAE,CAAC;EACdF,YAAY,EAAE,CAAC;EACfC,cAAc,EAAE;AACjB,CAAC;AAEDnD,eAAe,CAAC70J,SAAS,CAACw3J,UAAU,GAAG;EACtCC,IAAI,EAAE,CAAC;EACPC,WAAW,EAAE,CAAC;EACdC,sBAAsB,EAAE;AACzB,CAAC;AAED9C,eAAe,CAAC70J,SAAS,CAACk4J,mBAAmB,GAAG,CAE/CrD,eAAe,CAAC70J,SAAS,CAAC81J,gBAAgB,EAC1CjB,eAAe,CAAC70J,SAAS,CAACg2J,eAAe,EACzCnB,eAAe,CAAC70J,SAAS,CAACk2J,sBAAsB,EAChDrB,eAAe,CAAC70J,SAAS,CAACo2J,iBAAiB,CAE3C;AAEDvB,eAAe,CAAC70J,SAAS,CAACm4J,gCAAgC,GAAG,CAE5D;AACC;AACAtD,eAAe,CAAC70J,SAAS,CAACq2J,gBAAgB,EAC1CxB,eAAe,CAAC70J,SAAS,CAACs2J,+BAA+B,EACzDzB,eAAe,CAAC70J,SAAS,CAACu2J,0CAA0C,CAEpE,EAAE;AAEF;;AAEA1B,eAAe,CAAC70J,SAAS,CAACw2J,eAAe,EACzC3B,eAAe,CAAC70J,SAAS,CAAC02J,8BAA8B,EACxD7B,eAAe,CAAC70J,SAAS,CAAC22J,yCAAyC,CAEnE,EAAE;AAEF;AACA9B,eAAe,CAAC70J,SAAS,CAAC42J,sBAAsB,EAChD/B,eAAe,CAAC70J,SAAS,CAAC62J,qCAAqC,EAC/DhC,eAAe,CAAC70J,SAAS,CAAC82J,gDAAgD,CAE1E,EAAE;AAEF;AACAjC,eAAe,CAAC70J,SAAS,CAAC+2J,mBAAmB,EAC7ClC,eAAe,CAAC70J,SAAS,CAACg3J,kCAAkC,EAC5DnC,eAAe,CAAC70J,SAAS,CAACi3J,6CAA6C,CAEvE,CAED;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,IA6BM6B,oBAAoB;EAEzB,SAAAA,qBAAA,EAAc;IAAAnwJ,eAAA,OAAAmwJ,oBAAA;IAEb,IAAI,CAACT,sBAAsB,GAAG,IAAI;IAElC,IAAI,CAACthJ,IAAI,GAAGN,YAAY,EAAE;;IAE1B;IACA,IAAI,CAACk4E,QAAQ,GAAGhkE,KAAK,CAAC3qB,SAAS,CAAC0H,KAAK,CAACrF,IAAI,CAAE2qC,SAAS,CAAE;IAEvD,IAAI,CAACmoH,eAAe,GAAG,CAAC,CAAC,CAAC;IAC1B;;IAEA,IAAMj1G,OAAO,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC64G,cAAc,GAAG74G,OAAO,CAAC,CAAC;;IAE/B,KAAM,IAAI95C,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG21B,SAAS,CAAC7mC,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;MAEtD85C,OAAO,CAAElT,SAAS,CAAE5mC,CAAC,CAAE,CAAC2Q,IAAI,CAAE,GAAG3Q,CAAC;IAEnC;IAEA,IAAI,CAAC4yJ,MAAM,GAAG,EAAE,CAAC,CAAC;IAClB,IAAI,CAACC,YAAY,GAAG,EAAE,CAAC,CAAC;IACxB,IAAI,CAACjE,SAAS,GAAG,EAAE,CAAC,CAAC;IACrB,IAAI,CAACkE,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;IAElC,IAAMjzG,KAAK,GAAG,IAAI;IAElB,IAAI,CAACkzG,KAAK,GAAG;MAEZ32F,OAAO,EAAE;QACR,IAAIy3E,KAAKA,CAAA,EAAG;UAEX,OAAOh0F,KAAK,CAAC0oC,QAAQ,CAACxoF,MAAM;QAE7B,CAAC;QACD,IAAIizJ,KAAKA,CAAA,EAAG;UAEX,OAAO,IAAI,CAACnf,KAAK,GAAGh0F,KAAK,CAACkvG,eAAe;QAE1C;MACD,CAAC;MACD,IAAIkE,iBAAiBA,CAAA,EAAG;QAEvB,OAAOpzG,KAAK,CAAC+uG,SAAS,CAAC7uJ,MAAM;MAE9B;IAED,CAAC;EAEF;EAACgD,YAAA,CAAA2vJ,oBAAA;IAAAz4J,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAA,EAAM;MAEL,IAAM+lD,OAAO,GAAG,IAAI,CAACmsB,QAAQ;QAC5B2qE,aAAa,GAAG,IAAI,CAACP,cAAc;QACnCQ,KAAK,GAAG,IAAI,CAACP,MAAM;QACnBQ,WAAW,GAAG,IAAI,CAACP,YAAY;QAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAACjvJ,MAAM;MAE5B,IAAIuzJ,WAAW,GAAG70J,SAAS;QAC1B80J,QAAQ,GAAGn3F,OAAO,CAACr8D,MAAM;QACzByzJ,cAAc,GAAG,IAAI,CAACzE,eAAe;MAEtC,KAAM,IAAI/uJ,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG21B,SAAS,CAAC7mC,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEtD,IAAMgB,MAAM,GAAG4lC,SAAS,CAAE5mC,CAAC,CAAE;UAC5B2Q,IAAI,GAAG3P,MAAM,CAAC2P,IAAI;QACnB,IAAIlB,KAAK,GAAGyjJ,aAAa,CAAEviJ,IAAI,CAAE;QAEjC,IAAKlB,KAAK,KAAKhR,SAAS,EAAG;UAE1B;;UAEAgR,KAAK,GAAG8jJ,QAAQ,EAAG;UACnBL,aAAa,CAAEviJ,IAAI,CAAE,GAAGlB,KAAK;UAC7B2sD,OAAO,CAAC58D,IAAI,CAAEwB,MAAM,CAAE;;UAEtB;;UAEA,KAAM,IAAIy3B,CAAC,GAAG,CAAC,EAAEvnB,CAAC,GAAGmiJ,SAAS,EAAE56H,CAAC,KAAKvnB,CAAC,EAAE,EAAGunB,CAAC,EAAG;YAE/Cu2H,QAAQ,CAAEv2H,CAAC,CAAE,CAACj5B,IAAI,CAAE,IAAIivJ,eAAe,CAAEztJ,MAAM,EAAEmyJ,KAAK,CAAE16H,CAAC,CAAE,EAAE26H,WAAW,CAAE36H,CAAC,CAAE,CAAE,CAAE;UAElF;QAED,CAAC,MAAM,IAAKhpB,KAAK,GAAG+jJ,cAAc,EAAG;UAEpCF,WAAW,GAAGl3F,OAAO,CAAE3sD,KAAK,CAAE;;UAE9B;;UAEA,IAAMgkJ,gBAAgB,GAAG,EAAGD,cAAc;YACzCE,gBAAgB,GAAGt3F,OAAO,CAAEq3F,gBAAgB,CAAE;UAE/CP,aAAa,CAAEQ,gBAAgB,CAAC/iJ,IAAI,CAAE,GAAGlB,KAAK;UAC9C2sD,OAAO,CAAE3sD,KAAK,CAAE,GAAGikJ,gBAAgB;UAEnCR,aAAa,CAAEviJ,IAAI,CAAE,GAAG8iJ,gBAAgB;UACxCr3F,OAAO,CAAEq3F,gBAAgB,CAAE,GAAGzyJ,MAAM;;UAEpC;;UAEA,KAAM,IAAIy3B,IAAC,GAAG,CAAC,EAAEvnB,GAAC,GAAGmiJ,SAAS,EAAE56H,IAAC,KAAKvnB,GAAC,EAAE,EAAGunB,IAAC,EAAG;YAE/C,IAAMk7H,eAAe,GAAG3E,QAAQ,CAAEv2H,IAAC,CAAE;cACpCm7H,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;YAEjD,IAAIjI,OAAO,GAAGmI,eAAe,CAAElkJ,KAAK,CAAE;YAEtCkkJ,eAAe,CAAElkJ,KAAK,CAAE,GAAGmkJ,UAAU;YAErC,IAAKpI,OAAO,KAAK/sJ,SAAS,EAAG;cAE5B;cACA;cACA;;cAEA+sJ,OAAO,GAAG,IAAIiD,eAAe,CAAEztJ,MAAM,EAAEmyJ,KAAK,CAAE16H,IAAC,CAAE,EAAE26H,WAAW,CAAE36H,IAAC,CAAE,CAAE;YAEtE;YAEAk7H,eAAe,CAAEF,gBAAgB,CAAE,GAAGjI,OAAO;UAE9C;QAED,CAAC,MAAM,IAAKpvF,OAAO,CAAE3sD,KAAK,CAAE,KAAK6jJ,WAAW,EAAG;UAE9C3+I,OAAO,CAACjX,KAAK,CAAE,mEAAmE,GACjF,mFAAmF,CAAE;QAEvF,CAAC,CAAC;MAEH,CAAC,CAAC;;MAEF,IAAI,CAACqxJ,eAAe,GAAGyE,cAAc;IAEtC;EAAC;IAAAv5J,GAAA;IAAAE,KAAA,EAED,SAAA0sC,OAAA,EAAS;MAER,IAAMu1B,OAAO,GAAG,IAAI,CAACmsB,QAAQ;QAC5B2qE,aAAa,GAAG,IAAI,CAACP,cAAc;QACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAACjvJ,MAAM;MAE5B,IAAIyzJ,cAAc,GAAG,IAAI,CAACzE,eAAe;MAEzC,KAAM,IAAI/uJ,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG21B,SAAS,CAAC7mC,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEtD,IAAMgB,MAAM,GAAG4lC,SAAS,CAAE5mC,CAAC,CAAE;UAC5B2Q,IAAI,GAAG3P,MAAM,CAAC2P,IAAI;UAClBlB,KAAK,GAAGyjJ,aAAa,CAAEviJ,IAAI,CAAE;QAE9B,IAAKlB,KAAK,KAAKhR,SAAS,IAAIgR,KAAK,IAAI+jJ,cAAc,EAAG;UAErD;;UAEA,IAAMK,eAAe,GAAGL,cAAc,EAAG;YACxCM,iBAAiB,GAAG13F,OAAO,CAAEy3F,eAAe,CAAE;UAE/CX,aAAa,CAAEY,iBAAiB,CAACnjJ,IAAI,CAAE,GAAGlB,KAAK;UAC/C2sD,OAAO,CAAE3sD,KAAK,CAAE,GAAGqkJ,iBAAiB;UAEpCZ,aAAa,CAAEviJ,IAAI,CAAE,GAAGkjJ,eAAe;UACvCz3F,OAAO,CAAEy3F,eAAe,CAAE,GAAG7yJ,MAAM;;UAEnC;;UAEA,KAAM,IAAIy3B,CAAC,GAAG,CAAC,EAAEvnB,CAAC,GAAGmiJ,SAAS,EAAE56H,CAAC,KAAKvnB,CAAC,EAAE,EAAGunB,CAAC,EAAG;YAE/C,IAAMk7H,eAAe,GAAG3E,QAAQ,CAAEv2H,CAAC,CAAE;cACpCs7H,WAAW,GAAGJ,eAAe,CAAEE,eAAe,CAAE;cAChDrI,OAAO,GAAGmI,eAAe,CAAElkJ,KAAK,CAAE;YAEnCkkJ,eAAe,CAAElkJ,KAAK,CAAE,GAAGskJ,WAAW;YACtCJ,eAAe,CAAEE,eAAe,CAAE,GAAGrI,OAAO;UAE7C;QAED;MAED,CAAC,CAAC;;MAEF,IAAI,CAACuD,eAAe,GAAGyE,cAAc;IAEtC;;IAEA;EAAA;IAAAv5J,GAAA;IAAAE,KAAA,EACA,SAAA65J,QAAA,EAAU;MAET,IAAM53F,OAAO,GAAG,IAAI,CAACmsB,QAAQ;QAC5B2qE,aAAa,GAAG,IAAI,CAACP,cAAc;QACnC3D,QAAQ,GAAG,IAAI,CAACJ,SAAS;QACzByE,SAAS,GAAGrE,QAAQ,CAACjvJ,MAAM;MAE5B,IAAIyzJ,cAAc,GAAG,IAAI,CAACzE,eAAe;QACxCwE,QAAQ,GAAGn3F,OAAO,CAACr8D,MAAM;MAE1B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG21B,SAAS,CAAC7mC,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEtD,IAAMgB,MAAM,GAAG4lC,SAAS,CAAE5mC,CAAC,CAAE;UAC5B2Q,IAAI,GAAG3P,MAAM,CAAC2P,IAAI;UAClBlB,KAAK,GAAGyjJ,aAAa,CAAEviJ,IAAI,CAAE;QAE9B,IAAKlB,KAAK,KAAKhR,SAAS,EAAG;UAE1B,OAAOy0J,aAAa,CAAEviJ,IAAI,CAAE;UAE5B,IAAKlB,KAAK,GAAG+jJ,cAAc,EAAG;YAE7B;;YAEA,IAAMC,gBAAgB,GAAG,EAAGD,cAAc;cACzCE,gBAAgB,GAAGt3F,OAAO,CAAEq3F,gBAAgB,CAAE;cAC9Cl+E,SAAS,GAAG,EAAGg+E,QAAQ;cACvBU,UAAU,GAAG73F,OAAO,CAAEmZ,SAAS,CAAE;;YAElC;YACA29E,aAAa,CAAEQ,gBAAgB,CAAC/iJ,IAAI,CAAE,GAAGlB,KAAK;YAC9C2sD,OAAO,CAAE3sD,KAAK,CAAE,GAAGikJ,gBAAgB;;YAEnC;YACAR,aAAa,CAAEe,UAAU,CAACtjJ,IAAI,CAAE,GAAG8iJ,gBAAgB;YACnDr3F,OAAO,CAAEq3F,gBAAgB,CAAE,GAAGQ,UAAU;YACxC73F,OAAO,CAACl7D,GAAG,EAAE;;YAEb;;YAEA,KAAM,IAAIu3B,CAAC,GAAG,CAAC,EAAEvnB,CAAC,GAAGmiJ,SAAS,EAAE56H,CAAC,KAAKvnB,CAAC,EAAE,EAAGunB,CAAC,EAAG;cAE/C,IAAMk7H,eAAe,GAAG3E,QAAQ,CAAEv2H,CAAC,CAAE;gBACpCm7H,UAAU,GAAGD,eAAe,CAAEF,gBAAgB,CAAE;gBAChD9yC,IAAI,GAAGgzC,eAAe,CAAEp+E,SAAS,CAAE;cAEpCo+E,eAAe,CAAElkJ,KAAK,CAAE,GAAGmkJ,UAAU;cACrCD,eAAe,CAAEF,gBAAgB,CAAE,GAAG9yC,IAAI;cAC1CgzC,eAAe,CAACzyJ,GAAG,EAAE;YAEtB;UAED,CAAC,MAAM;YAEN;;YAEA,IAAMq0E,UAAS,GAAG,EAAGg+E,QAAQ;cAC5BU,WAAU,GAAG73F,OAAO,CAAEmZ,UAAS,CAAE;YAElC,IAAKA,UAAS,GAAG,CAAC,EAAG;cAEpB29E,aAAa,CAAEe,WAAU,CAACtjJ,IAAI,CAAE,GAAGlB,KAAK;YAEzC;YAEA2sD,OAAO,CAAE3sD,KAAK,CAAE,GAAGwkJ,WAAU;YAC7B73F,OAAO,CAACl7D,GAAG,EAAE;;YAEb;;YAEA,KAAM,IAAIu3B,IAAC,GAAG,CAAC,EAAEvnB,GAAC,GAAGmiJ,SAAS,EAAE56H,IAAC,KAAKvnB,GAAC,EAAE,EAAGunB,IAAC,EAAG;cAE/C,IAAMk7H,gBAAe,GAAG3E,QAAQ,CAAEv2H,IAAC,CAAE;cAErCk7H,gBAAe,CAAElkJ,KAAK,CAAE,GAAGkkJ,gBAAe,CAAEp+E,UAAS,CAAE;cACvDo+E,gBAAe,CAACzyJ,GAAG,EAAE;YAEtB;UAED,CAAC,CAAC;QAEH,CAAC,CAAC;MAEH,CAAC,CAAC;;MAEF,IAAI,CAAC6tJ,eAAe,GAAGyE,cAAc;IAEtC;;IAEA;EAAA;IAAAv5J,GAAA;IAAAE,KAAA,EAEA,SAAA00J,WAAYx5E,IAAI,EAAEm5E,UAAU,EAAG;MAE9B;MACA;;MAEA,IAAM0F,aAAa,GAAG,IAAI,CAACpB,sBAAsB;MACjD,IAAIrjJ,KAAK,GAAGykJ,aAAa,CAAE7+E,IAAI,CAAE;MACjC,IAAM25E,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE/B,IAAKn/I,KAAK,KAAKhR,SAAS,EAAG,OAAOuwJ,QAAQ,CAAEv/I,KAAK,CAAE;MAEnD,IAAM0jJ,KAAK,GAAG,IAAI,CAACP,MAAM;QACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;QAC/Bz2F,OAAO,GAAG,IAAI,CAACmsB,QAAQ;QACvBgrE,QAAQ,GAAGn3F,OAAO,CAACr8D,MAAM;QACzByzJ,cAAc,GAAG,IAAI,CAACzE,eAAe;QACrC4E,eAAe,GAAG,IAAIpvI,KAAK,CAAEgvI,QAAQ,CAAE;MAExC9jJ,KAAK,GAAGu/I,QAAQ,CAACjvJ,MAAM;MAEvBm0J,aAAa,CAAE7+E,IAAI,CAAE,GAAG5lE,KAAK;MAE7B0jJ,KAAK,CAAC3zJ,IAAI,CAAE61E,IAAI,CAAE;MAClB+9E,WAAW,CAAC5zJ,IAAI,CAAEgvJ,UAAU,CAAE;MAC9BQ,QAAQ,CAACxvJ,IAAI,CAAEm0J,eAAe,CAAE;MAEhC,KAAM,IAAI3zJ,CAAC,GAAGwzJ,cAAc,EAAEviJ,CAAC,GAAGmrD,OAAO,CAACr8D,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAEjE,IAAMgB,MAAM,GAAGo7D,OAAO,CAAEp8D,CAAC,CAAE;QAC3B2zJ,eAAe,CAAE3zJ,CAAC,CAAE,GAAG,IAAIyuJ,eAAe,CAAEztJ,MAAM,EAAEq0E,IAAI,EAAEm5E,UAAU,CAAE;MAEvE;MAEA,OAAOmF,eAAe;IAEvB;EAAC;IAAA15J,GAAA;IAAAE,KAAA,EAED,SAAAg6J,aAAc9+E,IAAI,EAAG;MAEpB;MACA;;MAEA,IAAM6+E,aAAa,GAAG,IAAI,CAACpB,sBAAsB;QAChDrjJ,KAAK,GAAGykJ,aAAa,CAAE7+E,IAAI,CAAE;MAE9B,IAAK5lE,KAAK,KAAKhR,SAAS,EAAG;QAE1B,IAAM00J,KAAK,GAAG,IAAI,CAACP,MAAM;UACxBQ,WAAW,GAAG,IAAI,CAACP,YAAY;UAC/B7D,QAAQ,GAAG,IAAI,CAACJ,SAAS;UACzBwF,iBAAiB,GAAGpF,QAAQ,CAACjvJ,MAAM,GAAG,CAAC;UACvCs0J,YAAY,GAAGrF,QAAQ,CAAEoF,iBAAiB,CAAE;UAC5CE,gBAAgB,GAAGj/E,IAAI,CAAE++E,iBAAiB,CAAE;QAE7CF,aAAa,CAAEI,gBAAgB,CAAE,GAAG7kJ,KAAK;QAEzCu/I,QAAQ,CAAEv/I,KAAK,CAAE,GAAG4kJ,YAAY;QAChCrF,QAAQ,CAAC9tJ,GAAG,EAAE;QAEdkyJ,WAAW,CAAE3jJ,KAAK,CAAE,GAAG2jJ,WAAW,CAAEgB,iBAAiB,CAAE;QACvDhB,WAAW,CAAClyJ,GAAG,EAAE;QAEjBiyJ,KAAK,CAAE1jJ,KAAK,CAAE,GAAG0jJ,KAAK,CAAEiB,iBAAiB,CAAE;QAC3CjB,KAAK,CAACjyJ,GAAG,EAAE;MAEZ;IAED;EAAC;EAAA,OAAAwxJ,oBAAA;AAAA;AAAAj5J,OAAA,CAAAi5J,oBAAA,GAAAA,oBAAA;AAAA,IAII6B,eAAe;EAEpB,SAAAA,gBAAaC,KAAK,EAAE3vB,IAAI,EAAE4vB,SAAS,GAAG,IAAI,EAAExtB,SAAS,GAAGpC,IAAI,CAACoC,SAAS,EAAG;IAAA1kI,eAAA,OAAAgyJ,eAAA;IAExE,IAAI,CAACG,MAAM,GAAGF,KAAK;IACnB,IAAI,CAACG,KAAK,GAAG9vB,IAAI;IACjB,IAAI,CAAC+vB,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACxtB,SAAS,GAAGA,SAAS;IAE1B,IAAMnC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACzB+vB,OAAO,GAAG/vB,MAAM,CAAC/kI,MAAM;MACvB+0J,YAAY,GAAG,IAAIvwI,KAAK,CAAEswI,OAAO,CAAE;IAEpC,IAAME,mBAAmB,GAAG;MAC3BjsB,WAAW,EAAE38H,mBAAmB;MAChC48H,SAAS,EAAE58H;IACZ,CAAC;IAED,KAAM,IAAInM,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK60J,OAAO,EAAE,EAAG70J,CAAC,EAAG;MAEtC,IAAMymI,WAAW,GAAG3B,MAAM,CAAE9kI,CAAC,CAAE,CAACkmI,iBAAiB,CAAE,IAAI,CAAE;MACzD4uB,YAAY,CAAE90J,CAAC,CAAE,GAAGymI,WAAW;MAC/BA,WAAW,CAACe,QAAQ,GAAGutB,mBAAmB;IAE3C;IAEA,IAAI,CAACC,oBAAoB,GAAGD,mBAAmB;IAE/C,IAAI,CAACE,aAAa,GAAGH,YAAY,CAAC,CAAC;;IAEnC;IACA,IAAI,CAACI,iBAAiB,GAAG,IAAI3wI,KAAK,CAAEswI,OAAO,CAAE;IAE7C,IAAI,CAACM,WAAW,GAAG,IAAI,CAAC,CAAC;IACzB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAAC,CAAC;;IAE/B,IAAI,CAACC,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAE9B,IAAI,CAAC7O,IAAI,GAAG36I,UAAU;IACtB,IAAI,CAACypJ,UAAU,GAAG,CAAE,CAAC;;IAErB;IACA;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;IACA;IACA,IAAI,CAAC5qG,IAAI,GAAG,CAAC;IAEb,IAAI,CAACugF,SAAS,GAAG,CAAC;IAClB,IAAI,CAACsqB,mBAAmB,GAAG,CAAC;IAE5B,IAAI,CAAC9qF,MAAM,GAAG,CAAC;IACf,IAAI,CAAC+qF,gBAAgB,GAAG,CAAC;IAEzB,IAAI,CAACC,WAAW,GAAGthI,QAAQ,CAAC,CAAC;;IAE7B,IAAI,CAACuhI,MAAM,GAAG,KAAK,CAAC,CAAC;IACrB,IAAI,CAAChxG,OAAO,GAAG,IAAI,CAAC,CAAC;;IAErB,IAAI,CAACixG,iBAAiB,GAAG,KAAK,CAAC;;IAE/B,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAAC;IAC7B,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC;EAE5B;;EAEA;EAAAhzJ,YAAA,CAAAwxJ,eAAA;IAAAt6J,GAAA;IAAAE,KAAA,EAEA,SAAA2tJ,KAAA,EAAO;MAEN,IAAI,CAAC4M,MAAM,CAACsB,eAAe,CAAE,IAAI,CAAE;MAEnC,OAAO,IAAI;IAEZ;EAAC;IAAA/7J,GAAA;IAAAE,KAAA,EAED,SAAAoH,KAAA,EAAO;MAEN,IAAI,CAACmzJ,MAAM,CAACuB,iBAAiB,CAAE,IAAI,CAAE;MAErC,OAAO,IAAI,CAACt2J,KAAK,EAAE;IAEpB;EAAC;IAAA1F,GAAA;IAAAE,KAAA,EAED,SAAAwF,MAAA,EAAQ;MAEP,IAAI,CAACi2J,MAAM,GAAG,KAAK;MACnB,IAAI,CAAChxG,OAAO,GAAG,IAAI;MAEnB,IAAI,CAACgG,IAAI,GAAG,CAAC,CAAC,CAAC;MACf,IAAI,CAAC2qG,UAAU,GAAG,CAAE,CAAC,CAAC;MACtB,IAAI,CAACC,UAAU,GAAG,IAAI,CAAC;;MAEvB,OAAO,IAAI,CAACU,UAAU,EAAE,CAACC,WAAW,EAAE;IAEvC;EAAC;IAAAl8J,GAAA;IAAAE,KAAA,EAED,SAAAi8J,UAAA,EAAY;MAEX,OAAO,IAAI,CAACxxG,OAAO,IAAI,CAAE,IAAI,CAACgxG,MAAM,IAAI,IAAI,CAACzqB,SAAS,KAAK,CAAC,IAC3D,IAAI,CAACqqB,UAAU,KAAK,IAAI,IAAI,IAAI,CAACd,MAAM,CAAC2B,eAAe,CAAE,IAAI,CAAE;IAEjE;;IAEA;EAAA;IAAAp8J,GAAA;IAAAE,KAAA,EACA,SAAAm8J,YAAA,EAAc;MAEb,OAAO,IAAI,CAAC5B,MAAM,CAAC2B,eAAe,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAp8J,GAAA;IAAAE,KAAA,EAED,SAAAo8J,QAAS3rG,IAAI,EAAG;MAEf,IAAI,CAAC4qG,UAAU,GAAG5qG,IAAI;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA3wD,GAAA;IAAAE,KAAA,EAED,SAAAwuJ,QAAShnF,IAAI,EAAEg0F,WAAW,EAAG;MAE5B,IAAI,CAAClP,IAAI,GAAG9kF,IAAI;MAChB,IAAI,CAACg0F,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI;IAEZ;;IAEA;;IAEA;IACA;IACA;EAAA;IAAA17J,GAAA;IAAAE,KAAA,EACA,SAAAq8J,mBAAoB7rF,MAAM,EAAG;MAE5B,IAAI,CAACA,MAAM,GAAGA,MAAM;;MAEpB;MACA,IAAI,CAAC+qF,gBAAgB,GAAG,IAAI,CAAC9wG,OAAO,GAAG+lB,MAAM,GAAG,CAAC;MAEjD,OAAO,IAAI,CAACurF,UAAU,EAAE;IAEzB;;IAEA;EAAA;IAAAj8J,GAAA;IAAAE,KAAA,EACA,SAAAs8J,mBAAA,EAAqB;MAEpB,OAAO,IAAI,CAACf,gBAAgB;IAE7B;EAAC;IAAAz7J,GAAA;IAAAE,KAAA,EAED,SAAAu8J,OAAQ9oB,QAAQ,EAAG;MAElB,OAAO,IAAI,CAAC+oB,eAAe,CAAE/oB,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE;IAE9C;EAAC;IAAA3zI,GAAA;IAAAE,KAAA,EAED,SAAAy8J,QAAShpB,QAAQ,EAAG;MAEnB,OAAO,IAAI,CAAC+oB,eAAe,CAAE/oB,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAE;IAE9C;EAAC;IAAA3zI,GAAA;IAAAE,KAAA,EAED,SAAA08J,cAAeC,aAAa,EAAElpB,QAAQ,EAAEmpB,IAAI,EAAG;MAE9CD,aAAa,CAACF,OAAO,CAAEhpB,QAAQ,CAAE;MACjC,IAAI,CAAC8oB,MAAM,CAAE9oB,QAAQ,CAAE;MAEvB,IAAKmpB,IAAI,EAAG;QAEX,IAAMC,cAAc,GAAG,IAAI,CAACrC,KAAK,CAAC/mB,QAAQ;UACzCqpB,eAAe,GAAGH,aAAa,CAACnC,KAAK,CAAC/mB,QAAQ;UAE9CspB,aAAa,GAAGD,eAAe,GAAGD,cAAc;UAChDG,aAAa,GAAGH,cAAc,GAAGC,eAAe;QAEjDH,aAAa,CAACC,IAAI,CAAE,GAAG,EAAEG,aAAa,EAAEtpB,QAAQ,CAAE;QAClD,IAAI,CAACmpB,IAAI,CAAEI,aAAa,EAAE,GAAG,EAAEvpB,QAAQ,CAAE;MAE1C;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA3zI,GAAA;IAAAE,KAAA,EAED,SAAAi9J,YAAaC,YAAY,EAAEzpB,QAAQ,EAAEmpB,IAAI,EAAG;MAE3C,OAAOM,YAAY,CAACR,aAAa,CAAE,IAAI,EAAEjpB,QAAQ,EAAEmpB,IAAI,CAAE;IAE1D;EAAC;IAAA98J,GAAA;IAAAE,KAAA,EAED,SAAA+7J,WAAA,EAAa;MAEZ,IAAMoB,iBAAiB,GAAG,IAAI,CAAChC,kBAAkB;MAEjD,IAAKgC,iBAAiB,KAAK,IAAI,EAAG;QAEjC,IAAI,CAAChC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACZ,MAAM,CAAC6C,2BAA2B,CAAED,iBAAiB,CAAE;MAE7D;MAEA,OAAO,IAAI;IAEZ;;IAEA;;IAEA;IACA;IACA;EAAA;IAAAr9J,GAAA;IAAAE,KAAA,EACA,SAAAq9J,sBAAuBrsB,SAAS,EAAG;MAElC,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACsqB,mBAAmB,GAAG,IAAI,CAACG,MAAM,GAAG,CAAC,GAAGzqB,SAAS;MAEtD,OAAO,IAAI,CAACgrB,WAAW,EAAE;IAE1B;;IAEA;EAAA;IAAAl8J,GAAA;IAAAE,KAAA,EACA,SAAAs9J,sBAAA,EAAwB;MAEvB,OAAO,IAAI,CAAChC,mBAAmB;IAEhC;EAAC;IAAAx7J,GAAA;IAAAE,KAAA,EAED,SAAAu9J,YAAa9pB,QAAQ,EAAG;MAEvB,IAAI,CAACzC,SAAS,GAAG,IAAI,CAACwpB,KAAK,CAAC/mB,QAAQ,GAAGA,QAAQ;MAE/C,OAAO,IAAI,CAACuoB,WAAW,EAAE;IAE1B;EAAC;IAAAl8J,GAAA;IAAAE,KAAA,EAED,SAAAw9J,SAAUC,MAAM,EAAG;MAElB,IAAI,CAAChtG,IAAI,GAAGgtG,MAAM,CAAChtG,IAAI;MACvB,IAAI,CAACugF,SAAS,GAAGysB,MAAM,CAACzsB,SAAS;MAEjC,OAAO,IAAI,CAACgrB,WAAW,EAAE;IAE1B;EAAC;IAAAl8J,GAAA;IAAAE,KAAA,EAED,SAAA09J,KAAMjqB,QAAQ,EAAG;MAEhB,OAAO,IAAI,CAACmpB,IAAI,CAAE,IAAI,CAACtB,mBAAmB,EAAE,CAAC,EAAE7nB,QAAQ,CAAE;IAE1D;EAAC;IAAA3zI,GAAA;IAAAE,KAAA,EAED,SAAA48J,KAAMe,cAAc,EAAEC,YAAY,EAAEnqB,QAAQ,EAAG;MAE9C,IAAM4mB,KAAK,GAAG,IAAI,CAACE,MAAM;QACxB9Q,GAAG,GAAG4Q,KAAK,CAAC5pG,IAAI;QAChBugF,SAAS,GAAG,IAAI,CAACA,SAAS;MAE3B,IAAI1E,WAAW,GAAG,IAAI,CAAC4uB,qBAAqB;MAE5C,IAAK5uB,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,GAAG+tB,KAAK,CAACwD,uBAAuB,EAAE;QAC7C,IAAI,CAAC3C,qBAAqB,GAAG5uB,WAAW;MAEzC;MAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;QAC3C3qI,MAAM,GAAGgqI,WAAW,CAACY,YAAY;MAElCrD,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG;MAChB5f,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG,GAAGhW,QAAQ;MAE3BnxI,MAAM,CAAE,CAAC,CAAE,GAAGq7J,cAAc,GAAG3sB,SAAS;MACxC1uI,MAAM,CAAE,CAAC,CAAE,GAAGs7J,YAAY,GAAG5sB,SAAS;MAEtC,OAAO,IAAI;IAEZ;EAAC;IAAAlxI,GAAA;IAAAE,KAAA,EAED,SAAAg8J,YAAA,EAAc;MAEb,IAAM8B,oBAAoB,GAAG,IAAI,CAAC5C,qBAAqB;MAEvD,IAAK4C,oBAAoB,KAAK,IAAI,EAAG;QAEpC,IAAI,CAAC5C,qBAAqB,GAAG,IAAI;QACjC,IAAI,CAACX,MAAM,CAAC6C,2BAA2B,CAAEU,oBAAoB,CAAE;MAEhE;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAh+J,GAAA;IAAAE,KAAA,EAEA,SAAA+9J,SAAA,EAAW;MAEV,OAAO,IAAI,CAACxD,MAAM;IAEnB;EAAC;IAAAz6J,GAAA;IAAAE,KAAA,EAED,SAAAg+J,QAAA,EAAU;MAET,OAAO,IAAI,CAACxD,KAAK;IAElB;EAAC;IAAA16J,GAAA;IAAAE,KAAA,EAED,SAAAi+J,QAAA,EAAU;MAET,OAAO,IAAI,CAACxD,UAAU,IAAI,IAAI,CAACF,MAAM,CAAC2D,KAAK;IAE5C;;IAEA;EAAA;IAAAp+J,GAAA;IAAAE,KAAA,EAEA,SAAAm+J,QAAS1tG,IAAI,EAAE2tG,SAAS,EAAEC,aAAa,EAAEzL,SAAS,EAAG;MAEpD;;MAEA,IAAK,CAAE,IAAI,CAACnoG,OAAO,EAAG;QAErB;;QAEA,IAAI,CAAC6zG,aAAa,CAAE7tG,IAAI,CAAE;QAC1B;MAED;MAEA,IAAMwgF,SAAS,GAAG,IAAI,CAACoqB,UAAU;MAEjC,IAAKpqB,SAAS,KAAK,IAAI,EAAG;QAEzB;;QAEA,IAAMstB,WAAW,GAAG,CAAE9tG,IAAI,GAAGwgF,SAAS,IAAKotB,aAAa;QACxD,IAAKE,WAAW,GAAG,CAAC,IAAIF,aAAa,KAAK,CAAC,EAAG;UAE7C,OAAO,CAAC;QAET;;QAEA;;QAEA,IAAI,CAAChD,UAAU,GAAG,IAAI,CAAC,CAAC;QACxB+C,SAAS,GAAGC,aAAa,GAAGE,WAAW;MAExC;;MAEA;;MAEAH,SAAS,IAAI,IAAI,CAACI,gBAAgB,CAAE/tG,IAAI,CAAE;MAC1C,IAAMguG,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAEN,SAAS,CAAE;;MAE9C;MACA;;MAEA,IAAM5tF,MAAM,GAAG,IAAI,CAAC8tF,aAAa,CAAE7tG,IAAI,CAAE;MAEzC,IAAK+f,MAAM,GAAG,CAAC,EAAG;QAEjB,IAAMmqF,YAAY,GAAG,IAAI,CAACG,aAAa;QACvC,IAAM6D,cAAc,GAAG,IAAI,CAAC5D,iBAAiB;QAE7C,QAAS,IAAI,CAACjuB,SAAS;UAEtB,KAAK16H,0BAA0B;YAE9B,KAAM,IAAIksB,CAAC,GAAG,CAAC,EAAEvnB,CAAC,GAAG4jJ,YAAY,CAAC/0J,MAAM,EAAE04B,CAAC,KAAKvnB,CAAC,EAAE,EAAGunB,CAAC,EAAG;cAEzDq8H,YAAY,CAAEr8H,CAAC,CAAE,CAACiuG,QAAQ,CAAEkyB,QAAQ,CAAE;cACtCE,cAAc,CAAErgI,CAAC,CAAE,CAACy0H,kBAAkB,CAAEviF,MAAM,CAAE;YAEjD;YAEA;UAED,KAAKr+D,wBAAwB;UAC7B;YAEC,KAAM,IAAImsB,IAAC,GAAG,CAAC,EAAEvnB,GAAC,GAAG4jJ,YAAY,CAAC/0J,MAAM,EAAE04B,IAAC,KAAKvnB,GAAC,EAAE,EAAGunB,IAAC,EAAG;cAEzDq8H,YAAY,CAAEr8H,IAAC,CAAE,CAACiuG,QAAQ,CAAEkyB,QAAQ,CAAE;cACtCE,cAAc,CAAErgI,IAAC,CAAE,CAACq0H,UAAU,CAAEC,SAAS,EAAEpiF,MAAM,CAAE;YAEpD;QAAC;MAIJ;IAED;EAAC;IAAA1wE,GAAA;IAAAE,KAAA,EAED,SAAAs+J,cAAe7tG,IAAI,EAAG;MAErB,IAAI+f,MAAM,GAAG,CAAC;MAEd,IAAK,IAAI,CAAC/lB,OAAO,EAAG;QAEnB+lB,MAAM,GAAG,IAAI,CAACA,MAAM;QACpB,IAAM87D,WAAW,GAAG,IAAI,CAAC6uB,kBAAkB;QAE3C,IAAK7uB,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAMsyB,gBAAgB,GAAGtyB,WAAW,CAACC,QAAQ,CAAE97E,IAAI,CAAE,CAAE,CAAC,CAAE;UAE1D+f,MAAM,IAAIouF,gBAAgB;UAE1B,IAAKnuG,IAAI,GAAG67E,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;YAEjD,IAAI,CAAC8uB,UAAU,EAAE;YAEjB,IAAK6C,gBAAgB,KAAK,CAAC,EAAG;cAE7B;cACA,IAAI,CAACn0G,OAAO,GAAG,KAAK;YAErB;UAED;QAED;MAED;MAEA,IAAI,CAAC8wG,gBAAgB,GAAG/qF,MAAM;MAC9B,OAAOA,MAAM;IAEd;EAAC;IAAA1wE,GAAA;IAAAE,KAAA,EAED,SAAAw+J,iBAAkB/tG,IAAI,EAAG;MAExB,IAAIugF,SAAS,GAAG,CAAC;MAEjB,IAAK,CAAE,IAAI,CAACyqB,MAAM,EAAG;QAEpBzqB,SAAS,GAAG,IAAI,CAACA,SAAS;QAE1B,IAAM1E,WAAW,GAAG,IAAI,CAAC4uB,qBAAqB;QAE9C,IAAK5uB,WAAW,KAAK,IAAI,EAAG;UAE3B,IAAMsyB,gBAAgB,GAAGtyB,WAAW,CAACC,QAAQ,CAAE97E,IAAI,CAAE,CAAE,CAAC,CAAE;UAE1DugF,SAAS,IAAI4tB,gBAAgB;UAE7B,IAAKnuG,IAAI,GAAG67E,WAAW,CAACW,kBAAkB,CAAE,CAAC,CAAE,EAAG;YAEjD,IAAI,CAAC+uB,WAAW,EAAE;YAElB,IAAKhrB,SAAS,KAAK,CAAC,EAAG;cAEtB;cACA,IAAI,CAACyqB,MAAM,GAAG,IAAI;YAEnB,CAAC,MAAM;cAEN;cACA,IAAI,CAACzqB,SAAS,GAAGA,SAAS;YAE3B;UAED;QAED;MAED;MAEA,IAAI,CAACsqB,mBAAmB,GAAGtqB,SAAS;MACpC,OAAOA,SAAS;IAEjB;EAAC;IAAAlxI,GAAA;IAAAE,KAAA,EAED,SAAA0+J,YAAaN,SAAS,EAAG;MAExB,IAAM3qB,QAAQ,GAAG,IAAI,CAAC+mB,KAAK,CAAC/mB,QAAQ;MACpC,IAAM6Y,IAAI,GAAG,IAAI,CAACA,IAAI;MAEtB,IAAI77F,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG2tG,SAAS;MAChC,IAAIS,SAAS,GAAG,IAAI,CAACzD,UAAU;MAE/B,IAAM0D,QAAQ,GAAKxS,IAAI,KAAK16I,YAAc;MAE1C,IAAKwsJ,SAAS,KAAK,CAAC,EAAG;QAEtB,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG,OAAOpuG,IAAI;QAEpC,OAASquG,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,GAAKprB,QAAQ,GAAGhjF,IAAI,GAAGA,IAAI;MAExE;MAEA,IAAK67F,IAAI,KAAK56I,QAAQ,EAAG;QAExB,IAAKmtJ,SAAS,KAAK,CAAE,CAAC,EAAG;UAExB;;UAEA,IAAI,CAACzD,UAAU,GAAG,CAAC;UACnB,IAAI,CAAC2D,WAAW,CAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAE;QAEtC;QAEAC,WAAW,EAAE;UAEZ,IAAKvuG,IAAI,IAAIgjF,QAAQ,EAAG;YAEvBhjF,IAAI,GAAGgjF,QAAQ;UAEhB,CAAC,MAAM,IAAKhjF,IAAI,GAAG,CAAC,EAAG;YAEtBA,IAAI,GAAG,CAAC;UAET,CAAC,MAAM;YAEN,IAAI,CAACA,IAAI,GAAGA,IAAI;YAEhB,MAAMuuG,WAAW;UAElB;UAEA,IAAK,IAAI,CAACtD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAAChxG,OAAO,GAAG,KAAK;UAEzB,IAAI,CAACgG,IAAI,GAAGA,IAAI;UAEhB,IAAI,CAAC8pG,MAAM,CAAC/kJ,aAAa,CAAE;YAC1B3T,IAAI,EAAE,UAAU;YAAE47J,MAAM,EAAE,IAAI;YAC9B19H,SAAS,EAAEq+H,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC,GAAG;UAClC,CAAC,CAAE;QAEJ;MAED,CAAC,MAAM;QAAE;;QAER,IAAKS,SAAS,KAAK,CAAE,CAAC,EAAG;UAExB;;UAEA,IAAKT,SAAS,IAAI,CAAC,EAAG;YAErBS,SAAS,GAAG,CAAC;YAEb,IAAI,CAACE,WAAW,CAAE,IAAI,EAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAEsD,QAAQ,CAAE;UAE3D,CAAC,MAAM;YAEN;YACA;YACA;;YAEA,IAAI,CAACC,WAAW,CAAE,IAAI,CAACvD,WAAW,KAAK,CAAC,EAAE,IAAI,EAAEsD,QAAQ,CAAE;UAE3D;QAED;QAEA,IAAKruG,IAAI,IAAIgjF,QAAQ,IAAIhjF,IAAI,GAAG,CAAC,EAAG;UAEnC;;UAEA,IAAMwuG,SAAS,GAAGlpJ,IAAI,CAACsC,KAAK,CAAEo4C,IAAI,GAAGgjF,QAAQ,CAAE,CAAC,CAAC;UACjDhjF,IAAI,IAAIgjF,QAAQ,GAAGwrB,SAAS;UAE5BJ,SAAS,IAAI9oJ,IAAI,CAACgC,GAAG,CAAEknJ,SAAS,CAAE;UAElC,IAAMC,OAAO,GAAG,IAAI,CAAC1D,WAAW,GAAGqD,SAAS;UAE5C,IAAKK,OAAO,IAAI,CAAC,EAAG;YAEnB;;YAEA,IAAK,IAAI,CAACxD,iBAAiB,EAAG,IAAI,CAACD,MAAM,GAAG,IAAI,CAAC,KAC5C,IAAI,CAAChxG,OAAO,GAAG,KAAK;YAEzBgG,IAAI,GAAG2tG,SAAS,GAAG,CAAC,GAAG3qB,QAAQ,GAAG,CAAC;YAEnC,IAAI,CAAChjF,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAAC8pG,MAAM,CAAC/kJ,aAAa,CAAE;cAC1B3T,IAAI,EAAE,UAAU;cAAE47J,MAAM,EAAE,IAAI;cAC9B19H,SAAS,EAAEq+H,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE;YAClC,CAAC,CAAE;UAEJ,CAAC,MAAM;YAEN;;YAEA,IAAKc,OAAO,KAAK,CAAC,EAAG;cAEpB;;cAEA,IAAMC,OAAO,GAAGf,SAAS,GAAG,CAAC;cAC7B,IAAI,CAACW,WAAW,CAAEI,OAAO,EAAE,CAAEA,OAAO,EAAEL,QAAQ,CAAE;YAEjD,CAAC,MAAM;cAEN,IAAI,CAACC,WAAW,CAAE,KAAK,EAAE,KAAK,EAAED,QAAQ,CAAE;YAE3C;YAEA,IAAI,CAAC1D,UAAU,GAAGyD,SAAS;YAE3B,IAAI,CAACpuG,IAAI,GAAGA,IAAI;YAEhB,IAAI,CAAC8pG,MAAM,CAAC/kJ,aAAa,CAAE;cAC1B3T,IAAI,EAAE,MAAM;cAAE47J,MAAM,EAAE,IAAI;cAAEwB,SAAS,EAAEA;YACxC,CAAC,CAAE;UAEJ;QAED,CAAC,MAAM;UAEN,IAAI,CAACxuG,IAAI,GAAGA,IAAI;QAEjB;QAEA,IAAKquG,QAAQ,IAAI,CAAED,SAAS,GAAG,CAAC,MAAO,CAAC,EAAG;UAE1C;;UAEA,OAAOprB,QAAQ,GAAGhjF,IAAI;QAEvB;MAED;MAEA,OAAOA,IAAI;IAEZ;EAAC;IAAA3wD,GAAA;IAAAE,KAAA,EAED,SAAA++J,YAAaI,OAAO,EAAEC,KAAK,EAAEN,QAAQ,EAAG;MAEvC,IAAMzxB,QAAQ,GAAG,IAAI,CAACwtB,oBAAoB;MAE1C,IAAKiE,QAAQ,EAAG;QAEfzxB,QAAQ,CAACsB,WAAW,GAAG18H,eAAe;QACtCo7H,QAAQ,CAACuB,SAAS,GAAG38H,eAAe;MAErC,CAAC,MAAM;QAEN;;QAEA,IAAKktJ,OAAO,EAAG;UAEd9xB,QAAQ,CAACsB,WAAW,GAAG,IAAI,CAACgtB,gBAAgB,GAAG1pJ,eAAe,GAAGD,mBAAmB;QAErF,CAAC,MAAM;UAENq7H,QAAQ,CAACsB,WAAW,GAAGz8H,gBAAgB;QAExC;QAEA,IAAKktJ,KAAK,EAAG;UAEZ/xB,QAAQ,CAACuB,SAAS,GAAG,IAAI,CAACgtB,cAAc,GAAG3pJ,eAAe,GAAGD,mBAAmB;QAEjF,CAAC,MAAM;UAENq7H,QAAQ,CAACuB,SAAS,GAAK18H,gBAAgB;QAExC;MAED;IAED;EAAC;IAAApS,GAAA;IAAAE,KAAA,EAED,SAAAw8J,gBAAiB/oB,QAAQ,EAAE4rB,SAAS,EAAEC,UAAU,EAAG;MAElD,IAAMjF,KAAK,GAAG,IAAI,CAACE,MAAM;QAAE9Q,GAAG,GAAG4Q,KAAK,CAAC5pG,IAAI;MAC3C,IAAI67E,WAAW,GAAG,IAAI,CAAC6uB,kBAAkB;MAEzC,IAAK7uB,WAAW,KAAK,IAAI,EAAG;QAE3BA,WAAW,GAAG+tB,KAAK,CAACwD,uBAAuB,EAAE;QAC7C,IAAI,CAAC1C,kBAAkB,GAAG7uB,WAAW;MAEtC;MAEA,IAAMzC,KAAK,GAAGyC,WAAW,CAACW,kBAAkB;QAC3C3qI,MAAM,GAAGgqI,WAAW,CAACY,YAAY;MAElCrD,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG;MAChBnnJ,MAAM,CAAE,CAAC,CAAE,GAAG+8J,SAAS;MACvBx1B,KAAK,CAAE,CAAC,CAAE,GAAG4f,GAAG,GAAGhW,QAAQ;MAC3BnxI,MAAM,CAAE,CAAC,CAAE,GAAGg9J,UAAU;MAExB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAlF,eAAA;AAAA;AAIF,IAAMmF,gCAAgC,GAAG,IAAI5kJ,YAAY,CAAE,CAAC,CAAE;AAAC,IAGzD6kJ,cAAc,0BAAAC,iBAAA;EAAA70I,SAAA,CAAA40I,cAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAA50I,YAAA,CAAA00I,cAAA;EAEnB,SAAAA,eAAa3H,IAAI,EAAG;IAAA,IAAA8H,QAAA;IAAAv3J,eAAA,OAAAo3J,cAAA;IAEnBG,QAAA,GAAAD,SAAA,CAAA59J,IAAA;IAEA69J,QAAA,CAAKzB,KAAK,GAAGrG,IAAI;IACjB8H,QAAA,CAAKC,kBAAkB,EAAE;IACzBD,QAAA,CAAKE,UAAU,GAAG,CAAC;IACnBF,QAAA,CAAKlvG,IAAI,GAAG,CAAC;IACbkvG,QAAA,CAAK3uB,SAAS,GAAG,GAAG;IAAC,OAAA2uB,QAAA;EAEtB;EAAC/2J,YAAA,CAAA42J,cAAA;IAAA1/J,GAAA;IAAAE,KAAA,EAED,SAAA8/J,YAAarC,MAAM,EAAEsC,eAAe,EAAG;MAEtC,IAAMlI,IAAI,GAAG4F,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK;QAC3CvzB,MAAM,GAAG8yB,MAAM,CAACjD,KAAK,CAAC7vB,MAAM;QAC5B+vB,OAAO,GAAG/vB,MAAM,CAAC/kI,MAAM;QACvBivJ,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;QACnCJ,YAAY,GAAG8C,MAAM,CAAC3C,aAAa;QACnCkF,QAAQ,GAAGnI,IAAI,CAACrhJ,IAAI;QACpBypJ,cAAc,GAAG,IAAI,CAACC,sBAAsB;MAE7C,IAAIC,cAAc,GAAGF,cAAc,CAAED,QAAQ,CAAE;MAE/C,IAAKG,cAAc,KAAK77J,SAAS,EAAG;QAEnC67J,cAAc,GAAG,CAAC,CAAC;QACnBF,cAAc,CAAED,QAAQ,CAAE,GAAGG,cAAc;MAE5C;MAEA,KAAM,IAAIt6J,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAK60J,OAAO,EAAE,EAAG70J,CAAC,EAAG;QAEtC,IAAM+kI,KAAK,GAAGD,MAAM,CAAE9kI,CAAC,CAAE;UACxBgvI,SAAS,GAAGjK,KAAK,CAACzkI,IAAI;QAEvB,IAAIkrJ,OAAO,GAAG8O,cAAc,CAAEtrB,SAAS,CAAE;QAEzC,IAAKwc,OAAO,KAAK/sJ,SAAS,EAAG;UAE5B,EAAG+sJ,OAAO,CAACqB,cAAc;UACzBmC,QAAQ,CAAEhvJ,CAAC,CAAE,GAAGwrJ,OAAO;QAExB,CAAC,MAAM;UAENA,OAAO,GAAGwD,QAAQ,CAAEhvJ,CAAC,CAAE;UAEvB,IAAKwrJ,OAAO,KAAK/sJ,SAAS,EAAG;YAE5B;;YAEA,IAAK+sJ,OAAO,CAAC2J,WAAW,KAAK,IAAI,EAAG;cAEnC,EAAG3J,OAAO,CAACqB,cAAc;cACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAEnrB,SAAS,CAAE;YAEzD;YAEA;UAED;UAEA,IAAM35D,IAAI,GAAG6kF,eAAe,IAAIA,eAAe,CAC9ChF,iBAAiB,CAAEl1J,CAAC,CAAE,CAACwrJ,OAAO,CAACgD,UAAU;UAE1ChD,OAAO,GAAG,IAAID,aAAa,CAC1BkD,eAAe,CAAChzJ,MAAM,CAAEu2J,IAAI,EAAEhjB,SAAS,EAAE35D,IAAI,CAAE,EAC/C0vD,KAAK,CAACc,aAAa,EAAEd,KAAK,CAACE,YAAY,EAAE,CAAE;UAE5C,EAAGumB,OAAO,CAACqB,cAAc;UACzB,IAAI,CAAC0N,mBAAmB,CAAE/O,OAAO,EAAE2O,QAAQ,EAAEnrB,SAAS,CAAE;UAExDggB,QAAQ,CAAEhvJ,CAAC,CAAE,GAAGwrJ,OAAO;QAExB;QAEAsJ,YAAY,CAAE90J,CAAC,CAAE,CAAC2mI,YAAY,GAAG6kB,OAAO,CAACntI,MAAM;MAEhD;IAED;EAAC;IAAApkB,GAAA;IAAAE,KAAA,EAED,SAAA67J,gBAAiB4B,MAAM,EAAG;MAEzB,IAAK,CAAE,IAAI,CAACvB,eAAe,CAAEuB,MAAM,CAAE,EAAG;QAEvC,IAAKA,MAAM,CAACzC,WAAW,KAAK,IAAI,EAAG;UAElC;UACA;;UAEA,IAAMgF,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAG1nJ,IAAI;YACxD6pJ,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAAChkJ,IAAI;YAC5B8pJ,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;UAEjD,IAAI,CAACP,WAAW,CAAErC,MAAM,EACvB6C,cAAc,IAAIA,cAAc,CAACE,YAAY,CAAE,CAAC,CAAE,CAAE;UAErD,IAAI,CAACC,kBAAkB,CAAEhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAQ,CAAE;QAEtD;QAEA,IAAMnL,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;QAEzC;QACA,KAAM,IAAIl1J,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG+9I,QAAQ,CAACjvJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;UAErD,IAAMwrJ,OAAO,GAAGwD,QAAQ,CAAEhvJ,CAAC,CAAE;UAE7B,IAAKwrJ,OAAO,CAACoB,QAAQ,EAAG,KAAK,CAAC,EAAG;YAEhC,IAAI,CAACiO,YAAY,CAAErP,OAAO,CAAE;YAC5BA,OAAO,CAAC6B,iBAAiB,EAAE;UAE5B;QAED;QAEA,IAAI,CAACyN,WAAW,CAAElD,MAAM,CAAE;MAE3B;IAED;EAAC;IAAA39J,GAAA;IAAAE,KAAA,EAED,SAAA87J,kBAAmB2B,MAAM,EAAG;MAE3B,IAAK,IAAI,CAACvB,eAAe,CAAEuB,MAAM,CAAE,EAAG;QAErC,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;;QAEzC;QACA,KAAM,IAAIl1J,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG+9I,QAAQ,CAACjvJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;UAErD,IAAMwrJ,OAAO,GAAGwD,QAAQ,CAAEhvJ,CAAC,CAAE;UAE7B,IAAK,EAAGwrJ,OAAO,CAACoB,QAAQ,KAAK,CAAC,EAAG;YAEhCpB,OAAO,CAAC+B,oBAAoB,EAAE;YAC9B,IAAI,CAACwN,gBAAgB,CAAEvP,OAAO,CAAE;UAEjC;QAED;QAEA,IAAI,CAACwP,eAAe,CAAEpD,MAAM,CAAE;MAE/B;IAED;;IAEA;EAAA;IAAA39J,GAAA;IAAAE,KAAA,EAEA,SAAA4/J,mBAAA,EAAqB;MAEpB,IAAI,CAACkB,QAAQ,GAAG,EAAE,CAAC,CAAC;MACpB,IAAI,CAACC,eAAe,GAAG,CAAC;MAExB,IAAI,CAACR,cAAc,GAAG,CAAC,CAAC;MACxB;MACA;MACA;MACA;MACA;;MAGA,IAAI,CAAC9L,SAAS,GAAG,EAAE,CAAC,CAAC;MACrB,IAAI,CAACuM,gBAAgB,GAAG,CAAC;MAEzB,IAAI,CAACd,sBAAsB,GAAG,CAAC,CAAC,CAAC,CAAC;;MAGlC,IAAI,CAACe,oBAAoB,GAAG,EAAE,CAAC,CAAC;MAChC,IAAI,CAACC,2BAA2B,GAAG,CAAC;MAEpC,IAAMx7G,KAAK,GAAG,IAAI;MAElB,IAAI,CAACkzG,KAAK,GAAG;QAEZuI,OAAO,EAAE;UACR,IAAIznB,KAAKA,CAAA,EAAG;YAEX,OAAOh0F,KAAK,CAACo7G,QAAQ,CAACl7J,MAAM;UAE7B,CAAC;UACD,IAAIizJ,KAAKA,CAAA,EAAG;YAEX,OAAOnzG,KAAK,CAACq7G,eAAe;UAE7B;QACD,CAAC;QACDlM,QAAQ,EAAE;UACT,IAAInb,KAAKA,CAAA,EAAG;YAEX,OAAOh0F,KAAK,CAAC+uG,SAAS,CAAC7uJ,MAAM;UAE9B,CAAC;UACD,IAAIizJ,KAAKA,CAAA,EAAG;YAEX,OAAOnzG,KAAK,CAACs7G,gBAAgB;UAE9B;QACD,CAAC;QACDI,mBAAmB,EAAE;UACpB,IAAI1nB,KAAKA,CAAA,EAAG;YAEX,OAAOh0F,KAAK,CAACu7G,oBAAoB,CAACr7J,MAAM;UAEzC,CAAC;UACD,IAAIizJ,KAAKA,CAAA,EAAG;YAEX,OAAOnzG,KAAK,CAACw7G,2BAA2B;UAEzC;QACD;MAED,CAAC;IAEF;;IAEA;EAAA;IAAAphK,GAAA;IAAAE,KAAA,EAEA,SAAAk8J,gBAAiBuB,MAAM,EAAG;MAEzB,IAAMnoJ,KAAK,GAAGmoJ,MAAM,CAACzC,WAAW;MAChC,OAAO1lJ,KAAK,KAAK,IAAI,IAAIA,KAAK,GAAG,IAAI,CAACyrJ,eAAe;IAEtD;EAAC;IAAAjhK,GAAA;IAAAE,KAAA,EAED,SAAAygK,mBAAoBhD,MAAM,EAAE4C,QAAQ,EAAEL,QAAQ,EAAG;MAEhD,IAAMmB,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BO,aAAa,GAAG,IAAI,CAACd,cAAc;MAEpC,IAAID,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;MAE9C,IAAKC,cAAc,KAAKh8J,SAAS,EAAG;QAEnCg8J,cAAc,GAAG;UAEhBE,YAAY,EAAE,CAAE/C,MAAM,CAAE;UACxB6D,YAAY,EAAE,CAAC;QAEhB,CAAC;QAED7D,MAAM,CAACxC,iBAAiB,GAAG,CAAC;QAE5BoG,aAAa,CAAEhB,QAAQ,CAAE,GAAGC,cAAc;MAE3C,CAAC,MAAM;QAEN,IAAME,YAAY,GAAGF,cAAc,CAACE,YAAY;QAEhD/C,MAAM,CAACxC,iBAAiB,GAAGuF,YAAY,CAAC56J,MAAM;QAC9C46J,YAAY,CAACn7J,IAAI,CAAEo4J,MAAM,CAAE;MAE5B;MAEAA,MAAM,CAACzC,WAAW,GAAGmG,OAAO,CAACv7J,MAAM;MACnCu7J,OAAO,CAAC97J,IAAI,CAAEo4J,MAAM,CAAE;MAEtB6C,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,GAAGvC,MAAM;IAEjD;EAAC;IAAA39J,GAAA;IAAAE,KAAA,EAED,SAAAuhK,sBAAuB9D,MAAM,EAAG;MAE/B,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BU,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAACv7J,MAAM,GAAG,CAAC,CAAE;QAClD67J,UAAU,GAAGhE,MAAM,CAACzC,WAAW;MAEhCwG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;MAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;MAC1CL,OAAO,CAACp6J,GAAG,EAAE;MAEb02J,MAAM,CAACzC,WAAW,GAAG,IAAI;MAGzB,IAAMqF,QAAQ,GAAG5C,MAAM,CAACjD,KAAK,CAAChkJ,IAAI;QACjC6qJ,aAAa,GAAG,IAAI,CAACd,cAAc;QACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;QAC1CqB,mBAAmB,GAAGpB,cAAc,CAACE,YAAY;QAEjDmB,eAAe,GACdD,mBAAmB,CAAEA,mBAAmB,CAAC97J,MAAM,GAAG,CAAC,CAAE;QAEtDg8J,gBAAgB,GAAGnE,MAAM,CAACxC,iBAAiB;MAE5C0G,eAAe,CAAC1G,iBAAiB,GAAG2G,gBAAgB;MACpDF,mBAAmB,CAAEE,gBAAgB,CAAE,GAAGD,eAAe;MACzDD,mBAAmB,CAAC36J,GAAG,EAAE;MAEzB02J,MAAM,CAACxC,iBAAiB,GAAG,IAAI;MAG/B,IAAMqG,YAAY,GAAGhB,cAAc,CAACgB,YAAY;QAC/CtB,QAAQ,GAAG,CAAEvC,MAAM,CAAChD,UAAU,IAAI,IAAI,CAACyD,KAAK,EAAG1nJ,IAAI;MAEpD,OAAO8qJ,YAAY,CAAEtB,QAAQ,CAAE;MAE/B,IAAK0B,mBAAmB,CAAC97J,MAAM,KAAK,CAAC,EAAG;QAEvC,OAAOy7J,aAAa,CAAEhB,QAAQ,CAAE;MAEjC;MAEA,IAAI,CAACwB,gCAAgC,CAAEpE,MAAM,CAAE;IAEhD;EAAC;IAAA39J,GAAA;IAAAE,KAAA,EAED,SAAA6hK,iCAAkCpE,MAAM,EAAG;MAE1C,IAAM5I,QAAQ,GAAG4I,MAAM,CAAC1C,iBAAiB;MAEzC,KAAM,IAAIl1J,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAG+9I,QAAQ,CAACjvJ,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;QAErD,IAAMwrJ,OAAO,GAAGwD,QAAQ,CAAEhvJ,CAAC,CAAE;QAE7B,IAAK,EAAGwrJ,OAAO,CAACqB,cAAc,KAAK,CAAC,EAAG;UAEtC,IAAI,CAACoP,sBAAsB,CAAEzQ,OAAO,CAAE;QAEvC;MAED;IAED;EAAC;IAAAvxJ,GAAA;IAAAE,KAAA,EAED,SAAA2gK,YAAalD,MAAM,EAAG;MAErB;MACA;MACA;MACA;MACA;;MAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;QAE9BgH,eAAe,GAAG,IAAI,CAACjB,eAAe,EAAG;QAEzCkB,mBAAmB,GAAGd,OAAO,CAAEa,eAAe,CAAE;MAEjDvE,MAAM,CAACzC,WAAW,GAAGgH,eAAe;MACpCb,OAAO,CAAEa,eAAe,CAAE,GAAGvE,MAAM;MAEnCwE,mBAAmB,CAACjH,WAAW,GAAG+G,SAAS;MAC3CZ,OAAO,CAAEY,SAAS,CAAE,GAAGE,mBAAmB;IAE3C;EAAC;IAAAniK,GAAA;IAAAE,KAAA,EAED,SAAA6gK,gBAAiBpD,MAAM,EAAG;MAEzB;MACA;MACA;MACA;MACA;;MAEA,IAAM0D,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BiB,SAAS,GAAGtE,MAAM,CAACzC,WAAW;QAE9BkH,kBAAkB,GAAG,EAAG,IAAI,CAACnB,eAAe;QAE5CoB,gBAAgB,GAAGhB,OAAO,CAAEe,kBAAkB,CAAE;MAEjDzE,MAAM,CAACzC,WAAW,GAAGkH,kBAAkB;MACvCf,OAAO,CAAEe,kBAAkB,CAAE,GAAGzE,MAAM;MAEtC0E,gBAAgB,CAACnH,WAAW,GAAG+G,SAAS;MACxCZ,OAAO,CAAEY,SAAS,CAAE,GAAGI,gBAAgB;IAExC;;IAEA;EAAA;IAAAriK,GAAA;IAAAE,KAAA,EAEA,SAAAogK,oBAAqB/O,OAAO,EAAE2O,QAAQ,EAAEnrB,SAAS,EAAG;MAEnD,IAAMorB,cAAc,GAAG,IAAI,CAACC,sBAAsB;QACjDrL,QAAQ,GAAG,IAAI,CAACJ,SAAS;MAE1B,IAAI2N,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;MAE9C,IAAKoC,aAAa,KAAK99J,SAAS,EAAG;QAElC89J,aAAa,GAAG,CAAC,CAAC;QAClBnC,cAAc,CAAED,QAAQ,CAAE,GAAGoC,aAAa;MAE3C;MAEAA,aAAa,CAAEvtB,SAAS,CAAE,GAAGwc,OAAO;MAEpCA,OAAO,CAAC2J,WAAW,GAAGnG,QAAQ,CAACjvJ,MAAM;MACrCivJ,QAAQ,CAACxvJ,IAAI,CAAEgsJ,OAAO,CAAE;IAEzB;EAAC;IAAAvxJ,GAAA;IAAAE,KAAA,EAED,SAAA8hK,uBAAwBzQ,OAAO,EAAG;MAEjC,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9B4N,WAAW,GAAGhR,OAAO,CAACA,OAAO;QAC7B2O,QAAQ,GAAGqC,WAAW,CAACtN,QAAQ,CAACv+I,IAAI;QACpCq+H,SAAS,GAAGwtB,WAAW,CAACnnF,IAAI;QAC5B+kF,cAAc,GAAG,IAAI,CAACC,sBAAsB;QAC5CkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;QAE1CsC,mBAAmB,GAAGzN,QAAQ,CAAEA,QAAQ,CAACjvJ,MAAM,GAAG,CAAC,CAAE;QACrD67J,UAAU,GAAGpQ,OAAO,CAAC2J,WAAW;MAEjCsH,mBAAmB,CAACtH,WAAW,GAAGyG,UAAU;MAC5C5M,QAAQ,CAAE4M,UAAU,CAAE,GAAGa,mBAAmB;MAC5CzN,QAAQ,CAAC9tJ,GAAG,EAAE;MAEd,OAAOq7J,aAAa,CAAEvtB,SAAS,CAAE;MAEjC,IAAKr1I,MAAM,CAACmH,IAAI,CAAEy7J,aAAa,CAAE,CAACx8J,MAAM,KAAK,CAAC,EAAG;QAEhD,OAAOq6J,cAAc,CAAED,QAAQ,CAAE;MAElC;IAED;EAAC;IAAAlgK,GAAA;IAAAE,KAAA,EAED,SAAA0gK,aAAcrP,OAAO,EAAG;MAEvB,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;QAE/BgH,eAAe,GAAG,IAAI,CAAChB,gBAAgB,EAAG;QAE1CuB,oBAAoB,GAAG1N,QAAQ,CAAEmN,eAAe,CAAE;MAEnD3Q,OAAO,CAAC2J,WAAW,GAAGgH,eAAe;MACrCnN,QAAQ,CAAEmN,eAAe,CAAE,GAAG3Q,OAAO;MAErCkR,oBAAoB,CAACvH,WAAW,GAAG+G,SAAS;MAC5ClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGQ,oBAAoB;IAE7C;EAAC;IAAAziK,GAAA;IAAAE,KAAA,EAED,SAAA4gK,iBAAkBvP,OAAO,EAAG;MAE3B,IAAMwD,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9BsN,SAAS,GAAG1Q,OAAO,CAAC2J,WAAW;QAE/BkH,kBAAkB,GAAG,EAAG,IAAI,CAAClB,gBAAgB;QAE7CwB,iBAAiB,GAAG3N,QAAQ,CAAEqN,kBAAkB,CAAE;MAEnD7Q,OAAO,CAAC2J,WAAW,GAAGkH,kBAAkB;MACxCrN,QAAQ,CAAEqN,kBAAkB,CAAE,GAAG7Q,OAAO;MAExCmR,iBAAiB,CAACxH,WAAW,GAAG+G,SAAS;MACzClN,QAAQ,CAAEkN,SAAS,CAAE,GAAGS,iBAAiB;IAE1C;;IAGA;EAAA;IAAA1iK,GAAA;IAAAE,KAAA,EAEA,SAAA69J,wBAAA,EAA0B;MAEzB,IAAMlD,YAAY,GAAG,IAAI,CAACsG,oBAAoB;QAC7Ce,eAAe,GAAG,IAAI,CAACd,2BAA2B,EAAG;MAEtD,IAAI50B,WAAW,GAAGquB,YAAY,CAAEqH,eAAe,CAAE;MAEjD,IAAK11B,WAAW,KAAKhoI,SAAS,EAAG;QAEhCgoI,WAAW,GAAG,IAAIoD,iBAAiB,CAClC,IAAI/0H,YAAY,CAAE,CAAC,CAAE,EAAE,IAAIA,YAAY,CAAE,CAAC,CAAE,EAC5C,CAAC,EAAE4kJ,gCAAgC,CAAE;QAEtCjzB,WAAW,CAACm2B,YAAY,GAAGT,eAAe;QAC1CrH,YAAY,CAAEqH,eAAe,CAAE,GAAG11B,WAAW;MAE9C;MAEA,OAAOA,WAAW;IAEnB;EAAC;IAAAxsI,GAAA;IAAAE,KAAA,EAED,SAAAo9J,4BAA6B9wB,WAAW,EAAG;MAE1C,IAAMquB,YAAY,GAAG,IAAI,CAACsG,oBAAoB;QAC7Cc,SAAS,GAAGz1B,WAAW,CAACm2B,YAAY;QAEpCP,kBAAkB,GAAG,EAAG,IAAI,CAAChB,2BAA2B;QAExDwB,qBAAqB,GAAG/H,YAAY,CAAEuH,kBAAkB,CAAE;MAE3D51B,WAAW,CAACm2B,YAAY,GAAGP,kBAAkB;MAC7CvH,YAAY,CAAEuH,kBAAkB,CAAE,GAAG51B,WAAW;MAEhDo2B,qBAAqB,CAACD,YAAY,GAAGV,SAAS;MAC9CpH,YAAY,CAAEoH,SAAS,CAAE,GAAGW,qBAAqB;IAElD;;IAEA;IACA;IACA;EAAA;IAAA5iK,GAAA;IAAAE,KAAA,EACA,SAAA2iK,WAAYj4B,IAAI,EAAEk4B,YAAY,EAAE91B,SAAS,EAAG;MAE3C,IAAM+qB,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;QACtC8B,QAAQ,GAAGnI,IAAI,CAACrhJ,IAAI;MAErB,IAAIqsJ,UAAU,GAAG,OAAOn4B,IAAI,KAAK,QAAQ,GAAG8I,aAAa,CAACU,UAAU,CAAE2jB,IAAI,EAAEntB,IAAI,CAAE,GAAGA,IAAI;MAEzF,IAAM21B,QAAQ,GAAGwC,UAAU,KAAK,IAAI,GAAGA,UAAU,CAACrsJ,IAAI,GAAGk0H,IAAI;MAE7D,IAAM41B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;MACtD,IAAIN,eAAe,GAAG,IAAI;MAE1B,IAAKjzB,SAAS,KAAKxoI,SAAS,EAAG;QAE9B,IAAKu+J,UAAU,KAAK,IAAI,EAAG;UAE1B/1B,SAAS,GAAG+1B,UAAU,CAAC/1B,SAAS;QAEjC,CAAC,MAAM;UAENA,SAAS,GAAG36H,wBAAwB;QAErC;MAED;MAEA,IAAKmuJ,cAAc,KAAKh8J,SAAS,EAAG;QAEnC,IAAMw+J,cAAc,GAAGxC,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE;QAE9D,IAAK8C,cAAc,KAAKx+J,SAAS,IAAIw+J,cAAc,CAACh2B,SAAS,KAAKA,SAAS,EAAG;UAE7E,OAAOg2B,cAAc;QAEtB;;QAEA;QACA;QACA/C,eAAe,GAAGO,cAAc,CAACE,YAAY,CAAE,CAAC,CAAE;;QAElD;QACA,IAAKqC,UAAU,KAAK,IAAI,EACvBA,UAAU,GAAG9C,eAAe,CAACvF,KAAK;MAEpC;;MAEA;MACA,IAAKqI,UAAU,KAAK,IAAI,EAAG,OAAO,IAAI;;MAEtC;MACA,IAAME,SAAS,GAAG,IAAI3I,eAAe,CAAE,IAAI,EAAEyI,UAAU,EAAED,YAAY,EAAE91B,SAAS,CAAE;MAElF,IAAI,CAACgzB,WAAW,CAAEiD,SAAS,EAAEhD,eAAe,CAAE;;MAE9C;MACA,IAAI,CAACU,kBAAkB,CAAEsC,SAAS,EAAE1C,QAAQ,EAAEL,QAAQ,CAAE;MAExD,OAAO+C,SAAS;IAEjB;;IAEA;EAAA;IAAAjjK,GAAA;IAAAE,KAAA,EACA,SAAA8iK,eAAgBp4B,IAAI,EAAEk4B,YAAY,EAAG;MAEpC,IAAM/K,IAAI,GAAG+K,YAAY,IAAI,IAAI,CAAC1E,KAAK;QACtC8B,QAAQ,GAAGnI,IAAI,CAACrhJ,IAAI;QAEpBqsJ,UAAU,GAAG,OAAOn4B,IAAI,KAAK,QAAQ,GACpC8I,aAAa,CAACU,UAAU,CAAE2jB,IAAI,EAAEntB,IAAI,CAAE,GAAGA,IAAI;QAE9C21B,QAAQ,GAAGwC,UAAU,GAAGA,UAAU,CAACrsJ,IAAI,GAAGk0H,IAAI;QAE9C41B,cAAc,GAAG,IAAI,CAACC,cAAc,CAAEF,QAAQ,CAAE;MAEjD,IAAKC,cAAc,KAAKh8J,SAAS,EAAG;QAEnC,OAAOg8J,cAAc,CAACgB,YAAY,CAAEtB,QAAQ,CAAE,IAAI,IAAI;MAEvD;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAlgK,GAAA;IAAAE,KAAA,EACA,SAAAgjK,cAAA,EAAgB;MAEf,IAAM7B,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;MAEhC,KAAM,IAAIl7J,CAAC,GAAGo9J,QAAQ,GAAG,CAAC,EAAEp9J,CAAC,IAAI,CAAC,EAAE,EAAGA,CAAC,EAAG;QAE1Cs7J,OAAO,CAAEt7J,CAAC,CAAE,CAACuB,IAAI,EAAE;MAEpB;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAAtH,GAAA;IAAAE,KAAA,EACA,SAAAwyB,OAAQ4rI,SAAS,EAAG;MAEnBA,SAAS,IAAI,IAAI,CAACptB,SAAS;MAE3B,IAAMmwB,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BmC,QAAQ,GAAG,IAAI,CAAClC,eAAe;QAE/BtwG,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI2tG,SAAS;QAC7BC,aAAa,GAAGtoJ,IAAI,CAACwsB,IAAI,CAAE67H,SAAS,CAAE;QAEtCxL,SAAS,GAAG,IAAI,CAACiN,UAAU,IAAI,CAAC;;MAEjC;;MAEA,KAAM,IAAIh6J,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKo9J,QAAQ,EAAE,EAAGp9J,CAAC,EAAG;QAEvC,IAAM43J,MAAM,GAAG0D,OAAO,CAAEt7J,CAAC,CAAE;QAE3B43J,MAAM,CAACU,OAAO,CAAE1tG,IAAI,EAAE2tG,SAAS,EAAEC,aAAa,EAAEzL,SAAS,CAAE;MAE5D;;MAEA;;MAEA,IAAMiC,QAAQ,GAAG,IAAI,CAACJ,SAAS;QAC9ByE,SAAS,GAAG,IAAI,CAAC8H,gBAAgB;MAElC,KAAM,IAAIn7J,IAAC,GAAG,CAAC,EAAEA,IAAC,KAAKqzJ,SAAS,EAAE,EAAGrzJ,IAAC,EAAG;QAExCgvJ,QAAQ,CAAEhvJ,IAAC,CAAE,CAAC4xF,KAAK,CAAEm7D,SAAS,CAAE;MAEjC;MAEA,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAA9yJ,GAAA;IAAAE,KAAA,EACA,SAAAkjK,QAASC,aAAa,EAAG;MAExB,IAAI,CAAC1yG,IAAI,GAAG,CAAC,CAAC,CAAC;MACf,KAAM,IAAI5qD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACi7J,QAAQ,CAACl7J,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEjD,IAAI,CAACi7J,QAAQ,CAAEj7J,CAAC,CAAE,CAAC4qD,IAAI,GAAG,CAAC,CAAC,CAAC;MAE9B;;MAEA,OAAO,IAAI,CAACj+B,MAAM,CAAE2wI,aAAa,CAAE,CAAC,CAAC;IAEtC;;IAEA;EAAA;IAAArjK,GAAA;IAAAE,KAAA,EACA,SAAAi+J,QAAA,EAAU;MAET,OAAO,IAAI,CAACC,KAAK;IAElB;;IAEA;EAAA;IAAAp+J,GAAA;IAAAE,KAAA,EACA,SAAAojK,YAAa14B,IAAI,EAAG;MAEnB,IAAMy2B,OAAO,GAAG,IAAI,CAACL,QAAQ;QAC5BT,QAAQ,GAAG31B,IAAI,CAACl0H,IAAI;QACpB6qJ,aAAa,GAAG,IAAI,CAACd,cAAc;QACnCD,cAAc,GAAGe,aAAa,CAAEhB,QAAQ,CAAE;MAE3C,IAAKC,cAAc,KAAKh8J,SAAS,EAAG;QAEnC;QACA;QACA;;QAEA,IAAM++J,eAAe,GAAG/C,cAAc,CAACE,YAAY;QAEnD,KAAM,IAAI36J,CAAC,GAAG,CAAC,EAAEiR,CAAC,GAAGusJ,eAAe,CAACz9J,MAAM,EAAEC,CAAC,KAAKiR,CAAC,EAAE,EAAGjR,CAAC,EAAG;UAE5D,IAAM43J,MAAM,GAAG4F,eAAe,CAAEx9J,CAAC,CAAE;UAEnC,IAAI,CAACi2J,iBAAiB,CAAE2B,MAAM,CAAE;UAEhC,IAAMgE,UAAU,GAAGhE,MAAM,CAACzC,WAAW;YACpCwG,kBAAkB,GAAGL,OAAO,CAAEA,OAAO,CAACv7J,MAAM,GAAG,CAAC,CAAE;UAEnD63J,MAAM,CAACzC,WAAW,GAAG,IAAI;UACzByC,MAAM,CAACxC,iBAAiB,GAAG,IAAI;UAE/BuG,kBAAkB,CAACxG,WAAW,GAAGyG,UAAU;UAC3CN,OAAO,CAAEM,UAAU,CAAE,GAAGD,kBAAkB;UAC1CL,OAAO,CAACp6J,GAAG,EAAE;UAEb,IAAI,CAAC86J,gCAAgC,CAAEpE,MAAM,CAAE;QAEhD;QAEA,OAAO4D,aAAa,CAAEhB,QAAQ,CAAE;MAEjC;IAED;;IAEA;EAAA;IAAAvgK,GAAA;IAAAE,KAAA,EACA,SAAAsjK,YAAazL,IAAI,EAAG;MAEnB,IAAMmI,QAAQ,GAAGnI,IAAI,CAACrhJ,IAAI;QACzB6qJ,aAAa,GAAG,IAAI,CAACd,cAAc;MAEpC,KAAM,IAAMF,QAAQ,IAAIgB,aAAa,EAAG;QAEvC,IAAMC,YAAY,GAAGD,aAAa,CAAEhB,QAAQ,CAAE,CAACiB,YAAY;UAC1D7D,MAAM,GAAG6D,YAAY,CAAEtB,QAAQ,CAAE;QAElC,IAAKvC,MAAM,KAAKn5J,SAAS,EAAG;UAE3B,IAAI,CAACw3J,iBAAiB,CAAE2B,MAAM,CAAE;UAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAM,CAAE;QAErC;MAED;MAEA,IAAMwC,cAAc,GAAG,IAAI,CAACC,sBAAsB;QACjDkC,aAAa,GAAGnC,cAAc,CAAED,QAAQ,CAAE;MAE3C,IAAKoC,aAAa,KAAK99J,SAAS,EAAG;QAElC,KAAM,IAAMuwI,SAAS,IAAIutB,aAAa,EAAG;UAExC,IAAM/Q,OAAO,GAAG+Q,aAAa,CAAEvtB,SAAS,CAAE;UAC1Cwc,OAAO,CAAC+B,oBAAoB,EAAE;UAC9B,IAAI,CAAC0O,sBAAsB,CAAEzQ,OAAO,CAAE;QAEvC;MAED;IAED;;IAEA;EAAA;IAAAvxJ,GAAA;IAAAE,KAAA,EACA,SAAAujK,cAAe74B,IAAI,EAAEk4B,YAAY,EAAG;MAEnC,IAAMnF,MAAM,GAAG,IAAI,CAACqF,cAAc,CAAEp4B,IAAI,EAAEk4B,YAAY,CAAE;MAExD,IAAKnF,MAAM,KAAK,IAAI,EAAG;QAEtB,IAAI,CAAC3B,iBAAiB,CAAE2B,MAAM,CAAE;QAChC,IAAI,CAAC8D,qBAAqB,CAAE9D,MAAM,CAAE;MAErC;IAED;EAAC;EAAA,OAAA+B,cAAA;AAAA,EAjvB2B3qJ,eAAe;AAAAvV,OAAA,CAAAkgK,cAAA,GAAAA,cAAA;AAAA,IAqvBtCgE,OAAO;EAEZ,SAAAA,QAAaxjK,KAAK,EAAG;IAAAoI,eAAA,OAAAo7J,OAAA;IAEpB,IAAK,OAAOxjK,KAAK,KAAK,QAAQ,EAAG;MAEhCwa,OAAO,CAACC,IAAI,CAAE,oDAAoD,CAAE;MACpEza,KAAK,GAAGysC,SAAS,CAAE,CAAC,CAAE;IAEvB;IAEA,IAAI,CAACzsC,KAAK,GAAGA,KAAK;EAEnB;EAAC4I,YAAA,CAAA46J,OAAA;IAAA1jK,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAIynJ,OAAO,CAAE,IAAI,CAACxjK,KAAK,CAAC+b,KAAK,KAAKzX,SAAS,GAAG,IAAI,CAACtE,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC+b,KAAK,EAAE,CAAE;IAEvF;EAAC;EAAA,OAAAynJ,OAAA;AAAA;AAAAlkK,OAAA,CAAAkkK,OAAA,GAAAA,OAAA;AAIF,IAAIz2H,EAAE,GAAG,CAAC;AAAC,IAEL02H,aAAa,0BAAAC,iBAAA;EAAA94I,SAAA,CAAA64I,aAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAA74I,YAAA,CAAA24I,aAAA;EAElB,SAAAA,cAAA,EAAc;IAAA,IAAAG,QAAA;IAAAx7J,eAAA,OAAAq7J,aAAA;IAEbG,QAAA,GAAAD,SAAA,CAAA7hK,IAAA;IAEA8hK,QAAA,CAAKC,eAAe,GAAG,IAAI;IAE3BrkK,MAAM,CAACI,cAAc,CAAA+rB,sBAAA,CAAAi4I,QAAA,GAAQ,IAAI,EAAE;MAAE5jK,KAAK,EAAE+sC,EAAE;IAAI,CAAC,CAAE;IAErD62H,QAAA,CAAKz9J,IAAI,GAAG,EAAE;IAEdy9J,QAAA,CAAKtpH,KAAK,GAAGrmC,eAAe;IAC5B2vJ,QAAA,CAAK38G,QAAQ,GAAG,EAAE;IAAC,OAAA28G,QAAA;EAEpB;EAACh7J,YAAA,CAAA66J,aAAA;IAAA3jK,GAAA;IAAAE,KAAA,EAED,SAAAkc,IAAKysC,OAAO,EAAG;MAEd,IAAI,CAAC1B,QAAQ,CAAC5hD,IAAI,CAAEsjD,OAAO,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;IAAA7oD,GAAA;IAAAE,KAAA,EAED,SAAA0sC,OAAQic,OAAO,EAAG;MAEjB,IAAMrzC,KAAK,GAAG,IAAI,CAAC2xC,QAAQ,CAAC/xC,OAAO,CAAEyzC,OAAO,CAAE;MAE9C,IAAKrzC,KAAK,KAAK,CAAE,CAAC,EAAG,IAAI,CAAC2xC,QAAQ,CAAC1xC,MAAM,CAAED,KAAK,EAAE,CAAC,CAAE;MAErD,OAAO,IAAI;IAEZ;EAAC;IAAAxV,GAAA;IAAAE,KAAA,EAED,SAAA8jK,QAAS39J,IAAI,EAAG;MAEf,IAAI,CAACA,IAAI,GAAGA,IAAI;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAArG,GAAA;IAAAE,KAAA,EAED,SAAAy6C,SAAUz6C,KAAK,EAAG;MAEjB,IAAI,CAACs6C,KAAK,GAAGt6C,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAAF,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACvX,aAAa,CAAE;QAAE3T,IAAI,EAAE;MAAU,CAAC,CAAE;MAEzC,OAAO,IAAI;IAEZ;EAAC;IAAA/B,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEd,IAAI,CAACxf,IAAI,GAAGwf,MAAM,CAACxf,IAAI;MACvB,IAAI,CAACm0C,KAAK,GAAG30B,MAAM,CAAC20B,KAAK;MAEzB,IAAMypH,cAAc,GAAGp+I,MAAM,CAACshC,QAAQ;MAEtC,IAAI,CAACA,QAAQ,CAACrhD,MAAM,GAAG,CAAC;MAExB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGouJ,cAAc,CAACn+J,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEzD,IAAI,CAACohD,QAAQ,CAAC5hD,IAAI,CAAE0+J,cAAc,CAAEl+J,CAAC,CAAE,CAACkW,KAAK,EAAE,CAAE;MAElD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAjc,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAAynJ,aAAA;AAAA,EAlF0B5uJ,eAAe;AAAAvV,OAAA,CAAAmkK,aAAA,GAAAA,aAAA;AAAA,IAsFrCO,0BAA0B,0BAAAC,kBAAA;EAAAr5I,SAAA,CAAAo5I,0BAAA,EAAAC,kBAAA;EAAA,IAAAC,SAAA,GAAAp5I,YAAA,CAAAk5I,0BAAA;EAE/B,SAAAA,2BAAatuJ,KAAK,EAAE6sC,MAAM,EAAE2jB,gBAAgB,GAAG,CAAC,EAAG;IAAA,IAAAi+F,QAAA;IAAA/7J,eAAA,OAAA47J,0BAAA;IAElDG,QAAA,GAAAD,SAAA,CAAApiK,IAAA,OAAO4T,KAAK,EAAE6sC,MAAM;IAEpB4hH,QAAA,CAAKz9F,4BAA4B,GAAG,IAAI;IAExCy9F,QAAA,CAAKj+F,gBAAgB,GAAGA,gBAAgB;IAAC,OAAAi+F,QAAA;EAE1C;EAACv7J,YAAA,CAAAo7J,0BAAA;IAAAlkK,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAgqH,0BAAA,CAAAvkK,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM;MAElB,IAAI,CAACugD,gBAAgB,GAAGvgD,MAAM,CAACugD,gBAAgB;MAE/C,OAAO,IAAI;IAEZ;EAAC;IAAApmE,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAO4N,IAAI,EAAG;MAEb,IAAM4xF,EAAE,GAAAxhE,IAAA,CAAAC,eAAA,CAAAgqH,0BAAA,CAAAvkK,SAAA,kBAAAqC,IAAA,OAAgB6nB,IAAI,CAAE;MAE9B4xF,EAAE,CAACr1C,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE3C,OAAOq1C,EAAE;IAEV;EAAC;IAAAz7G,GAAA;IAAAE,KAAA,EAED,SAAAooB,OAAQuB,IAAI,EAAG;MAEd,IAAMo2F,IAAI,GAAAhmE,IAAA,CAAAC,eAAA,CAAAgqH,0BAAA,CAAAvkK,SAAA,mBAAAqC,IAAA,OAAiB6nB,IAAI,CAAE;MAEjCo2F,IAAI,CAACr5C,4BAA4B,GAAG,IAAI;MACxCq5C,IAAI,CAAC75C,gBAAgB,GAAG,IAAI,CAACA,gBAAgB;MAE7C,OAAO65C,IAAI;IAEZ;EAAC;EAAA,OAAAikD,0BAAA;AAAA,EAzCuC7oD,iBAAiB;AAAA77G,OAAA,CAAA0kK,0BAAA,GAAAA,0BAAA;AAAA,IA6CpDI,iBAAiB;EAEtB,SAAAA,kBAAalgJ,MAAM,EAAEriB,IAAI,EAAEu4C,QAAQ,EAAE6X,WAAW,EAAExgC,KAAK,EAAG;IAAArpB,eAAA,OAAAg8J,iBAAA;IAEzD,IAAI,CAAC7kH,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAACr7B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACriB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACu4C,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC6X,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACxgC,KAAK,GAAGA,KAAK;IAElB,IAAI,CAAC3H,OAAO,GAAG,CAAC;EAEjB;EAAClhB,YAAA,CAAAw7J,iBAAA;IAAAtkK,GAAA;IAAAya,GAAA,EAED,SAAAA,IAAiBva,KAAK,EAAG;MAExB,IAAKA,KAAK,KAAK,IAAI,EAAG,IAAI,CAAC8pB,OAAO,EAAG;IAEtC;EAAC;IAAAhqB,GAAA;IAAAE,KAAA,EAED,SAAA0tJ,UAAWxpI,MAAM,EAAG;MAEnB,IAAI,CAACA,MAAM,GAAGA,MAAM;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAApkB,GAAA;IAAAE,KAAA,EAED,SAAAqkK,QAASxiK,IAAI,EAAEowD,WAAW,EAAG;MAE5B,IAAI,CAACpwD,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACowD,WAAW,GAAGA,WAAW;MAE9B,OAAO,IAAI;IAEZ;EAAC;IAAAnyD,GAAA;IAAAE,KAAA,EAED,SAAAskK,YAAalqH,QAAQ,EAAG;MAEvB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAAt6C,GAAA;IAAAE,KAAA,EAED,SAAAukK,SAAU9yI,KAAK,EAAG;MAEjB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA2yI,iBAAA;AAAA;AAAA9kK,OAAA,CAAA8kK,iBAAA,GAAAA,iBAAA;AAAA,IAIII,SAAS;EAEd,SAAAA,UAAa1kI,MAAM,EAAEC,SAAS,EAAE2H,IAAI,GAAG,CAAC,EAAEC,GAAG,GAAGzN,QAAQ,EAAG;IAAA9xB,eAAA,OAAAo8J,SAAA;IAE1D,IAAI,CAACxkI,GAAG,GAAG,IAAIH,GAAG,CAAEC,MAAM,EAAEC,SAAS,CAAE;IACvC;;IAEA,IAAI,CAAC2H,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAAC9P,MAAM,GAAG,IAAI;IAClB,IAAI,CAACqR,MAAM,GAAG,IAAIR,MAAM,EAAE;IAE1B,IAAI,CAAC2lC,MAAM,GAAG;MACbvqB,IAAI,EAAE,CAAC,CAAC;MACR+9D,IAAI,EAAE;QAAE/b,SAAS,EAAE;MAAE,CAAC;MACtBwX,GAAG,EAAE,CAAC,CAAC;MACPqG,MAAM,EAAE;QAAE7d,SAAS,EAAE;MAAE,CAAC;MACxB8W,MAAM,EAAE,CAAC;IACV,CAAC;EAEF;EAACh0G,YAAA,CAAA47J,SAAA;IAAA1kK,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKulB,MAAM,EAAEC,SAAS,EAAG;MAExB;;MAEA,IAAI,CAACC,GAAG,CAACzlB,GAAG,CAAEulB,MAAM,EAAEC,SAAS,CAAE;IAElC;EAAC;IAAAjgC,GAAA;IAAAE,KAAA,EAED,SAAAykK,cAAeC,MAAM,EAAE7sI,MAAM,EAAG;MAE/B,IAAKA,MAAM,CAACyxB,mBAAmB,EAAG;QAEjC,IAAI,CAACtpB,GAAG,CAACF,MAAM,CAACpG,qBAAqB,CAAE7B,MAAM,CAACK,WAAW,CAAE;QAC3D,IAAI,CAAC8H,GAAG,CAACD,SAAS,CAACxlB,GAAG,CAAEmqJ,MAAM,CAACztJ,CAAC,EAAEytJ,MAAM,CAACntJ,CAAC,EAAE,GAAG,CAAE,CAACygB,SAAS,CAAEH,MAAM,CAAE,CAACvb,GAAG,CAAE,IAAI,CAAC0jB,GAAG,CAACF,MAAM,CAAE,CAAC9kB,SAAS,EAAE;QACxG,IAAI,CAAC6c,MAAM,GAAGA,MAAM;MAErB,CAAC,MAAM,IAAKA,MAAM,CAACyzC,oBAAoB,EAAG;QAEzC,IAAI,CAACtrC,GAAG,CAACF,MAAM,CAACvlB,GAAG,CAAEmqJ,MAAM,CAACztJ,CAAC,EAAEytJ,MAAM,CAACntJ,CAAC,EAAE,CAAEsgB,MAAM,CAAC6P,IAAI,GAAG7P,MAAM,CAAC8P,GAAG,KAAO9P,MAAM,CAAC6P,IAAI,GAAG7P,MAAM,CAAC8P,GAAG,CAAE,CAAE,CAAC3P,SAAS,CAAEH,MAAM,CAAE,CAAC,CAAC;QAC5H,IAAI,CAACmI,GAAG,CAACD,SAAS,CAACxlB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC4d,kBAAkB,CAAEN,MAAM,CAACK,WAAW,CAAE;QAC5E,IAAI,CAACL,MAAM,GAAGA,MAAM;MAErB,CAAC,MAAM;QAENrd,OAAO,CAACjX,KAAK,CAAE,4CAA4C,GAAGs0B,MAAM,CAACh2B,IAAI,CAAE;MAE5E;IAED;EAAC;IAAA/B,GAAA;IAAAE,KAAA,EAED,SAAA2kK,gBAAiB99J,MAAM,EAAE8oC,SAAS,GAAG,IAAI,EAAE4U,UAAU,GAAG,EAAE,EAAG;MAE5DogH,gBAAe,CAAE99J,MAAM,EAAE,IAAI,EAAE09C,UAAU,EAAE5U,SAAS,CAAE;MAEtD4U,UAAU,CAACswB,IAAI,CAAE+vF,OAAO,CAAE;MAE1B,OAAOrgH,UAAU;IAElB;EAAC;IAAAzkD,GAAA;IAAAE,KAAA,EAED,SAAA6kK,iBAAkB5iG,OAAO,EAAEtyB,SAAS,GAAG,IAAI,EAAE4U,UAAU,GAAG,EAAE,EAAG;MAE9D,KAAM,IAAI1+C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGssD,OAAO,CAACr8D,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAElD8+J,gBAAe,CAAE1iG,OAAO,CAAEp8D,CAAC,CAAE,EAAE,IAAI,EAAE0+C,UAAU,EAAE5U,SAAS,CAAE;MAE7D;MAEA4U,UAAU,CAACswB,IAAI,CAAE+vF,OAAO,CAAE;MAE1B,OAAOrgH,UAAU;IAElB;EAAC;EAAA,OAAAigH,SAAA;AAAA;AAAAllK,OAAA,CAAAklK,SAAA,GAAAA,SAAA;AAIF,SAASI,OAAOA,CAAEnrJ,CAAC,EAAEC,CAAC,EAAG;EAExB,OAAOD,CAAC,CAACwyB,QAAQ,GAAGvyB,CAAC,CAACuyB,QAAQ;AAE/B;AAEA,SAAS04H,gBAAeA,CAAE99J,MAAM,EAAEy9C,SAAS,EAAEC,UAAU,EAAE5U,SAAS,EAAG;EAEpE,IAAK9oC,MAAM,CAACqiC,MAAM,CAACvgB,IAAI,CAAE27B,SAAS,CAACpb,MAAM,CAAE,EAAG;IAE7CriC,MAAM,CAAC0mC,OAAO,CAAE+W,SAAS,EAAEC,UAAU,CAAE;EAExC;EAEA,IAAK5U,SAAS,KAAK,IAAI,EAAG;IAEzB,IAAMrT,QAAQ,GAAGz1B,MAAM,CAACy1B,QAAQ;IAEhC,KAAM,IAAIz2B,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG2mB,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEnD8+J,gBAAe,CAAEroI,QAAQ,CAAEz2B,CAAC,CAAE,EAAEy+C,SAAS,EAAEC,UAAU,EAAE,IAAI,CAAE;IAE9D;EAED;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,IAOMugH,SAAS;EAEd,SAAAA,UAAazrI,MAAM,GAAG,CAAC,EAAEC,GAAG,GAAG,CAAC,EAAE9V,KAAK,GAAG,CAAC,EAAG;IAAApb,eAAA,OAAA08J,SAAA;IAE7C,IAAI,CAACzrI,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,GAAG,GAAGA,GAAG,CAAC,CAAC;IAChB,IAAI,CAAC9V,KAAK,GAAGA,KAAK,CAAC,CAAC;;IAEpB,OAAO,IAAI;EAEZ;EAAC5a,YAAA,CAAAk8J,SAAA;IAAAhlK,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK8e,MAAM,EAAEC,GAAG,EAAE9V,KAAK,EAAG;MAEzB,IAAI,CAAC6V,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACC,GAAG,GAAGA,GAAG;MACd,IAAI,CAAC9V,KAAK,GAAGA,KAAK;MAElB,OAAO,IAAI;IAEZ;EAAC;IAAA1jB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM+oJ,KAAK,EAAG;MAEb,IAAI,CAAC1rI,MAAM,GAAG0rI,KAAK,CAAC1rI,MAAM;MAC1B,IAAI,CAACC,GAAG,GAAGyrI,KAAK,CAACzrI,GAAG;MACpB,IAAI,CAAC9V,KAAK,GAAGuhJ,KAAK,CAACvhJ,KAAK;MAExB,OAAO,IAAI;IAEZ;;IAEA;EAAA;IAAA1jB,GAAA;IAAAE,KAAA,EACA,SAAAglK,SAAA,EAAW;MAEV,IAAMC,GAAG,GAAG,QAAQ;MACpB,IAAI,CAAC3rI,GAAG,GAAGvjB,IAAI,CAACa,GAAG,CAAEquJ,GAAG,EAAElvJ,IAAI,CAACY,GAAG,CAAEZ,IAAI,CAACC,EAAE,GAAGivJ,GAAG,EAAE,IAAI,CAAC3rI,GAAG,CAAE,CAAE;MAE/D,OAAO,IAAI;IAEZ;EAAC;IAAAx5B,GAAA;IAAAE,KAAA,EAED,SAAAooC,eAAgBnsB,CAAC,EAAG;MAEnB,OAAO,IAAI,CAACipJ,sBAAsB,CAAEjpJ,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAACmR,CAAC,CAAE;IAEpD;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAklK,uBAAwBjuJ,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEjC,IAAI,CAACiM,MAAM,GAAGtjB,IAAI,CAAC0H,IAAI,CAAExG,CAAC,GAAGA,CAAC,GAAGM,CAAC,GAAGA,CAAC,GAAG6V,CAAC,GAAGA,CAAC,CAAE;MAEhD,IAAK,IAAI,CAACiM,MAAM,KAAK,CAAC,EAAG;QAExB,IAAI,CAAC7V,KAAK,GAAG,CAAC;QACd,IAAI,CAAC8V,GAAG,GAAG,CAAC;MAEb,CAAC,MAAM;QAEN,IAAI,CAAC9V,KAAK,GAAGzN,IAAI,CAAC6H,KAAK,CAAE3G,CAAC,EAAEmW,CAAC,CAAE;QAC/B,IAAI,CAACkM,GAAG,GAAGvjB,IAAI,CAAC4X,IAAI,CAAEjX,KAAK,CAAEa,CAAC,GAAG,IAAI,CAAC8hB,MAAM,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MAEzD;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAAv5B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAA8oJ,SAAA;AAAA;AAIF;AACA;AACA;AAFAxlK,OAAA,CAAAwlK,SAAA,GAAAA,SAAA;AAAA,IAIMK,WAAW;EAEhB,SAAAA,YAAa9rI,MAAM,GAAG,CAAC,EAAE7V,KAAK,GAAG,CAAC,EAAEjM,CAAC,GAAG,CAAC,EAAG;IAAAnP,eAAA,OAAA+8J,WAAA;IAE3C,IAAI,CAAC9rI,MAAM,GAAGA,MAAM,CAAC,CAAC;IACtB,IAAI,CAAC7V,KAAK,GAAGA,KAAK,CAAC,CAAC;IACpB,IAAI,CAACjM,CAAC,GAAGA,CAAC,CAAC,CAAC;;IAEZ,OAAO,IAAI;EAEZ;EAAC3O,YAAA,CAAAu8J,WAAA;IAAArlK,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK8e,MAAM,EAAE7V,KAAK,EAAEjM,CAAC,EAAG;MAEvB,IAAI,CAAC8hB,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC7V,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACjM,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM+oJ,KAAK,EAAG;MAEb,IAAI,CAAC1rI,MAAM,GAAG0rI,KAAK,CAAC1rI,MAAM;MAC1B,IAAI,CAAC7V,KAAK,GAAGuhJ,KAAK,CAACvhJ,KAAK;MACxB,IAAI,CAACjM,CAAC,GAAGwtJ,KAAK,CAACxtJ,CAAC;MAEhB,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAooC,eAAgBnsB,CAAC,EAAG;MAEnB,OAAO,IAAI,CAACipJ,sBAAsB,CAAEjpJ,CAAC,CAAChF,CAAC,EAAEgF,CAAC,CAAC1E,CAAC,EAAE0E,CAAC,CAACmR,CAAC,CAAE;IAEpD;EAAC;IAAAttB,GAAA;IAAAE,KAAA,EAED,SAAAklK,uBAAwBjuJ,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;MAEjC,IAAI,CAACiM,MAAM,GAAGtjB,IAAI,CAAC0H,IAAI,CAAExG,CAAC,GAAGA,CAAC,GAAGmW,CAAC,GAAGA,CAAC,CAAE;MACxC,IAAI,CAAC5J,KAAK,GAAGzN,IAAI,CAAC6H,KAAK,CAAE3G,CAAC,EAAEmW,CAAC,CAAE;MAC/B,IAAI,CAAC7V,CAAC,GAAGA,CAAC;MAEV,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAAmpJ,WAAA;AAAA;AAAA7lK,OAAA,CAAA6lK,WAAA,GAAAA,WAAA;AAIF,IAAMC,SAAS,GAAG,aAAc,IAAI/pJ,OAAO,EAAE;AAAC,IAExCgqJ,IAAI;EAET,SAAAA,KAAa1uJ,GAAG,GAAG,IAAI0E,OAAO,CAAE,CAAE6e,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAEtjB,GAAG,GAAG,IAAIyE,OAAO,CAAE,CAAE6e,QAAQ,EAAE,CAAEA,QAAQ,CAAE,EAAG;IAAA9xB,eAAA,OAAAi9J,IAAA;IAEvG,IAAI,CAACC,MAAM,GAAG,IAAI;IAElB,IAAI,CAAC3uJ,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAEf;EAAChO,YAAA,CAAAy8J,IAAA;IAAAvlK,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAK5D,GAAG,EAAEC,GAAG,EAAG;MAEf,IAAI,CAACD,GAAG,CAACqF,IAAI,CAAErF,GAAG,CAAE;MACpB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAEpF,GAAG,CAAE;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAA46B,cAAeC,MAAM,EAAG;MAEvB,IAAI,CAACC,SAAS,EAAE;MAEhB,KAAM,IAAIj1B,CAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAGiJ,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG+rB,EAAE,EAAE/rB,CAAC,EAAG,EAAG;QAEnD,IAAI,CAACk1B,aAAa,CAAEF,MAAM,CAAEh1B,CAAC,CAAE,CAAE;MAElC;MAEA,OAAO,IAAI;IAEZ;EAAC;IAAA/F,GAAA;IAAAE,KAAA,EAED,SAAAg7B,qBAAsBhc,MAAM,EAAE2H,IAAI,EAAG;MAEpC,IAAMsU,QAAQ,GAAGmqI,SAAS,CAACppJ,IAAI,CAAE2K,IAAI,CAAE,CAACjK,cAAc,CAAE,GAAG,CAAE;MAC7D,IAAI,CAAC/F,GAAG,CAACqF,IAAI,CAAEgD,MAAM,CAAE,CAAC1C,GAAG,CAAE2e,QAAQ,CAAE;MACvC,IAAI,CAACrkB,GAAG,CAACoF,IAAI,CAAEgD,MAAM,CAAE,CAAC9C,GAAG,CAAE+e,QAAQ,CAAE;MAEvC,OAAO,IAAI;IAEZ;EAAC;IAAAn7B,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;IAAAlc,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMsf,GAAG,EAAG;MAEX,IAAI,CAAC3kB,GAAG,CAACqF,IAAI,CAAEsf,GAAG,CAAC3kB,GAAG,CAAE;MACxB,IAAI,CAACC,GAAG,CAACoF,IAAI,CAAEsf,GAAG,CAAC1kB,GAAG,CAAE;MAExB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAA86B,UAAA,EAAY;MAEX,IAAI,CAACnkB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACN,GAAG,CAACY,CAAC,GAAG,CAAE2iB,QAAQ;MACpC,IAAI,CAACtjB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,CAAE2iB,QAAQ;MAEpC,OAAO,IAAI;IAEZ;EAAC;IAAAp6B,GAAA;IAAAE,KAAA,EAED,SAAAu7B,QAAA,EAAU;MAET;;MAEA,OAAS,IAAI,CAAC3kB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAQ,IAAI,CAACL,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAG;IAElE;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAw7B,UAAWhzB,MAAM,EAAG;MAEnB,OAAO,IAAI,CAAC+yB,OAAO,EAAE,GAAG/yB,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG/R,MAAM,CAAC4T,UAAU,CAAE,IAAI,CAACzF,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE,CAAC8F,cAAc,CAAE,GAAG,CAAE;IAE3G;EAAC;IAAA5c,GAAA;IAAAE,KAAA,EAED,SAAAy7B,QAASjzB,MAAM,EAAG;MAEjB,OAAO,IAAI,CAAC+yB,OAAO,EAAE,GAAG/yB,MAAM,CAAC+R,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG/R,MAAM,CAACgU,UAAU,CAAE,IAAI,CAAC5F,GAAG,EAAE,IAAI,CAACD,GAAG,CAAE;IAErF;EAAC;IAAA7W,GAAA;IAAAE,KAAA,EAED,SAAA+6B,cAAeW,KAAK,EAAG;MAEtB,IAAI,CAAC/kB,GAAG,CAACA,GAAG,CAAE+kB,KAAK,CAAE;MACrB,IAAI,CAAC9kB,GAAG,CAACA,GAAG,CAAE8kB,KAAK,CAAE;MAErB,OAAO,IAAI;IAEZ;EAAC;IAAA57B,GAAA;IAAAE,KAAA,EAED,SAAA27B,eAAgBC,MAAM,EAAG;MAExB,IAAI,CAACjlB,GAAG,CAAC2F,GAAG,CAAEsf,MAAM,CAAE;MACtB,IAAI,CAAChlB,GAAG,CAACsF,GAAG,CAAE0f,MAAM,CAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA97B,GAAA;IAAAE,KAAA,EAED,SAAA67B,eAAgBngB,MAAM,EAAG;MAExB,IAAI,CAAC/E,GAAG,CAACwF,SAAS,CAAE,CAAET,MAAM,CAAE;MAC9B,IAAI,CAAC9E,GAAG,CAACuF,SAAS,CAAET,MAAM,CAAE;MAE5B,OAAO,IAAI;IAEZ;EAAC;IAAA5b,GAAA;IAAAE,KAAA,EAED,SAAAu8B,cAAeb,KAAK,EAAG;MAEtB,OAAOA,KAAK,CAACzkB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIykB,KAAK,CAACzkB,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IAClDykB,KAAK,CAACnkB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAImkB,KAAK,CAACnkB,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,KAAK,GAAG,IAAI;IAE7D;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAw8B,YAAalB,GAAG,EAAG;MAElB,OAAO,IAAI,CAAC3kB,GAAG,CAACM,CAAC,IAAIqkB,GAAG,CAAC3kB,GAAG,CAACM,CAAC,IAAIqkB,GAAG,CAAC1kB,GAAG,CAACK,CAAC,IAAI,IAAI,CAACL,GAAG,CAACK,CAAC,IACxD,IAAI,CAACN,GAAG,CAACY,CAAC,IAAI+jB,GAAG,CAAC3kB,GAAG,CAACY,CAAC,IAAI+jB,GAAG,CAAC1kB,GAAG,CAACW,CAAC,IAAI,IAAI,CAACX,GAAG,CAACW,CAAC;IAEpD;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAy8B,aAAcf,KAAK,EAAElzB,MAAM,EAAG;MAE7B;MACA;;MAEA,OAAOA,MAAM,CAAC+R,GAAG,CAChB,CAAEmhB,KAAK,CAACzkB,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,KAAO,IAAI,CAACL,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,CAAE,EACtD,CAAEykB,KAAK,CAACnkB,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,KAAO,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,CAAE,CACtD;IAEF;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA08B,cAAepB,GAAG,EAAG;MAEpB;;MAEA,OAAOA,GAAG,CAAC1kB,GAAG,CAACK,CAAC,GAAG,IAAI,CAACN,GAAG,CAACM,CAAC,IAAIqkB,GAAG,CAAC3kB,GAAG,CAACM,CAAC,GAAG,IAAI,CAACL,GAAG,CAACK,CAAC,IACtDqkB,GAAG,CAAC1kB,GAAG,CAACW,CAAC,GAAG,IAAI,CAACZ,GAAG,CAACY,CAAC,IAAI+jB,GAAG,CAAC3kB,GAAG,CAACY,CAAC,GAAG,IAAI,CAACX,GAAG,CAACW,CAAC,GAAG,KAAK,GAAG,IAAI;IAEjE;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA68B,WAAYnB,KAAK,EAAElzB,MAAM,EAAG;MAE3B,OAAOA,MAAM,CAACwT,IAAI,CAAE0f,KAAK,CAAE,CAAChlB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE;IAExD;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAA89B,gBAAiBpC,KAAK,EAAG;MAExB,IAAMqC,YAAY,GAAGqnI,SAAS,CAACppJ,IAAI,CAAE0f,KAAK,CAAE,CAAChlB,KAAK,CAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAE;MACxE,OAAOmnB,YAAY,CAACzhB,GAAG,CAAEof,KAAK,CAAE,CAAC91B,MAAM,EAAE;IAE1C;EAAC;IAAA9F,GAAA;IAAAE,KAAA,EAED,SAAAi+B,UAAW3C,GAAG,EAAG;MAEhB,IAAI,CAAC3kB,GAAG,CAACC,GAAG,CAAE0kB,GAAG,CAAC3kB,GAAG,CAAE;MACvB,IAAI,CAACC,GAAG,CAACD,GAAG,CAAE2kB,GAAG,CAAC1kB,GAAG,CAAE;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAAq8B,MAAOf,GAAG,EAAG;MAEZ,IAAI,CAAC3kB,GAAG,CAACA,GAAG,CAAE2kB,GAAG,CAAC3kB,GAAG,CAAE;MACvB,IAAI,CAACC,GAAG,CAACA,GAAG,CAAE0kB,GAAG,CAAC1kB,GAAG,CAAE;MAEvB,OAAO,IAAI;IAEZ;EAAC;IAAA9W,GAAA;IAAAE,KAAA,EAED,SAAAyjB,UAAWhF,MAAM,EAAG;MAEnB,IAAI,CAAC9H,GAAG,CAACuF,GAAG,CAAEuC,MAAM,CAAE;MACtB,IAAI,CAAC7H,GAAG,CAACsF,GAAG,CAAEuC,MAAM,CAAE;MAEtB,OAAO,IAAI;IAEZ;EAAC;IAAA3e,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQ+c,GAAG,EAAG;MAEb,OAAOA,GAAG,CAAC3kB,GAAG,CAAC4H,MAAM,CAAE,IAAI,CAAC5H,GAAG,CAAE,IAAI2kB,GAAG,CAAC1kB,GAAG,CAAC2H,MAAM,CAAE,IAAI,CAAC3H,GAAG,CAAE;IAEhE;EAAC;EAAA,OAAAyuJ,IAAA;AAAA;AAAA/lK,OAAA,CAAA+lK,IAAA,GAAAA,IAAA;AAIF,IAAME,OAAO,GAAG,aAAc,IAAI5uI,OAAO,EAAE;AAC3C,IAAM6uI,SAAS,GAAG,aAAc,IAAI7uI,OAAO,EAAE;AAAC,IAExC8uI,KAAK;EAEV,SAAAA,MAAahnH,KAAK,GAAG,IAAI9nB,OAAO,EAAE,EAAEguB,GAAG,GAAG,IAAIhuB,OAAO,EAAE,EAAG;IAAAvuB,eAAA,OAAAq9J,KAAA;IAEzD,IAAI,CAAChnH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACkG,GAAG,GAAGA,GAAG;EAEf;EAAC/7C,YAAA,CAAA68J,KAAA;IAAA3lK,GAAA;IAAAE,KAAA,EAED,SAAAua,IAAKkkC,KAAK,EAAEkG,GAAG,EAAG;MAEjB,IAAI,CAAClG,KAAK,CAACziC,IAAI,CAAEyiC,KAAK,CAAE;MACxB,IAAI,CAACkG,GAAG,CAAC3oC,IAAI,CAAE2oC,GAAG,CAAE;MAEpB,OAAO,IAAI;IAEZ;EAAC;IAAA7kD,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAMiyC,IAAI,EAAG;MAEZ,IAAI,CAACxP,KAAK,CAACziC,IAAI,CAAEiyC,IAAI,CAACxP,KAAK,CAAE;MAC7B,IAAI,CAACkG,GAAG,CAAC3oC,IAAI,CAAEiyC,IAAI,CAACtJ,GAAG,CAAE;MAEzB,OAAO,IAAI;IAEZ;EAAC;IAAA7kD,GAAA;IAAAE,KAAA,EAED,SAAAw7B,UAAWhzB,MAAM,EAAG;MAEnB,OAAOA,MAAM,CAAC4T,UAAU,CAAE,IAAI,CAACqiC,KAAK,EAAE,IAAI,CAACkG,GAAG,CAAE,CAACjoC,cAAc,CAAE,GAAG,CAAE;IAEvE;EAAC;IAAA5c,GAAA;IAAAE,KAAA,EAED,SAAAwnB,MAAOhf,MAAM,EAAG;MAEf,OAAOA,MAAM,CAACgU,UAAU,CAAE,IAAI,CAACmoC,GAAG,EAAE,IAAI,CAAClG,KAAK,CAAE;IAEjD;EAAC;IAAA3+C,GAAA;IAAAE,KAAA,EAED,SAAA0lK,WAAA,EAAa;MAEZ,OAAO,IAAI,CAACjnH,KAAK,CAAC3gC,iBAAiB,CAAE,IAAI,CAAC6mC,GAAG,CAAE;IAEhD;EAAC;IAAA7kD,GAAA;IAAAE,KAAA,EAED,SAAAisC,SAAA,EAAW;MAEV,OAAO,IAAI,CAACwS,KAAK,CAAC5gC,UAAU,CAAE,IAAI,CAAC8mC,GAAG,CAAE;IAEzC;EAAC;IAAA7kD,GAAA;IAAAE,KAAA,EAED,SAAAigC,GAAIxoB,CAAC,EAAEjP,MAAM,EAAG;MAEf,OAAO,IAAI,CAACgf,KAAK,CAAEhf,MAAM,CAAE,CAACkU,cAAc,CAAEjF,CAAC,CAAE,CAACyE,GAAG,CAAE,IAAI,CAACuiC,KAAK,CAAE;IAElE;EAAC;IAAA3+C,GAAA;IAAAE,KAAA,EAED,SAAA2lK,6BAA8BjqI,KAAK,EAAEkqI,WAAW,EAAG;MAElDL,OAAO,CAAC/oJ,UAAU,CAAEkf,KAAK,EAAE,IAAI,CAAC+iB,KAAK,CAAE;MACvC+mH,SAAS,CAAChpJ,UAAU,CAAE,IAAI,CAACmoC,GAAG,EAAE,IAAI,CAAClG,KAAK,CAAE;MAE5C,IAAMonH,SAAS,GAAGL,SAAS,CAACloJ,GAAG,CAAEkoJ,SAAS,CAAE;MAC5C,IAAMM,eAAe,GAAGN,SAAS,CAACloJ,GAAG,CAAEioJ,OAAO,CAAE;MAEhD,IAAI9tJ,CAAC,GAAGquJ,eAAe,GAAGD,SAAS;MAEnC,IAAKD,WAAW,EAAG;QAElBnuJ,CAAC,GAAGf,KAAK,CAAEe,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAErB;MAEA,OAAOA,CAAC;IAET;EAAC;IAAA3X,GAAA;IAAAE,KAAA,EAED,SAAAogC,oBAAqB1E,KAAK,EAAEkqI,WAAW,EAAEp9J,MAAM,EAAG;MAEjD,IAAMiP,CAAC,GAAG,IAAI,CAACkuJ,4BAA4B,CAAEjqI,KAAK,EAAEkqI,WAAW,CAAE;MAEjE,OAAO,IAAI,CAACp+I,KAAK,CAAEhf,MAAM,CAAE,CAACkU,cAAc,CAAEjF,CAAC,CAAE,CAACyE,GAAG,CAAE,IAAI,CAACuiC,KAAK,CAAE;IAElE;EAAC;IAAA3+C,GAAA;IAAAE,KAAA,EAED,SAAAytB,aAAc/J,MAAM,EAAG;MAEtB,IAAI,CAAC+6B,KAAK,CAAChxB,YAAY,CAAE/J,MAAM,CAAE;MACjC,IAAI,CAACihC,GAAG,CAACl3B,YAAY,CAAE/J,MAAM,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAA5jB,GAAA;IAAAE,KAAA,EAED,SAAAue,OAAQ0vC,IAAI,EAAG;MAEd,OAAOA,IAAI,CAACxP,KAAK,CAAClgC,MAAM,CAAE,IAAI,CAACkgC,KAAK,CAAE,IAAIwP,IAAI,CAACtJ,GAAG,CAACpmC,MAAM,CAAE,IAAI,CAAComC,GAAG,CAAE;IAEtE;EAAC;IAAA7kD,GAAA;IAAAE,KAAA,EAED,SAAA+b,MAAA,EAAQ;MAEP,OAAO,IAAI,IAAI,CAAC7V,WAAW,EAAE,CAAC8V,IAAI,CAAE,IAAI,CAAE;IAE3C;EAAC;EAAA,OAAAypJ,KAAA;AAAA;AAAAnmK,OAAA,CAAAmmK,KAAA,GAAAA,KAAA;AAIF,IAAMM,SAAS,GAAG,aAAc,IAAIpvI,OAAO,EAAE;AAAC,IAExCqvI,eAAe,0BAAAC,WAAA;EAAAr7I,SAAA,CAAAo7I,eAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAp7I,YAAA,CAAAk7I,eAAA;EAEpB,SAAAA,gBAAan8E,KAAK,EAAE9kE,KAAK,EAAG;IAAA,IAAAohJ,QAAA;IAAA/9J,eAAA,OAAA49J,eAAA;IAE3BG,QAAA,GAAAD,SAAA,CAAApkK,IAAA;IAEAqkK,QAAA,CAAKt8E,KAAK,GAAGA,KAAK;IAClBs8E,QAAA,CAAKt8E,KAAK,CAACl8C,iBAAiB,EAAE;IAE9Bw4H,QAAA,CAAKziJ,MAAM,GAAGmmE,KAAK,CAAC3xD,WAAW;IAC/BiuI,QAAA,CAAKp6I,gBAAgB,GAAG,KAAK;IAE7Bo6I,QAAA,CAAKphJ,KAAK,GAAGA,KAAK;IAElB,IAAMgX,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IAErC,IAAM6B,SAAS,GAAG,CACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CACnB;IAED,KAAM,IAAI/5C,CAAC,GAAG,CAAC,EAAEy4B,CAAC,GAAG,CAAC,EAAE3oB,CAAC,GAAG,EAAE,EAAE9P,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAEy4B,CAAC,EAAG,EAAG;MAEnD,IAAME,EAAE,GAAK34B,CAAC,GAAG8P,CAAC,GAAKI,IAAI,CAACC,EAAE,GAAG,CAAC;MAClC,IAAMyoB,EAAE,GAAKH,CAAC,GAAG3oB,CAAC,GAAKI,IAAI,CAACC,EAAE,GAAG,CAAC;MAElC4pC,SAAS,CAACv6C,IAAI,CACb0Q,IAAI,CAAC8D,GAAG,CAAE2kB,EAAE,CAAE,EAAEzoB,IAAI,CAAC+D,GAAG,CAAE0kB,EAAE,CAAE,EAAE,CAAC,EACjCzoB,IAAI,CAAC8D,GAAG,CAAE4kB,EAAE,CAAE,EAAE1oB,IAAI,CAAC+D,GAAG,CAAE2kB,EAAE,CAAE,EAAE,CAAC,CACjC;IAEF;IAEA1C,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAC,CAAE,CAAE;IAE/E,IAAMtQ,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAEvtC,GAAG,EAAE,KAAK;MAAEzE,UAAU,EAAE;IAAM,CAAC,CAAE;IAE3EqxH,QAAA,CAAKC,IAAI,GAAG,IAAIxjD,YAAY,CAAE7mF,QAAQ,EAAEuT,QAAQ,CAAE;IAClD62H,QAAA,CAAKjqJ,GAAG,CAAEiqJ,QAAA,CAAKC,IAAI,CAAE;IAErBD,QAAA,CAAK3zI,MAAM,EAAE;IAAC,OAAA2zI,QAAA;EAEf;EAACv9J,YAAA,CAAAo9J,eAAA;IAAAlmK,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACq5I,IAAI,CAACrqI,QAAQ,CAAChP,OAAO,EAAE;MAC5B,IAAI,CAACq5I,IAAI,CAAC92H,QAAQ,CAACviB,OAAO,EAAE;IAE7B;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER,IAAI,CAACq3D,KAAK,CAACl8C,iBAAiB,EAAE;MAE9B,IAAM04H,UAAU,GAAG,IAAI,CAACx8E,KAAK,CAAC59C,QAAQ,GAAG,IAAI,CAAC49C,KAAK,CAAC59C,QAAQ,GAAG,IAAI;MACnE,IAAMq6H,SAAS,GAAGD,UAAU,GAAGtwJ,IAAI,CAACo0C,GAAG,CAAE,IAAI,CAAC0/B,KAAK,CAAClsE,KAAK,CAAE;MAE3D,IAAI,CAACyoJ,IAAI,CAAC9iJ,KAAK,CAAC/I,GAAG,CAAE+rJ,SAAS,EAAEA,SAAS,EAAED,UAAU,CAAE;MAEvDN,SAAS,CAACrsI,qBAAqB,CAAE,IAAI,CAACmwD,KAAK,CAACrhF,MAAM,CAAC0vB,WAAW,CAAE;MAEhE,IAAI,CAACkuI,IAAI,CAAClmI,MAAM,CAAE6lI,SAAS,CAAE;MAE7B,IAAK,IAAI,CAAChhJ,KAAK,KAAKzgB,SAAS,EAAG;QAE/B,IAAI,CAAC8hK,IAAI,CAAC92H,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAE,IAAI,CAACwK,KAAK,CAAE;MAE3C,CAAC,MAAM;QAEN,IAAI,CAACqhJ,IAAI,CAAC92H,QAAQ,CAACvqB,KAAK,CAAC/I,IAAI,CAAE,IAAI,CAAC6tE,KAAK,CAAC9kE,KAAK,CAAE;MAElD;IAED;EAAC;EAAA,OAAAihJ,eAAA;AAAA,EA7E4B/7H,QAAQ;AAAA3qC,OAAA,CAAA0mK,eAAA,GAAAA,eAAA;AAiFtC,IAAMO,SAAS,GAAG,aAAc,IAAI5vI,OAAO,EAAE;AAC7C,IAAM6vI,WAAW,GAAG,aAAc,IAAI7jI,OAAO,EAAE;AAC/C,IAAM8jI,eAAe,GAAG,aAAc,IAAI9jI,OAAO,EAAE;AAAC,IAG9C+jI,cAAc,0BAAAC,aAAA;EAAA/7I,SAAA,CAAA87I,cAAA,EAAAC,aAAA;EAAA,IAAAC,SAAA,GAAA97I,YAAA,CAAA47I,cAAA;EAEnB,SAAAA,eAAa7/J,MAAM,EAAG;IAAA,IAAAggK,QAAA;IAAAz+J,eAAA,OAAAs+J,cAAA;IAErB,IAAM7nD,KAAK,GAAGioD,WAAW,CAAEjgK,MAAM,CAAE;IAEnC,IAAMk1B,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IAErC,IAAM4H,QAAQ,GAAG,EAAE;IACnB,IAAM5K,MAAM,GAAG,EAAE;IAEjB,IAAMjzB,MAAM,GAAG,IAAIlC,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACnC,IAAMmC,MAAM,GAAG,IAAInC,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAEnC,KAAM,IAAI/f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGg5G,KAAK,CAACj5G,MAAM,EAAEC,CAAC,EAAG,EAAG;MAEzC,IAAMg6G,IAAI,GAAGhB,KAAK,CAAEh5G,CAAC,CAAE;MAEvB,IAAKg6G,IAAI,CAACv1E,MAAM,IAAIu1E,IAAI,CAACv1E,MAAM,CAAC60E,MAAM,EAAG;QAExCx5D,QAAQ,CAACtgD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACxBsgD,QAAQ,CAACtgD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QACxB01C,MAAM,CAAC11C,IAAI,CAAEyiB,MAAM,CAACjF,CAAC,EAAEiF,MAAM,CAAC9F,CAAC,EAAE8F,MAAM,CAACpO,CAAC,CAAE;QAC3CqhC,MAAM,CAAC11C,IAAI,CAAE0iB,MAAM,CAAClF,CAAC,EAAEkF,MAAM,CAAC/F,CAAC,EAAE+F,MAAM,CAACrO,CAAC,CAAE;MAE5C;IAED;IAEAqiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC9E5pB,QAAQ,CAAC8iB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEnC,MAAM,EAAE,CAAC,CAAE,CAAE;IAEzE,IAAMzL,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAEh0C,YAAY,EAAE,IAAI;MAAEU,SAAS,EAAE,KAAK;MAAEC,UAAU,EAAE,KAAK;MAAEqB,UAAU,EAAE,KAAK;MAAE9B,WAAW,EAAE;IAAK,CAAC,CAAE;IAE3I6zH,QAAA,GAAAD,SAAA,CAAA9kK,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzBu3H,QAAA,CAAKE,gBAAgB,GAAG,IAAI;IAE5BF,QAAA,CAAKhlK,IAAI,GAAG,gBAAgB;IAE5BglK,QAAA,CAAKhP,IAAI,GAAGhxJ,MAAM;IAClBggK,QAAA,CAAKhoD,KAAK,GAAGA,KAAK;IAElBgoD,QAAA,CAAKnjJ,MAAM,GAAG7c,MAAM,CAACqxB,WAAW;IAChC2uI,QAAA,CAAK96I,gBAAgB,GAAG,KAAK;IAAC,OAAA86I,QAAA;EAE/B;EAACj+J,YAAA,CAAA89J,cAAA;IAAA5mK,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1B,IAAMixE,KAAK,GAAG,IAAI,CAACA,KAAK;MAExB,IAAM9iF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAME,QAAQ,GAAGF,QAAQ,CAAC6iB,YAAY,CAAE,UAAU,CAAE;MAEpD6nH,eAAe,CAACzqJ,IAAI,CAAE,IAAI,CAAC67I,IAAI,CAAC3/H,WAAW,CAAE,CAAChW,MAAM,EAAE;MAEtD,KAAM,IAAIrc,CAAC,GAAG,CAAC,EAAEy4B,CAAC,GAAG,CAAC,EAAEz4B,CAAC,GAAGg5G,KAAK,CAACj5G,MAAM,EAAEC,CAAC,EAAG,EAAG;QAEhD,IAAMg6G,IAAI,GAAGhB,KAAK,CAAEh5G,CAAC,CAAE;QAEvB,IAAKg6G,IAAI,CAACv1E,MAAM,IAAIu1E,IAAI,CAACv1E,MAAM,CAAC60E,MAAM,EAAG;UAExCqnD,WAAW,CAACjmJ,gBAAgB,CAAEkmJ,eAAe,EAAE5mD,IAAI,CAAC3nF,WAAW,CAAE;UACjEquI,SAAS,CAAC7sI,qBAAqB,CAAE8sI,WAAW,CAAE;UAC9CvqI,QAAQ,CAACof,MAAM,CAAE/c,CAAC,EAAEioI,SAAS,CAACtvJ,CAAC,EAAEsvJ,SAAS,CAAChvJ,CAAC,EAAEgvJ,SAAS,CAACn5I,CAAC,CAAE;UAE3Do5I,WAAW,CAACjmJ,gBAAgB,CAAEkmJ,eAAe,EAAE5mD,IAAI,CAACv1E,MAAM,CAACpS,WAAW,CAAE;UACxEquI,SAAS,CAAC7sI,qBAAqB,CAAE8sI,WAAW,CAAE;UAC9CvqI,QAAQ,CAACof,MAAM,CAAE/c,CAAC,GAAG,CAAC,EAAEioI,SAAS,CAACtvJ,CAAC,EAAEsvJ,SAAS,CAAChvJ,CAAC,EAAEgvJ,SAAS,CAACn5I,CAAC,CAAE;UAE/DkR,CAAC,IAAI,CAAC;QAEP;MAED;MAEAvC,QAAQ,CAAC6iB,YAAY,CAAE,UAAU,CAAE,CAAChyB,WAAW,GAAG,IAAI;MAEtDmtB,IAAA,CAAAC,eAAA,CAAA0sH,cAAA,CAAAjnK,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;IAE/B;EAAC;EAAA,OAAA84H,cAAA;AAAA,EAjF2B9jD,YAAY;AAAAtjH,OAAA,CAAAonK,cAAA,GAAAA,cAAA;AAsFzC,SAASI,WAAWA,CAAEjgK,MAAM,EAAG;EAE9B,IAAMmgK,QAAQ,GAAG,EAAE;EAEnB,IAAKngK,MAAM,CAACs4G,MAAM,KAAK,IAAI,EAAG;IAE7B6nD,QAAQ,CAAC3hK,IAAI,CAAEwB,MAAM,CAAE;EAExB;EAEA,KAAM,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgB,MAAM,CAACy1B,QAAQ,CAAC12B,MAAM,EAAEC,CAAC,EAAG,EAAG;IAEnDmhK,QAAQ,CAAC3hK,IAAI,CAACoyF,KAAK,CAAEuvE,QAAQ,EAAEF,WAAW,CAAEjgK,MAAM,CAACy1B,QAAQ,CAAEz2B,CAAC,CAAE,CAAE,CAAE;EAErE;EAEA,OAAOmhK,QAAQ;AAEhB;AAAC,IAEKC,gBAAgB,0BAAAC,MAAA;EAAAt8I,SAAA,CAAAq8I,gBAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAAr8I,YAAA,CAAAm8I,gBAAA;EAErB,SAAAA,iBAAap9E,KAAK,EAAEu9E,UAAU,EAAEriJ,KAAK,EAAG;IAAA,IAAAsiJ,QAAA;IAAAj/J,eAAA,OAAA6+J,gBAAA;IAEvC,IAAMlrI,QAAQ,GAAG,IAAIynG,cAAc,CAAE4jC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAE;IACvD,IAAM93H,QAAQ,GAAG,IAAIoK,iBAAiB,CAAE;MAAEP,SAAS,EAAE,IAAI;MAAEI,GAAG,EAAE,KAAK;MAAEzE,UAAU,EAAE;IAAM,CAAC,CAAE;IAE5FuyH,QAAA,GAAAF,SAAA,CAAArlK,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzB+3H,QAAA,CAAKx9E,KAAK,GAAGA,KAAK;IAClBw9E,QAAA,CAAKx9E,KAAK,CAACl8C,iBAAiB,EAAE;IAE9B05H,QAAA,CAAKtiJ,KAAK,GAAGA,KAAK;IAElBsiJ,QAAA,CAAKxlK,IAAI,GAAG,kBAAkB;IAE9BwlK,QAAA,CAAK3jJ,MAAM,GAAG2jJ,QAAA,CAAKx9E,KAAK,CAAC3xD,WAAW;IACpCmvI,QAAA,CAAKt7I,gBAAgB,GAAG,KAAK;IAE7Bs7I,QAAA,CAAK70I,MAAM,EAAE;;IAGb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAbE,OAAA60I,QAAA;EAuBD;EAACz+J,YAAA,CAAAq+J,gBAAA;IAAAnnK,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACgP,QAAQ,CAAChP,OAAO,EAAE;MACvB,IAAI,CAACuiB,QAAQ,CAACviB,OAAO,EAAE;IAExB;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER,IAAK,IAAI,CAACzN,KAAK,KAAKzgB,SAAS,EAAG;QAE/B,IAAI,CAACgrC,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAE,IAAI,CAACwK,KAAK,CAAE;MAEtC,CAAC,MAAM;QAEN,IAAI,CAACuqB,QAAQ,CAACvqB,KAAK,CAAC/I,IAAI,CAAE,IAAI,CAAC6tE,KAAK,CAAC9kE,KAAK,CAAE;MAE7C;;MAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAOC;EAAC;EAAA,OAAAkiJ,gBAAA;AAAA,EAjF6BnjH,IAAI;AAAAxkD,OAAA,CAAA2nK,gBAAA,GAAAA,gBAAA;AAqFnC,IAAMK,SAAS,GAAG,aAAc,IAAI3wI,OAAO,EAAE;AAC7C,IAAM4wI,OAAO,GAAG,aAAc,IAAI3hJ,KAAK,EAAE;AACzC,IAAM4hJ,OAAO,GAAG,aAAc,IAAI5hJ,KAAK,EAAE;AAAC,IAEpC6hJ,qBAAqB,0BAAAC,WAAA;EAAA98I,SAAA,CAAA68I,qBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAA78I,YAAA,CAAA28I,qBAAA;EAE1B,SAAAA,sBAAa59E,KAAK,EAAEljE,IAAI,EAAE5B,KAAK,EAAG;IAAA,IAAA6iJ,QAAA;IAAAx/J,eAAA,OAAAq/J,qBAAA;IAEjCG,QAAA,GAAAD,SAAA,CAAA7lK,IAAA;IAEA8lK,QAAA,CAAK/9E,KAAK,GAAGA,KAAK;IAClB+9E,QAAA,CAAK/9E,KAAK,CAACl8C,iBAAiB,EAAE;IAE9Bi6H,QAAA,CAAKlkJ,MAAM,GAAGmmE,KAAK,CAAC3xD,WAAW;IAC/B0vI,QAAA,CAAK77I,gBAAgB,GAAG,KAAK;IAE7B67I,QAAA,CAAK7iJ,KAAK,GAAGA,KAAK;IAElB,IAAMgX,QAAQ,GAAG,IAAIgmG,kBAAkB,CAAEp7G,IAAI,CAAE;IAC/CoV,QAAQ,CAAC+P,OAAO,CAAE/1B,IAAI,CAACC,EAAE,GAAG,GAAG,CAAE;IAEjC4xJ,QAAA,CAAKt4H,QAAQ,GAAG,IAAIoK,iBAAiB,CAAE;MAAEP,SAAS,EAAE,IAAI;MAAEI,GAAG,EAAE,KAAK;MAAEzE,UAAU,EAAE;IAAM,CAAC,CAAE;IAC3F,IAAK8yH,QAAA,CAAK7iJ,KAAK,KAAKzgB,SAAS,EAAGsjK,QAAA,CAAKt4H,QAAQ,CAACwD,YAAY,GAAG,IAAI;IAEjE,IAAM7W,QAAQ,GAAGF,QAAQ,CAAC6iB,YAAY,CAAE,UAAU,CAAE;IACpD,IAAM7D,MAAM,GAAG,IAAIpgC,YAAY,CAAEshB,QAAQ,CAACxK,KAAK,GAAG,CAAC,CAAE;IAErDsK,QAAQ,CAAC8iB,YAAY,CAAE,OAAO,EAAE,IAAI1E,eAAe,CAAEY,MAAM,EAAE,CAAC,CAAE,CAAE;IAElE6sH,QAAA,CAAK1rJ,GAAG,CAAE,IAAI4nC,IAAI,CAAE/nB,QAAQ,EAAE6rI,QAAA,CAAKt4H,QAAQ,CAAE,CAAE;IAE/Cs4H,QAAA,CAAKp1I,MAAM,EAAE;IAAC,OAAAo1I,QAAA;EAEf;EAACh/J,YAAA,CAAA6+J,qBAAA;IAAA3nK,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACuP,QAAQ,CAAE,CAAC,CAAE,CAACP,QAAQ,CAAChP,OAAO,EAAE;MACrC,IAAI,CAACuP,QAAQ,CAAE,CAAC,CAAE,CAACgT,QAAQ,CAACviB,OAAO,EAAE;IAEtC;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER,IAAM26B,IAAI,GAAG,IAAI,CAAC7wB,QAAQ,CAAE,CAAC,CAAE;MAE/B,IAAK,IAAI,CAACvX,KAAK,KAAKzgB,SAAS,EAAG;QAE/B,IAAI,CAACgrC,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAE,IAAI,CAACwK,KAAK,CAAE;MAEtC,CAAC,MAAM;QAEN,IAAMg2B,MAAM,GAAGoS,IAAI,CAACpxB,QAAQ,CAAC6iB,YAAY,CAAE,OAAO,CAAE;QAEpD2oH,OAAO,CAACvrJ,IAAI,CAAE,IAAI,CAAC6tE,KAAK,CAAC9kE,KAAK,CAAE;QAChCyiJ,OAAO,CAACxrJ,IAAI,CAAE,IAAI,CAAC6tE,KAAK,CAACzpB,WAAW,CAAE;QAEtC,KAAM,IAAIv6D,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGolC,MAAM,CAACtpB,KAAK,EAAE5rB,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAEhD,IAAMkf,KAAK,GAAKlf,CAAC,GAAK8P,CAAC,GAAG,CAAG,GAAK4xJ,OAAO,GAAGC,OAAO;UAEnDzsH,MAAM,CAACM,MAAM,CAAEx1C,CAAC,EAAEkf,KAAK,CAAClC,CAAC,EAAEkC,KAAK,CAAC/C,CAAC,EAAE+C,KAAK,CAACrL,CAAC,CAAE;QAE9C;QAEAqhC,MAAM,CAACnuB,WAAW,GAAG,IAAI;MAE1B;MAEAugC,IAAI,CAACjtB,MAAM,CAAEonI,SAAS,CAAC5tI,qBAAqB,CAAE,IAAI,CAACmwD,KAAK,CAAC3xD,WAAW,CAAE,CAAC7a,MAAM,EAAE,CAAE;IAElF;EAAC;EAAA,OAAAoqJ,qBAAA;AAAA,EAnEkCx9H,QAAQ;AAAA3qC,OAAA,CAAAmoK,qBAAA,GAAAA,qBAAA;AAAA,IAuEtCI,UAAU,0BAAAC,cAAA;EAAAl9I,SAAA,CAAAi9I,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAj9I,YAAA,CAAA+8I,UAAA;EAEf,SAAAA,WAAalhJ,IAAI,GAAG,EAAE,EAAEs/F,SAAS,GAAG,EAAE,EAAEn+F,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;IAAA,IAAAigJ,QAAA;IAAA5/J,eAAA,OAAAy/J,UAAA;IAE9E//I,MAAM,GAAG,IAAIlC,KAAK,CAAEkC,MAAM,CAAE;IAC5BC,MAAM,GAAG,IAAInC,KAAK,CAAEmC,MAAM,CAAE;IAE5B,IAAM/I,MAAM,GAAGinG,SAAS,GAAG,CAAC;IAC5B,IAAMvyF,IAAI,GAAG/M,IAAI,GAAGs/F,SAAS;IAC7B,IAAMhrF,QAAQ,GAAGtU,IAAI,GAAG,CAAC;IAEzB,IAAMg/B,QAAQ,GAAG,EAAE;MAAE5K,MAAM,GAAG,EAAE;IAEhC,KAAM,IAAIl1C,CAAC,GAAG,CAAC,EAAEy4B,CAAC,GAAG,CAAC,EAAEizD,CAAC,GAAG,CAAEt2D,QAAQ,EAAEp1B,CAAC,IAAIogH,SAAS,EAAEpgH,CAAC,EAAG,EAAE0rF,CAAC,IAAI79D,IAAI,EAAG;MAEzEiyB,QAAQ,CAACtgD,IAAI,CAAE,CAAE41B,QAAQ,EAAE,CAAC,EAAEs2D,CAAC,EAAEt2D,QAAQ,EAAE,CAAC,EAAEs2D,CAAC,CAAE;MACjD5rC,QAAQ,CAACtgD,IAAI,CAAEksF,CAAC,EAAE,CAAC,EAAE,CAAEt2D,QAAQ,EAAEs2D,CAAC,EAAE,CAAC,EAAEt2D,QAAQ,CAAE;MAEjD,IAAMlW,KAAK,GAAGlf,CAAC,KAAKmZ,MAAM,GAAG8I,MAAM,GAAGC,MAAM;MAE5ChD,KAAK,CAACrG,OAAO,CAAEq8B,MAAM,EAAEzc,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;MAClCvZ,KAAK,CAACrG,OAAO,CAAEq8B,MAAM,EAAEzc,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;MAClCvZ,KAAK,CAACrG,OAAO,CAAEq8B,MAAM,EAAEzc,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;MAClCvZ,KAAK,CAACrG,OAAO,CAAEq8B,MAAM,EAAEzc,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;IAEnC;IAEA,IAAMvC,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACrChiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC9E5pB,QAAQ,CAAC8iB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEnC,MAAM,EAAE,CAAC,CAAE,CAAE;IAEzE,IAAMzL,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAEh0C,YAAY,EAAE,IAAI;MAAEgC,UAAU,EAAE;IAAM,CAAC,CAAE;IAEnFkzH,QAAA,GAAAD,SAAA,CAAAjmK,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzB04H,QAAA,CAAKnmK,IAAI,GAAG,YAAY;IAAC,OAAAmmK,QAAA;EAE1B;EAAC,OAAAp/J,YAAA,CAAAi/J,UAAA;AAAA,EArCuBjlD,YAAY;AAAAtjH,OAAA,CAAAuoK,UAAA,GAAAA,UAAA;AAAA,IAyC/BI,eAAe,0BAAAC,cAAA;EAAAt9I,SAAA,CAAAq9I,eAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAr9I,YAAA,CAAAm9I,eAAA;EAEpB,SAAAA,gBAAa5uI,MAAM,GAAG,EAAE,EAAE+uI,OAAO,GAAG,EAAE,EAAEC,OAAO,GAAG,CAAC,EAAEpiD,SAAS,GAAG,EAAE,EAAEn+F,MAAM,GAAG,QAAQ,EAAEC,MAAM,GAAG,QAAQ,EAAG;IAAA,IAAAugJ,QAAA;IAAAlgK,eAAA,OAAA6/J,eAAA;IAE3GngJ,MAAM,GAAG,IAAIlC,KAAK,CAAEkC,MAAM,CAAE;IAC5BC,MAAM,GAAG,IAAInC,KAAK,CAAEmC,MAAM,CAAE;IAE5B,IAAM49B,QAAQ,GAAG,EAAE;IACnB,IAAM5K,MAAM,GAAG,EAAE;;IAEjB;;IAEA,KAAM,IAAIl1C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIuiK,OAAO,EAAEviK,CAAC,EAAG,EAAG;MAErC,IAAMoW,CAAC,GAAKpW,CAAC,GAAGuiK,OAAO,IAAOryJ,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;MAE3C,IAAMiB,CAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAEmC,CAAC,CAAE,GAAGod,MAAM;MAChC,IAAMjM,CAAC,GAAGrX,IAAI,CAAC8D,GAAG,CAAEoC,CAAC,CAAE,GAAGod,MAAM;MAEhCssB,QAAQ,CAACtgD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACxBsgD,QAAQ,CAACtgD,IAAI,CAAE4R,CAAC,EAAE,CAAC,EAAEmW,CAAC,CAAE;MAExB,IAAMrI,KAAK,GAAKlf,CAAC,GAAG,CAAC,GAAKiiB,MAAM,GAAGC,MAAM;MAEzCgzB,MAAM,CAAC11C,IAAI,CAAE0f,KAAK,CAAClC,CAAC,EAAEkC,KAAK,CAAC/C,CAAC,EAAE+C,KAAK,CAACrL,CAAC,CAAE;MACxCqhC,MAAM,CAAC11C,IAAI,CAAE0f,KAAK,CAAClC,CAAC,EAAEkC,KAAK,CAAC/C,CAAC,EAAE+C,KAAK,CAACrL,CAAC,CAAE;IAEzC;;IAEA;;IAEA,KAAM,IAAI7T,IAAC,GAAG,CAAC,EAAEA,IAAC,IAAIwiK,OAAO,EAAExiK,IAAC,EAAG,EAAG;MAErC,IAAMkf,MAAK,GAAKlf,IAAC,GAAG,CAAC,GAAKiiB,MAAM,GAAGC,MAAM;MAEzC,IAAMlF,CAAC,GAAGwW,MAAM,GAAKA,MAAM,GAAGgvI,OAAO,GAAGxiK,IAAG;MAE3C,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2nF,SAAS,EAAE3nF,CAAC,EAAG,EAAG;QAEtC;;QAEA,IAAIriB,EAAC,GAAKqiB,CAAC,GAAG2nF,SAAS,IAAOlwG,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE3C,IAAIiB,IAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAEmC,EAAC,CAAE,GAAG4G,CAAC;QACzB,IAAIuK,GAAC,GAAGrX,IAAI,CAAC8D,GAAG,CAAEoC,EAAC,CAAE,GAAG4G,CAAC;QAEzB8iC,QAAQ,CAACtgD,IAAI,CAAE4R,IAAC,EAAE,CAAC,EAAEmW,GAAC,CAAE;QACxB2tB,MAAM,CAAC11C,IAAI,CAAE0f,MAAK,CAAClC,CAAC,EAAEkC,MAAK,CAAC/C,CAAC,EAAE+C,MAAK,CAACrL,CAAC,CAAE;;QAExC;;QAEAuC,EAAC,GAAK,CAAEqiB,CAAC,GAAG,CAAC,IAAK2nF,SAAS,IAAOlwG,IAAI,CAACC,EAAE,GAAG,CAAC,CAAE;QAE/CiB,IAAC,GAAGlB,IAAI,CAAC+D,GAAG,CAAEmC,EAAC,CAAE,GAAG4G,CAAC;QACrBuK,GAAC,GAAGrX,IAAI,CAAC8D,GAAG,CAAEoC,EAAC,CAAE,GAAG4G,CAAC;QAErB8iC,QAAQ,CAACtgD,IAAI,CAAE4R,IAAC,EAAE,CAAC,EAAEmW,GAAC,CAAE;QACxB2tB,MAAM,CAAC11C,IAAI,CAAE0f,MAAK,CAAClC,CAAC,EAAEkC,MAAK,CAAC/C,CAAC,EAAE+C,MAAK,CAACrL,CAAC,CAAE;MAEzC;IAED;IAEA,IAAMqiB,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACrChiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC9E5pB,QAAQ,CAAC8iB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEnC,MAAM,EAAE,CAAC,CAAE,CAAE;IAEzE,IAAMzL,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAEh0C,YAAY,EAAE,IAAI;MAAEgC,UAAU,EAAE;IAAM,CAAC,CAAE;IAEnFwzH,QAAA,GAAAH,SAAA,CAAArmK,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzBg5H,QAAA,CAAKzmK,IAAI,GAAG,iBAAiB;IAAC,OAAAymK,QAAA;EAE/B;EAAC,OAAA1/J,YAAA,CAAAq/J,eAAA;AAAA,EAzE4BrlD,YAAY;AAAAtjH,OAAA,CAAA2oK,eAAA,GAAAA,eAAA;AA6E1C,IAAMM,GAAG,GAAG,aAAc,IAAI5xI,OAAO,EAAE;AACvC,IAAM6xI,GAAG,GAAG,aAAc,IAAI7xI,OAAO,EAAE;AACvC,IAAM8xI,GAAG,GAAG,aAAc,IAAI9xI,OAAO,EAAE;AAAC,IAElC+xI,sBAAsB,0BAAAC,WAAA;EAAA/9I,SAAA,CAAA89I,sBAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAA99I,YAAA,CAAA49I,sBAAA;EAE3B,SAAAA,uBAAa7+E,KAAK,EAAEljE,IAAI,EAAE5B,KAAK,EAAG;IAAA,IAAA8jJ,QAAA;IAAAzgK,eAAA,OAAAsgK,sBAAA;IAEjCG,QAAA,GAAAD,SAAA,CAAA9mK,IAAA;IAEA+mK,QAAA,CAAKh/E,KAAK,GAAGA,KAAK;IAClBg/E,QAAA,CAAKh/E,KAAK,CAACl8C,iBAAiB,EAAE;IAE9Bk7H,QAAA,CAAKnlJ,MAAM,GAAGmmE,KAAK,CAAC3xD,WAAW;IAC/B2wI,QAAA,CAAK98I,gBAAgB,GAAG,KAAK;IAE7B88I,QAAA,CAAK9jJ,KAAK,GAAGA,KAAK;IAElB,IAAK4B,IAAI,KAAKriB,SAAS,EAAGqiB,IAAI,GAAG,CAAC;IAElC,IAAIoV,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACnChiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAC9D,CAAEv2B,IAAI,EAAEA,IAAI,EAAE,CAAC,EACfA,IAAI,EAAEA,IAAI,EAAE,CAAC,EACbA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACf,CAAEA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACjB,CAAEA,IAAI,EAAEA,IAAI,EAAE,CAAC,CACf,EAAE,CAAC,CAAE,CAAE;IAER,IAAM2oB,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAEvtC,GAAG,EAAE,KAAK;MAAEzE,UAAU,EAAE;IAAM,CAAC,CAAE;IAE3E+zH,QAAA,CAAKC,UAAU,GAAG,IAAIjnD,IAAI,CAAE9lF,QAAQ,EAAEuT,QAAQ,CAAE;IAChDu5H,QAAA,CAAK3sJ,GAAG,CAAE2sJ,QAAA,CAAKC,UAAU,CAAE;IAE3B/sI,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IAC/BhiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE;IAE1F2rH,QAAA,CAAKE,UAAU,GAAG,IAAIlnD,IAAI,CAAE9lF,QAAQ,EAAEuT,QAAQ,CAAE;IAChDu5H,QAAA,CAAK3sJ,GAAG,CAAE2sJ,QAAA,CAAKE,UAAU,CAAE;IAE3BF,QAAA,CAAKr2I,MAAM,EAAE;IAAC,OAAAq2I,QAAA;EAEf;EAACjgK,YAAA,CAAA8/J,sBAAA;IAAA5oK,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAAC+7I,UAAU,CAAC/sI,QAAQ,CAAChP,OAAO,EAAE;MAClC,IAAI,CAAC+7I,UAAU,CAACx5H,QAAQ,CAACviB,OAAO,EAAE;MAClC,IAAI,CAACg8I,UAAU,CAAChtI,QAAQ,CAAChP,OAAO,EAAE;MAClC,IAAI,CAACg8I,UAAU,CAACz5H,QAAQ,CAACviB,OAAO,EAAE;IAEnC;EAAC;IAAAjtB,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER+1I,GAAG,CAAC7uI,qBAAqB,CAAE,IAAI,CAACmwD,KAAK,CAAC3xD,WAAW,CAAE;MACnDswI,GAAG,CAAC9uI,qBAAqB,CAAE,IAAI,CAACmwD,KAAK,CAACrhF,MAAM,CAAC0vB,WAAW,CAAE;MAC1DuwI,GAAG,CAACjsJ,UAAU,CAAEgsJ,GAAG,EAAED,GAAG,CAAE;MAE1B,IAAI,CAACO,UAAU,CAAC5oI,MAAM,CAAEsoI,GAAG,CAAE;MAE7B,IAAK,IAAI,CAACzjJ,KAAK,KAAKzgB,SAAS,EAAG;QAE/B,IAAI,CAACwkK,UAAU,CAACx5H,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAE,IAAI,CAACwK,KAAK,CAAE;QAChD,IAAI,CAACgkJ,UAAU,CAACz5H,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAE,IAAI,CAACwK,KAAK,CAAE;MAEjD,CAAC,MAAM;QAEN,IAAI,CAAC+jJ,UAAU,CAACx5H,QAAQ,CAACvqB,KAAK,CAAC/I,IAAI,CAAE,IAAI,CAAC6tE,KAAK,CAAC9kE,KAAK,CAAE;QACvD,IAAI,CAACgkJ,UAAU,CAACz5H,QAAQ,CAACvqB,KAAK,CAAC/I,IAAI,CAAE,IAAI,CAAC6tE,KAAK,CAAC9kE,KAAK,CAAE;MAExD;MAEA,IAAI,CAACgkJ,UAAU,CAAC7oI,MAAM,CAAEsoI,GAAG,CAAE;MAC7B,IAAI,CAACO,UAAU,CAACzlJ,KAAK,CAAC8J,CAAC,GAAGq7I,GAAG,CAAC7iK,MAAM,EAAE;IAEvC;EAAC;EAAA,OAAA8iK,sBAAA;AAAA,EAxEmCz+H,QAAQ;AAAA3qC,OAAA,CAAAopK,sBAAA,GAAAA,sBAAA;AA4E7C,IAAMM,OAAO,GAAG,aAAc,IAAIryI,OAAO,EAAE;AAC3C,IAAMsyI,OAAO,GAAG,aAAc,IAAIrgH,MAAM,EAAE;;AAE1C;AACA;AACA;AACA;AACA;AACA;AALA,IAOMsgH,YAAY,0BAAAC,cAAA;EAAAv+I,SAAA,CAAAs+I,YAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAt+I,YAAA,CAAAo+I,YAAA;EAEjB,SAAAA,aAAarxI,MAAM,EAAG;IAAA,IAAAwxI,QAAA;IAAAjhK,eAAA,OAAA8gK,YAAA;IAErB,IAAMntI,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACrC,IAAMzO,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAE/hE,KAAK,EAAE,QAAQ;MAAE+tB,YAAY,EAAE,IAAI;MAAEgC,UAAU,EAAE;IAAM,CAAC,CAAE;IAEpG,IAAM6Q,QAAQ,GAAG,EAAE;IACnB,IAAM5K,MAAM,GAAG,EAAE;IAEjB,IAAMuuH,QAAQ,GAAG,CAAC,CAAC;;IAEnB;;IAEAC,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;IAErB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;IAErB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;IAErB;;IAEAA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;IACpBA,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;;IAEpB;;IAEAA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;IACrBA,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE;;IAErB;;IAEAA,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;IACnBA,OAAO,CAAE,GAAG,EAAE,GAAG,CAAE;;IAEnB;;IAEAA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;IACvBA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;IAEvBA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;IACvBA,OAAO,CAAE,KAAK,EAAE,KAAK,CAAE;IAEvB,SAASA,OAAOA,CAAE9vJ,CAAC,EAAEC,CAAC,EAAG;MAExB8vJ,QAAQ,CAAE/vJ,CAAC,CAAE;MACb+vJ,QAAQ,CAAE9vJ,CAAC,CAAE;IAEd;IAEA,SAAS8vJ,QAAQA,CAAEz8H,EAAE,EAAG;MAEvB4Y,QAAQ,CAACtgD,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACxB01C,MAAM,CAAC11C,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAEtB,IAAKikK,QAAQ,CAAEv8H,EAAE,CAAE,KAAKzoC,SAAS,EAAG;QAEnCglK,QAAQ,CAAEv8H,EAAE,CAAE,GAAG,EAAE;MAEpB;MAEAu8H,QAAQ,CAAEv8H,EAAE,CAAE,CAAC1nC,IAAI,CAAIsgD,QAAQ,CAAC//C,MAAM,GAAG,CAAC,GAAK,CAAC,CAAE;IAEnD;IAEAm2B,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC9E5pB,QAAQ,CAAC8iB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEnC,MAAM,EAAE,CAAC,CAAE,CAAE;IAEzEsuH,QAAA,GAAAD,SAAA,CAAAtnK,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzB+5H,QAAA,CAAKxnK,IAAI,GAAG,cAAc;IAE1BwnK,QAAA,CAAKxxI,MAAM,GAAGA,MAAM;IACpB,IAAKwxI,QAAA,CAAKxxI,MAAM,CAAC+xB,sBAAsB,EAAGy/G,QAAA,CAAKxxI,MAAM,CAAC+xB,sBAAsB,EAAE;IAE9Ey/G,QAAA,CAAK3lJ,MAAM,GAAGmU,MAAM,CAACK,WAAW;IAChCmxI,QAAA,CAAKt9I,gBAAgB,GAAG,KAAK;IAE7Bs9I,QAAA,CAAKC,QAAQ,GAAGA,QAAQ;IAExBD,QAAA,CAAK72I,MAAM,EAAE;;IAEb;;IAEA,IAAMi3I,YAAY,GAAG,IAAI7jJ,KAAK,CAAE,QAAQ,CAAE;IAC1C,IAAM8jJ,SAAS,GAAG,IAAI9jJ,KAAK,CAAE,QAAQ,CAAE;IACvC,IAAM+jJ,OAAO,GAAG,IAAI/jJ,KAAK,CAAE,QAAQ,CAAE;IACrC,IAAMgkJ,WAAW,GAAG,IAAIhkJ,KAAK,CAAE,QAAQ,CAAE;IACzC,IAAMikJ,UAAU,GAAG,IAAIjkJ,KAAK,CAAE,QAAQ,CAAE;IAExCyjJ,QAAA,CAAKS,SAAS,CAAEL,YAAY,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,EAAEC,UAAU,CAAE;IAAC,OAAAR,QAAA;EAE7E;EAACzgK,YAAA,CAAAsgK,YAAA;IAAAppK,GAAA;IAAAE,KAAA,EAED,SAAA8pK,UAAWh7G,OAAO,EAAEs3G,IAAI,EAAExhI,EAAE,EAAEp8B,MAAM,EAAE+U,KAAK,EAAG;MAE7C,IAAMwe,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMguI,cAAc,GAAGhuI,QAAQ,CAAC6iB,YAAY,CAAE,OAAO,CAAE;;MAEvD;;MAEAmrH,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC1HqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC1HqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC1HqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;;MAE1H;;MAEAqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,CAAC,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC1HqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC5HqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC5HqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;;MAE5H;;MAEAqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC5HqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC5HqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;MAC5HqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEyT,OAAO,CAACjsC,CAAC,EAAEisC,OAAO,CAAC9sC,CAAC,EAAE8sC,OAAO,CAACp1C,CAAC,CAAE,CAAC,CAAC;;MAE5H;;MAEAqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE,CAAC,CAAC;MAC1GqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE,CAAC,CAAC;MAC1GqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE,CAAC,CAAC;MAC1GqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE+qH,IAAI,CAACvjJ,CAAC,EAAEujJ,IAAI,CAACpkJ,CAAC,EAAEokJ,IAAI,CAAC1sJ,CAAC,CAAE,CAAC,CAAC;;MAE1G;;MAEAqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEzW,EAAE,CAAC/hB,CAAC,EAAE+hB,EAAE,CAAC5iB,CAAC,EAAE4iB,EAAE,CAAClrB,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEzW,EAAE,CAAC/hB,CAAC,EAAE+hB,EAAE,CAAC5iB,CAAC,EAAE4iB,EAAE,CAAClrB,CAAC,CAAE,CAAC,CAAC;MAC9FqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEzW,EAAE,CAAC/hB,CAAC,EAAE+hB,EAAE,CAAC5iB,CAAC,EAAE4iB,EAAE,CAAClrB,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEzW,EAAE,CAAC/hB,CAAC,EAAE+hB,EAAE,CAAC5iB,CAAC,EAAE4iB,EAAE,CAAClrB,CAAC,CAAE,CAAC,CAAC;MAC9FqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEzW,EAAE,CAAC/hB,CAAC,EAAE+hB,EAAE,CAAC5iB,CAAC,EAAE4iB,EAAE,CAAClrB,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAEzW,EAAE,CAAC/hB,CAAC,EAAE+hB,EAAE,CAAC5iB,CAAC,EAAE4iB,EAAE,CAAClrB,CAAC,CAAE,CAAC,CAAC;;MAE9F;;MAEAqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE7yC,MAAM,CAACqa,CAAC,EAAEra,MAAM,CAACwZ,CAAC,EAAExZ,MAAM,CAACkR,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE7yC,MAAM,CAACqa,CAAC,EAAEra,MAAM,CAACwZ,CAAC,EAAExZ,MAAM,CAACkR,CAAC,CAAE,CAAC,CAAC;MACtHqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE,CAAC,CAAC;;MAEhH;;MAEAqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE,CAAC,CAAC;MAChHqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE,CAAC,CAAC;;MAEhHqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE,CAAC,CAAC;MAChHqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE;MAAEqwJ,cAAc,CAAC1uH,MAAM,CAAE,EAAE,EAAE99B,KAAK,CAACsF,CAAC,EAAEtF,KAAK,CAACyE,CAAC,EAAEzE,KAAK,CAAC7D,CAAC,CAAE,CAAC,CAAC;;MAEhHqwJ,cAAc,CAACn9I,WAAW,GAAG,IAAI;IAElC;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAA,EAAS;MAER,IAAMuJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAMutI,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,IAAMj8I,CAAC,GAAG,CAAC;QAAEpL,CAAC,GAAG,CAAC;;MAElB;MACA;;MAEAgnJ,OAAO,CAAChxI,uBAAuB,CAACjc,IAAI,CAAE,IAAI,CAAC6b,MAAM,CAACI,uBAAuB,CAAE;;MAE3E;;MAEA+xI,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MACvDe,QAAQ,CAAE,GAAG,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;;MAErD;;MAEAe,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAE,CAAC,CAAE;MAC5D+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAE,CAAC,CAAE;MAC1D+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,EAAEpL,CAAC,EAAE,CAAE,CAAC,CAAE;MAC1D+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,EAAEpL,CAAC,EAAE,CAAE,CAAC,CAAE;;MAExD;;MAEA+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,CAAE;MAC1D+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,EAAE,CAAEpL,CAAC,EAAE,CAAC,CAAE;MACxD+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,EAAEpL,CAAC,EAAE,CAAC,CAAE;MACxD+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,EAAEpL,CAAC,EAAE,CAAC,CAAE;;MAEtD;;MAEA+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,GAAG,GAAG,EAAEpL,CAAC,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE;MACpE+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,GAAG,GAAG,EAAEpL,CAAC,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE;MACtE+nJ,QAAQ,CAAE,IAAI,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAEhnJ,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,CAAE;;MAE5D;;MAEA+nJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACzD28I,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACvD28I,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAE,CAAEhnJ,CAAC,EAAE,CAAC,CAAE;MACzD+nJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAEhnJ,CAAC,EAAE,CAAC,CAAE;MAEvD+nJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAE57I,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MAC3D28I,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE57I,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAE;MACzD28I,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAE,CAAEhnJ,CAAC,EAAE,CAAE,CAAC,CAAE;MAC3D+nJ,QAAQ,CAAE,KAAK,EAAEV,QAAQ,EAAEvtI,QAAQ,EAAEktI,OAAO,EAAE,CAAC,EAAEhnJ,CAAC,EAAE,CAAE,CAAC,CAAE;MAEzD8Z,QAAQ,CAAC6iB,YAAY,CAAE,UAAU,CAAE,CAAChyB,WAAW,GAAG,IAAI;IAEvD;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACgP,QAAQ,CAAChP,OAAO,EAAE;MACvB,IAAI,CAACuiB,QAAQ,CAACviB,OAAO,EAAE;IAExB;EAAC;EAAA,OAAAm8I,YAAA;AAAA,EAjOyBtmD,YAAY;AAAAtjH,OAAA,CAAA4pK,YAAA,GAAAA,YAAA;AAsOvC,SAASc,QAAQA,CAAEtuI,KAAK,EAAE4tI,QAAQ,EAAEvtI,QAAQ,EAAElE,MAAM,EAAE5gB,CAAC,EAAEM,CAAC,EAAE6V,CAAC,EAAG;EAE/D47I,OAAO,CAACzuJ,GAAG,CAAEtD,CAAC,EAAEM,CAAC,EAAE6V,CAAC,CAAE,CAAC4K,SAAS,CAAEH,MAAM,CAAE;EAE1C,IAAMgD,MAAM,GAAGyuI,QAAQ,CAAE5tI,KAAK,CAAE;EAEhC,IAAKb,MAAM,KAAKv2B,SAAS,EAAG;IAE3B,IAAM23B,QAAQ,GAAGF,QAAQ,CAAC6iB,YAAY,CAAE,UAAU,CAAE;IAEpD,KAAM,IAAI/4C,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGklB,MAAM,CAACj1B,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;MAEjDo2B,QAAQ,CAACof,MAAM,CAAExgB,MAAM,CAAEh1B,CAAC,CAAE,EAAEmjK,OAAO,CAAC/xJ,CAAC,EAAE+xJ,OAAO,CAACzxJ,CAAC,EAAEyxJ,OAAO,CAAC57I,CAAC,CAAE;IAEhE;EAED;AAED;AAEA,IAAM68I,IAAI,GAAG,aAAc,IAAIhwI,IAAI,EAAE;AAAC,IAEhCiwI,SAAS,0BAAAC,cAAA;EAAAv/I,SAAA,CAAAs/I,SAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAt/I,YAAA,CAAAo/I,SAAA;EAEd,SAAAA,UAAarjK,MAAM,EAAEke,KAAK,GAAG,QAAQ,EAAG;IAAA,IAAAslJ,QAAA;IAAAjiK,eAAA,OAAA8hK,SAAA;IAEvC,IAAMvqH,OAAO,GAAG,IAAI/kC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IAC7G,IAAMglC,SAAS,GAAG,IAAIjlC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE;IAE3C,IAAMohB,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACrChiB,QAAQ,CAAC4iB,QAAQ,CAAE,IAAIxE,eAAe,CAAEwF,OAAO,EAAE,CAAC,CAAE,CAAE;IACtD5jB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI1E,eAAe,CAAEyF,SAAS,EAAE,CAAC,CAAE,CAAE;IAExEyqH,QAAA,GAAAD,SAAA,CAAAtoK,IAAA,OAAOi6B,QAAQ,EAAE,IAAI+qD,iBAAiB,CAAE;MAAE/hE,KAAK,EAAEA,KAAK;MAAE+vB,UAAU,EAAE;IAAM,CAAC,CAAE;IAE7Eu1H,QAAA,CAAKxjK,MAAM,GAAGA,MAAM;IACpBwjK,QAAA,CAAKxoK,IAAI,GAAG,WAAW;IAEvBwoK,QAAA,CAAKt+I,gBAAgB,GAAG,KAAK;IAE7Bs+I,QAAA,CAAK73I,MAAM,EAAE;IAAC,OAAA63I,QAAA;EAEf;EAACzhK,YAAA,CAAAshK,SAAA;IAAApqK,GAAA;IAAAE,KAAA,EAED,SAAAwyB,OAAQ3rB,MAAM,EAAG;MAEhB,IAAKA,MAAM,KAAKvC,SAAS,EAAG;QAE3BkW,OAAO,CAACC,IAAI,CAAE,qDAAqD,CAAE;MAEtE;MAEA,IAAK,IAAI,CAAC5T,MAAM,KAAKvC,SAAS,EAAG;QAEhC2lK,IAAI,CAAC9uI,aAAa,CAAE,IAAI,CAACt0B,MAAM,CAAE;MAElC;MAEA,IAAKojK,IAAI,CAAC1uI,OAAO,EAAE,EAAG;MAEtB,IAAM5kB,GAAG,GAAGszJ,IAAI,CAACtzJ,GAAG;MACpB,IAAMC,GAAG,GAAGqzJ,IAAI,CAACrzJ,GAAG;;MAEpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGE,IAAMqlB,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAACC,UAAU,CAACC,QAAQ;MAClD,IAAMvmB,KAAK,GAAGumB,QAAQ,CAACvmB,KAAK;MAE5BA,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACwW,CAAC;MAC1D1X,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACwW,CAAC;MAC1D1X,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,CAAC,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACwW,CAAC;MAC1D1X,KAAK,CAAE,CAAC,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACwW,CAAC;MAC5D1X,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACyW,CAAC;MAC7D1X,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACW,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACyW,CAAC;MAC7D1X,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACM,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACyW,CAAC;MAC7D1X,KAAK,CAAE,EAAE,CAAE,GAAGkB,GAAG,CAACK,CAAC;MAAEvB,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACY,CAAC;MAAE7B,KAAK,CAAE,EAAE,CAAE,GAAGiB,GAAG,CAACyW,CAAC;MAE7D6O,QAAQ,CAACrP,WAAW,GAAG,IAAI;MAE3B,IAAI,CAACmP,QAAQ,CAACsjB,qBAAqB,EAAE;IAGtC;EAAC;IAAAv/C,GAAA;IAAAE,KAAA,EAED,SAAAm7B,cAAet0B,MAAM,EAAG;MAEvB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAAC2rB,MAAM,EAAE;MAEb,OAAO,IAAI;IAEZ;EAAC;IAAA1yB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAEgqB,SAAS,EAAG;MAEzBoK,IAAA,CAAAC,eAAA,CAAAkwH,SAAA,CAAAzqK,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAEgqB,SAAS;MAE7B,IAAI,CAAC9oC,MAAM,GAAG8e,MAAM,CAAC9e,MAAM;MAE3B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAAqjK,SAAA;AAAA,EA7FsBtnD,YAAY;AAAAtjH,OAAA,CAAA4qK,SAAA,GAAAA,SAAA;AAAA,IAiG9BI,UAAU,0BAAAC,cAAA;EAAA3/I,SAAA,CAAA0/I,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAA1/I,YAAA,CAAAw/I,UAAA;EAEf,SAAAA,WAAahvI,GAAG,EAAEvW,KAAK,GAAG,QAAQ,EAAG;IAAA,IAAA0lJ,QAAA;IAAAriK,eAAA,OAAAkiK,UAAA;IAEpC,IAAM3qH,OAAO,GAAG,IAAI/kC,WAAW,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;IAE7G,IAAMglC,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,CAAE;IAEpH,IAAM7jB,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IAErChiB,QAAQ,CAAC4iB,QAAQ,CAAE,IAAIxE,eAAe,CAAEwF,OAAO,EAAE,CAAC,CAAE,CAAE;IAEtD5jB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAC,CAAE,CAAE;IAE/E6qH,QAAA,GAAAD,SAAA,CAAA1oK,IAAA,OAAOi6B,QAAQ,EAAE,IAAI+qD,iBAAiB,CAAE;MAAE/hE,KAAK,EAAEA,KAAK;MAAE+vB,UAAU,EAAE;IAAM,CAAC,CAAE;IAE7E21H,QAAA,CAAKnvI,GAAG,GAAGA,GAAG;IAEdmvI,QAAA,CAAK5oK,IAAI,GAAG,YAAY;IAExB4oK,QAAA,CAAK1uI,QAAQ,CAACsjB,qBAAqB,EAAE;IAAC,OAAAorH,QAAA;EAEvC;EAAC7hK,YAAA,CAAA0hK,UAAA;IAAAxqK,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1B,IAAMtS,GAAG,GAAG,IAAI,CAACA,GAAG;MAEpB,IAAKA,GAAG,CAACC,OAAO,EAAE,EAAG;MAErBD,GAAG,CAACE,SAAS,CAAE,IAAI,CAACS,QAAQ,CAAE;MAE9BX,GAAG,CAACG,OAAO,CAAE,IAAI,CAACnY,KAAK,CAAE;MAEzB,IAAI,CAACA,KAAK,CAAC5G,cAAc,CAAE,GAAG,CAAE;MAEhCq9B,IAAA,CAAAC,eAAA,CAAAswH,UAAA,CAAA7qK,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;IAE/B;EAAC;EAAA,OAAA08H,UAAA;AAAA,EAtCuB1nD,YAAY;AAAAtjH,OAAA,CAAAgrK,UAAA,GAAAA,UAAA;AAAA,IA0C/BI,WAAW,0BAAAC,MAAA;EAAA//I,SAAA,CAAA8/I,WAAA,EAAAC,MAAA;EAAA,IAAAC,SAAA,GAAA9/I,YAAA,CAAA4/I,WAAA;EAEhB,SAAAA,YAAa3tI,KAAK,EAAEpW,IAAI,GAAG,CAAC,EAAET,GAAG,GAAG,QAAQ,EAAG;IAAA,IAAA2kJ,QAAA;IAAAziK,eAAA,OAAAsiK,WAAA;IAE9C,IAAM3lJ,KAAK,GAAGmB,GAAG;IAEjB,IAAM05B,SAAS,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAE5G,IAAM7jB,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACrChiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE0C,SAAS,EAAE,CAAC,CAAE,CAAE;IAC/E7jB,QAAQ,CAACsjB,qBAAqB,EAAE;IAEhCwrH,QAAA,GAAAD,SAAA,CAAA9oK,IAAA,OAAOi6B,QAAQ,EAAE,IAAI+qD,iBAAiB,CAAE;MAAE/hE,KAAK,EAAEA,KAAK;MAAE+vB,UAAU,EAAE;IAAM,CAAC,CAAE;IAE7E+1H,QAAA,CAAKhpK,IAAI,GAAG,aAAa;IAEzBgpK,QAAA,CAAK9tI,KAAK,GAAGA,KAAK;IAElB8tI,QAAA,CAAKlkJ,IAAI,GAAGA,IAAI;IAEhB,IAAMmkJ,UAAU,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;IAEvF,IAAMtoH,SAAS,GAAG,IAAIzE,cAAc,EAAE;IACtCyE,SAAS,CAAC3D,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE4tH,UAAU,EAAE,CAAC,CAAE,CAAE;IACjFtoH,SAAS,CAACnD,qBAAqB,EAAE;IAEjCwrH,QAAA,CAAK3uJ,GAAG,CAAE,IAAI4nC,IAAI,CAAEtB,SAAS,EAAE,IAAI9I,iBAAiB,CAAE;MAAE30B,KAAK,EAAEA,KAAK;MAAEguB,OAAO,EAAE,GAAG;MAAEC,WAAW,EAAE,IAAI;MAAES,UAAU,EAAE,KAAK;MAAEqB,UAAU,EAAE;IAAM,CAAC,CAAE,CAAE,CAAE;IAAC,OAAA+1H,QAAA;EAErJ;EAACjiK,YAAA,CAAA8hK,WAAA;IAAA5qK,GAAA;IAAAE,KAAA,EAED,SAAA2tC,kBAAmBC,KAAK,EAAG;MAE1B,IAAI,CAAC3R,QAAQ,CAAC1hB,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAE5B,IAAI,CAAC+I,KAAK,CAAC/I,GAAG,CAAE,GAAG,GAAG,IAAI,CAACoM,IAAI,EAAE,GAAG,GAAG,IAAI,CAACA,IAAI,EAAE,CAAC,CAAE;MAErD,IAAI,CAACuZ,MAAM,CAAE,IAAI,CAACnD,KAAK,CAAC9D,MAAM,CAAE;MAEhC,IAAI,CAACmT,UAAU,CAAE,CAAE,IAAI,CAACrP,KAAK,CAACC,QAAQ,CAAE;MAExC+c,IAAA,CAAAC,eAAA,CAAA0wH,WAAA,CAAAjrK,SAAA,8BAAAqC,IAAA,OAAyB8rC,KAAK;IAE/B;EAAC;EAAA,OAAA88H,WAAA;AAAA,EA1CwB7oD,IAAI;AAAAviH,OAAA,CAAAorK,WAAA,GAAAA,WAAA;AA8C9B,IAAMK,KAAK,GAAG,aAAc,IAAIp0I,OAAO,EAAE;AACzC,IAAIq0I,aAAa,EAAEC,aAAa;AAAC,IAE3BC,WAAW,0BAAAC,WAAA;EAAAvgJ,SAAA,CAAAsgJ,WAAA,EAAAC,WAAA;EAAA,IAAAC,SAAA,GAAAtgJ,YAAA,CAAAogJ,WAAA;EAEhB;;EAEA,SAAAA,YAAa50I,GAAG,GAAG,IAAIK,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAEmJ,MAAM,GAAG,IAAInJ,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE/wB,MAAM,GAAG,CAAC,EAAEmf,KAAK,GAAG,QAAQ,EAAEsmJ,UAAU,GAAGzlK,MAAM,GAAG,GAAG,EAAE0lK,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;IAAA,IAAAE,QAAA;IAAAnjK,eAAA,OAAA8iK,WAAA;IAEnKK,QAAA,GAAAH,SAAA,CAAAtpK,IAAA;IAEAypK,QAAA,CAAK1pK,IAAI,GAAG,aAAa;IAEzB,IAAKmpK,aAAa,KAAK1mK,SAAS,EAAG;MAElC0mK,aAAa,GAAG,IAAIjtH,cAAc,EAAE;MACpCitH,aAAa,CAACnsH,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE;MAE/F+tH,aAAa,GAAG,IAAIt5C,gBAAgB,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MACvDs5C,aAAa,CAACxnJ,SAAS,CAAE,CAAC,EAAE,CAAE,GAAG,EAAE,CAAC,CAAE;IAEvC;IAEA8nJ,QAAA,CAAKtvI,QAAQ,CAACjgB,IAAI,CAAE8jB,MAAM,CAAE;IAE5ByrI,QAAA,CAAKt9G,IAAI,GAAG,IAAI4zD,IAAI,CAAEmpD,aAAa,EAAE,IAAIlkF,iBAAiB,CAAE;MAAE/hE,KAAK,EAAEA,KAAK;MAAE+vB,UAAU,EAAE;IAAM,CAAC,CAAE,CAAE;IACnGy2H,QAAA,CAAKt9G,IAAI,CAACliC,gBAAgB,GAAG,KAAK;IAClCw/I,QAAA,CAAKrvJ,GAAG,CAAEqvJ,QAAA,CAAKt9G,IAAI,CAAE;IAErBs9G,QAAA,CAAKnF,IAAI,GAAG,IAAItiH,IAAI,CAAEmnH,aAAa,EAAE,IAAIvxH,iBAAiB,CAAE;MAAE30B,KAAK,EAAEA,KAAK;MAAE+vB,UAAU,EAAE;IAAM,CAAC,CAAE,CAAE;IACnGy2H,QAAA,CAAKnF,IAAI,CAACr6I,gBAAgB,GAAG,KAAK;IAClCw/I,QAAA,CAAKrvJ,GAAG,CAAEqvJ,QAAA,CAAKnF,IAAI,CAAE;IAErBmF,QAAA,CAAKC,YAAY,CAAEl1I,GAAG,CAAE;IACxBi1I,QAAA,CAAKrtJ,SAAS,CAAEtY,MAAM,EAAEylK,UAAU,EAAEC,SAAS,CAAE;IAAC,OAAAC,QAAA;EAEjD;EAAC3iK,YAAA,CAAAsiK,WAAA;IAAAprK,GAAA;IAAAE,KAAA,EAED,SAAAwrK,aAAcl1I,GAAG,EAAG;MAEnB;;MAEA,IAAKA,GAAG,CAAC/e,CAAC,GAAG,OAAO,EAAG;QAEtB,IAAI,CAAC8a,UAAU,CAAC9X,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAElC,CAAC,MAAM,IAAK+b,GAAG,CAAC/e,CAAC,GAAG,CAAE,OAAO,EAAG;QAE/B,IAAI,CAAC8a,UAAU,CAAC9X,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAElC,CAAC,MAAM;QAENwwJ,KAAK,CAACxwJ,GAAG,CAAE+b,GAAG,CAAClJ,CAAC,EAAE,CAAC,EAAE,CAAEkJ,GAAG,CAACrf,CAAC,CAAE,CAAC+D,SAAS,EAAE;QAE1C,IAAMjC,OAAO,GAAGhD,IAAI,CAAC4X,IAAI,CAAE2I,GAAG,CAAC/e,CAAC,CAAE;QAElC,IAAI,CAAC8a,UAAU,CAACU,gBAAgB,CAAEg4I,KAAK,EAAEhyJ,OAAO,CAAE;MAEnD;IAED;EAAC;IAAAjZ,GAAA;IAAAE,KAAA,EAED,SAAAke,UAAWtY,MAAM,EAAEylK,UAAU,GAAGzlK,MAAM,GAAG,GAAG,EAAE0lK,SAAS,GAAGD,UAAU,GAAG,GAAG,EAAG;MAE5E,IAAI,CAACp9G,IAAI,CAAC3qC,KAAK,CAAC/I,GAAG,CAAE,CAAC,EAAExE,IAAI,CAACa,GAAG,CAAE,MAAM,EAAEhR,MAAM,GAAGylK,UAAU,CAAE,EAAE,CAAC,CAAE,CAAC,CAAC;MACtE,IAAI,CAACp9G,IAAI,CAACzhC,YAAY,EAAE;MAExB,IAAI,CAAC45I,IAAI,CAAC9iJ,KAAK,CAAC/I,GAAG,CAAE+wJ,SAAS,EAAED,UAAU,EAAEC,SAAS,CAAE;MACvD,IAAI,CAAClF,IAAI,CAACnqI,QAAQ,CAAC1kB,CAAC,GAAG3R,MAAM;MAC7B,IAAI,CAACwgK,IAAI,CAAC55I,YAAY,EAAE;IAEzB;EAAC;IAAA1sB,GAAA;IAAAE,KAAA,EAED,SAAAyrK,SAAU1mJ,KAAK,EAAG;MAEjB,IAAI,CAACkpC,IAAI,CAAC3e,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAEwK,KAAK,CAAE;MACrC,IAAI,CAACqhJ,IAAI,CAAC92H,QAAQ,CAACvqB,KAAK,CAACxK,GAAG,CAAEwK,KAAK,CAAE;IAEtC;EAAC;IAAAjlB,GAAA;IAAAE,KAAA,EAED,SAAAgc,KAAM2J,MAAM,EAAG;MAEdo0B,IAAA,CAAAC,eAAA,CAAAkxH,WAAA,CAAAzrK,SAAA,iBAAAqC,IAAA,OAAY6jB,MAAM,EAAE,KAAK;MAEzB,IAAI,CAACsoC,IAAI,CAACjyC,IAAI,CAAE2J,MAAM,CAACsoC,IAAI,CAAE;MAC7B,IAAI,CAACm4G,IAAI,CAACpqJ,IAAI,CAAE2J,MAAM,CAACygJ,IAAI,CAAE;MAE7B,OAAO,IAAI;IAEZ;EAAC;EAAA,OAAA8E,WAAA;AAAA,EAtFwBjhI,QAAQ;AAAA3qC,OAAA,CAAA4rK,WAAA,GAAAA,WAAA;AAAA,IA0F5BQ,UAAU,0BAAAC,cAAA;EAAA/gJ,SAAA,CAAA8gJ,UAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAA9gJ,YAAA,CAAA4gJ,UAAA;EAEf,SAAAA,WAAa/kJ,IAAI,GAAG,CAAC,EAAG;IAAA,IAAAklJ,QAAA;IAAAzjK,eAAA,OAAAsjK,UAAA;IAEvB,IAAM/lH,QAAQ,GAAG,CAChB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEh/B,IAAI,EAAE,CAAC,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,EAAE,CAAC,EACnB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEA,IAAI,CACnB;IAED,IAAMo0B,MAAM,GAAG,CACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAClB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAClB;IAED,IAAMhf,QAAQ,GAAG,IAAIgiB,cAAc,EAAE;IACrChiB,QAAQ,CAAC8iB,YAAY,CAAE,UAAU,EAAE,IAAI3B,sBAAsB,CAAEyI,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC9E5pB,QAAQ,CAAC8iB,YAAY,CAAE,OAAO,EAAE,IAAI3B,sBAAsB,CAAEnC,MAAM,EAAE,CAAC,CAAE,CAAE;IAEzE,IAAMzL,QAAQ,GAAG,IAAIw3C,iBAAiB,CAAE;MAAEh0C,YAAY,EAAE,IAAI;MAAEgC,UAAU,EAAE;IAAM,CAAC,CAAE;IAEnF+2H,QAAA,GAAAD,SAAA,CAAA9pK,IAAA,OAAOi6B,QAAQ,EAAEuT,QAAQ;IAEzBu8H,QAAA,CAAKhqK,IAAI,GAAG,YAAY;IAAC,OAAAgqK,QAAA;EAE1B;EAACjjK,YAAA,CAAA8iK,UAAA;IAAA5rK,GAAA;IAAAE,KAAA,EAED,SAAA8pK,UAAWgC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAG;MAE/C,IAAMjnJ,KAAK,GAAG,IAAIa,KAAK,EAAE;MACzB,IAAMlQ,KAAK,GAAG,IAAI,CAACqmB,QAAQ,CAACC,UAAU,CAACjX,KAAK,CAACrP,KAAK;MAElDqP,KAAK,CAACxK,GAAG,CAAEuxJ,UAAU,CAAE;MACvB/mJ,KAAK,CAACrG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;MACzBqP,KAAK,CAACrG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;MAEzBqP,KAAK,CAACxK,GAAG,CAAEwxJ,UAAU,CAAE;MACvBhnJ,KAAK,CAACrG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;MACzBqP,KAAK,CAACrG,OAAO,CAAEhJ,KAAK,EAAE,CAAC,CAAE;MAEzBqP,KAAK,CAACxK,GAAG,CAAEyxJ,UAAU,CAAE;MACvBjnJ,KAAK,CAACrG,OAAO,CAAEhJ,KAAK,EAAE,EAAE,CAAE;MAC1BqP,KAAK,CAACrG,OAAO,CAAEhJ,KAAK,EAAE,EAAE,CAAE;MAE1B,IAAI,CAACqmB,QAAQ,CAACC,UAAU,CAACjX,KAAK,CAAC6H,WAAW,GAAG,IAAI;MAEjD,OAAO,IAAI;IAEZ;EAAC;IAAA9sB,GAAA;IAAAE,KAAA,EAED,SAAA+sB,QAAA,EAAU;MAET,IAAI,CAACgP,QAAQ,CAAChP,OAAO,EAAE;MACvB,IAAI,CAACuiB,QAAQ,CAACviB,OAAO,EAAE;IAExB;EAAC;EAAA,OAAA2+I,UAAA;AAAA,EAxDuB9oD,YAAY;AAAAtjH,OAAA,CAAAosK,UAAA,GAAAA,UAAA;AAAA,IA4D/BO,SAAS;EAEd,SAAAA,UAAA,EAAc;IAAA7jK,eAAA,OAAA6jK,SAAA;IAEb,IAAI,CAACpqK,IAAI,GAAG,WAAW;IAEvB,IAAI,CAACkjB,KAAK,GAAG,IAAIa,KAAK,EAAE;IAExB,IAAI,CAACsmJ,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,WAAW,GAAG,IAAI;EAExB;EAACvjK,YAAA,CAAAqjK,SAAA;IAAAnsK,GAAA;IAAAE,KAAA,EAED,SAAA8uH,OAAQ73G,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAI,CAAC40J,WAAW,GAAG,IAAI19C,IAAI,EAAE;MAC7B,IAAI,CAACy9C,QAAQ,CAAC7mK,IAAI,CAAE,IAAI,CAAC8mK,WAAW,CAAE;MACtC,IAAI,CAACA,WAAW,CAACr9C,MAAM,CAAE73G,CAAC,EAAEM,CAAC,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAA+uH,OAAQ93G,CAAC,EAAEM,CAAC,EAAG;MAEd,IAAI,CAAC40J,WAAW,CAACp9C,MAAM,CAAE93G,CAAC,EAAEM,CAAC,CAAE;MAE/B,OAAO,IAAI;IAEZ;EAAC;IAAAzX,GAAA;IAAAE,KAAA,EAED,SAAAgvH,iBAAkBC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,EAAG;MAEtC,IAAI,CAACikD,WAAW,CAACn9C,gBAAgB,CAAEC,IAAI,EAAEC,IAAI,EAAEjH,EAAE,EAAEC,EAAE,CAAE;MAEvD,OAAO,IAAI;IAEZ;EAAC;IAAApoH,GAAA;IAAAE,KAAA,EAED,SAAAmvH,cAAeC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,EAAG;MAEnD,IAAI,CAACikD,WAAW,CAACh9C,aAAa,CAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEtH,EAAE,EAAEC,EAAE,CAAE;MAEpE,OAAO,IAAI;IAEZ;EAAC;IAAApoH,GAAA;IAAAE,KAAA,EAED,SAAAwvH,WAAYhB,GAAG,EAAG;MAEjB,IAAI,CAAC29C,WAAW,CAAC38C,UAAU,CAAEhB,GAAG,CAAE;MAElC,OAAO,IAAI;IAEZ;EAAC;IAAA1uH,GAAA;IAAAE,KAAA,EAED,SAAAosK,SAAUC,KAAK,EAAEC,OAAO,EAAG;MAE1B,SAASC,eAAeA,CAAEC,UAAU,EAAG;QAEtC,IAAMv+H,MAAM,GAAG,EAAE;QAEjB,KAAM,IAAIpoC,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAG62J,UAAU,CAAC5mK,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;UAErD,IAAM4mK,QAAO,GAAGD,UAAU,CAAE3mK,CAAC,CAAE;UAE/B,IAAM6mK,SAAQ,GAAG,IAAIn2C,KAAK,EAAE;UAC5Bm2C,SAAQ,CAAC9+C,MAAM,GAAG6+C,QAAO,CAAC7+C,MAAM;UAEhC3/E,MAAM,CAAC5oC,IAAI,CAAEqnK,SAAQ,CAAE;QAExB;QAEA,OAAOz+H,MAAM;MAEd;MAEA,SAAS0+H,oBAAoBA,CAAE9uC,IAAI,EAAE+uC,SAAS,EAAG;QAEhD,IAAMC,OAAO,GAAGD,SAAS,CAAChnK,MAAM;;QAEhC;QACA;QACA;QACA;QACA,IAAIq1H,MAAM,GAAG,KAAK;QAClB,KAAM,IAAIx1G,CAAC,GAAGonJ,OAAO,GAAG,CAAC,EAAErzJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqzJ,OAAO,EAAEpnJ,CAAC,GAAGjM,CAAC,EAAG,EAAG;UAEzD,IAAIszJ,SAAS,GAAGF,SAAS,CAAEnnJ,CAAC,CAAE;UAC9B,IAAIsnJ,UAAU,GAAGH,SAAS,CAAEpzJ,CAAC,CAAE;UAE/B,IAAIwzJ,MAAM,GAAGD,UAAU,CAAC91J,CAAC,GAAG61J,SAAS,CAAC71J,CAAC;UACvC,IAAIg2J,MAAM,GAAGF,UAAU,CAACx1J,CAAC,GAAGu1J,SAAS,CAACv1J,CAAC;UAEvC,IAAKxB,IAAI,CAACgC,GAAG,CAAEk1J,MAAM,CAAE,GAAG3jK,MAAM,CAACiqB,OAAO,EAAG;YAE1C;YACA,IAAK05I,MAAM,GAAG,CAAC,EAAG;cAEjBH,SAAS,GAAGF,SAAS,CAAEpzJ,CAAC,CAAE;cAAEwzJ,MAAM,GAAG,CAAEA,MAAM;cAC7CD,UAAU,GAAGH,SAAS,CAAEnnJ,CAAC,CAAE;cAAEwnJ,MAAM,GAAG,CAAEA,MAAM;YAE/C;YAEA,IAAOpvC,IAAI,CAACtmH,CAAC,GAAGu1J,SAAS,CAACv1J,CAAC,IAAQsmH,IAAI,CAACtmH,CAAC,GAAGw1J,UAAU,CAACx1J,CAAG,EAAK;YAE/D,IAAKsmH,IAAI,CAACtmH,CAAC,KAAKu1J,SAAS,CAACv1J,CAAC,EAAG;cAE7B,IAAKsmH,IAAI,CAAC5mH,CAAC,KAAK61J,SAAS,CAAC71J,CAAC,EAAI,OAAO,IAAI,CAAC,CAAE;cAC7C;YAED,CAAC,MAAM;cAEN,IAAMi2J,QAAQ,GAAGD,MAAM,IAAKpvC,IAAI,CAAC5mH,CAAC,GAAG61J,SAAS,CAAC71J,CAAC,CAAE,GAAG+1J,MAAM,IAAKnvC,IAAI,CAACtmH,CAAC,GAAGu1J,SAAS,CAACv1J,CAAC,CAAE;cACtF,IAAK21J,QAAQ,KAAK,CAAC,EAAM,OAAO,IAAI,CAAC,CAAE;cACvC,IAAKA,QAAQ,GAAG,CAAC,EAAO;cACxBjyC,MAAM,GAAG,CAAEA,MAAM,CAAC,CAAE;YAErB;UAED,CAAC,MAAM;YAEN;YACA,IAAK4C,IAAI,CAACtmH,CAAC,KAAKu1J,SAAS,CAACv1J,CAAC,EAAK,SAAS,CAAG;YAC5C;YACA,IAASw1J,UAAU,CAAC91J,CAAC,IAAI4mH,IAAI,CAAC5mH,CAAC,IAAQ4mH,IAAI,CAAC5mH,CAAC,IAAI61J,SAAS,CAAC71J,CAAG,IACxD61J,SAAS,CAAC71J,CAAC,IAAI4mH,IAAI,CAAC5mH,CAAC,IAAQ4mH,IAAI,CAAC5mH,CAAC,IAAI81J,UAAU,CAAC91J,CAAK,EAAI,OAAO,IAAI,CAAC,CAAC;YAC9E;UAED;QAED;;QAEA,OAAOgkH,MAAM;MAEd;MAEA,IAAMM,WAAW,GAAGF,UAAU,CAACE,WAAW;MAE1C,IAAM2wC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAKA,QAAQ,CAACtmK,MAAM,KAAK,CAAC,EAAG,OAAO,EAAE;MAEtC,IAAK0mK,OAAO,KAAK,IAAI,EAAG,OAAOC,eAAe,CAAEL,QAAQ,CAAE;MAG1D,IAAIiB,KAAK,EAAEV,OAAO,EAAEC,QAAQ;MAC5B,IAAMz+H,MAAM,GAAG,EAAE;MAEjB,IAAKi+H,QAAQ,CAACtmK,MAAM,KAAK,CAAC,EAAG;QAE5B6mK,OAAO,GAAGP,QAAQ,CAAE,CAAC,CAAE;QACvBQ,QAAQ,GAAG,IAAIn2C,KAAK,EAAE;QACtBm2C,QAAQ,CAAC9+C,MAAM,GAAG6+C,OAAO,CAAC7+C,MAAM;QAChC3/E,MAAM,CAAC5oC,IAAI,CAAEqnK,QAAQ,CAAE;QACvB,OAAOz+H,MAAM;MAEd;MAEA,IAAIm/H,UAAU,GAAG,CAAE7xC,WAAW,CAAE2wC,QAAQ,CAAE,CAAC,CAAE,CAAClmD,SAAS,EAAE,CAAE;MAC3DonD,UAAU,GAAGf,KAAK,GAAG,CAAEe,UAAU,GAAGA,UAAU;;MAE9C;;MAEA,IAAMC,gBAAgB,GAAG,EAAE;MAC3B,IAAMC,SAAS,GAAG,EAAE;MACpB,IAAIC,aAAa,GAAG,EAAE;MACtB,IAAIC,OAAO,GAAG,CAAC;MACf,IAAIC,SAAS;MAEbH,SAAS,CAAEE,OAAO,CAAE,GAAGlpK,SAAS;MAChCipK,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;MAE7B,KAAM,IAAI3nK,CAAC,GAAG,CAAC,EAAE8P,CAAC,GAAGu2J,QAAQ,CAACtmK,MAAM,EAAEC,CAAC,GAAG8P,CAAC,EAAE9P,CAAC,EAAG,EAAG;QAEnD4mK,OAAO,GAAGP,QAAQ,CAAErmK,CAAC,CAAE;QACvB4nK,SAAS,GAAGhB,OAAO,CAACzmD,SAAS,EAAE;QAC/BmnD,KAAK,GAAG5xC,WAAW,CAAEkyC,SAAS,CAAE;QAChCN,KAAK,GAAGd,KAAK,GAAG,CAAEc,KAAK,GAAGA,KAAK;QAE/B,IAAKA,KAAK,EAAG;UAEZ,IAAO,CAAEC,UAAU,IAAQE,SAAS,CAAEE,OAAO,CAAI,EAAGA,OAAO,EAAG;UAE9DF,SAAS,CAAEE,OAAO,CAAE,GAAG;YAAE90J,CAAC,EAAE,IAAI69G,KAAK,EAAE;YAAE9wG,CAAC,EAAEgoJ;UAAU,CAAC;UACvDH,SAAS,CAAEE,OAAO,CAAE,CAAC90J,CAAC,CAACk1G,MAAM,GAAG6+C,OAAO,CAAC7+C,MAAM;UAE9C,IAAKw/C,UAAU,EAAGI,OAAO,EAAG;UAC5BD,aAAa,CAAEC,OAAO,CAAE,GAAG,EAAE;;UAE7B;QAED,CAAC,MAAM;UAEND,aAAa,CAAEC,OAAO,CAAE,CAACnoK,IAAI,CAAE;YAAE4c,CAAC,EAAEwqJ,OAAO;YAAEhnJ,CAAC,EAAEgoJ,SAAS,CAAE,CAAC;UAAG,CAAC,CAAE;;UAElE;QAED;MAED;;MAEA;MACA,IAAK,CAAEH,SAAS,CAAE,CAAC,CAAE,EAAG,OAAOf,eAAe,CAAEL,QAAQ,CAAE;MAG1D,IAAKoB,SAAS,CAAC1nK,MAAM,GAAG,CAAC,EAAG;QAE3B,IAAI8nK,SAAS,GAAG,KAAK;QACrB,IAAIC,QAAQ,GAAG,CAAC;QAEhB,KAAM,IAAIC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAGP,SAAS,CAAC1nK,MAAM,EAAEgoK,IAAI,GAAGC,IAAI,EAAED,IAAI,EAAG,EAAG;UAEnEP,gBAAgB,CAAEO,IAAI,CAAE,GAAG,EAAE;QAE9B;QAEA,KAAM,IAAIA,KAAI,GAAG,CAAC,EAAEC,KAAI,GAAGP,SAAS,CAAC1nK,MAAM,EAAEgoK,KAAI,GAAGC,KAAI,EAAED,KAAI,EAAG,EAAG;UAEnE,IAAME,GAAG,GAAGP,aAAa,CAAEK,KAAI,CAAE;UAEjC,KAAM,IAAIG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGD,GAAG,CAACloK,MAAM,EAAEmoK,IAAI,EAAG,EAAG;YAEhD,IAAMC,EAAE,GAAGF,GAAG,CAAEC,IAAI,CAAE;YACtB,IAAIE,eAAe,GAAG,IAAI;YAE1B,KAAM,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGZ,SAAS,CAAC1nK,MAAM,EAAEsoK,KAAK,EAAG,EAAG;cAEzD,IAAKvB,oBAAoB,CAAEqB,EAAE,CAACvoJ,CAAC,EAAE6nJ,SAAS,CAAEY,KAAK,CAAE,CAACzoJ,CAAC,CAAE,EAAG;gBAEzD,IAAKmoJ,KAAI,KAAKM,KAAK,EAAGP,QAAQ,EAAG;gBAEjC,IAAKM,eAAe,EAAG;kBAEtBA,eAAe,GAAG,KAAK;kBACvBZ,gBAAgB,CAAEa,KAAK,CAAE,CAAC7oK,IAAI,CAAE2oK,EAAE,CAAE;gBAErC,CAAC,MAAM;kBAENN,SAAS,GAAG,IAAI;gBAEjB;cAED;YAED;YAEA,IAAKO,eAAe,EAAG;cAEtBZ,gBAAgB,CAAEO,KAAI,CAAE,CAACvoK,IAAI,CAAE2oK,EAAE,CAAE;YAEpC;UAED;QAED;QAEA,IAAKL,QAAQ,GAAG,CAAC,IAAID,SAAS,KAAK,KAAK,EAAG;UAE1CH,aAAa,GAAGF,gBAAgB;QAEjC;MAED;MAEA,IAAIc,QAAQ;MAEZ,KAAM,IAAItoK,IAAC,GAAG,CAAC,EAAE+rB,EAAE,GAAG07I,SAAS,CAAC1nK,MAAM,EAAEC,IAAC,GAAG+rB,EAAE,EAAE/rB,IAAC,EAAG,EAAG;QAEtD6mK,QAAQ,GAAGY,SAAS,CAAEznK,IAAC,CAAE,CAAC6S,CAAC;QAC3Bu1B,MAAM,CAAC5oC,IAAI,CAAEqnK,QAAQ,CAAE;QACvByB,QAAQ,GAAGZ,aAAa,CAAE1nK,IAAC,CAAE;QAE7B,KAAM,IAAIy4B,CAAC,GAAG,CAAC,EAAEmhB,EAAE,GAAG0uH,QAAQ,CAACvoK,MAAM,EAAE04B,CAAC,GAAGmhB,EAAE,EAAEnhB,CAAC,EAAG,EAAG;UAErDouI,QAAQ,CAAC/1C,KAAK,CAACtxH,IAAI,CAAE8oK,QAAQ,CAAE7vI,CAAC,CAAE,CAACrc,CAAC,CAAE;QAEvC;MAED;;MAEA;;MAEA,OAAOgsB,MAAM;IAEd;EAAC;EAAA,OAAAg+H,SAAA;AAAA,KAIF;AAAA3sK,OAAA,CAAA2sK,SAAA,GAAAA,SAAA;AAEA,IAAMmC,OAAO,GAAG,aAAcC,eAAe,EAAE;AAE/C,SAASA,eAAeA,CAAA,EAAG;EAE1B;;EAEA,IAAMnqJ,MAAM,GAAG,IAAIulH,WAAW,CAAE,CAAC,CAAE;EACnC,IAAM6kC,SAAS,GAAG,IAAI3zJ,YAAY,CAAEuJ,MAAM,CAAE;EAC5C,IAAMqqJ,UAAU,GAAG,IAAIxqJ,WAAW,CAAEG,MAAM,CAAE;EAE5C,IAAMsqJ,SAAS,GAAG,IAAIzqJ,WAAW,CAAE,GAAG,CAAE;EACxC,IAAM0qJ,UAAU,GAAG,IAAI1qJ,WAAW,CAAE,GAAG,CAAE;EAEzC,KAAM,IAAIle,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAGA,CAAC,EAAG;IAEhC,IAAMiX,CAAC,GAAGjX,CAAC,GAAG,GAAG;;IAEjB;;IAEA,IAAKiX,CAAC,GAAG,CAAE,EAAE,EAAG;MAEf0xJ,SAAS,CAAE3oK,CAAC,CAAE,GAAG,MAAM;MACvB2oK,SAAS,CAAE3oK,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/B4oK,UAAU,CAAE5oK,CAAC,CAAE,GAAG,EAAE;MACpB4oK,UAAU,CAAE5oK,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM,IAAKiX,CAAC,GAAG,CAAE,EAAE,EAAG;MAEtB0xJ,SAAS,CAAE3oK,CAAC,CAAE,GAAG,MAAM,IAAM,CAAEiX,CAAC,GAAG,EAAI;MACvC0xJ,SAAS,CAAE3oK,CAAC,GAAG,KAAK,CAAE,GAAK,MAAM,IAAM,CAAEiX,CAAC,GAAG,EAAI,GAAK,MAAM;MAC5D2xJ,UAAU,CAAE5oK,CAAC,CAAE,GAAG,CAAEiX,CAAC,GAAG,CAAC;MACzB2xJ,UAAU,CAAE5oK,CAAC,GAAG,KAAK,CAAE,GAAG,CAAEiX,CAAC,GAAG,CAAC;;MAEjC;IAED,CAAC,MAAM,IAAKA,CAAC,IAAI,EAAE,EAAG;MAErB0xJ,SAAS,CAAE3oK,CAAC,CAAE,GAAKiX,CAAC,GAAG,EAAE,IAAM,EAAE;MACjC0xJ,SAAS,CAAE3oK,CAAC,GAAG,KAAK,CAAE,GAAOiX,CAAC,GAAG,EAAE,IAAM,EAAE,GAAK,MAAM;MACtD2xJ,UAAU,CAAE5oK,CAAC,CAAE,GAAG,EAAE;MACpB4oK,UAAU,CAAE5oK,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM,IAAKiX,CAAC,GAAG,GAAG,EAAG;MAErB0xJ,SAAS,CAAE3oK,CAAC,CAAE,GAAG,MAAM;MACvB2oK,SAAS,CAAE3oK,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/B4oK,UAAU,CAAE5oK,CAAC,CAAE,GAAG,EAAE;MACpB4oK,UAAU,CAAE5oK,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;;MAE5B;IAED,CAAC,MAAM;MAEN2oK,SAAS,CAAE3oK,CAAC,CAAE,GAAG,MAAM;MACvB2oK,SAAS,CAAE3oK,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;MAC/B4oK,UAAU,CAAE5oK,CAAC,CAAE,GAAG,EAAE;MACpB4oK,UAAU,CAAE5oK,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;IAE7B;EAED;;EAEA;;EAEA,IAAM6oK,aAAa,GAAG,IAAI3qJ,WAAW,CAAE,IAAI,CAAE;EAC7C,IAAM4qJ,aAAa,GAAG,IAAI5qJ,WAAW,CAAE,EAAE,CAAE;EAC3C,IAAM6qJ,WAAW,GAAG,IAAI7qJ,WAAW,CAAE,EAAE,CAAE;EAEzC,KAAM,IAAIle,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,IAAI,EAAE,EAAGA,IAAC,EAAG;IAEjC,IAAIkR,CAAC,GAAGlR,IAAC,IAAI,EAAE,CAAC,CAAC;IACjB,IAAIiX,GAAC,GAAG,CAAC,CAAC,CAAC;;IAEX;IACA,OAAQ,CAAE/F,CAAC,GAAG,UAAU,MAAO,CAAC,EAAG;MAElCA,CAAC,KAAK,CAAC;MACP+F,GAAC,IAAI,UAAU,CAAC,CAAC;IAElB;;IAEA/F,CAAC,IAAI,CAAE,UAAU,CAAC,CAAC;IACnB+F,GAAC,IAAI,UAAU,CAAC,CAAC;;IAEjB4xJ,aAAa,CAAE7oK,IAAC,CAAE,GAAGkR,CAAC,GAAG+F,GAAC;EAE3B;EAEA,KAAM,IAAIjX,IAAC,GAAG,IAAI,EAAEA,IAAC,GAAG,IAAI,EAAE,EAAGA,IAAC,EAAG;IAEpC6oK,aAAa,CAAE7oK,IAAC,CAAE,GAAG,UAAU,IAAOA,IAAC,GAAG,IAAI,IAAM,EAAE,CAAE;EAEzD;EAEA,KAAM,IAAIA,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,EAAE,EAAE,EAAGA,IAAC,EAAG;IAE/B8oK,aAAa,CAAE9oK,IAAC,CAAE,GAAGA,IAAC,IAAI,EAAE;EAE7B;EAEA8oK,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAChCA,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,KAAM,IAAI9oK,IAAC,GAAG,EAAE,EAAEA,IAAC,GAAG,EAAE,EAAE,EAAGA,IAAC,EAAG;IAEhC8oK,aAAa,CAAE9oK,IAAC,CAAE,GAAG,UAAU,IAAOA,IAAC,GAAG,EAAE,IAAM,EAAE,CAAE;EAEvD;EAEA8oK,aAAa,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,KAAM,IAAI9oK,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,EAAE,EAAE,EAAGA,IAAC,EAAG;IAE/B,IAAKA,IAAC,KAAK,EAAE,EAAG;MAEf+oK,WAAW,CAAE/oK,IAAC,CAAE,GAAG,IAAI;IAExB;EAED;EAEA,OAAO;IACNyoK,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,aAAa,EAAEA,aAAa;IAC5BC,aAAa,EAAEA,aAAa;IAC5BC,WAAW,EAAEA;EACd,CAAC;AAEF;;AAEA;;AAEA,SAASC,WAAWA,CAAEjoK,GAAG,EAAG;EAE3B,IAAKmP,IAAI,CAACgC,GAAG,CAAEnR,GAAG,CAAE,GAAG,KAAK,EAAG4T,OAAO,CAACC,IAAI,CAAE,oDAAoD,CAAE;EAEnG7T,GAAG,GAAG8P,KAAK,CAAE9P,GAAG,EAAE,CAAE,KAAK,EAAE,KAAK,CAAE;EAElCwnK,OAAO,CAACE,SAAS,CAAE,CAAC,CAAE,GAAG1nK,GAAG;EAC5B,IAAMmb,CAAC,GAAGqsJ,OAAO,CAACG,UAAU,CAAE,CAAC,CAAE;EACjC,IAAMzxJ,CAAC,GAAKiF,CAAC,IAAI,EAAE,GAAK,KAAK;EAC7B,OAAOqsJ,OAAO,CAACI,SAAS,CAAE1xJ,CAAC,CAAE,IAAK,CAAEiF,CAAC,GAAG,UAAU,KAAMqsJ,OAAO,CAACK,UAAU,CAAE3xJ,CAAC,CAAE,CAAE;AAElF;;AAEA;;AAEA,SAASgyJ,aAAaA,CAAEloK,GAAG,EAAG;EAE7B,IAAMmQ,CAAC,GAAGnQ,GAAG,IAAI,EAAE;EACnBwnK,OAAO,CAACG,UAAU,CAAE,CAAC,CAAE,GAAGH,OAAO,CAACM,aAAa,CAAEN,OAAO,CAACQ,WAAW,CAAE73J,CAAC,CAAE,IAAKnQ,GAAG,GAAG,KAAK,CAAE,CAAE,GAAGwnK,OAAO,CAACO,aAAa,CAAE53J,CAAC,CAAE;EAC1H,OAAOq3J,OAAO,CAACE,SAAS,CAAE,CAAC,CAAE;AAE9B;AAEA,IAAIS,SAAS,GAAG,aAAavvK,MAAM,CAAC2b,MAAM,CAAC;EAC1C7U,SAAS,EAAE,IAAI;EACfuoK,WAAW,EAAEA,WAAW;EACxBC,aAAa,EAAEA;AAChB,CAAC,CAAC;;AAEF;AAAAxvK,OAAA,CAAAyvK,SAAA,GAAAA,SAAA;AAAA,IAEMC,kBAAkB,0BAAAC,iBAAA;EAAArkJ,SAAA,CAAAokJ,kBAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAApkJ,YAAA,CAAAkkJ,kBAAA;EAEvB,SAAAA,mBAAA,EAAc;IAAA5mK,eAAA,OAAA4mK,kBAAA;IAEbx0J,OAAO,CAACjX,KAAK,CAAE,2FAA2F,CAAE;IAAC,OAAA2rK,SAAA,CAAAptK,IAAA;EAG9G;EAAC,OAAA8G,YAAA,CAAAomK,kBAAA;AAAA,EAP+BjxH,cAAc,GAW/C;AAAAz+C,OAAA,CAAA0vK,kBAAA,GAAAA,kBAAA;AAAA,IAEMG,YAAY,0BAAAC,iBAAA;EAAAxkJ,SAAA,CAAAukJ,YAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAAvkJ,YAAA,CAAAqkJ,YAAA;EAEjB,SAAAA,aAAA,EAAc;IAAA/mK,eAAA,OAAA+mK,YAAA;IAEb30J,OAAO,CAACjX,KAAK,CAAE,+EAA+E,CAAE;IAAC,OAAA8rK,SAAA,CAAAvtK,IAAA;EAGlG;EAAC,OAAA8G,YAAA,CAAAumK,YAAA;AAAA,EAPyBpxH,cAAc,GAWzC;AAAAz+C,OAAA,CAAA6vK,YAAA,GAAAA,YAAA;AAEA,SAASG,UAAUA,CAAA,EAAG;EAErB90J,OAAO,CAACjX,KAAK,CAAE,wEAAwE,CAAE;AAE1F;;AAEA;;AAEA,SAASgsK,IAAIA,CAAA,EAAG;EAEf/0J,OAAO,CAACjX,KAAK,CAAE,kEAAkE,CAAE;AAEpF;;AAEA;;AAEA,SAASisK,qBAAqBA,CAAA,EAAG;EAEhCh1J,OAAO,CAACjX,KAAK,CAAE,+CAA+C,CAAE;AAEjE;;AAEA;AAAA,IAEMksK,4BAA4B,0BAAAC,mBAAA;EAAA9kJ,SAAA,CAAA6kJ,4BAAA,EAAAC,mBAAA;EAAA,IAAAC,SAAA,GAAA7kJ,YAAA,CAAA2kJ,4BAAA;EAEjC,SAAAA,6BAAa1mJ,KAAK,EAAEC,MAAM,EAAEmG,OAAO,EAAG;IAAA,IAAAygJ,QAAA;IAAAxnK,eAAA,OAAAqnK,4BAAA;IAErCj1J,OAAO,CAACjX,KAAK,CAAE,sJAAsJ,CAAE;IACvKqsK,QAAA,GAAAD,SAAA,CAAA7tK,IAAA,OAAOinB,KAAK,EAAEC,MAAM,EAAEmG,OAAO;IAC7BygJ,QAAA,CAAK9/I,OAAO,GAAG,CAAC;IAAC,OAAA8/I,QAAA;EAElB;EAAC,OAAAhnK,YAAA,CAAA6mK,4BAAA;AAAA,EARyCzgJ,iBAAiB,GAY5D;AAAA1vB,OAAA,CAAAmwK,4BAAA,GAAAA,4BAAA;AAAA,IAEMI,kBAAkB,0BAAAC,iBAAA;EAAAllJ,SAAA,CAAAilJ,kBAAA,EAAAC,iBAAA;EAAA,IAAAC,SAAA,GAAAjlJ,YAAA,CAAA+kJ,kBAAA;EAEvB,SAAAA,mBAAalmJ,IAAI,EAAEZ,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAG;IAAAlnB,eAAA,OAAAynK,kBAAA;IAEzCr1J,OAAO,CAACC,IAAI,CAAE,gEAAgE,CAAE;IAAC,OAAAs1J,SAAA,CAAAjuK,IAAA,OAC1E6nB,IAAI,EAAEZ,KAAK,EAAEC,MAAM,EAAEsG,KAAK;EAElC;EAAC,OAAA1mB,YAAA,CAAAinK,kBAAA;AAAA,EAP+B5/I,gBAAgB,GAWjD;AAAA3wB,OAAA,CAAAuwK,kBAAA,GAAAA,kBAAA;AAAA,IAEMG,aAAa,0BAAAC,cAAA;EAAArlJ,SAAA,CAAAolJ,aAAA,EAAAC,cAAA;EAAA,IAAAC,SAAA,GAAAplJ,YAAA,CAAAklJ,aAAA;EAElB,SAAAA,cAAarmJ,IAAI,EAAEZ,KAAK,EAAEC,MAAM,EAAEsG,KAAK,EAAG;IAAAlnB,eAAA,OAAA4nK,aAAA;IAEzCx1J,OAAO,CAACC,IAAI,CAAE,wDAAwD,CAAE;IAAC,OAAAy1J,SAAA,CAAApuK,IAAA,OAClE6nB,IAAI,EAAEZ,KAAK,EAAEC,MAAM,EAAEsG,KAAK;EAElC;EAAC,OAAA1mB,YAAA,CAAAonK,aAAA;AAAA,EAP0Bp/I,aAAa;AAAAtxB,OAAA,CAAA0wK,aAAA,GAAAA,aAAA;AAWzC,IAAK,OAAOz1D,kBAAkB,KAAK,WAAW,EAAG;EAEhDA,kBAAkB,CAAC/kG,aAAa,CAAE,IAAIglG,WAAW,CAAE,UAAU,EAAE;IAAEC,MAAM,EAAE;MACxE01D,QAAQ,EAAE5mK;IACX;EAAE,CAAC,CAAE,CAAE;AAER;AAEA,IAAK,OAAO89I,MAAM,KAAK,WAAW,EAAG;EAEpC,IAAKA,MAAM,CAAC+oB,SAAS,EAAG;IAEvB51J,OAAO,CAACC,IAAI,CAAE,yDAAyD,CAAE;EAE1E,CAAC,MAAM;IAEN4sI,MAAM,CAAC+oB,SAAS,GAAG7mK,QAAQ;EAE5B;AAED;;;;;;;;ACtygDA,IAAA8mK,MAAA,GAAAC,OAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,YAAY,GAAG;EAAE1uK,IAAI,EAAE;AAAS,CAAC;AACvC,MAAM2uK,WAAW,GAAG;EAAE3uK,IAAI,EAAE;AAAQ,CAAC;AACrC,MAAM4uK,SAAS,GAAG;EAAE5uK,IAAI,EAAE;AAAM,CAAC;AAEjC,MAAM6uK,aAAa,SAAS77J,sBAAe,CAAC;EAE3C3O,WAAWA,CAAEW,MAAM,EAAE4qG,UAAU,EAAG;IAEjC,KAAK,EAAE;IAEP,IAAKA,UAAU,KAAKntG,SAAS,EAAGkW,OAAO,CAACC,IAAI,CAAE,0EAA0E,CAAE;IAC1H,IAAKg3F,UAAU,KAAKrtF,QAAQ,EAAG5J,OAAO,CAACjX,KAAK,CAAE,0HAA0H,CAAE;IAE1K,IAAI,CAACsD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC4qG,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACA,UAAU,CAACrrF,KAAK,CAACuqJ,WAAW,GAAG,MAAM,CAAC,CAAC;;IAE5C;IACA,IAAI,CAAClmH,OAAO,GAAG,IAAI;;IAEnB;IACA,IAAI,CAACjiD,MAAM,GAAG,IAAImuB,cAAO,EAAE;;IAE3B;IACA,IAAI,CAACi6I,WAAW,GAAG,CAAC;IACpB,IAAI,CAAC1gB,WAAW,GAAGh2H,QAAQ;;IAE3B;IACA,IAAI,CAAC22I,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG52I,QAAQ;;IAEvB;IACA;IACA,IAAI,CAAC62I,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,aAAa,GAAGj7J,IAAI,CAACC,EAAE,CAAC,CAAC;;IAE9B;IACA;IACA,IAAI,CAACi7J,eAAe,GAAG,CAAE/2I,QAAQ,CAAC,CAAC;IACnC,IAAI,CAACg3I,eAAe,GAAGh3I,QAAQ,CAAC,CAAC;;IAEjC;IACA;IACA,IAAI,CAACi3I,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACC,aAAa,GAAG,IAAI;;IAEzB;IACA;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,SAAS,GAAG,GAAG;;IAEpB;IACA,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,WAAW,GAAG,GAAG;;IAEtB;IACA,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,GAAG;IACnB,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAAC,CAAC;IAChC,IAAI,CAACC,WAAW,GAAG,GAAG,CAAC,CAAC;;IAExB;IACA;IACA,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,eAAe,GAAG,GAAG,CAAC,CAAC;;IAE5B;IACA,IAAI,CAACnrK,IAAI,GAAG;MAAE8C,IAAI,EAAE,WAAW;MAAEsoK,EAAE,EAAE,SAAS;MAAEpoK,KAAK,EAAE,YAAY;MAAEqoK,MAAM,EAAE;IAAY,CAAC;;IAE1F;IACA,IAAI,CAACC,YAAY,GAAG;MAAExoK,IAAI,EAAED,YAAK,CAACI,MAAM;MAAEF,MAAM,EAAEF,YAAK,CAACK,KAAK;MAAEF,KAAK,EAAEH,YAAK,CAACM;IAAI,CAAC;;IAEjF;IACA,IAAI,CAACooK,OAAO,GAAG;MAAEC,GAAG,EAAEpoK,YAAK,CAACH,MAAM;MAAEwoK,GAAG,EAAEroK,YAAK,CAACC;IAAU,CAAC;;IAE1D;IACA,IAAI,CAACqoK,OAAO,GAAG,IAAI,CAAC7pK,MAAM,CAACuT,KAAK,EAAE;IAClC,IAAI,CAACu2J,SAAS,GAAG,IAAI,CAACzrK,MAAM,CAACo1B,QAAQ,CAAClgB,KAAK,EAAE;IAC7C,IAAI,CAACw2J,KAAK,GAAG,IAAI,CAAC1rK,MAAM,CAAC0iD,IAAI;;IAE7B;IACA,IAAI,CAACipH,oBAAoB,GAAG,IAAI;;IAEhC;IACA;IACA;;IAEA,IAAI,CAACC,aAAa,GAAG,YAAY;MAEhC,OAAOC,SAAS,CAACp5I,GAAG;IAErB,CAAC;IAED,IAAI,CAACq5I,iBAAiB,GAAG,YAAY;MAEpC,OAAOD,SAAS,CAAClvJ,KAAK;IAEvB,CAAC;IAED,IAAI,CAACovJ,WAAW,GAAG,YAAY;MAE9B,OAAO,IAAI,CAAC/rK,MAAM,CAACo1B,QAAQ,CAACpe,UAAU,CAAE,IAAI,CAACrV,MAAM,CAAE;IAEtD,CAAC;IAED,IAAI,CAACqqK,iBAAiB,GAAG,UAAWphE,UAAU,EAAG;MAEhDA,UAAU,CAAC38F,gBAAgB,CAAE,SAAS,EAAEg+J,SAAS,CAAE;MACnD,IAAI,CAACN,oBAAoB,GAAG/gE,UAAU;IAEvC,CAAC;IAED,IAAI,CAACshE,SAAS,GAAG,YAAY;MAE5BrtH,KAAK,CAAC2sH,OAAO,CAACr2J,IAAI,CAAE0pC,KAAK,CAACl9C,MAAM,CAAE;MAClCk9C,KAAK,CAAC4sH,SAAS,CAACt2J,IAAI,CAAE0pC,KAAK,CAAC7+C,MAAM,CAACo1B,QAAQ,CAAE;MAC7CypB,KAAK,CAAC6sH,KAAK,GAAG7sH,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI;IAEhC,CAAC;IAED,IAAI,CAAC/jD,KAAK,GAAG,YAAY;MAExBkgD,KAAK,CAACl9C,MAAM,CAACwT,IAAI,CAAE0pC,KAAK,CAAC2sH,OAAO,CAAE;MAClC3sH,KAAK,CAAC7+C,MAAM,CAACo1B,QAAQ,CAACjgB,IAAI,CAAE0pC,KAAK,CAAC4sH,SAAS,CAAE;MAC7C5sH,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAG7D,KAAK,CAAC6sH,KAAK;MAE/B7sH,KAAK,CAAC7+C,MAAM,CAAC+iD,sBAAsB,EAAE;MACrClE,KAAK,CAAClwC,aAAa,CAAE+6J,YAAY,CAAE;MAEnC7qH,KAAK,CAAClzB,MAAM,EAAE;MAEd9uB,KAAK,GAAGsvK,KAAK,CAACC,IAAI;IAEnB,CAAC;;IAED;IACA,IAAI,CAACzgJ,MAAM,GAAG,YAAY;MAEzB,MAAM/T,MAAM,GAAG,IAAIkY,cAAO,EAAE;;MAE5B;MACA,MAAMu8I,IAAI,GAAG,IAAIrhJ,iBAAU,EAAE,CAACuB,kBAAkB,CAAEvsB,MAAM,CAAC+9B,EAAE,EAAE,IAAIjO,cAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAE;MACrF,MAAMw8I,WAAW,GAAGD,IAAI,CAACn3J,KAAK,EAAE,CAACmG,MAAM,EAAE;MAEzC,MAAMkxJ,YAAY,GAAG,IAAIz8I,cAAO,EAAE;MAClC,MAAM08I,cAAc,GAAG,IAAIxhJ,iBAAU,EAAE;MAEvC,MAAMyhJ,KAAK,GAAG,CAAC,GAAGv9J,IAAI,CAACC,EAAE;MAEzB,OAAO,SAASwc,MAAMA,CAAA,EAAG;QAExB,MAAMyJ,QAAQ,GAAGypB,KAAK,CAAC7+C,MAAM,CAACo1B,QAAQ;QAEtCxd,MAAM,CAACzC,IAAI,CAAEigB,QAAQ,CAAE,CAAC3f,GAAG,CAAEopC,KAAK,CAACl9C,MAAM,CAAE;;QAE3C;QACAiW,MAAM,CAACuY,eAAe,CAAEk8I,IAAI,CAAE;;QAE9B;QACAR,SAAS,CAACtqI,cAAc,CAAE3pB,MAAM,CAAE;QAElC,IAAKinC,KAAK,CAACmsH,UAAU,IAAInuK,KAAK,KAAKsvK,KAAK,CAACC,IAAI,EAAG;UAE/CM,UAAU,CAAEC,oBAAoB,EAAE,CAAE;QAErC;QAEA,IAAK9tH,KAAK,CAACyrH,aAAa,EAAG;UAE1BuB,SAAS,CAAClvJ,KAAK,IAAIiwJ,cAAc,CAACjwJ,KAAK,GAAGkiC,KAAK,CAAC0rH,aAAa;UAC7DsB,SAAS,CAACp5I,GAAG,IAAIm6I,cAAc,CAACn6I,GAAG,GAAGosB,KAAK,CAAC0rH,aAAa;QAE1D,CAAC,MAAM;UAENsB,SAAS,CAAClvJ,KAAK,IAAIiwJ,cAAc,CAACjwJ,KAAK;UACvCkvJ,SAAS,CAACp5I,GAAG,IAAIm6I,cAAc,CAACn6I,GAAG;QAEpC;;QAEA;;QAEA,IAAI3iB,GAAG,GAAG+uC,KAAK,CAACurH,eAAe;QAC/B,IAAIr6J,GAAG,GAAG8uC,KAAK,CAACwrH,eAAe;QAE/B,IAAKtwH,QAAQ,CAAEjqC,GAAG,CAAE,IAAIiqC,QAAQ,CAAEhqC,GAAG,CAAE,EAAG;UAEzC,IAAKD,GAAG,GAAG,CAAEZ,IAAI,CAACC,EAAE,EAAGW,GAAG,IAAI28J,KAAK,CAAC,KAAM,IAAK38J,GAAG,GAAGZ,IAAI,CAACC,EAAE,EAAGW,GAAG,IAAI28J,KAAK;UAE3E,IAAK18J,GAAG,GAAG,CAAEb,IAAI,CAACC,EAAE,EAAGY,GAAG,IAAI08J,KAAK,CAAC,KAAM,IAAK18J,GAAG,GAAGb,IAAI,CAACC,EAAE,EAAGY,GAAG,IAAI08J,KAAK;UAE3E,IAAK38J,GAAG,IAAIC,GAAG,EAAG;YAEjB87J,SAAS,CAAClvJ,KAAK,GAAGzN,IAAI,CAACa,GAAG,CAAED,GAAG,EAAEZ,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE87J,SAAS,CAAClvJ,KAAK,CAAE,CAAE;UAEpE,CAAC,MAAM;YAENkvJ,SAAS,CAAClvJ,KAAK,GAAKkvJ,SAAS,CAAClvJ,KAAK,GAAG,CAAE7M,GAAG,GAAGC,GAAG,IAAK,CAAC,GACtDb,IAAI,CAACa,GAAG,CAAED,GAAG,EAAE+7J,SAAS,CAAClvJ,KAAK,CAAE,GAChCzN,IAAI,CAACY,GAAG,CAAEC,GAAG,EAAE87J,SAAS,CAAClvJ,KAAK,CAAE;UAElC;QAED;;QAEA;QACAkvJ,SAAS,CAACp5I,GAAG,GAAGvjB,IAAI,CAACa,GAAG,CAAE8uC,KAAK,CAACqrH,aAAa,EAAEh7J,IAAI,CAACY,GAAG,CAAE+uC,KAAK,CAACsrH,aAAa,EAAE0B,SAAS,CAACp5I,GAAG,CAAE,CAAE;QAE/Fo5I,SAAS,CAAC1N,QAAQ,EAAE;QAGpB0N,SAAS,CAACr5I,MAAM,IAAI/V,KAAK;;QAEzB;QACAovJ,SAAS,CAACr5I,MAAM,GAAGtjB,IAAI,CAACa,GAAG,CAAE8uC,KAAK,CAACkrH,WAAW,EAAE76J,IAAI,CAACY,GAAG,CAAE+uC,KAAK,CAACwqG,WAAW,EAAEwiB,SAAS,CAACr5I,MAAM,CAAE,CAAE;;QAEjG;;QAEA,IAAKqsB,KAAK,CAACyrH,aAAa,KAAK,IAAI,EAAG;UAEnCzrH,KAAK,CAACl9C,MAAM,CAAC6T,eAAe,CAAEq3J,SAAS,EAAEhuH,KAAK,CAAC0rH,aAAa,CAAE;QAE/D,CAAC,MAAM;UAEN1rH,KAAK,CAACl9C,MAAM,CAAC0T,GAAG,CAAEw3J,SAAS,CAAE;QAE9B;QAEAj1J,MAAM,CAAC0a,gBAAgB,CAAEu5I,SAAS,CAAE;;QAEpC;QACAj0J,MAAM,CAACuY,eAAe,CAAEm8I,WAAW,CAAE;QAErCl3I,QAAQ,CAACjgB,IAAI,CAAE0pC,KAAK,CAACl9C,MAAM,CAAE,CAAC0T,GAAG,CAAEuC,MAAM,CAAE;QAE3CinC,KAAK,CAAC7+C,MAAM,CAACq5B,MAAM,CAAEwlB,KAAK,CAACl9C,MAAM,CAAE;QAEnC,IAAKk9C,KAAK,CAACyrH,aAAa,KAAK,IAAI,EAAG;UAEnCsC,cAAc,CAACjwJ,KAAK,IAAM,CAAC,GAAGkiC,KAAK,CAAC0rH,aAAe;UACnDqC,cAAc,CAACn6I,GAAG,IAAM,CAAC,GAAGosB,KAAK,CAAC0rH,aAAe;UAEjDsC,SAAS,CAACh3J,cAAc,CAAE,CAAC,GAAGgpC,KAAK,CAAC0rH,aAAa,CAAE;QAEpD,CAAC,MAAM;UAENqC,cAAc,CAACl5J,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAE7Bm5J,SAAS,CAACn5J,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEzB;QAEA+I,KAAK,GAAG,CAAC;;QAET;QACA;QACA;;QAEA,IAAKqwJ,WAAW,IACfP,YAAY,CAACt1J,iBAAiB,CAAE4nC,KAAK,CAAC7+C,MAAM,CAACo1B,QAAQ,CAAE,GAAGgpI,GAAG,IAC7D,CAAC,IAAK,CAAC,GAAGoO,cAAc,CAAC/1J,GAAG,CAAEooC,KAAK,CAAC7+C,MAAM,CAACwrB,UAAU,CAAE,CAAE,GAAG4yI,GAAG,EAAG;UAElEv/G,KAAK,CAAClwC,aAAa,CAAE+6J,YAAY,CAAE;UAEnC6C,YAAY,CAACp3J,IAAI,CAAE0pC,KAAK,CAAC7+C,MAAM,CAACo1B,QAAQ,CAAE;UAC1Co3I,cAAc,CAACr3J,IAAI,CAAE0pC,KAAK,CAAC7+C,MAAM,CAACwrB,UAAU,CAAE;UAC9CshJ,WAAW,GAAG,KAAK;UAEnB,OAAO,IAAI;QAEZ;QAEA,OAAO,KAAK;MAEb,CAAC;IAEF,CAAC,EAAE;IAEH,IAAI,CAAC5mJ,OAAO,GAAG,YAAY;MAE1B24B,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,aAAa,EAAEw+J,aAAa,CAAE;MAEpEluH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,aAAa,EAAEy+J,aAAa,CAAE;MACpEnuH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,eAAe,EAAE0+J,eAAe,CAAE;MACxEpuH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,OAAO,EAAE2+J,YAAY,CAAE;MAE7DruH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,aAAa,EAAE4+J,aAAa,CAAE;MACpEtuH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,WAAW,EAAE6+J,WAAW,CAAE;MAGhE,IAAKvuH,KAAK,CAAC8sH,oBAAoB,KAAK,IAAI,EAAG;QAE1C9sH,KAAK,CAAC8sH,oBAAoB,CAACp9J,mBAAmB,CAAE,SAAS,EAAE09J,SAAS,CAAE;MAEvE;;MAEA;IAED,CAAC;;IAED;IACA;IACA;;IAEA,MAAMptH,KAAK,GAAG,IAAI;IAElB,MAAMstH,KAAK,GAAG;MACbC,IAAI,EAAE,CAAE,CAAC;MACTrpK,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAE,CAAC;MACNoqK,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,CAAC;MACZC,eAAe,EAAE,CAAC;MAClBC,kBAAkB,EAAE;IACrB,CAAC;IAED,IAAI3wK,KAAK,GAAGsvK,KAAK,CAACC,IAAI;IAEtB,MAAMhO,GAAG,GAAG,QAAQ;;IAEpB;IACA,MAAMyN,SAAS,GAAG,IAAI5N,gBAAS,EAAE;IACjC,MAAM2O,cAAc,GAAG,IAAI3O,gBAAS,EAAE;IAEtC,IAAIxhJ,KAAK,GAAG,CAAC;IACb,MAAMowJ,SAAS,GAAG,IAAI/8I,cAAO,EAAE;IAC/B,IAAIg9I,WAAW,GAAG,KAAK;IAEvB,MAAMW,WAAW,GAAG,IAAIj5J,cAAO,EAAE;IACjC,MAAMk5J,SAAS,GAAG,IAAIl5J,cAAO,EAAE;IAC/B,MAAMm5J,WAAW,GAAG,IAAIn5J,cAAO,EAAE;IAEjC,MAAMo5J,QAAQ,GAAG,IAAIp5J,cAAO,EAAE;IAC9B,MAAMq5J,MAAM,GAAG,IAAIr5J,cAAO,EAAE;IAC5B,MAAMs5J,QAAQ,GAAG,IAAIt5J,cAAO,EAAE;IAE9B,MAAMu5J,UAAU,GAAG,IAAIv5J,cAAO,EAAE;IAChC,MAAMw5J,QAAQ,GAAG,IAAIx5J,cAAO,EAAE;IAC9B,MAAMy5J,UAAU,GAAG,IAAIz5J,cAAO,EAAE;IAEhC,MAAM05J,QAAQ,GAAG,EAAE;IACnB,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAE3B,SAASxB,oBAAoBA,CAAA,EAAG;MAE/B,OAAO,CAAC,GAAGz9J,IAAI,CAACC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG0vC,KAAK,CAACosH,eAAe;IAErD;IAEA,SAASmD,YAAYA,CAAA,EAAG;MAEvB,OAAOl/J,IAAI,CAACmD,GAAG,CAAE,IAAI,EAAEwsC,KAAK,CAAC4rH,SAAS,CAAE;IAEzC;IAEA,SAASiC,UAAUA,CAAE51J,KAAK,EAAG;MAE5B81J,cAAc,CAACjwJ,KAAK,IAAI7F,KAAK;IAE9B;IAEA,SAASu3J,QAAQA,CAAEv3J,KAAK,EAAG;MAE1B81J,cAAc,CAACn6I,GAAG,IAAI3b,KAAK;IAE5B;IAEA,MAAMw3J,OAAO,GAAG,YAAY;MAE3B,MAAMl5J,CAAC,GAAG,IAAI0a,cAAO,EAAE;MAEvB,OAAO,SAASw+I,OAAOA,CAAElpI,QAAQ,EAAEmpI,YAAY,EAAG;QAEjDn5J,CAAC,CAAC2d,mBAAmB,CAAEw7I,YAAY,EAAE,CAAC,CAAE,CAAC,CAAC;QAC1Cn5J,CAAC,CAACS,cAAc,CAAE,CAAEuvB,QAAQ,CAAE;QAE9BynI,SAAS,CAACx3J,GAAG,CAAED,CAAC,CAAE;MAEnB,CAAC;IAEF,CAAC,EAAE;IAEH,MAAMo5J,KAAK,GAAG,YAAY;MAEzB,MAAMp5J,CAAC,GAAG,IAAI0a,cAAO,EAAE;MAEvB,OAAO,SAAS0+I,KAAKA,CAAEppI,QAAQ,EAAEmpI,YAAY,EAAG;QAE/C,IAAK1vH,KAAK,CAACisH,kBAAkB,KAAK,IAAI,EAAG;UAExC11J,CAAC,CAAC2d,mBAAmB,CAAEw7I,YAAY,EAAE,CAAC,CAAE;QAEzC,CAAC,MAAM;UAENn5J,CAAC,CAAC2d,mBAAmB,CAAEw7I,YAAY,EAAE,CAAC,CAAE;UACxCn5J,CAAC,CAACmc,YAAY,CAAEstB,KAAK,CAAC7+C,MAAM,CAAC+9B,EAAE,EAAE3oB,CAAC,CAAE;QAErC;QAEAA,CAAC,CAACS,cAAc,CAAEuvB,QAAQ,CAAE;QAE5BynI,SAAS,CAACx3J,GAAG,CAAED,CAAC,CAAE;MAEnB,CAAC;IAEF,CAAC,EAAE;;IAEH;IACA,MAAMq5J,GAAG,GAAG,YAAY;MAEvB,MAAM72J,MAAM,GAAG,IAAIkY,cAAO,EAAE;MAE5B,OAAO,SAAS2+I,GAAGA,CAAEC,MAAM,EAAEC,MAAM,EAAG;QAErC,MAAM/mI,OAAO,GAAGiX,KAAK,CAAC+rD,UAAU;QAEhC,IAAK/rD,KAAK,CAAC7+C,MAAM,CAACyiD,mBAAmB,EAAG;UAEvC;UACA,MAAMrtB,QAAQ,GAAGypB,KAAK,CAAC7+C,MAAM,CAACo1B,QAAQ;UACtCxd,MAAM,CAACzC,IAAI,CAAEigB,QAAQ,CAAE,CAAC3f,GAAG,CAAEopC,KAAK,CAACl9C,MAAM,CAAE;UAC3C,IAAIitK,cAAc,GAAGh3J,MAAM,CAAC7Y,MAAM,EAAE;;UAEpC;UACA6vK,cAAc,IAAI1/J,IAAI,CAACo0C,GAAG,CAAIzE,KAAK,CAAC7+C,MAAM,CAACsiD,GAAG,GAAG,CAAC,GAAKpzC,IAAI,CAACC,EAAE,GAAG,KAAK,CAAE;;UAExE;UACAm/J,OAAO,CAAE,CAAC,GAAGI,MAAM,GAAGE,cAAc,GAAGhnI,OAAO,CAACinI,YAAY,EAAEhwH,KAAK,CAAC7+C,MAAM,CAAC6c,MAAM,CAAE;UAClF2xJ,KAAK,CAAE,CAAC,GAAGG,MAAM,GAAGC,cAAc,GAAGhnI,OAAO,CAACinI,YAAY,EAAEhwH,KAAK,CAAC7+C,MAAM,CAAC6c,MAAM,CAAE;QAEjF,CAAC,MAAM,IAAKgiC,KAAK,CAAC7+C,MAAM,CAACykE,oBAAoB,EAAG;UAE/C;UACA6pG,OAAO,CAAEI,MAAM,IAAK7vH,KAAK,CAAC7+C,MAAM,CAAC0gC,KAAK,GAAGme,KAAK,CAAC7+C,MAAM,CAACygC,IAAI,CAAE,GAAGoe,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAG9a,OAAO,CAACknI,WAAW,EAAEjwH,KAAK,CAAC7+C,MAAM,CAAC6c,MAAM,CAAE;UAC7H2xJ,KAAK,CAAEG,MAAM,IAAK9vH,KAAK,CAAC7+C,MAAM,CAAC2gC,GAAG,GAAGke,KAAK,CAAC7+C,MAAM,CAAC4gC,MAAM,CAAE,GAAGie,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAG9a,OAAO,CAACinI,YAAY,EAAEhwH,KAAK,CAAC7+C,MAAM,CAAC6c,MAAM,CAAE;QAE7H,CAAC,MAAM;UAEN;UACAlJ,OAAO,CAACC,IAAI,CAAE,8EAA8E,CAAE;UAC9FirC,KAAK,CAAC+rH,SAAS,GAAG,KAAK;QAExB;MAED,CAAC;IAEF,CAAC,EAAE;IAEH,SAASmE,QAAQA,CAAEC,UAAU,EAAG;MAE/B,IAAKnwH,KAAK,CAAC7+C,MAAM,CAACyiD,mBAAmB,EAAG;QAEvChmC,KAAK,IAAIuyJ,UAAU;MAEpB,CAAC,MAAM,IAAKnwH,KAAK,CAAC7+C,MAAM,CAACykE,oBAAoB,EAAG;QAE/C5lB,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAGxzC,IAAI,CAACa,GAAG,CAAE8uC,KAAK,CAACmrH,OAAO,EAAE96J,IAAI,CAACY,GAAG,CAAE+uC,KAAK,CAACorH,OAAO,EAAEprH,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAGssH,UAAU,CAAE,CAAE;QACxGnwH,KAAK,CAAC7+C,MAAM,CAAC+iD,sBAAsB,EAAE;QACrC+pH,WAAW,GAAG,IAAI;MAEnB,CAAC,MAAM;QAENn5J,OAAO,CAACC,IAAI,CAAE,qFAAqF,CAAE;QACrGirC,KAAK,CAAC2rH,UAAU,GAAG,KAAK;MAEzB;IAED;IAEA,SAASyE,OAAOA,CAAED,UAAU,EAAG;MAE9B,IAAKnwH,KAAK,CAAC7+C,MAAM,CAACyiD,mBAAmB,EAAG;QAEvChmC,KAAK,IAAIuyJ,UAAU;MAEpB,CAAC,MAAM,IAAKnwH,KAAK,CAAC7+C,MAAM,CAACykE,oBAAoB,EAAG;QAE/C5lB,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAGxzC,IAAI,CAACa,GAAG,CAAE8uC,KAAK,CAACmrH,OAAO,EAAE96J,IAAI,CAACY,GAAG,CAAE+uC,KAAK,CAACorH,OAAO,EAAEprH,KAAK,CAAC7+C,MAAM,CAAC0iD,IAAI,GAAGssH,UAAU,CAAE,CAAE;QACxGnwH,KAAK,CAAC7+C,MAAM,CAAC+iD,sBAAsB,EAAE;QACrC+pH,WAAW,GAAG,IAAI;MAEnB,CAAC,MAAM;QAENn5J,OAAO,CAACC,IAAI,CAAE,qFAAqF,CAAE;QACrGirC,KAAK,CAAC2rH,UAAU,GAAG,KAAK;MAEzB;IAED;;IAEA;IACA;IACA;;IAEA,SAAS0E,qBAAqBA,CAAEtgK,KAAK,EAAG;MAEvC6+J,WAAW,CAAC/5J,GAAG,CAAE9E,KAAK,CAACugK,OAAO,EAAEvgK,KAAK,CAACwgK,OAAO,CAAE;IAEhD;IAEA,SAASC,oBAAoBA,CAAEzgK,KAAK,EAAG;MAEtCm/J,UAAU,CAACr6J,GAAG,CAAE9E,KAAK,CAACugK,OAAO,EAAEvgK,KAAK,CAACwgK,OAAO,CAAE;IAE/C;IAEA,SAASE,kBAAkBA,CAAE1gK,KAAK,EAAG;MAEpCg/J,QAAQ,CAACl6J,GAAG,CAAE9E,KAAK,CAACugK,OAAO,EAAEvgK,KAAK,CAACwgK,OAAO,CAAE;IAE7C;IAEA,SAASG,qBAAqBA,CAAE3gK,KAAK,EAAG;MAEvC8+J,SAAS,CAACh6J,GAAG,CAAE9E,KAAK,CAACugK,OAAO,EAAEvgK,KAAK,CAACwgK,OAAO,CAAE;MAE7CzB,WAAW,CAACh4J,UAAU,CAAE+3J,SAAS,EAAED,WAAW,CAAE,CAAC53J,cAAc,CAAEgpC,KAAK,CAAC8rH,WAAW,CAAE;MAEpF,MAAM/iI,OAAO,GAAGiX,KAAK,CAAC+rD,UAAU;MAEhC8hE,UAAU,CAAE,CAAC,GAAGx9J,IAAI,CAACC,EAAE,GAAGw+J,WAAW,CAACv9J,CAAC,GAAGw3B,OAAO,CAACinI,YAAY,CAAE,CAAC,CAAC;;MAElER,QAAQ,CAAE,CAAC,GAAGn/J,IAAI,CAACC,EAAE,GAAGw+J,WAAW,CAACj9J,CAAC,GAAGk3B,OAAO,CAACinI,YAAY,CAAE;MAE9DpB,WAAW,CAACt4J,IAAI,CAAEu4J,SAAS,CAAE;MAE7B7uH,KAAK,CAAClzB,MAAM,EAAE;IAEf;IAEA,SAAS6jJ,oBAAoBA,CAAE5gK,KAAK,EAAG;MAEtCo/J,QAAQ,CAACt6J,GAAG,CAAE9E,KAAK,CAACugK,OAAO,EAAEvgK,KAAK,CAACwgK,OAAO,CAAE;MAE5CnB,UAAU,CAACt4J,UAAU,CAAEq4J,QAAQ,EAAED,UAAU,CAAE;MAE7C,IAAKE,UAAU,CAACv9J,CAAC,GAAG,CAAC,EAAG;QAEvBq+J,QAAQ,CAAEX,YAAY,EAAE,CAAE;MAE3B,CAAC,MAAM,IAAKH,UAAU,CAACv9J,CAAC,GAAG,CAAC,EAAG;QAE9Bu+J,OAAO,CAAEb,YAAY,EAAE,CAAE;MAE1B;MAEAL,UAAU,CAAC54J,IAAI,CAAE64J,QAAQ,CAAE;MAE3BnvH,KAAK,CAAClzB,MAAM,EAAE;IAEf;IAEA,SAAS8jJ,kBAAkBA,CAAE7gK,KAAK,EAAG;MAEpCi/J,MAAM,CAACn6J,GAAG,CAAE9E,KAAK,CAACugK,OAAO,EAAEvgK,KAAK,CAACwgK,OAAO,CAAE;MAE1CtB,QAAQ,CAACn4J,UAAU,CAAEk4J,MAAM,EAAED,QAAQ,CAAE,CAAC/3J,cAAc,CAAEgpC,KAAK,CAACgsH,QAAQ,CAAE;MAExE4D,GAAG,CAAEX,QAAQ,CAAC19J,CAAC,EAAE09J,QAAQ,CAACp9J,CAAC,CAAE;MAE7Bk9J,QAAQ,CAACz4J,IAAI,CAAE04J,MAAM,CAAE;MAEvBhvH,KAAK,CAAClzB,MAAM,EAAE;IAEf;IAEA,SAAS+jJ,gBAAgBA,CAAE9gK,KAAK,EAAG;MAElC,IAAKA,KAAK,CAAC+/J,MAAM,GAAG,CAAC,EAAG;QAEvBM,OAAO,CAAEb,YAAY,EAAE,CAAE;MAE1B,CAAC,MAAM,IAAKx/J,KAAK,CAAC+/J,MAAM,GAAG,CAAC,EAAG;QAE9BI,QAAQ,CAAEX,YAAY,EAAE,CAAE;MAE3B;MAEAvvH,KAAK,CAAClzB,MAAM,EAAE;IAEf;IAEA,SAASgkJ,aAAaA,CAAE/gK,KAAK,EAAG;MAE/B,IAAImX,WAAW,GAAG,KAAK;MAEvB,QAASnX,KAAK,CAACiwE,IAAI;QAElB,KAAKhgC,KAAK,CAAC/+C,IAAI,CAACorK,EAAE;UACjBuD,GAAG,CAAE,CAAC,EAAE5vH,KAAK,CAACksH,WAAW,CAAE;UAC3BhlJ,WAAW,GAAG,IAAI;UAClB;QAED,KAAK84B,KAAK,CAAC/+C,IAAI,CAACqrK,MAAM;UACrBsD,GAAG,CAAE,CAAC,EAAE,CAAE5vH,KAAK,CAACksH,WAAW,CAAE;UAC7BhlJ,WAAW,GAAG,IAAI;UAClB;QAED,KAAK84B,KAAK,CAAC/+C,IAAI,CAAC8C,IAAI;UACnB6rK,GAAG,CAAE5vH,KAAK,CAACksH,WAAW,EAAE,CAAC,CAAE;UAC3BhlJ,WAAW,GAAG,IAAI;UAClB;QAED,KAAK84B,KAAK,CAAC/+C,IAAI,CAACgD,KAAK;UACpB2rK,GAAG,CAAE,CAAE5vH,KAAK,CAACksH,WAAW,EAAE,CAAC,CAAE;UAC7BhlJ,WAAW,GAAG,IAAI;UAClB;MAAM;MAIR,IAAKA,WAAW,EAAG;QAElB;QACAnX,KAAK,CAACggG,cAAc,EAAE;QAEtB/vD,KAAK,CAAClzB,MAAM,EAAE;MAEf;IAGD;IAEA,SAASikJ,sBAAsBA,CAAA,EAAG;MAEjC,IAAK1B,QAAQ,CAACnvK,MAAM,KAAK,CAAC,EAAG;QAE5B0uK,WAAW,CAAC/5J,GAAG,CAAEw6J,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,EAAE3B,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,CAAE;MAE5D,CAAC,MAAM;QAEN,MAAM1/J,CAAC,GAAG,GAAG,IAAK89J,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,GAAG3B,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,CAAE;QAC7D,MAAMn/J,CAAC,GAAG,GAAG,IAAKw9J,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,GAAG5B,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,CAAE;QAE7DrC,WAAW,CAAC/5J,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;MAExB;IAED;IAEA,SAASq/J,mBAAmBA,CAAA,EAAG;MAE9B,IAAK7B,QAAQ,CAACnvK,MAAM,KAAK,CAAC,EAAG;QAE5B6uK,QAAQ,CAACl6J,GAAG,CAAEw6J,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,EAAE3B,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,CAAE;MAEzD,CAAC,MAAM;QAEN,MAAM1/J,CAAC,GAAG,GAAG,IAAK89J,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,GAAG3B,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,CAAE;QAC7D,MAAMn/J,CAAC,GAAG,GAAG,IAAKw9J,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,GAAG5B,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,CAAE;QAE7DlC,QAAQ,CAACl6J,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;MAErB;IAED;IAEA,SAASs/J,qBAAqBA,CAAA,EAAG;MAEhC,MAAM94J,EAAE,GAAGg3J,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK,GAAG3B,QAAQ,CAAE,CAAC,CAAE,CAAC2B,KAAK;MACpD,MAAM14J,EAAE,GAAG+2J,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK,GAAG5B,QAAQ,CAAE,CAAC,CAAE,CAAC4B,KAAK;MAEpD,MAAM1qI,QAAQ,GAAGl2B,IAAI,CAAC0H,IAAI,CAAEM,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAE;MAE/C42J,UAAU,CAACr6J,GAAG,CAAE,CAAC,EAAE0xB,QAAQ,CAAE;IAE9B;IAEA,SAAS6qI,wBAAwBA,CAAA,EAAG;MAEnC,IAAKpxH,KAAK,CAAC2rH,UAAU,EAAGwF,qBAAqB,EAAE;MAE/C,IAAKnxH,KAAK,CAAC+rH,SAAS,EAAGmF,mBAAmB,EAAE;IAE7C;IAEA,SAASG,2BAA2BA,CAAA,EAAG;MAEtC,IAAKrxH,KAAK,CAAC2rH,UAAU,EAAGwF,qBAAqB,EAAE;MAE/C,IAAKnxH,KAAK,CAAC6rH,YAAY,EAAGkF,sBAAsB,EAAE;IAEnD;IAEA,SAASO,qBAAqBA,CAAEvhK,KAAK,EAAG;MAEvC,IAAKs/J,QAAQ,CAACnvK,MAAM,IAAI,CAAC,EAAG;QAE3B2uK,SAAS,CAACh6J,GAAG,CAAE9E,KAAK,CAACihK,KAAK,EAAEjhK,KAAK,CAACkhK,KAAK,CAAE;MAE1C,CAAC,MAAM;QAEN,MAAM16I,QAAQ,GAAGg7I,wBAAwB,CAAExhK,KAAK,CAAE;QAElD,MAAMwB,CAAC,GAAG,GAAG,IAAKxB,KAAK,CAACihK,KAAK,GAAGz6I,QAAQ,CAAChlB,CAAC,CAAE;QAC5C,MAAMM,CAAC,GAAG,GAAG,IAAK9B,KAAK,CAACkhK,KAAK,GAAG16I,QAAQ,CAAC1kB,CAAC,CAAE;QAE5Cg9J,SAAS,CAACh6J,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;MAEtB;MAEAi9J,WAAW,CAACh4J,UAAU,CAAE+3J,SAAS,EAAED,WAAW,CAAE,CAAC53J,cAAc,CAAEgpC,KAAK,CAAC8rH,WAAW,CAAE;MAEpF,MAAM/iI,OAAO,GAAGiX,KAAK,CAAC+rD,UAAU;MAEhC8hE,UAAU,CAAE,CAAC,GAAGx9J,IAAI,CAACC,EAAE,GAAGw+J,WAAW,CAACv9J,CAAC,GAAGw3B,OAAO,CAACinI,YAAY,CAAE,CAAC,CAAC;;MAElER,QAAQ,CAAE,CAAC,GAAGn/J,IAAI,CAACC,EAAE,GAAGw+J,WAAW,CAACj9J,CAAC,GAAGk3B,OAAO,CAACinI,YAAY,CAAE;MAE9DpB,WAAW,CAACt4J,IAAI,CAAEu4J,SAAS,CAAE;IAE9B;IAEA,SAAS2C,kBAAkBA,CAAEzhK,KAAK,EAAG;MAEpC,IAAKs/J,QAAQ,CAACnvK,MAAM,KAAK,CAAC,EAAG;QAE5B8uK,MAAM,CAACn6J,GAAG,CAAE9E,KAAK,CAACihK,KAAK,EAAEjhK,KAAK,CAACkhK,KAAK,CAAE;MAEvC,CAAC,MAAM;QAEN,MAAM16I,QAAQ,GAAGg7I,wBAAwB,CAAExhK,KAAK,CAAE;QAElD,MAAMwB,CAAC,GAAG,GAAG,IAAKxB,KAAK,CAACihK,KAAK,GAAGz6I,QAAQ,CAAChlB,CAAC,CAAE;QAC5C,MAAMM,CAAC,GAAG,GAAG,IAAK9B,KAAK,CAACkhK,KAAK,GAAG16I,QAAQ,CAAC1kB,CAAC,CAAE;QAE5Cm9J,MAAM,CAACn6J,GAAG,CAAEtD,CAAC,EAAEM,CAAC,CAAE;MAEnB;MAEAo9J,QAAQ,CAACn4J,UAAU,CAAEk4J,MAAM,EAAED,QAAQ,CAAE,CAAC/3J,cAAc,CAAEgpC,KAAK,CAACgsH,QAAQ,CAAE;MAExE4D,GAAG,CAAEX,QAAQ,CAAC19J,CAAC,EAAE09J,QAAQ,CAACp9J,CAAC,CAAE;MAE7Bk9J,QAAQ,CAACz4J,IAAI,CAAE04J,MAAM,CAAE;IAExB;IAEA,SAASyC,oBAAoBA,CAAE1hK,KAAK,EAAG;MAEtC,MAAMwmB,QAAQ,GAAGg7I,wBAAwB,CAAExhK,KAAK,CAAE;MAElD,MAAMsI,EAAE,GAAGtI,KAAK,CAACihK,KAAK,GAAGz6I,QAAQ,CAAChlB,CAAC;MACnC,MAAM+G,EAAE,GAAGvI,KAAK,CAACkhK,KAAK,GAAG16I,QAAQ,CAAC1kB,CAAC;MAEnC,MAAM00B,QAAQ,GAAGl2B,IAAI,CAAC0H,IAAI,CAAEM,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAE;MAE/C62J,QAAQ,CAACt6J,GAAG,CAAE,CAAC,EAAE0xB,QAAQ,CAAE;MAE3B6oI,UAAU,CAACv6J,GAAG,CAAE,CAAC,EAAExE,IAAI,CAACmD,GAAG,CAAE27J,QAAQ,CAACt9J,CAAC,GAAGq9J,UAAU,CAACr9J,CAAC,EAAEmuC,KAAK,CAAC4rH,SAAS,CAAE,CAAE;MAE3EsE,QAAQ,CAAEd,UAAU,CAACv9J,CAAC,CAAE;MAExBq9J,UAAU,CAAC54J,IAAI,CAAE64J,QAAQ,CAAE;IAE5B;IAEA,SAASuC,uBAAuBA,CAAE3hK,KAAK,EAAG;MAEzC,IAAKiwC,KAAK,CAAC2rH,UAAU,EAAG8F,oBAAoB,CAAE1hK,KAAK,CAAE;MAErD,IAAKiwC,KAAK,CAAC+rH,SAAS,EAAGyF,kBAAkB,CAAEzhK,KAAK,CAAE;IAEnD;IAEA,SAAS4hK,0BAA0BA,CAAE5hK,KAAK,EAAG;MAE5C,IAAKiwC,KAAK,CAAC2rH,UAAU,EAAG8F,oBAAoB,CAAE1hK,KAAK,CAAE;MAErD,IAAKiwC,KAAK,CAAC6rH,YAAY,EAAGyF,qBAAqB,CAAEvhK,KAAK,CAAE;IAEzD;;IAEA;IACA;IACA;;IAEA,SAASo+J,aAAaA,CAAEp+J,KAAK,EAAG;MAE/B,IAAKiwC,KAAK,CAAC+E,OAAO,KAAK,KAAK,EAAG;MAE/B,IAAKsqH,QAAQ,CAACnvK,MAAM,KAAK,CAAC,EAAG;QAE5B8/C,KAAK,CAAC+rD,UAAU,CAAC6lE,iBAAiB,CAAE7hK,KAAK,CAAC8hK,SAAS,CAAE;QAErD7xH,KAAK,CAAC+rD,UAAU,CAAC38F,gBAAgB,CAAE,aAAa,EAAEk/J,aAAa,CAAE;QACjEtuH,KAAK,CAAC+rD,UAAU,CAAC38F,gBAAgB,CAAE,WAAW,EAAEm/J,WAAW,CAAE;MAE9D;;MAEA;;MAEAuD,UAAU,CAAE/hK,KAAK,CAAE;MAEnB,IAAKA,KAAK,CAACgiK,WAAW,KAAK,OAAO,EAAG;QAEpCC,YAAY,CAAEjiK,KAAK,CAAE;MAEtB,CAAC,MAAM;QAENkiK,WAAW,CAAEliK,KAAK,CAAE;MAErB;IAED;IAEA,SAASu+J,aAAaA,CAAEv+J,KAAK,EAAG;MAE/B,IAAKiwC,KAAK,CAAC+E,OAAO,KAAK,KAAK,EAAG;MAE/B,IAAKh1C,KAAK,CAACgiK,WAAW,KAAK,OAAO,EAAG;QAEpCG,WAAW,CAAEniK,KAAK,CAAE;MAErB,CAAC,MAAM;QAENoiK,WAAW,CAAEpiK,KAAK,CAAE;MAErB;IAED;IAEA,SAASw+J,WAAWA,CAAEx+J,KAAK,EAAG;MAE1BqiK,aAAa,CAAEriK,KAAK,CAAE;MAEtB,IAAKs/J,QAAQ,CAACnvK,MAAM,KAAK,CAAC,EAAG;QAEzB8/C,KAAK,CAAC+rD,UAAU,CAACsmE,qBAAqB,CAAEtiK,KAAK,CAAC8hK,SAAS,CAAE;QAEzD7xH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,aAAa,EAAE4+J,aAAa,CAAE;QACpEtuH,KAAK,CAAC+rD,UAAU,CAACr8F,mBAAmB,CAAE,WAAW,EAAE6+J,WAAW,CAAE;MAEpE;MAEAvuH,KAAK,CAAClwC,aAAa,CAAEi7J,SAAS,CAAE;MAEhC/sK,KAAK,GAAGsvK,KAAK,CAACC,IAAI;IAEtB;IAEA,SAASa,eAAeA,CAAEr+J,KAAK,EAAG;MAEjCqiK,aAAa,CAAEriK,KAAK,CAAE;IAEvB;IAEA,SAASkiK,WAAWA,CAAEliK,KAAK,EAAG;MAE7B,IAAIuiK,WAAW;MAEf,QAASviK,KAAK,CAACwiK,MAAM;QAEpB,KAAK,CAAC;UAELD,WAAW,GAAGtyH,KAAK,CAACusH,YAAY,CAACxoK,IAAI;UACrC;QAED,KAAK,CAAC;UAELuuK,WAAW,GAAGtyH,KAAK,CAACusH,YAAY,CAACvoK,MAAM;UACvC;QAED,KAAK,CAAC;UAELsuK,WAAW,GAAGtyH,KAAK,CAACusH,YAAY,CAACtoK,KAAK;UACtC;QAED;UAECquK,WAAW,GAAG,CAAE,CAAC;MAAC;MAIpB,QAASA,WAAW;QAEnB,KAAKxuK,YAAK,CAACK,KAAK;UAEf,IAAK67C,KAAK,CAAC2rH,UAAU,KAAK,KAAK,EAAG;UAElC6E,oBAAoB,CAAEzgK,KAAK,CAAE;UAE7B/R,KAAK,GAAGsvK,KAAK,CAACnpK,KAAK;UAEnB;QAED,KAAKL,YAAK,CAACI,MAAM;UAEhB,IAAK6L,KAAK,CAACyiK,OAAO,IAAIziK,KAAK,CAAC0iK,OAAO,IAAI1iK,KAAK,CAAC2iK,QAAQ,EAAG;YAEvD,IAAK1yH,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;YAEjC0E,kBAAkB,CAAE1gK,KAAK,CAAE;YAE3B/R,KAAK,GAAGsvK,KAAK,CAAClpK,GAAG;UAElB,CAAC,MAAM;YAEN,IAAK47C,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;YAEpCwE,qBAAqB,CAAEtgK,KAAK,CAAE;YAE9B/R,KAAK,GAAGsvK,KAAK,CAACppK,MAAM;UAErB;UAEA;QAED,KAAKJ,YAAK,CAACM,GAAG;UAEb,IAAK2L,KAAK,CAACyiK,OAAO,IAAIziK,KAAK,CAAC0iK,OAAO,IAAI1iK,KAAK,CAAC2iK,QAAQ,EAAG;YAEvD,IAAK1yH,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;YAEpCwE,qBAAqB,CAAEtgK,KAAK,CAAE;YAE9B/R,KAAK,GAAGsvK,KAAK,CAACppK,MAAM;UAErB,CAAC,MAAM;YAEN,IAAK87C,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;YAEjC0E,kBAAkB,CAAE1gK,KAAK,CAAE;YAE3B/R,KAAK,GAAGsvK,KAAK,CAAClpK,GAAG;UAElB;UAEA;QAED;UAECpG,KAAK,GAAGsvK,KAAK,CAACC,IAAI;MAAC;MAIrB,IAAKvvK,KAAK,KAAKsvK,KAAK,CAACC,IAAI,EAAG;QAE3BvtH,KAAK,CAAClwC,aAAa,CAAEg7J,WAAW,CAAE;MAEnC;IAED;IAEA,SAASqH,WAAWA,CAAEpiK,KAAK,EAAG;MAE7B,QAAS/R,KAAK;QAEb,KAAKsvK,KAAK,CAACppK,MAAM;UAEhB,IAAK87C,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;UAEpC6E,qBAAqB,CAAE3gK,KAAK,CAAE;UAE9B;QAED,KAAKu9J,KAAK,CAACnpK,KAAK;UAEf,IAAK67C,KAAK,CAAC2rH,UAAU,KAAK,KAAK,EAAG;UAElCgF,oBAAoB,CAAE5gK,KAAK,CAAE;UAE7B;QAED,KAAKu9J,KAAK,CAAClpK,GAAG;UAEb,IAAK47C,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;UAEjC6E,kBAAkB,CAAE7gK,KAAK,CAAE;UAE3B;MAAM;IAIT;IAEA,SAASs+J,YAAYA,CAAEt+J,KAAK,EAAG;MAE9B,IAAKiwC,KAAK,CAAC+E,OAAO,KAAK,KAAK,IAAI/E,KAAK,CAAC2rH,UAAU,KAAK,KAAK,IAAI3tK,KAAK,KAAKsvK,KAAK,CAACC,IAAI,EAAG;MAErFx9J,KAAK,CAACggG,cAAc,EAAE;MAEtB/vD,KAAK,CAAClwC,aAAa,CAAEg7J,WAAW,CAAE;MAElC+F,gBAAgB,CAAE9gK,KAAK,CAAE;MAEzBiwC,KAAK,CAAClwC,aAAa,CAAEi7J,SAAS,CAAE;IAEjC;IAEA,SAASqC,SAASA,CAAEr9J,KAAK,EAAG;MAE3B,IAAKiwC,KAAK,CAAC+E,OAAO,KAAK,KAAK,IAAI/E,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;MAE5D+E,aAAa,CAAE/gK,KAAK,CAAE;IAEvB;IAEA,SAASiiK,YAAYA,CAAEjiK,KAAK,EAAG;MAE9B4iK,YAAY,CAAE5iK,KAAK,CAAE;MAErB,QAASs/J,QAAQ,CAACnvK,MAAM;QAEvB,KAAK,CAAC;UAEL,QAAS8/C,KAAK,CAACwsH,OAAO,CAACC,GAAG;YAEzB,KAAKpoK,YAAK,CAACH,MAAM;cAEhB,IAAK87C,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;cAEpCkF,sBAAsB,EAAE;cAExB/yK,KAAK,GAAGsvK,KAAK,CAACkB,YAAY;cAE1B;YAED,KAAKnqK,YAAK,CAACD,GAAG;cAEb,IAAK47C,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;cAEjCmF,mBAAmB,EAAE;cAErBlzK,KAAK,GAAGsvK,KAAK,CAACmB,SAAS;cAEvB;YAED;cAECzwK,KAAK,GAAGsvK,KAAK,CAACC,IAAI;UAAC;UAIrB;QAED,KAAK,CAAC;UAEL,QAASvtH,KAAK,CAACwsH,OAAO,CAACE,GAAG;YAEzB,KAAKroK,YAAK,CAACC,SAAS;cAEnB,IAAK07C,KAAK,CAAC2rH,UAAU,KAAK,KAAK,IAAI3rH,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;cAE/DqF,wBAAwB,EAAE;cAE1BpzK,KAAK,GAAGsvK,KAAK,CAACoB,eAAe;cAE7B;YAED,KAAKrqK,YAAK,CAACE,YAAY;cAEtB,IAAKy7C,KAAK,CAAC2rH,UAAU,KAAK,KAAK,IAAI3rH,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;cAElEwF,2BAA2B,EAAE;cAE7BrzK,KAAK,GAAGsvK,KAAK,CAACqB,kBAAkB;cAEhC;YAED;cAEC3wK,KAAK,GAAGsvK,KAAK,CAACC,IAAI;UAAC;UAIrB;QAED;UAECvvK,KAAK,GAAGsvK,KAAK,CAACC,IAAI;MAAC;MAIrB,IAAKvvK,KAAK,KAAKsvK,KAAK,CAACC,IAAI,EAAG;QAE3BvtH,KAAK,CAAClwC,aAAa,CAAEg7J,WAAW,CAAE;MAEnC;IAED;IAEA,SAASoH,WAAWA,CAAEniK,KAAK,EAAG;MAE7B4iK,YAAY,CAAE5iK,KAAK,CAAE;MAErB,QAAS/R,KAAK;QAEb,KAAKsvK,KAAK,CAACkB,YAAY;UAEtB,IAAKxuH,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;UAEpCyF,qBAAqB,CAAEvhK,KAAK,CAAE;UAE9BiwC,KAAK,CAAClzB,MAAM,EAAE;UAEd;QAED,KAAKwgJ,KAAK,CAACmB,SAAS;UAEnB,IAAKzuH,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;UAEjCyF,kBAAkB,CAAEzhK,KAAK,CAAE;UAE3BiwC,KAAK,CAAClzB,MAAM,EAAE;UAEd;QAED,KAAKwgJ,KAAK,CAACoB,eAAe;UAEzB,IAAK1uH,KAAK,CAAC2rH,UAAU,KAAK,KAAK,IAAI3rH,KAAK,CAAC+rH,SAAS,KAAK,KAAK,EAAG;UAE/D2F,uBAAuB,CAAE3hK,KAAK,CAAE;UAEhCiwC,KAAK,CAAClzB,MAAM,EAAE;UAEd;QAED,KAAKwgJ,KAAK,CAACqB,kBAAkB;UAE5B,IAAK3uH,KAAK,CAAC2rH,UAAU,KAAK,KAAK,IAAI3rH,KAAK,CAAC6rH,YAAY,KAAK,KAAK,EAAG;UAElE8F,0BAA0B,CAAE5hK,KAAK,CAAE;UAEnCiwC,KAAK,CAAClzB,MAAM,EAAE;UAEd;QAED;UAEC9uB,KAAK,GAAGsvK,KAAK,CAACC,IAAI;MAAC;IAItB;IAEA,SAASW,aAAaA,CAAEn+J,KAAK,EAAG;MAE/B,IAAKiwC,KAAK,CAAC+E,OAAO,KAAK,KAAK,EAAG;MAE/Bh1C,KAAK,CAACggG,cAAc,EAAE;IAEvB;IAEA,SAAS+hE,UAAUA,CAAE/hK,KAAK,EAAG;MAE5Bs/J,QAAQ,CAAC1vK,IAAI,CAAEoQ,KAAK,CAAE;IAEvB;IAEA,SAASqiK,aAAaA,CAAEriK,KAAK,EAAG;MAE/B,OAAOu/J,gBAAgB,CAAEv/J,KAAK,CAAC8hK,SAAS,CAAE;MAE1C,KAAM,IAAI1xK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkvK,QAAQ,CAACnvK,MAAM,EAAEC,CAAC,EAAG,EAAG;QAE5C,IAAKkvK,QAAQ,CAAElvK,CAAC,CAAE,CAAC0xK,SAAS,IAAI9hK,KAAK,CAAC8hK,SAAS,EAAG;UAEjDxC,QAAQ,CAACx/J,MAAM,CAAE1P,CAAC,EAAE,CAAC,CAAE;UACvB;QAED;MAED;IAED;IAEA,SAASwyK,YAAYA,CAAE5iK,KAAK,EAAG;MAE9B,IAAIwmB,QAAQ,GAAG+4I,gBAAgB,CAAEv/J,KAAK,CAAC8hK,SAAS,CAAE;MAElD,IAAKt7I,QAAQ,KAAK33B,SAAS,EAAG;QAE7B23B,QAAQ,GAAG,IAAI5gB,cAAO,EAAE;QACxB25J,gBAAgB,CAAEv/J,KAAK,CAAC8hK,SAAS,CAAE,GAAGt7I,QAAQ;MAE/C;MAEAA,QAAQ,CAAC1hB,GAAG,CAAE9E,KAAK,CAACihK,KAAK,EAAEjhK,KAAK,CAACkhK,KAAK,CAAE;IAEzC;IAEA,SAASM,wBAAwBA,CAAExhK,KAAK,EAAG;MAE1C,MAAM6iK,OAAO,GAAK7iK,KAAK,CAAC8hK,SAAS,KAAKxC,QAAQ,CAAE,CAAC,CAAE,CAACwC,SAAS,GAAKxC,QAAQ,CAAE,CAAC,CAAE,GAAGA,QAAQ,CAAE,CAAC,CAAE;MAE/F,OAAOC,gBAAgB,CAAEsD,OAAO,CAACf,SAAS,CAAE;IAE7C;;IAEA;;IAEA7xH,KAAK,CAAC+rD,UAAU,CAAC38F,gBAAgB,CAAE,aAAa,EAAE8+J,aAAa,CAAE;IAEjEluH,KAAK,CAAC+rD,UAAU,CAAC38F,gBAAgB,CAAE,aAAa,EAAE++J,aAAa,CAAE;IACjEnuH,KAAK,CAAC+rD,UAAU,CAAC38F,gBAAgB,CAAE,eAAe,EAAEg/J,eAAe,CAAE;IACrEpuH,KAAK,CAAC+rD,UAAU,CAAC38F,gBAAgB,CAAE,OAAO,EAAEi/J,YAAY,EAAE;MAAEwE,OAAO,EAAE;IAAM,CAAC,CAAE;;IAE9E;;IAEA,IAAI,CAAC/lJ,MAAM,EAAE;EAEd;AAED;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlzB,OAAA,CAAAoxK,aAAA,GAAAA,aAAA;AAEA,MAAM8H,WAAW,SAAS9H,aAAa,CAAC;EAEvCxqK,WAAWA,CAAEW,MAAM,EAAE4qG,UAAU,EAAG;IAEjC,KAAK,CAAE5qG,MAAM,EAAE4qG,UAAU,CAAE;IAE3B,IAAI,CAACkgE,kBAAkB,GAAG,KAAK,CAAC,CAAC;;IAEjC,IAAI,CAACM,YAAY,CAACxoK,IAAI,GAAGD,YAAK,CAACM,GAAG;IAClC,IAAI,CAACmoK,YAAY,CAACtoK,KAAK,GAAGH,YAAK,CAACI,MAAM;IAEtC,IAAI,CAACsoK,OAAO,CAACC,GAAG,GAAGpoK,YAAK,CAACD,GAAG;IAC5B,IAAI,CAACooK,OAAO,CAACE,GAAG,GAAGroK,YAAK,CAACE,YAAY;EAEtC;AAED;AAAC3K,OAAA,CAAAk5K,WAAA,GAAAA,WAAA;;;;;;AC/tCD,IAAAC,KAAA,GAAAC,uBAAA,CAAApI,OAAA;AACA,IAAAqI,cAAA,GAAArI,OAAA;AACA,IAAAsI,CAAA,GAAAC,sBAAA,CAAAvI,OAAA;AAAyD,SAAAuI,uBAAAh5K,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAi5K,UAAA,GAAAj5K,GAAA,KAAAk5K,OAAA,EAAAl5K,GAAA;AAAA,SAAAm5K,yBAAAC,WAAA,eAAA7nH,OAAA,kCAAA8nH,iBAAA,OAAA9nH,OAAA,QAAA+nH,gBAAA,OAAA/nH,OAAA,YAAA4nH,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAE,gBAAA,GAAAD,iBAAA,KAAAD,WAAA;AAAA,SAAAP,wBAAA74K,GAAA,EAAAo5K,WAAA,SAAAA,WAAA,IAAAp5K,GAAA,IAAAA,GAAA,CAAAi5K,UAAA,WAAAj5K,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAk5K,OAAA,EAAAl5K,GAAA,UAAA6vC,KAAA,GAAAspI,wBAAA,CAAAC,WAAA,OAAAvpI,KAAA,IAAAA,KAAA,CAAAs4B,GAAA,CAAAnoE,GAAA,YAAA6vC,KAAA,CAAAl0B,GAAA,CAAA3b,GAAA,SAAAu5K,MAAA,WAAAC,qBAAA,GAAA75K,MAAA,CAAAI,cAAA,IAAAJ,MAAA,CAAA85K,wBAAA,WAAAx5K,GAAA,IAAAD,GAAA,QAAAC,GAAA,kBAAAN,MAAA,CAAAC,SAAA,CAAAE,cAAA,CAAAmC,IAAA,CAAAjC,GAAA,EAAAC,GAAA,SAAAC,IAAA,GAAAs5K,qBAAA,GAAA75K,MAAA,CAAA85K,wBAAA,CAAAz5K,GAAA,EAAAC,GAAA,cAAAC,IAAA,KAAAA,IAAA,CAAAyb,GAAA,IAAAzb,IAAA,CAAAwa,GAAA,KAAA/a,MAAA,CAAAI,cAAA,CAAAw5K,MAAA,EAAAt5K,GAAA,EAAAC,IAAA,YAAAq5K,MAAA,CAAAt5K,GAAA,IAAAD,GAAA,CAAAC,GAAA,SAAAs5K,MAAA,CAAAL,OAAA,GAAAl5K,GAAA,MAAA6vC,KAAA,IAAAA,KAAA,CAAAn1B,GAAA,CAAA1a,GAAA,EAAAu5K,MAAA,YAAAA,MAAA;AAEzD,IAAMxtH,KAAK,GAAG,IAAI6sH,KAAK,CAAC19D,KAAK,EAAE;AAC/B,IAAMljF,MAAM,GAAG,IAAI4gJ,KAAK,CAACzvH,iBAAiB,CAAC,EAAE,EAACq+F,MAAM,CAACkyB,UAAU,GAAClyB,MAAM,CAACmyB,WAAW,EAAC,GAAG,EAAC,IAAI,CAAC;AAC5F3hJ,MAAM,CAACoE,QAAQ,CAAC1hB,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC;AAC3BqxC,KAAK,CAAC1vC,GAAG,CAAC2b,MAAM,CAAC;AAIjB,IAAM4hJ,QAAQ,GAAG,IAAIhB,KAAK,CAAC16H,cAAc,EAAE;AAC3C,IAAMtsB,KAAK,GAAG,IAAI;;AAElB;AACA,IAAMmuB,SAAS,GAAG,IAAIjlC,YAAY,CAAC8W,KAAK,GAAC,CAAC,CAAC;;AAE3C;AACA,IAAMspB,MAAM,GAAG,IAAIpgC,YAAY,CAAC8W,KAAK,GAAC,CAAC,CAAC;AAExC,KAAI,IAAI5rB,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC4rB,KAAK,EAAC5rB,CAAC,EAAE,EAAC;EACpB+5C,SAAS,CAAC/5C,CAAC,CAAC,GAAGkQ,IAAI,CAACK,MAAM,EAAE,GAAC,CAAC;EAC9B2kC,MAAM,CAACl1C,CAAC,CAAC,GAAGkQ,IAAI,CAACK,MAAM,EAAE;AAC7B;AACAqjK,QAAQ,CAAC56H,YAAY,CAAC,UAAU,EAAC,IAAI45H,KAAK,CAACt+H,eAAe,CAACyF,SAAS,EAAC,CAAC,CAAC,CAAC;AAExE65H,QAAQ,CAAC56H,YAAY,CAAC,OAAO,EAAC,IAAI45H,KAAK,CAACt+H,eAAe,CAACY,MAAM,EAAC,CAAC,CAAC,CAAC;AAElE,IAAMrrB,OAAO,GAAG,IAAI+oJ,KAAK,CAAC77B,aAAa,EAAE;AACzC,IAAM15I,MAAM,GAAGwsB,OAAO,CAAC+nH,IAAI,CAACiiC,SAAI,CAAC;AAEjC,IAAMC,aAAa,GAAG,IAAIlB,KAAK,CAACzxF,cAAc,EAAE;AAChD2yF,aAAa,CAAC9iI,GAAG,GAAG3zC,MAAM;AAC1By2K,aAAa,CAAC5iI,QAAQ,GAAG7zC,MAAM;AAC/By2K,aAAa,CAAC3mI,WAAW,GAAG,IAAI;AAChC2mI,aAAa,CAAC/mI,QAAQ,GAAG6lI,KAAK,CAACxtK,gBAAgB;AAC/C;AACA0uK,aAAa,CAAChzJ,IAAI,GAAG,GAAG;AACxBgzJ,aAAa,CAAC50J,KAAK,CAACxK,GAAG,CAAC,QAAQ,CAAC;;AAGjC;AACAo/J,aAAa,CAAC7mI,YAAY,GAAG,IAAI;;AAEjC;AACA,IAAMqa,IAAI,GAAG,IAAIsrH,KAAK,CAAC90D,MAAM,CAAC81D,QAAQ,EAACE,aAAa,CAAC;AAErD/tH,KAAK,CAAC1vC,GAAG,CAACixC,IAAI,CAAC;AACf,IAAMysH,GAAG,GAAG,IAAInB,KAAK,CAAC/M,UAAU,CAAC,CAAC,CAAC;AACnC9/G,KAAK,CAAC1vC,GAAG,CAAC09J,GAAG,CAAC;AAId,IAAMjuH,QAAQ,GAAG,IAAI8sH,KAAK,CAACloE,aAAa,EAAE;AAC1C5kD,QAAQ,CAAC57B,OAAO,CAACs3H,MAAM,CAACkyB,UAAU,EAAClyB,MAAM,CAACmyB,WAAW,CAAC;AACtDp1J,QAAQ,CAACi1H,IAAI,CAACwgC,WAAW,CAACluH,QAAQ,CAAC8lD,UAAU,CAAC;AAG9C,IAAMqoE,QAAQ,GAAG,IAAIpJ,4BAAa,CAAC74I,MAAM,EAAC8zB,QAAQ,CAAC8lD,UAAU,CAAC;AAC9DqoE,QAAQ,CAAC3I,aAAa,GAAG,IAAI;AAE7B2I,QAAQ,CAACtnJ,MAAM,EAAE;AAEjB,SAASunJ,OAAOA,CAAA,EAAE;EACdppH,qBAAqB,CAACopH,OAAO,CAAC;EAC9BD,QAAQ,CAACtnJ,MAAM,EAAE;EACjBm5B,QAAQ,CAACW,MAAM,CAACV,KAAK,EAAC/zB,MAAM,CAAC;AACjC;AACAkiJ,OAAO,EAAE;AAET1yB,MAAM,CAACvyI,gBAAgB,CAAC,QAAQ,EAAC,YAAI;EACjC+iB,MAAM,CAACuxB,MAAM,GAAGi+F,MAAM,CAACkyB,UAAU,GAAClyB,MAAM,CAACmyB,WAAW;EACpD3hJ,MAAM,CAAC+xB,sBAAsB,EAAE;EAC/B+B,QAAQ,CAAC57B,OAAO,CAACs3H,MAAM,CAACkyB,UAAU,EAAClyB,MAAM,CAACmyB,WAAW,CAAC;EACtD7tH,QAAQ,CAAC+oD,aAAa,CAAC2yC,MAAM,CAAC2yB,gBAAgB,CAAC;AACnD,CAAC,CAAC;;;AC3EF,IAAIC,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAACp4K,IAAI,CAAC,IAAI,EAAEw4K,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACT5wJ,IAAI,EAAEwwJ,MAAM,CAACC,MAAM,CAACI,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUh5K,EAAE,EAAE;MACpB,IAAI,CAAC84K,gBAAgB,CAACp1K,IAAI,CAAC1D,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDorB,OAAO,EAAE,SAAAA,CAAUprB,EAAE,EAAE;MACrB,IAAI,CAAC+4K,iBAAiB,CAACr1K,IAAI,CAAC1D,EAAE,CAAC;IACjC;EACF,CAAC;EAEDw4K,MAAM,CAACC,MAAM,CAACI,OAAO,GAAG,IAAI;AAC9B;AAEAL,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIO,aAAa,EAAEC,cAAc;AAEjC,IAAIvwI,MAAM,GAAG6vI,MAAM,CAACC,MAAM,CAAC9vI,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACwwI,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4Bp1G,QAAQ,CAACo1G,QAAQ;EAC5D,IAAIC,QAAQ,GAAGr1G,QAAQ,CAACq1G,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIH,SAAS,CAACE,QAAQ,GAAG,KAAK,GAAGD,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFE,EAAE,CAACC,SAAS,GAAG,UAAS1lK,KAAK,EAAE;IAC7BmlK,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAIlxJ,IAAI,GAAG8C,IAAI,CAACC,KAAK,CAACjX,KAAK,CAACkU,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAAC9nB,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIu5K,OAAO,GAAG,KAAK;MACnBzxJ,IAAI,CAAC0xJ,MAAM,CAAC54K,OAAO,CAAC,UAAS64K,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACxkC,MAAM,CAACykC,aAAa,EAAEJ,KAAK,CAACvuI,EAAE,CAAC;UAC9D,IAAIyuI,SAAS,EAAE;YACbJ,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAIzxJ,IAAI,CAAC0xJ,MAAM,CAACM,KAAK,CAAC,UAASL,KAAK,EAAE;QACrD,OAAOA,KAAK,CAACz5K,IAAI,KAAK,KAAK,IAAIy5K,KAAK,CAACM,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIT,OAAO,EAAE;QACX5gK,OAAO,CAACoyB,KAAK,EAAE;QAEfjjB,IAAI,CAAC0xJ,MAAM,CAAC54K,OAAO,CAAC,UAAU64K,KAAK,EAAE;UACnCQ,QAAQ,CAAC7kC,MAAM,CAACykC,aAAa,EAAEJ,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFT,cAAc,CAACp4K,OAAO,CAAC,UAAUwZ,CAAC,EAAE;UAClC8/J,YAAY,CAAC9/J,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAI2pD,QAAQ,CAACo2G,MAAM,EAAE;QAAE;QAC5Bp2G,QAAQ,CAACo2G,MAAM,EAAE;MACnB;IACF;IAEA,IAAIryJ,IAAI,CAAC9nB,IAAI,KAAK,QAAQ,EAAE;MAC1Bq5K,EAAE,CAAClhC,KAAK,EAAE;MACVkhC,EAAE,CAACe,OAAO,GAAG,YAAY;QACvBr2G,QAAQ,CAACo2G,MAAM,EAAE;MACnB,CAAC;IACH;IAEA,IAAIryJ,IAAI,CAAC9nB,IAAI,KAAK,gBAAgB,EAAE;MAClC2Y,OAAO,CAACpB,GAAG,CAAC,2BAA2B,CAAC;MAExC8iK,kBAAkB,EAAE;IACtB;IAEA,IAAIvyJ,IAAI,CAAC9nB,IAAI,KAAK,OAAO,EAAE;MACzB2Y,OAAO,CAACjX,KAAK,CAAC,eAAe,GAAGomB,IAAI,CAACpmB,KAAK,CAACuwG,OAAO,GAAG,IAAI,GAAGnqF,IAAI,CAACpmB,KAAK,CAAC44K,KAAK,CAAC;MAE7ED,kBAAkB,EAAE;MAEpB,IAAIE,OAAO,GAAGC,kBAAkB,CAAC1yJ,IAAI,CAAC;MACtCvF,QAAQ,CAACi1H,IAAI,CAACwgC,WAAW,CAACuC,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASF,kBAAkBA,CAAA,EAAG;EAC5B,IAAIE,OAAO,GAAGh4J,QAAQ,CAACk4J,cAAc,CAACrC,UAAU,CAAC;EACjD,IAAImC,OAAO,EAAE;IACXA,OAAO,CAAC1vI,MAAM,EAAE;EAClB;AACF;AAEA,SAAS2vI,kBAAkBA,CAAC1yJ,IAAI,EAAE;EAChC,IAAIyyJ,OAAO,GAAGh4J,QAAQ,CAACm4J,aAAa,CAAC,KAAK,CAAC;EAC3CH,OAAO,CAACrvI,EAAE,GAAGktI,UAAU;;EAEvB;EACA,IAAInmE,OAAO,GAAG1vF,QAAQ,CAACm4J,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAIC,UAAU,GAAGp4J,QAAQ,CAACm4J,aAAa,CAAC,KAAK,CAAC;EAC9CzoE,OAAO,CAAC2oE,SAAS,GAAG9yJ,IAAI,CAACpmB,KAAK,CAACuwG,OAAO;EACtC0oE,UAAU,CAACC,SAAS,GAAG9yJ,IAAI,CAACpmB,KAAK,CAAC44K,KAAK;EAEvCC,OAAO,CAACM,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAG5oE,OAAO,CAAC4oE,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGF,UAAU,CAACE,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAON,OAAO;AAEhB;AAEA,SAASO,UAAUA,CAACvC,MAAM,EAAErtI,EAAE,EAAE;EAC9B,IAAI6vI,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAItrF,CAAC,EAAEzvE,CAAC,EAAEg7J,GAAG;EAEb,KAAKvrF,CAAC,IAAIqrF,OAAO,EAAE;IACjB,KAAK96J,CAAC,IAAI86J,OAAO,CAACrrF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBurF,GAAG,GAAGF,OAAO,CAACrrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACzvE,CAAC,CAAC;MACtB,IAAIg7J,GAAG,KAAK/vI,EAAE,IAAK3iB,KAAK,CAACC,OAAO,CAACyyJ,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAACl3K,MAAM,GAAG,CAAC,CAAC,KAAKmnC,EAAG,EAAE;QACpE8vI,OAAO,CAACx3K,IAAI,CAACksF,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAI6oF,MAAM,CAAC9vI,MAAM,EAAE;IACjBuyI,OAAO,GAAGA,OAAO,CAACl1J,MAAM,CAACg1J,UAAU,CAACvC,MAAM,CAAC9vI,MAAM,EAAEyC,EAAE,CAAC,CAAC;EACzD;EAEA,OAAO8vI,OAAO;AAChB;AAEA,SAASf,QAAQA,CAAC1B,MAAM,EAAEkB,KAAK,EAAE;EAC/B,IAAIsB,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAACtB,KAAK,CAACvuI,EAAE,CAAC,IAAI,CAACqtI,MAAM,CAAC9vI,MAAM,EAAE;IACvC,IAAI3oC,EAAE,GAAG,IAAIo7K,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAEzB,KAAK,CAACM,SAAS,CAACC,EAAE,CAAC;IACzEP,KAAK,CAACC,KAAK,GAAG,CAACqB,OAAO,CAACtB,KAAK,CAACvuI,EAAE,CAAC;IAChC6vI,OAAO,CAACtB,KAAK,CAACvuI,EAAE,CAAC,GAAG,CAACprC,EAAE,EAAE25K,KAAK,CAAC0B,IAAI,CAAC;EACtC,CAAC,MAAM,IAAI5C,MAAM,CAAC9vI,MAAM,EAAE;IACxBwxI,QAAQ,CAAC1B,MAAM,CAAC9vI,MAAM,EAAEgxI,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAACrB,MAAM,EAAErtI,EAAE,EAAE;EAClC,IAAI6vI,OAAO,GAAGxC,MAAM,CAACwC,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAAC7vI,EAAE,CAAC,IAAIqtI,MAAM,CAAC9vI,MAAM,EAAE;IACjC,OAAOmxI,cAAc,CAACrB,MAAM,CAAC9vI,MAAM,EAAEyC,EAAE,CAAC;EAC1C;EAEA,IAAI6tI,aAAa,CAAC7tI,EAAE,CAAC,EAAE;IACrB;EACF;EACA6tI,aAAa,CAAC7tI,EAAE,CAAC,GAAG,IAAI;EAExB,IAAIilB,MAAM,GAAGooH,MAAM,CAAC1qI,KAAK,CAAC3C,EAAE,CAAC;EAE7B8tI,cAAc,CAACx1K,IAAI,CAAC,CAAC+0K,MAAM,EAAErtI,EAAE,CAAC,CAAC;EAEjC,IAAIilB,MAAM,IAAIA,MAAM,CAACuoH,GAAG,IAAIvoH,MAAM,CAACuoH,GAAG,CAACE,gBAAgB,CAAC70K,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAO+2K,UAAU,CAAC1lC,MAAM,CAACykC,aAAa,EAAE3uI,EAAE,CAAC,CAACkwI,IAAI,CAAC,UAAUlwI,EAAE,EAAE;IAC7D,OAAO0uI,cAAc,CAACxkC,MAAM,CAACykC,aAAa,EAAE3uI,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASgvI,YAAYA,CAAC3B,MAAM,EAAErtI,EAAE,EAAE;EAChC,IAAIilB,MAAM,GAAGooH,MAAM,CAAC1qI,KAAK,CAAC3C,EAAE,CAAC;EAC7BqtI,MAAM,CAACI,OAAO,GAAG,CAAC,CAAC;EACnB,IAAIxoH,MAAM,EAAE;IACVA,MAAM,CAACuoH,GAAG,CAAC5wJ,IAAI,GAAGywJ,MAAM,CAACI,OAAO;EAClC;EAEA,IAAIxoH,MAAM,IAAIA,MAAM,CAACuoH,GAAG,IAAIvoH,MAAM,CAACuoH,GAAG,CAACG,iBAAiB,CAAC90K,MAAM,EAAE;IAC/DosD,MAAM,CAACuoH,GAAG,CAACG,iBAAiB,CAACj4K,OAAO,CAAC,UAAUi/C,EAAE,EAAE;MACjDA,EAAE,CAAC04H,MAAM,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM,CAAC1qI,KAAK,CAAC3C,EAAE,CAAC;EACvBqtI,MAAM,CAACrtI,EAAE,CAAC;EAEVilB,MAAM,GAAGooH,MAAM,CAAC1qI,KAAK,CAAC3C,EAAE,CAAC;EACzB,IAAIilB,MAAM,IAAIA,MAAM,CAACuoH,GAAG,IAAIvoH,MAAM,CAACuoH,GAAG,CAACE,gBAAgB,CAAC70K,MAAM,EAAE;IAC9DosD,MAAM,CAACuoH,GAAG,CAACE,gBAAgB,CAACh4K,OAAO,CAAC,UAAUi/C,EAAE,EAAE;MAChDA,EAAE,EAAE;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"17_星空的案例.8a373562.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '143';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize$1( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize$1\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Uint8Array ) denominator = 255;\n\telse if ( array instanceof Uint16Array ) denominator = 65535;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 33 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst value = uniform.value;\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\t\t\tconst info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tconst value = uniform.value;\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCapsuleBufferGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nvar AnimationUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n});\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r133, c5bb5434555a3c3ddd784944a0a124f996fc721b\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nclass TextGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry as CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, FlatShading, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Source, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import * as THREE from 'three'\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport img1 from '../assets/img/textures/particles/1.png'\r\n\r\nconst scene = new THREE.Scene()\r\nconst camera = new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000)\r\ncamera.position.set(1,0,10)\r\nscene.add(camera)\r\n\r\n\r\n\r\nconst partical = new THREE.BufferGeometry();\r\nconst count = 5000;\r\n\r\n//设置缓冲区数组\r\nconst positions = new Float32Array(count*3);\r\n\r\n//设置颜色数组\r\nconst colors = new Float32Array(count*3);\r\n\r\nfor(let i=0;i<count;i++){\r\n    positions[i] = Math.random()*5;\r\n    colors[i] = Math.random();\r\n}\r\npartical.setAttribute('position',new THREE.BufferAttribute(positions,3))\r\n\r\npartical.setAttribute('color',new THREE.BufferAttribute(colors,3))\r\n\r\nconst texture = new THREE.TextureLoader();\r\nconst result = texture.load(img1)\r\n\r\nconst pointMaterial = new THREE.PointsMaterial()\r\npointMaterial.map = result;\r\npointMaterial.alphaMap = result;\r\npointMaterial.transparent = true;\r\npointMaterial.blending = THREE.AdditiveBlending;\r\n// 设置粒子的大小\r\npointMaterial.size = 0.1\r\npointMaterial.color.set(0xffff00)\r\n\r\n\r\n// 设置启用顶点的颜色\r\npointMaterial.vertexColors = true;\r\n\r\n// 这里是设置点的\r\nconst mesh = new THREE.Points(partical,pointMaterial)\r\n\r\nscene.add(mesh)\r\nconst axe = new THREE.AxesHelper(5)\r\nscene.add(axe)\r\n\r\n\r\n\r\nconst renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize(window.innerWidth,window.innerHeight)\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\n\r\nconst controls = new OrbitControls(camera,renderer.domElement)\r\ncontrols.enableDamping = true;\r\n\r\ncontrols.update()\r\n\r\nfunction animate(){\r\n    requestAnimationFrame(animate)\r\n    controls.update()\r\n    renderer.render(scene,camera)\r\n}\r\nanimate()\r\n\r\nwindow.addEventListener('resize',()=>{\r\n    camera.aspect = window.innerWidth/window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(window.innerWidth,window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n})\r\n\r\n\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}